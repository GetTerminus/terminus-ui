var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/ImageRatio.html",[0,0.726,1,3.114]],["body/interfaces/ImageRatio.html",[0,0.681,1,3.783,2,0.033,3,0.607,4,0.025,5,0.063,6,0.013,7,1.124,8,1.455,9,1.716,10,0.8,11,0.505,12,5.377,13,5.377,14,2.051,15,0.771,16,0.009,17,7.309,18,0.492,19,0.471,20,1.114,21,1.087,22,5.714,23,3.584,24,5.074,25,4.171,26,4.715,27,4.594,28,2.787,29,1.612,30,4.281,31,2.127,32,4.463,33,2.819,34,3.222,35,1.94,36,1.172,37,1.935,38,0.168,39,2.628,40,1.942,41,1.942,42,1.464,43,1.942,44,1.88,45,0.637,46,1.942,47,1.187,48,3.233,49,1.873,50,0.622,51,1.942,52,1.367,53,1.942,54,1.942,55,3.233,56,1.942,57,3.233,58,1.942,59,1.455,60,3.233,61,1.942,62,2.711,63,1.351,64,1.304,65,4.33,66,1.942,67,1.567,68,1.567,69,1.651,70,1.942,71,1.942,72,1.449,73,1.527,74,3.064,75,2.591,76,0.653,77,1.612,78,2.856,79,2.692,80,2.422,81,1.567,82,2.422,83,1.953,84,2.663,85,1.173,86,0.673,87,0.829,88,1.173,89,1.455,90,3.507,91,4.102,92,4.378,93,2.218,94,1.797,95,1.173,96,1.567,97,3.064,98,1.396,99,1.304,100,2.019,101,1.001,102,3.406,103,4.153,104,1.114,105,1.942,106,1.716,107,2.151,108,1.942,109,1.942,110,4.084,111,1.942,112,4.842,113,1.567,114,1.942,115,1.942,116,1.942,117,2.608,118,1.304,119,1.173,120,1.924,121,1.871,122,3.233,123,1.751,124,1.366,125,1.942,126,2.856,127,0.858,128,1.669,129,1.942,130,1.942,131,1.942,132,1.164,133,1.292,134,0.937,135,0.853,136,1.942,137,3.233,138,1.942,139,3.233,140,1.516,141,0.968,142,1.942,143,1.395,144,0.92,145,2.422,146,1.268,147,1.942,148,1.942,149,1.953,150,1.603,151,1.942,152,1.802,153,0.853,154,1.675,155,2.44,156,1.942,157,1.468,158,5.377,159,1.942,160,1.313,161,1.716,162,3.069,163,1.292,164,1.942,165,1.561,166,3.233,167,1.942,168,1.08,169,0.622,170,1.567,171,0.853,172,1.284,173,1.942,174,1.455,175,1.244,176,1.942,177,1.942,178,2.608,179,0.481,180,1.545,181,1.628,182,1.97,183,1.567,184,1.953,185,2.262,186,1.341,187,1.235,188,1.614,189,2.046,190,0.742,191,0.42,192,0.762,193,1.669,194,0.057,195,3.112,196,1.797,197,3.109,198,0.54,199,2.046,200,1.039,201,1.942,202,0.919,203,0.607,204,1.455,205,0.669,206,1.124,207,0.622,208,2.878,209,1.716,210,0.879,211,1.229,212,1.366,213,1.366,214,1.366,215,1.375,216,1.124,217,1.292,218,1.942,219,3.233,220,3.233,221,4.278,222,1.942,223,1.114,224,0.859,225,2.151,226,1.587,227,0.783,228,0.783,229,2.274,230,2.593,231,1.716,232,1.035,233,1.173,234,1.33,235,1.173,236,0.048,237,1.455,238,1.087,239,1.716,240,1.716,241,1.716,242,2.856,243,1.002,244,1.455,245,0.783,246,0.492,247,1.559,248,1.238,249,0.653,250,1.102,251,1.035,252,0.879,253,1.143,254,0.047,255,1.124,256,0.832,257,0.732,258,2.422,259,0.439,260,0.805,261,1.114,262,1.08,263,1.124,264,1.751,265,0.471,266,1.061,267,1.061,268,1.244,269,1.173,270,1.229,271,1.143,272,5.377,273,0.403,274,1.567,275,2.046,276,1.567,277,3.719,278,1.366,279,0.504,280,0.296,281,0.681,282,0.481,283,1.942,284,0.46,285,1.942,286,0.35,287,3.233,288,1.942,289,0.481,290,0.481,291,0.42,292,0.42,293,0.42,294,1.942,295,0.492,296,0.45,297,0.793,298,1.88,299,1.08,300,1.124,301,0.968,302,1.567,303,1.942,304,2.394,305,1.567,306,0.686,307,1.292,308,1.567,309,1.366,310,0.937,311,1.561,312,1.942,313,4.338,314,1.002,315,0.653,316,1.942,317,1.942,318,1.94,319,1.942,320,0.607,321,1.942,322,4.842,323,3.233,324,2.608,325,3.233,326,0.579,327,1.942,328,1.942,329,1.455,330,3.233,331,1.942,332,1.942,333,1.942,334,1.942,335,4.842,336,1.942,337,1.942,338,1.942,339,1.942,340,1.942,341,1.942,342,5.377,343,1.995,344,1.995,345,4.153,346,1.942,347,1.229,348,0.968,349,0.471,350,1.942,351,1.08,352,1.4,353,1.942,354,3.233,355,3.233,356,3.233,357,3.233,358,1.942,359,1.173,360,3.233,361,1.942,362,3.233,363,1.942,364,1.942,365,1.942,366,4.153,367,3.233,368,1.942,369,1.559,370,2.046,371,1.567,372,1.942,373,1.942,374,1.011,375,1.08,376,1.942,377,2.608,378,2.856,379,1.567,380,1.124,381,1.039,382,1.455,383,1.942,384,1.942,385,1.039,386,1.942,387,3.233,388,1.559,389,1.942,390,1.942,391,0.968,392,1.612,393,1.08,394,0.968,395,1.942,396,3.233,397,1.942,398,1.942,399,1.942,400,0.879,401,1.716,402,1.455,403,0.879,404,1.942,405,1.942,406,0.879,407,1.942,408,1.942,409,1.716,410,4.153,411,1.942,412,1.567,413,1.942,414,1.942,415,1.942,416,3.233,417,1.942,418,1.942,419,3.233,420,1.292,421,1.942,422,1.039,423,1.366,424,1.942,425,3.233,426,3.233,427,4.153,428,4.153,429,3.233,430,3.233,431,4.278,432,2.223,433,3.233,434,3.233,435,3.233,436,3.233,437,1.942,438,1.942,439,0.829,440,1.942,441,1.942,442,3.233,443,1.942,444,1.942,445,1.203,446,1.002,447,0.326,448,1.797,449,2.856,450,2.046,451,3.233,452,1.942,453,1.942,454,1.942,455,4.842,456,4.842,457,1.942,458,1.942,459,1.942,460,1.942,461,1.942,462,1.942,463,3.233,464,1.716,465,1.942,466,3.233,467,0.358,468,1.292,469,1.942,470,1.229,471,3.233,472,1.942,473,0.907,474,0.805,475,0.829,476,0.968,477,2.001,478,1.229,479,2.063,480,1.567,481,1.124,482,1.379,483,0.742,484,1.942,485,2.274,486,1.942,487,1.124,488,5.377,489,1.942,490,1.229,491,1.567,492,1.942,493,3.233,494,3.233,495,1.567,496,1.942,497,0.783,498,1.229,499,2.274,500,1.567,501,1.669,502,1.08,503,0.805,504,1.942,505,1.942,506,1.229,507,1.942,508,1.366,509,1.716,510,1.942,511,1.173,512,1.039,513,1.942,514,1.942,515,1.942,516,1.942,517,1.567,518,1.942,519,1.942,520,1.942,521,1.942,522,1.366,523,1.942,524,1.942,525,1.942,526,1.942,527,1.567,528,1.942,529,3.233,530,1.942,531,1.942,532,3.233,533,1.455,534,1.08,535,1.039,536,1.942,537,1.942,538,0.829,539,1.942,540,1.942,541,1.292,542,1.942,543,1.942,544,1.039,545,1.942,546,1.942,547,1.942,548,1.942,549,1.002,550,1.942,551,4.153,552,1.942,553,2.422,554,1.942,555,1.942,556,1.942,557,1.942,558,1.942,559,0.783,560,0.968,561,0.723,562,1.455,563,3.222,564,1.455,565,1.942,566,1.455,567,1.942,568,1.942,569,3.233,570,3.233,571,1.942,572,1.942,573,1.942,574,1.567,575,1.942,576,3.233,577,1.942,578,1.942,579,0.003,580,0.003]],["title/interfaces/KeyboardEvent.html",[0,0.726,508,3.114]],["body/interfaces/KeyboardEvent.html",[0,1.002,2,0.049,3,0.911,4,0.037,5,0.02,6,0.03,10,0.811,14,1.726,15,0.789,16,0.009,18,0.739,19,0.706,20,1.878,21,1.505,29,3.289,30,4.521,32,4.381,33,3.197,36,1.057,37,1.576,38,0.156,44,2.468,45,0.956,47,1.293,52,0.845,63,1.315,64,1.331,69,0.829,72,1.254,73,1.448,76,0.905,77,2.717,83,2.198,84,2.274,85,1.898,86,0.634,94,1.621,98,0.98,100,2.006,101,0.603,104,2.579,107,1.94,123,1.877,127,1.623,132,1.299,133,1.94,134,2.628,135,1.281,140,1.005,141,2.717,143,0.756,144,0.829,146,0.89,150,2.441,152,2.028,154,1.805,155,1.03,160,1.263,162,2.232,165,1.236,169,0.933,172,1.306,174,2.184,175,1.101,179,0.723,180,2.028,181,1.505,182,2.133,186,1.856,188,1.935,190,1.114,191,0.631,192,2.138,194,0.086,195,2.184,197,3.843,198,0.81,200,2.396,202,0.991,203,0.911,204,2.184,206,1.687,207,0.933,208,2.396,210,2.027,211,1.844,215,1.772,224,1.127,226,1.71,227,1.176,228,1.176,230,1.406,234,1.433,236,0.103,238,0.98,248,1.334,250,1.925,251,1.745,252,1.32,254,0.06,256,0.937,259,0.576,264,1.946,265,0.706,267,1.469,268,1.101,271,1.03,273,0.558,277,3.985,279,0.756,280,0.445,281,0.734,282,0.723,284,0.691,286,0.525,289,0.723,290,0.723,291,0.631,292,0.631,293,0.631,295,0.739,296,0.675,297,0.926,304,1.78,311,1.368,320,1.399,343,2.161,344,2.161,347,1.844,349,0.706,352,1.375,370,1.844,374,1.399,375,1.621,400,2.987,402,2.184,403,1.32,406,2.027,420,2.979,422,3.53,432,2.396,439,2.325,445,1.666,447,1.027,467,0.537,477,1.085,479,1.303,482,1.244,487,3.154,503,1.209,508,3.149,544,2.917,549,1.505,553,2.184,559,2.66,560,2.232,561,2.455,579,0.007,580,0.006,581,2.184,582,2.915,583,5.371,584,4.588,585,2.979,586,1.399,587,3.539,588,1.677,589,2.051,590,2.051,591,1.844,592,4.309,593,4.068,594,4.301,595,2.051,596,2.352,597,6.036,598,0.956,599,2.352,600,1.687,601,2.056,602,2.591,603,3.611,604,2.52,605,3.611,606,3.611,607,4.396,608,2.352,609,3.611,610,4.396,611,3.611,612,3.611,613,3.611,614,1.013,615,2.917,616,3.611,617,3.611,618,4.581,619,5.217,620,3.611,621,2.979,622,2.352,623,1.56,624,2.394,625,0.89,626,3.611,627,1.56,628,3.611,629,2.352,630,2.352,631,4.396,632,4.581,633,2.352,634,2.051,635,1.273,636,1.844,637,2.352,638,4.396,639,2.184,640,5.433,641,2.352,642,2.352,643,2.705,644,2.352,645,1.281,646,2.352,647,2.091,648,4.932,649,3.611,650,4.932,651,2.184,652,2.051,653,3.611,654,2.717,655,1.085,656,2.352,657,1.844,658,1.56,659,2.979,660,3.354,661,2.705,662,2.591,663,2.717,664,2.352,665,2.352,666,2.352,667,2.352,668,2.352,669,2.352,670,2.352,671,2.352,672,2.352,673,2.352,674,2.352,675,2.352,676,2.352,677,2.352,678,2.352,679,3.611,680,2.352,681,2.352,682,2.352,683,3.611,684,2.352,685,2.352,686,2.352,687,2.352,688,3.611,689,2.352,690,1.399,691,0.683,692,2.352,693,2.352,694,3.611,695,2.352,696,2.091,697,0.956,698,2.352,699,2.051,700,4.396,701,3.611,702,1.844,703,1.844,704,2.184,705,2.352,706,1.144,707,2.352,708,3.611,709,2.352,710,2.352,711,2.352,712,2.352,713,4.396,714,2.352,715,1.505,716,1.687,717,2.352,718,3.611,719,2.352,720,3.611,721,5.321,722,2.352,723,1.844,724,2.352,725,4.396,726,2.352,727,3.611,728,3.611,729,2.352,730,2.352,731,1.32,732,2.352,733,2.184,734,0.806,735,2.051,736,2.352,737,1.94,738,2.352,739,1.94,740,1.621,741,1.94,742,1.362,743,2.051,744,2.352,745,2.352,746,2.184,747,2.352,748,2.352,749,2.184,750,2.352,751,2.352,752,1.687,753,1.621,754,1.621,755,2.352,756,2.352,757,2.352,758,2.352,759,2.184,760,1.505,761,2.352,762,2.184,763,2.352,764,2.352,765,2.352,766,2.352,767,1.209,768,2.352,769,2.352,770,3.611,771,2.352,772,1.844,773,2.352]],["title/interfaces/MouseEvent.html",[0,0.726,658,2.369]],["body/interfaces/MouseEvent.html",[0,1.002,2,0.049,3,0.911,4,0.037,5,0.02,6,0.03,10,0.811,14,1.726,15,0.789,16,0.009,18,0.739,19,0.706,20,1.878,21,1.505,29,3.289,30,4.521,32,4.381,33,3.197,36,1.057,37,1.576,38,0.156,44,2.468,45,0.956,47,1.293,52,0.845,63,1.315,64,1.331,69,0.829,72,1.254,73,1.448,76,0.905,77,2.717,83,2.198,84,2.274,85,1.898,86,0.634,94,1.621,98,0.98,100,2.006,101,0.603,104,2.579,107,1.94,123,1.877,127,1.623,132,1.299,133,1.94,134,2.628,135,1.281,140,1.005,141,2.717,143,0.756,144,0.829,146,0.89,150,2.441,152,2.028,154,1.805,155,1.03,160,1.263,162,2.232,165,1.236,169,0.933,172,1.306,174,2.184,175,1.101,179,0.723,180,2.028,181,1.505,182,2.133,186,1.856,188,1.935,190,1.114,191,0.631,192,2.138,194,0.086,195,2.184,197,3.843,198,0.81,200,2.396,202,0.991,203,0.911,204,2.184,206,1.687,207,0.933,208,2.396,210,2.027,211,1.844,215,1.772,224,1.127,226,1.71,227,1.176,228,1.176,230,1.406,234,1.433,236,0.103,238,0.98,248,1.334,250,1.925,251,1.745,252,1.32,254,0.06,256,0.937,259,0.576,264,1.946,265,0.706,267,1.469,268,1.101,271,1.03,273,0.558,277,3.985,279,0.756,280,0.445,281,0.734,282,0.723,284,0.691,286,0.525,289,0.723,290,0.723,291,0.631,292,0.631,293,0.631,295,0.739,296,0.675,297,0.926,304,1.78,311,1.368,320,1.399,343,2.161,344,2.161,347,1.844,349,0.706,352,1.375,370,1.844,374,1.399,375,1.621,400,2.987,402,2.184,403,1.32,406,2.027,420,2.979,422,3.53,432,2.396,439,2.325,445,1.666,447,1.027,467,0.537,477,1.085,479,1.303,482,1.244,487,3.154,503,1.209,508,2.051,544,2.917,549,1.505,553,2.184,559,2.66,560,2.232,561,2.455,579,0.007,580,0.006,581,2.184,583,5.371,584,4.588,585,2.979,586,1.399,587,3.539,588,1.677,589,2.051,590,2.051,591,1.844,592,4.309,593,4.068,594,4.301,595,2.051,596,2.352,597,6.036,598,0.956,599,2.352,600,1.687,601,2.056,602,2.591,603,3.611,604,2.52,605,3.611,606,3.611,607,4.396,608,2.352,609,3.611,610,4.396,611,3.611,612,3.611,613,3.611,614,1.013,615,2.917,616,3.611,617,3.611,618,4.581,619,5.217,620,3.611,621,2.979,622,2.352,623,1.56,624,2.394,625,0.89,626,3.611,627,1.56,628,3.611,629,2.352,630,2.352,631,4.396,632,4.581,633,2.352,634,2.051,635,1.273,636,1.844,637,2.352,638,4.396,639,2.184,640,5.433,641,2.352,642,2.352,643,2.705,644,2.352,645,1.281,646,2.352,647,2.091,648,4.932,649,3.611,650,4.932,651,2.184,652,2.051,653,3.611,654,2.717,655,1.085,656,2.352,657,1.844,658,2.396,659,2.979,660,3.354,661,2.705,662,2.591,663,2.717,664,2.352,665,2.352,666,2.352,667,2.352,668,2.352,669,2.352,670,2.352,671,2.352,672,2.352,673,2.352,674,2.352,675,2.352,676,2.352,677,2.352,678,2.352,679,3.611,680,2.352,681,2.352,682,2.352,683,3.611,684,2.352,685,2.352,686,2.352,687,2.352,688,3.611,689,2.352,690,1.399,691,0.683,692,2.352,693,2.352,694,3.611,695,2.352,696,2.091,697,0.956,698,2.352,699,2.051,700,4.396,701,3.611,702,1.844,703,1.844,704,2.184,705,2.352,706,1.144,707,2.352,708,3.611,709,2.352,710,2.352,711,2.352,712,2.352,713,4.396,714,2.352,715,1.505,716,1.687,717,2.352,718,3.611,719,2.352,720,3.611,721,5.321,722,2.352,723,1.844,724,2.352,725,4.396,726,2.352,727,3.611,728,3.611,729,2.352,730,2.352,731,1.32,732,2.352,733,2.184,734,0.806,735,2.051,736,2.352,737,1.94,738,2.352,739,1.94,740,1.621,741,1.94,742,1.362,743,2.051,744,2.352,745,2.352,746,2.184,747,2.352,748,2.352,749,2.184,750,2.352,751,2.352,752,1.687,753,1.621,754,1.621,755,2.352,756,2.352,757,2.352,758,2.352,759,2.184,760,1.505,761,2.352,762,2.184,763,2.352,764,2.352,765,2.352,766,2.352,767,1.209,768,2.352,769,2.352,770,3.611,771,2.352,772,1.844,773,2.352,774,2.915]],["title/interfaces/NavigationItemBase.html",[0,0.726,775,2.801]],["body/interfaces/NavigationItemBase.html",[0,1.259,2,0.058,4,0.044,5,0.023,6,0.023,10,0.514,11,0.795,14,1.651,15,0.857,16,0.009,33,1.222,35,1.614,37,1.367,38,0.126,44,4.187,45,1.981,47,1.282,49,1.689,52,1.564,62,2.376,63,0.854,64,1.016,73,0.819,77,2.537,84,2.892,85,1.72,86,0.607,87,1.475,93,1.944,100,1.981,101,0.714,104,1.191,118,2.435,120,1.888,123,1.447,127,0.917,128,1.784,132,0.899,134,2.454,140,1.562,141,1.723,143,0.897,150,1.517,152,1.286,154,1.394,157,1.222,160,1.28,165,1.501,169,1.107,172,1.231,175,0.622,179,0.857,180,2.247,181,2.03,182,1.678,184,2.088,187,1.944,188,1.414,190,1.32,191,0.748,194,0.102,202,0.765,203,1.08,210,1.565,215,1.205,224,1.629,230,1.667,236,0.113,243,1.784,246,1.29,250,1.884,253,1.798,254,0.059,256,1.145,264,1.947,265,0.837,266,2.436,268,1.346,271,1.222,273,0.957,279,0.897,280,0.527,281,0.834,282,0.857,284,0.819,286,0.622,289,0.857,290,0.857,291,0.748,292,0.748,293,0.748,295,1.29,296,0.8,297,0.938,301,2.537,306,2.134,310,1.667,311,1.448,320,1.59,343,1.517,344,1.517,348,1.723,349,1.614,351,1.921,352,1.193,374,1.08,380,4.654,381,2.723,447,1.409,448,3.357,467,0.637,477,2.247,479,1.482,482,2.576,483,1.32,497,2.052,511,2.088,512,1.85,538,2.171,560,1.723,561,2.642,579,0.005,580,0.005,586,1.08,588,1.286,592,1.723,602,2,623,1.85,624,1.518,625,2.033,645,1.518,647,2.376,654,3.54,655,1.286,658,1.85,663,3.828,690,2.219,696,2.82,697,1.669,715,1.784,731,1.565,734,1.088,742,1.614,775,4.214,776,2.187,777,0.442,778,2.4,779,4.724,780,2.614,781,4.432,782,5.242,783,5.177,784,1.718,785,3.385,786,3.074,787,2.088,788,2.3,789,3.219,790,2.3,791,3.385,792,3.074,793,4.492,794,3.168,795,3.219,796,2.187,797,2.3,798,3.074,799,2.3,800,5.174,801,2.3,802,3.219,803,1.921,804,3.385,805,2.088,806,1.784,807,2.3,808,2.3,809,2.3,810,2.3,811,2,812,2.3,813,2.912,814,3.581,815,2.3,816,3.385,817,2.3,818,2.088,819,3.385,820,3.703,821,2.3,822,2.3,823,1.447,824,4.018,825,3.385,826,2.3,827,2.3,828,2.3,829,2.3,830,2.3,831,2.088,832,2.3,833,3.385,834,2.3,835,2.3,836,2.3,837,3.385,838,3.385,839,4.432,840,1.107,841,3.219,842,2.3,843,2.3,844,2.3,845,2.3,846,2.3,847,2.3,848,2.3,849,2.3,850,1.08,851,1.394,852,1.614,853,1.565,854,2.3,855,3.385,856,2.3,857,2.3,858,2.3,859,3.219,860,2.3,861,2.187,862,2.3,863,3.385,864,2,865,2.3,866,1.614,867,2.3,868,1.921,869,2.3,870,2.3,871,2.3,872,3.219,873,2.3,874,2.3,875,3.074,876,2.3,877,2.3,878,1.85,879,2.3,880,3.385,881,3.385,882,3.385,883,3.385,884,2.945,885,2.3,886,3.385,887,4.432,888,2.3,889,2.3,890,3.385,891,3.357,892,2.3,893,2.3,894,1.784,895,1.414,896,1.614,897,2.3,898,2.3,899,2.3,900,2.3,901,1.921,902,2.3,903,2.187,904,2.3,905,2.3]],["title/modules/TerminusUIModule.html",[906,0.581,907,3.317]],["body/modules/TerminusUIModule.html",[2,0.064,4,0.049,5,0.037,6,0.026,8,2.878,16,0.009,38,0.194,50,1.23,69,1.093,72,0.692,86,0.638,127,1.858,194,0.113,215,1.519,232,2.466,233,2.32,234,1.23,235,2.32,236,0.109,254,0.038,257,1.452,259,0.678,310,3.093,349,1.331,579,0.005,580,0.005,586,2.005,598,1.26,614,0.869,734,0.692,850,2.005,906,0.972,907,7.114,908,1.019,909,0.692,910,1.093,911,3.393,912,3.393,913,3.393,914,3.393,915,3.393,916,6.024,917,6.024,918,4.42,919,6.024,920,6.024,921,6.024,922,5.698,923,6.024,924,6.024,925,6.024,926,6.024,927,5.418,928,3.762,929,4.956,930,5.698,931,6.024,932,6.024,933,5.698,934,6.024,935,5.698,936,6.024,937,6.024,938,6.024,939,5.698,940,5.698,941,5.698,942,6.024,943,6.024,944,4.956,945,4.76,946,4.653,947,1.599,948,3.841,949,2.878,950,1.599,951,3.841,952,3.841,953,2.055,954,3.841,955,3.841,956,3.393,957,3.841,958,3.841,959,2.702,960,3.841,961,1.043,962,3.098,963,3.841,964,3.098,965,1.145,966,2.702,967,3.098,968,1.915,969,2.702,970,3.393,971,2.878,972,3.841,973,2.878,974,3.841,975,3.393,976,3.841,977,3.393,978,4.511,979,3.841,980,1.324,981,2.556,982,3.841,983,3.841,984,3.841,985,3.393,986,3.393,987,3.393,988,3.841,989,3.841,990,2.702,991,2.135,992,2.556,993,6.413,994,3.711,995,5.173,996,6.413,997,2.702]],["title/injectables/TsAmChartsService.html",[850,1.384,998,2.945]],["body/injectables/TsAmChartsService.html",[0,1.057,2,0.108,4,0.082,5,0.044,6,0.056,10,0.96,11,1.208,15,0.841,16,0.009,36,2.802,38,0.135,49,1.635,99,3.116,140,1.425,172,1.202,194,0.19,236,0.122,254,0.063,273,0.804,297,0.864,343,2.304,344,2.304,352,1.274,374,2.016,445,3.079,467,1.425,579,0.007,580,0.007,588,1.245,767,2.674,777,0.825,850,2.784,851,3.116,998,5.142,999,5.202,1000,6.803,1001,6.448,1002,6.265,1003,6.448,1004,1.712,1005,3.328,1006,6.448,1007,6.234,1008,4.536,1009,4.291,1010,3.732,1011,4.536,1012,3.732,1013,3.585,1014,4.832,1015,4.536,1016,5.202,1017,5.697,1018,6.827,1019,5.697,1020,5.697]],["title/interfaces/TsAmChartsToken.html",[0,0.726,1002,3.114]],["body/interfaces/TsAmChartsToken.html",[0,1.274,2,0.109,4,0.083,5,0.044,6,0.044,10,0.969,11,1.214,15,0.936,16,0.009,36,2.36,38,0.136,49,1.65,99,2.625,140,1.433,172,0.945,194,0.191,236,0.122,254,0.064,343,2.316,344,2.316,352,1.286,374,2.034,445,3.321,467,1.2,579,0.007,580,0.007,588,1.661,767,2.699,850,2.69,851,2.625,998,4.331,999,5.25,1000,6.225,1002,5.845,1007,6.268,1008,6.054,1009,5.726,1010,4.98,1011,4.579,1012,3.767,1013,3.618,1014,4.877,1015,4.579,1016,5.25,1017,5.75,1018,6.865,1019,5.75,1020,5.75]],["title/modules/TsAutocompleteModule.html",[906,0.581,916,3.114]],["body/modules/TsAutocompleteModule.html",[2,0.105,4,0.079,5,0.042,6,0.042,16,0.009,38,0.193,72,1.127,194,0.184,198,1.739,236,0.128,254,0.061,257,1.849,259,0.661,579,0.007,580,0.007,601,3.101,614,1.416,651,4.687,661,3.779,734,1.127,906,0.996,908,1.66,909,1.127,910,1.78,916,6.511,928,3.885,929,5.118,945,4.916,947,2.209,950,2.209,968,3.119,969,4.401,991,3.478,992,4.162,1021,5.526,1022,5.526,1023,6.256,1024,5.526,1025,6.256,1026,2.316,1027,1.865,1028,4.392,1029,5.049,1030,7.588,1031,7.588,1032,6.256,1033,7.588,1034,6.256,1035,6.703,1036,5.046,1037,7.588]],["title/classes/TsAutocompleteSelectedEvent.html",[254,0.043,660,3.317]],["body/classes/TsAutocompleteSelectedEvent.html",[0,0.895,2,0.049,3,0.913,4,0.037,5,0.02,6,0.02,10,0.667,14,1.727,15,0.789,16,0.009,18,0.741,19,0.708,20,1.881,21,1.507,29,3.292,30,4.523,32,4.384,33,3.197,36,1.059,37,1.577,38,0.156,44,2.47,45,0.958,47,1.287,52,0.846,63,1.316,64,1.331,69,0.831,72,1.255,73,1.45,76,0.906,77,2.72,83,2.2,84,2.276,85,1.899,86,0.635,94,1.624,98,0.982,100,2.008,101,0.604,104,2.581,107,1.943,123,1.878,127,1.624,132,1.299,133,1.943,134,2.631,135,1.283,140,1.006,141,2.72,143,0.758,144,0.831,146,0.891,150,2.442,152,2.03,154,1.808,155,1.032,160,1.263,162,2.235,165,1.237,169,0.935,172,1.306,174,2.188,175,1.102,179,0.724,180,2.03,181,1.507,182,2.134,186,1.859,188,1.937,190,1.116,191,0.632,192,2.141,194,0.086,195,2.188,197,3.845,198,0.812,200,2.399,202,0.992,203,0.913,204,2.188,206,1.69,207,0.935,208,2.399,210,2.03,211,1.848,215,1.774,224,1.128,226,1.713,227,1.178,228,1.178,230,1.409,234,1.435,236,0.103,238,0.982,248,1.336,250,1.926,251,1.747,252,1.322,254,0.065,256,0.938,259,0.577,264,1.947,265,0.708,267,1.471,268,1.103,271,1.032,273,0.559,277,3.989,279,0.758,280,0.446,281,0.735,282,0.724,284,0.692,286,0.526,289,0.724,290,0.724,291,0.632,292,0.632,293,0.632,295,1.137,296,0.676,297,0.916,304,1.782,311,1.369,320,1.401,343,2.163,344,2.163,347,1.848,349,0.708,352,1.376,370,1.848,374,1.401,375,1.624,400,2.989,402,2.188,403,1.322,406,2.03,420,2.983,422,3.533,432,2.399,439,2.328,445,1.668,447,1.028,467,0.538,477,1.087,479,1.305,482,1.246,487,3.158,503,1.211,508,2.055,544,2.92,549,1.507,553,2.188,559,2.662,560,2.235,561,2.277,579,0.007,580,0.006,581,2.188,583,5.373,584,4.591,585,2.983,586,1.401,587,3.542,588,1.677,589,2.055,590,2.055,591,1.848,592,4.311,593,4.072,594,4.305,595,2.055,596,2.356,597,6.039,598,0.958,599,2.356,600,1.69,601,2.058,602,2.595,603,3.616,604,2.522,605,3.616,606,3.616,607,4.401,608,2.356,609,3.616,610,4.401,611,3.616,612,3.616,613,3.616,614,1.015,615,2.92,616,3.616,617,3.616,618,4.586,619,5.221,620,3.616,621,2.983,622,2.356,623,1.563,624,2.397,625,0.891,626,3.616,627,1.563,628,3.616,629,2.356,630,2.356,631,4.401,632,4.586,633,2.356,634,2.055,635,1.275,636,1.848,637,2.356,638,4.401,639,2.188,640,5.437,641,2.356,642,2.356,643,2.708,644,2.356,645,1.283,646,2.356,647,2.094,648,4.937,649,4.401,650,4.937,651,2.188,652,2.055,653,3.616,654,2.72,655,1.087,656,2.356,657,1.848,658,1.563,659,2.983,660,4.088,661,2.708,662,2.595,663,2.72,664,2.356,665,2.356,666,2.356,667,2.356,668,2.356,669,2.356,670,2.356,671,2.356,672,2.356,673,2.356,674,2.356,675,2.356,676,2.356,677,2.356,678,2.356,679,3.616,680,2.356,681,2.356,682,2.356,683,3.616,684,2.356,685,2.356,686,2.356,687,2.356,688,3.616,689,2.356,690,1.401,691,0.684,692,2.356,693,2.356,694,3.616,695,2.356,696,2.094,697,0.958,698,2.356,699,2.055,700,4.401,701,3.616,702,1.848,703,1.848,704,2.188,705,2.356,706,1.146,707,2.356,708,3.616,709,2.356,710,2.356,711,2.356,712,2.356,713,4.401,714,2.356,715,1.507,716,1.69,717,2.356,718,3.616,719,2.356,720,3.616,721,5.326,722,2.356,723,1.848,724,2.356,725,4.401,726,2.356,727,3.616,728,3.616,729,2.356,730,2.356,731,1.322,732,2.356,733,2.188,734,0.807,735,2.055,736,2.356,737,1.943,738,2.356,739,1.943,740,1.624,741,1.943,742,1.364,743,2.055,744,2.356,745,2.356,746,2.188,747,2.356,748,2.356,749,2.188,750,2.356,751,2.356,752,1.69,753,1.624,754,1.624,755,2.356,756,2.356,757,2.356,758,2.356,759,2.188,760,1.507,761,2.356,762,2.188,763,2.356,764,2.356,765,2.356,766,2.356,767,1.211,768,2.356,769,2.356,770,3.616,771,2.356,772,1.848,773,2.356]],["title/directives/TsAutofocusDirective.html",[691,0.675,1038,1.565]],["body/directives/TsAutofocusDirective.html",[2,0.094,3,1.747,4,0.071,5,0.038,6,0.058,10,0.832,11,1.106,15,0.888,16,0.009,18,1.417,19,1.354,20,2.438,21,2.379,31,3.411,33,1.975,38,0.148,47,1.053,52,1.465,63,0.938,64,1.333,69,2.012,85,1.881,101,1.463,118,2.853,120,1.747,132,1.28,140,1.03,152,2.632,157,1.975,160,1.079,165,1.569,172,1.185,175,1.274,180,3.25,181,2.892,192,2.776,194,0.164,202,1.237,205,1.926,207,1.789,224,1.844,236,0.082,249,1.879,254,0.055,256,1.216,269,4.274,273,0.882,280,1.079,296,1.638,297,0.998,304,1.627,311,1.588,343,1.666,344,1.666,349,1.354,388,2.695,406,2.53,447,0.938,467,1.304,482,2.384,579,0.007,580,0.007,588,1.366,625,2.57,647,3.626,691,1.312,742,3.811,777,0.715,806,2.884,823,1.589,853,3.203,994,3.234,1004,1.878,1038,2.501,1039,5.588,1040,7.209,1041,5.723,1042,7.075,1043,1.417,1044,8.601,1045,8.601,1046,2.376,1047,3.931,1048,5.588,1049,7.075,1050,5.588,1051,5.741,1052,5.588,1053,5.588,1054,3.652,1055,2.99,1056,4.936,1057,2.53,1058,3.718,1059,5.588,1060,5.588,1061,7.075,1062,4.507,1063,4.507,1064,7.075,1065,5.588]],["title/modules/TsAutofocusModule.html",[906,0.581,917,3.114]],["body/modules/TsAutofocusModule.html",[2,0.113,4,0.086,5,0.046,6,0.046,16,0.009,38,0.182,194,0.199,236,0.131,254,0.066,257,1.912,259,0.716,579,0.008,580,0.008,614,1.532,734,1.219,906,1.044,908,1.797,909,1.219,910,1.925,917,6.394,947,2.316,950,2.316,1026,2.427,1027,2.018,1038,3.291,1066,5.979,1067,5.979,1068,5.979,1069,6.768,1070,7.953]],["title/modules/TsButtonModule.html",[906,0.581,918,2.285]],["body/modules/TsButtonModule.html",[2,0.109,4,0.083,5,0.044,6,0.044,16,0.009,38,0.191,194,0.191,202,1.439,203,2.032,236,0.129,254,0.064,257,1.88,259,0.821,579,0.007,580,0.007,614,1.472,661,3.928,734,1.171,906,1.02,908,1.726,909,1.171,910,1.85,918,4.723,928,3.92,947,2.261,950,2.261,968,3.242,1026,2.37,1027,1.938,1035,6.861,1036,5.245,1071,5.744,1072,5.744,1073,6.502,1074,5.744,1075,3.116,1076,6.502,1077,5.819,1078,4.872,1079,5.819,1080,6.861]],["title/modules/TsCSVEntryModule.html",[906,0.581,919,3.114]],["body/modules/TsCSVEntryModule.html",[2,0.105,4,0.08,5,0.042,6,0.042,16,0.009,38,0.192,50,2.434,194,0.184,198,1.744,236,0.128,254,0.061,257,1.851,259,0.663,306,2.218,579,0.007,580,0.007,614,1.42,734,1.13,906,0.998,908,1.665,909,1.13,910,1.785,918,4.567,919,6.548,927,5.599,928,3.888,944,5.122,947,2.213,950,2.213,953,3.358,959,4.414,965,1.87,966,4.414,967,5.061,968,3.128,990,4.414,1026,2.32,1027,1.87,1029,5.058,1081,5.543,1082,5.543,1083,6.274,1084,5.543,1085,3.262,1086,4.701,1087,6.274,1088,4.226,1089,3.238,1090,7.601]],["title/interfaces/TsCSVEntryRecord.html",[0,0.726,1091,3.571]],["body/interfaces/TsCSVEntryRecord.html",[0,0.88,2,0.074,3,0.889,4,0.036,5,0.036,6,0.019,10,1.158,11,0.686,14,2.202,15,0.584,16,0.009,18,1.748,19,1.948,20,1.849,21,1.477,28,1.989,36,1.946,37,1.215,38,0.144,42,1.288,45,0.933,47,1.294,49,1.748,50,2.706,63,1.367,64,1.187,72,1.483,73,1.987,74,1.799,75,1.522,76,1.393,79,3.355,81,2.294,83,2.63,84,2.477,85,0.689,86,0.594,87,1.213,88,3.242,92,2.654,98,0.956,99,2.164,100,1.441,101,0.908,120,0.889,123,1.526,127,0.755,132,0.971,140,1.482,141,3.949,144,1.249,146,1.341,149,1.718,152,1.058,155,2.437,157,2.133,160,1.342,165,1.572,168,1.581,172,1.311,179,0.705,180,1.997,182,1.491,186,1.821,187,1.678,188,1.221,191,0.615,194,0.084,197,1.372,198,0.79,199,2.779,200,2.351,202,0.972,203,0.889,205,0.98,206,1.646,207,0.911,211,1.799,215,0.674,216,1.646,217,1.892,223,0.98,234,2.439,236,0.079,238,2.029,245,1.147,246,1.53,247,2.118,248,1.309,250,2.022,253,1.005,254,0.053,256,0.489,264,1.932,265,0.689,266,0.933,267,1.441,268,1.22,269,2.654,270,1.799,271,1.552,273,0.752,279,0.738,280,0.434,281,0.88,282,0.705,284,0.674,286,0.512,289,0.705,290,0.705,291,0.615,292,0.615,293,0.615,296,1.017,297,0.83,298,1.989,299,1.581,304,2.093,305,2.294,306,1.005,307,1.892,308,2.294,309,2.001,310,1.372,311,1.494,315,0.956,318,2.051,324,2.294,329,2.131,343,1.309,344,1.309,349,1.581,352,1.06,369,1.372,382,2.131,391,1.418,392,2.19,393,1.581,394,1.418,403,1.989,420,3.57,432,1.522,467,0.524,468,1.892,473,1.328,474,1.179,475,1.213,476,1.418,477,1.997,479,2.218,482,1.213,483,1.086,503,1.179,506,1.799,544,1.522,549,1.468,559,2.63,561,1.997,579,0.005,580,0.005,586,1.373,595,2.001,621,1.892,625,1.341,635,1.717,652,2.001,662,2.542,663,1.418,690,0.889,702,1.799,741,1.892,772,1.799,777,0.364,783,2.542,823,2.404,896,2.819,959,2.001,1046,0.828,1085,1.005,1086,2.131,1091,4.868,1092,2.294,1093,4.36,1094,3.522,1095,5.762,1096,6.569,1097,5.331,1098,2.234,1099,1.328,1100,5.331,1101,2.512,1102,3.543,1103,4.328,1104,2.512,1105,2.131,1106,3.941,1107,2.368,1108,3.291,1109,2.512,1110,2.512,1111,2.294,1112,1.799,1113,3.699,1114,1.646,1115,2.294,1116,6.349,1117,3.395,1118,2.983,1119,5.331,1120,2.294,1121,4.887,1122,2.512,1123,2.294,1124,4.245,1125,2.512,1126,2.512,1127,2.512,1128,2.512,1129,1.581,1130,2.512,1131,2.512,1132,2.512,1133,2.131,1134,2.512,1135,2.512,1136,1.646,1137,2.512,1138,1.522,1139,5.331,1140,3.543,1141,2.512,1142,2.512,1143,2.512,1144,2.512,1145,2.512,1146,3.88,1147,3.88,1148,2.512,1149,2.512,1150,2.512,1151,3.88,1152,3.88,1153,4.74,1154,2.512,1155,2.512,1156,3.88,1157,3.88,1158,6.091,1159,2.512,1160,2.512,1161,3.88,1162,2.512,1163,3.88,1164,3.88,1165,1.799,1166,2.512,1167,2.512,1168,3.88,1169,2.512,1170,2.512,1171,2.512,1172,2.512,1173,2.512,1174,5.762,1175,2.512,1176,2.512,1177,2.512,1178,2.131,1179,2.512,1180,2.512,1181,2.512,1182,3.88,1183,4.74,1184,3.88,1185,4.74,1186,2.512,1187,2.512,1188,2.512,1189,2.512,1190,2.512,1191,2.512,1192,2.131,1193,2.512,1194,3.88,1195,3.88,1196,2.512,1197,3.88,1198,2.512,1199,2.512,1200,2.512,1201,2.512,1202,2.512,1203,2.512,1204,5.331,1205,3.88,1206,2.001,1207,2.512,1208,1.718,1209,2.512,1210,2.512,1211,2.512,1212,2.512,1213,1.799,1214,3.09,1215,2.512,1216,2.512,1217,2.512,1218,2.512,1219,2.512,1220,2.512,1221,2.512,1222,2.512,1223,2.512,1224,2.512,1225,2.512,1226,2.512,1227,2.512,1228,2.512,1229,2.294,1230,2.512,1231,4.74,1232,2.294,1233,3.88,1234,2.512,1235,2.512,1236,2.512,1237,2.512,1238,2.512,1239,5.331,1240,4.74,1241,2.512,1242,2.512,1243,3.88,1244,2.512,1245,2.512,1246,2.512,1247,2.512,1248,2.512,1249,2.512,1250,2.512,1251,2.512,1252,2.512,1253,2.512,1254,2.512,1255,2.512,1256,2.001,1257,2.512,1258,2.131]],["title/interfaces/TsCSVFormContents.html",[0,0.726,1120,3.571]],["body/interfaces/TsCSVFormContents.html",[0,0.881,2,0.074,3,0.891,4,0.036,5,0.036,6,0.019,10,1.159,11,0.688,14,2.189,15,0.585,16,0.009,18,1.75,19,1.949,20,1.852,21,1.479,28,1.992,36,1.948,37,1.216,38,0.144,42,1.291,45,0.935,47,1.295,49,1.75,50,2.707,63,1.368,64,1.188,72,1.484,73,1.988,74,1.803,75,1.525,76,1.394,79,3.359,81,2.299,83,2.633,84,2.479,85,0.691,86,0.595,87,1.216,88,3.246,92,2.658,98,0.958,99,2.167,100,1.443,101,0.91,120,0.891,123,1.529,127,0.757,132,0.972,140,1.483,141,3.951,144,1.252,146,1.343,149,1.722,152,1.061,155,2.439,157,2.136,160,1.343,165,1.573,168,1.585,172,1.311,179,0.707,180,1.999,182,1.494,186,1.824,187,1.681,188,1.223,191,0.617,194,0.084,197,1.375,198,0.792,199,2.784,200,2.355,202,0.974,203,0.891,205,0.982,206,1.65,207,0.913,211,1.803,215,0.675,216,1.65,217,1.897,223,0.982,234,2.493,236,0.079,238,2.031,245,1.149,246,1.532,247,2.122,248,1.312,250,2.023,253,1.007,254,0.053,256,0.49,264,1.933,265,0.691,266,0.935,267,1.443,268,1.221,269,2.658,270,1.803,271,1.555,273,0.753,279,0.739,280,0.435,281,0.881,282,0.707,284,0.675,286,0.513,289,0.707,290,0.707,291,0.617,292,0.617,293,0.617,296,1.019,297,0.831,298,1.992,299,1.585,304,2.094,305,2.299,306,1.007,307,1.897,308,2.299,309,2.005,310,1.375,311,1.495,315,0.958,318,2.055,324,2.299,329,2.136,343,1.312,344,1.312,349,1.582,352,1.061,369,1.375,382,2.136,391,1.421,392,2.194,393,1.585,394,1.421,403,1.992,420,3.575,432,1.525,467,0.525,468,1.897,473,1.331,474,1.182,475,1.216,476,1.421,477,1.999,479,2.22,482,1.216,483,1.089,503,1.182,506,1.803,544,1.525,549,1.471,559,2.633,561,1.999,579,0.005,580,0.005,586,1.375,595,2.005,621,1.897,625,1.343,635,1.719,652,2.005,662,1.65,663,1.421,690,0.891,702,1.803,741,1.897,772,1.803,777,0.365,783,2.546,823,2.367,896,2.822,959,2.005,1046,0.83,1085,1.007,1086,2.136,1091,5.267,1092,2.299,1093,4.353,1094,3.474,1095,3.887,1096,6.572,1097,5.338,1098,2.266,1099,1.331,1100,5.338,1101,2.518,1102,3.549,1103,4.334,1104,2.518,1105,2.136,1106,3.945,1107,2.371,1108,3.297,1109,2.518,1110,2.518,1111,2.299,1112,1.803,1113,3.701,1114,1.65,1115,2.299,1116,6.354,1117,3.4,1118,2.987,1119,5.338,1120,3.549,1121,5.566,1122,2.518,1123,2.299,1124,4.251,1125,2.518,1126,2.518,1127,2.518,1128,2.518,1129,1.585,1130,2.518,1131,2.518,1132,2.518,1133,2.136,1134,2.518,1135,2.518,1136,1.65,1137,2.518,1138,1.525,1139,5.338,1140,3.549,1141,2.518,1142,2.518,1143,2.518,1144,2.518,1145,2.518,1146,3.887,1147,3.887,1148,2.518,1149,2.518,1150,2.518,1151,3.887,1152,3.887,1153,4.747,1154,2.518,1155,2.518,1156,3.887,1157,3.887,1158,6.096,1159,2.518,1160,2.518,1161,3.887,1162,2.518,1163,3.887,1164,3.887,1165,1.803,1166,2.518,1167,2.518,1168,3.887,1169,2.518,1170,2.518,1171,2.518,1172,2.518,1173,2.518,1174,5.768,1175,2.518,1176,2.518,1177,2.518,1178,2.136,1179,2.518,1180,2.518,1181,2.518,1182,3.887,1183,4.747,1184,3.887,1185,4.747,1186,2.518,1187,2.518,1188,2.518,1189,2.518,1190,2.518,1191,2.518,1192,2.136,1193,2.518,1194,3.887,1195,3.887,1196,2.518,1197,3.887,1198,2.518,1199,2.518,1200,2.518,1201,2.518,1202,2.518,1203,2.518,1204,5.338,1205,3.887,1206,2.005,1207,2.518,1208,1.722,1209,2.518,1210,2.518,1211,2.518,1212,2.518,1213,1.803,1214,3.095,1215,2.518,1216,2.518,1217,2.518,1218,2.518,1219,2.518,1220,2.518,1221,2.518,1222,2.518,1223,2.518,1224,2.518,1225,2.518,1226,2.518,1227,2.518,1228,2.518,1229,2.299,1230,2.518,1231,4.747,1232,2.299,1233,3.887,1234,2.518,1235,2.518,1236,2.518,1237,2.518,1238,2.518,1239,5.338,1240,4.747,1241,2.518,1242,2.518,1243,3.887,1244,2.518,1245,2.518,1246,2.518,1247,2.518,1248,2.518,1249,2.518,1250,2.518,1251,2.518,1252,2.518,1253,2.518,1254,2.518,1255,2.518,1256,2.005,1257,2.518,1258,2.136]],["title/components/TsCardComponent.html",[86,0.403,1259,1.526]],["body/components/TsCardComponent.html",[2,0.053,3,0.995,4,0.04,5,0.032,6,0.06,10,0.474,11,0.748,14,1.426,15,0.916,16,0.009,18,0.807,19,1.972,20,1.65,21,1.61,26,5.549,36,1.736,38,0.1,42,1.442,47,1.241,49,0.807,50,1.02,52,1.451,63,1.21,64,1.295,69,0.906,72,0.574,73,0.754,76,1.62,85,1.55,86,0.76,94,3.557,99,1.93,101,1.189,102,2.24,118,1.284,119,2.892,132,1.297,140,1.06,143,1.242,146,1.756,150,1.427,153,3.014,155,2.877,160,1.272,165,1.293,169,1.02,172,1.223,175,1.385,179,0.789,181,1.071,191,0.689,194,0.094,223,1.65,224,1.49,226,2.753,227,1.284,228,1.284,230,2.309,232,1.02,236,0.085,238,1.61,243,2.471,245,1.284,246,0.807,247,2.774,248,1.427,249,1.071,250,1.821,254,0.073,256,0.823,259,0.337,261,1.098,264,1.827,265,1.16,266,2.099,267,2.099,273,0.932,279,1.242,280,1.409,281,1.501,282,1.187,284,1.134,286,0.862,289,1.187,290,1.187,291,1.036,292,1.036,293,1.036,297,1.034,298,3.263,299,3.557,304,1.394,311,1.359,314,1.644,315,1.071,318,2.236,326,1.427,347,2.015,349,1.16,369,1.536,391,1.588,392,2.387,393,3.198,394,3.19,409,2.813,445,2.862,446,2.471,447,1.152,467,1.06,473,1.487,474,1.32,475,1.359,476,1.588,479,0.927,512,3.671,522,4.501,579,0.005,580,0.005,588,1.235,598,1.045,601,1.071,635,0.906,690,0.995,691,0.976,740,2.661,777,0.613,778,0.995,784,2.238,806,3.97,813,2.309,875,1.924,909,0.574,961,0.865,965,1.907,980,1.098,1004,1.698,1038,1.125,1043,0.807,1055,2.562,1057,1.442,1075,1.071,1085,1.125,1098,1.242,1107,1.878,1208,3.865,1259,2.484,1260,1.249,1261,2.569,1262,4.34,1263,2.309,1264,5.831,1265,6.859,1266,4.787,1267,4.787,1268,4.787,1269,6.398,1270,6.398,1271,6.398,1272,6.398,1273,6.31,1274,6.398,1275,5.753,1276,6.398,1277,5.753,1278,3.184,1279,5.753,1280,7.286,1281,4.787,1282,6.951,1283,4.787,1284,6.366,1285,3.368,1286,3.184,1287,3.184,1288,4.229,1289,3.184,1290,4.787,1291,5.753,1292,4.787,1293,2.198,1294,3.184,1295,4.787,1296,4.559,1297,4.64,1298,3.184,1299,3.184,1300,3.184,1301,3.184,1302,3.184,1303,3.184,1304,4.047,1305,3.184,1306,3.184,1307,3.184,1308,3.184,1309,2.569,1310,3.184,1311,2.569,1312,3.184,1313,3.184,1314,3.184,1315,4.787,1316,3.184,1317,3.184,1318,1.77,1319,2.24,1320,2.24,1321,3.184,1322,3.184,1323,2.569,1324,1.644,1325,5.652,1326,4.229,1327,4.229,1328,4.229,1329,4.229,1330,4.229,1331,2.015,1332,2.813,1333,2.119,1334,2.813,1335,3.368,1336,2.043,1337,3.184,1338,2.24,1339,1.843,1340,2.015,1341,2.24,1342,1.77,1343,3.184,1344,3.184,1345,3.368,1346,3.184,1347,3.184,1348,3.184,1349,3.184,1350,4.787,1351,3.184,1352,4.787,1353,5.753,1354,4.787,1355,1.216,1356,2.51,1357,1.249,1358,1.249,1359,1.878,1360,1.249,1361,1.249,1362,1.155,1363,1.249,1364,1.071,1365,1.249,1366,1.125,1367,1.155,1368,1.249,1369,1.155,1370,1.249,1371,1.098,1372,1.249,1373,1.249,1374,1.098,1375,1.878,1376,1.155,1377,1.155,1378,1.249,1379,0.972,1380,1.249,1381,1.125,1382,1.249,1383,1.125,1384,1.249,1385,1.125,1386,1.249,1387,1.125,1388,1.249,1389,1.249,1390,1.125,1391,1.249,1392,1.071,1393,1.249,1394,1.249,1395,1.249,1396,1.098,1397,1.125,1398,1.249,1399,1.125,1400,1.249,1401,1.155,1402,1.249,1403,1.02,1404,0.949,1405,1.249,1406,0.949,1407,1.249,1408,1.098,1409,1.249,1410,1.125,1411,1.249,1412,1.098,1413,1.249,1414,1.125,1415,1.249,1416,1.02,1417,1.249,1418,1.02,1419,1.878,1420,1.02,1421,1.249,1422,1.125,1423,1.249,1424,1.02,1425,1.249,1426,1.02,1427,1.098,1428,1.249,1429,1.125,1430,1.249,1431,1.098,1432,1.249,1433,0.949,1434,1.249,1435,1.098,1436,1.216,1437,1.249]],["title/modules/TsCardModule.html",[906,0.581,920,3.114]],["body/modules/TsCardModule.html",[2,0.108,4,0.082,5,0.044,6,0.044,16,0.009,38,0.19,194,0.189,236,0.131,254,0.063,257,1.872,259,0.681,579,0.007,580,0.007,614,1.458,734,1.16,906,1.014,908,1.71,909,1.16,910,1.832,920,6.513,928,3.912,947,2.249,950,2.249,968,3.212,1026,2.357,1027,1.92,1259,3.191,1264,4.886,1414,3.272,1438,5.691,1439,5.691,1440,6.442,1441,5.691,1442,6.442,1443,5.787,1444,3.107,1445,6.823,1446,7.723]],["title/directives/TsCardTitleDirective.html",[691,0.675,1414,1.565]],["body/directives/TsCardTitleDirective.html",[2,0.099,4,0.075,5,0.04,6,0.059,10,0.88,11,1.145,15,0.797,16,0.009,38,0.153,63,1.23,76,1.194,86,0.726,132,0.88,152,2.726,154,2.954,160,1.118,163,4.875,165,1.481,183,6.424,185,3.719,192,2.875,194,0.174,215,1.735,236,0.087,254,0.085,273,0.736,280,1.118,286,1.32,296,1.697,297,0.957,311,1.502,343,1.761,344,1.761,347,4.636,406,2.675,447,1.23,467,1.351,579,0.007,580,0.007,588,1.537,691,1.363,1004,1.568,1043,1.498,1046,2.133,1208,4.426,1259,3.157,1264,4.636,1332,7.355,1414,2.59,1445,5.22,1447,8.722,1448,5.908,1449,8.326,1450,8.326,1451,5.268,1452,5.908,1453,7.326,1454,5.804,1455,6.136,1456,3.653,1457,5.171,1458,7.326,1459,5.908,1460,5.299,1461,5.908,1462,5.908,1463,5.91,1464,5.908,1465,7.326,1466,5.908,1467,4.766,1468,5.908]],["title/directives/TsCellDefDirective.html",[691,0.675,1416,1.417]],["body/directives/TsCellDefDirective.html",[2,0.089,4,0.067,5,0.036,6,0.036,11,1.249,16,0.009,18,1.341,19,1.281,38,0.143,45,1.734,47,1.017,52,0.997,63,1.342,64,1.263,85,1.281,91,3.06,93,2.609,140,0.975,153,2.323,172,1.099,175,0.952,181,2.9,194,0.155,236,0.122,245,2.132,246,1.341,248,1.576,254,0.088,259,0.912,260,3.136,268,1.38,271,1.868,273,0.851,280,1.293,281,1.311,286,1.23,295,2.15,297,0.894,304,1.539,326,2.467,349,1.655,439,2.256,447,1.27,467,0.975,497,3.05,579,0.007,580,0.007,635,1.504,691,1.316,777,0.676,840,2.186,1043,1.341,1093,3.293,1094,3.592,1098,2.147,1107,2.074,1113,4.282,1165,3.345,1263,3.648,1293,2.019,1318,4.205,1336,2.914,1406,2.383,1416,2.422,1418,1.693,1420,2.422,1424,2.186,1426,1.693,1469,3.719,1470,3.855,1471,4.205,1472,4.83,1473,5.033,1474,4.804,1475,4.804,1476,5.321,1477,5.458,1478,4.804,1479,5.321,1480,2.55,1481,3.719,1482,4.627,1483,3.719,1484,4.804,1485,5.321,1486,4.804,1487,3.719,1488,4.804,1489,3.405,1490,4.804,1491,3.06,1492,3.719,1493,3.719,1494,3.517,1495,4.804,1496,3.719,1497,4.543,1498,3.719,1499,4.378,1500,2.469,1501,3.719,1502,2.469,1503,3.345]],["title/directives/TsCellDirective.html",[691,0.675,1418,1.417]],["body/directives/TsCellDirective.html",[2,0.087,4,0.066,5,0.035,6,0.051,10,0.771,11,1.285,15,0.733,16,0.009,18,1.313,19,1.255,38,0.141,45,1.699,47,1.003,52,0.977,63,1.332,64,1.254,85,1.255,91,2.997,93,2.574,140,0.954,153,2.275,172,1.194,175,0.933,181,3.006,194,0.152,236,0.121,245,2.088,246,1.313,248,1.543,254,0.088,259,0.891,260,3.105,268,1.513,271,1.83,273,0.933,280,1.286,281,1.348,286,1.213,295,2.138,297,0.943,304,1.508,326,2.451,349,1.815,439,2.209,447,1.257,467,1.242,497,2.717,579,0.006,580,0.007,588,0.999,635,1.473,691,1.309,777,0.662,840,1.658,1004,1.374,1043,1.313,1093,2.497,1094,3.579,1098,2.133,1107,2.032,1113,4.258,1165,3.276,1263,4.338,1293,1.978,1318,4.163,1336,3.195,1406,2.232,1416,2.157,1418,2.157,1420,2.398,1424,2.157,1426,1.658,1469,3.642,1470,3.612,1471,3.745,1472,4.524,1473,4.483,1474,3.642,1475,4.739,1476,5.268,1477,5.567,1478,4.739,1479,5.268,1480,2.497,1481,3.642,1482,4.759,1483,4.739,1484,4.739,1485,5.268,1486,4.739,1487,3.642,1488,5.268,1489,3.359,1490,4.739,1491,2.997,1492,3.642,1493,3.642,1494,3.445,1495,4.739,1496,3.642,1497,4.483,1498,3.642,1499,4.334,1500,2.418,1501,3.642,1502,2.418,1503,3.276,1504,5.177,1505,5.177]],["title/components/TsChartComponent.html",[86,0.403,1362,1.605]],["body/components/TsChartComponent.html",[2,0.054,3,1.014,4,0.041,5,0.033,6,0.058,10,0.483,11,0.759,15,0.975,16,0.009,18,0.822,19,0.786,20,1.673,21,1.632,36,1.176,37,1.317,38,0.165,39,2.052,50,1.039,63,1.218,64,0.985,69,0.923,72,0.584,73,0.768,76,0.655,85,1.176,86,0.734,100,1.064,101,1.335,123,1.381,127,1.288,132,1.029,140,0.598,143,1.509,146,2.296,150,1.734,152,1.806,154,1.957,160,1.206,165,1.652,171,1.425,172,1.237,179,0.804,181,2.171,182,1.795,185,2.717,186,2.412,187,2.222,188,1.795,189,4.085,190,1.854,191,0.702,192,1.905,194,0.095,212,2.282,213,2.282,214,2.282,215,1.529,223,1.673,224,1.003,232,1.039,236,0.086,238,1.632,246,1.231,249,1.091,251,1.862,252,2.198,254,0.063,256,1.11,259,0.683,261,1.118,264,1.637,265,1.176,266,1.592,267,1.592,268,1.466,271,1.716,273,0.937,278,4.092,279,1.259,280,1.41,281,1.499,282,1.203,284,1.15,286,0.874,289,1.203,290,1.203,291,1.05,292,1.05,293,1.05,296,1.124,297,0.972,304,0.944,310,1.564,311,1.63,315,1.091,326,0.967,343,1.925,344,1.925,349,1.176,352,0.641,374,1.517,382,3.637,445,1.806,446,3.333,447,0.545,467,0.895,479,0.944,483,2.467,498,3.071,499,2.282,502,4.034,503,2.677,538,2.482,563,2.158,579,0.005,580,0.005,586,1.517,588,1.246,598,1.064,601,1.091,625,2.495,635,1.655,691,0.74,696,1.515,702,3.071,716,2.809,767,1.345,777,0.621,778,1.014,850,2.161,901,1.803,909,0.584,950,0.944,961,0.881,965,0.967,980,1.118,995,4.692,998,4.296,1000,6.332,1002,5.104,1004,1.714,1005,1.674,1008,3.415,1009,6.145,1010,4.199,1011,2.282,1014,2.43,1015,4.092,1038,1.146,1043,0.822,1046,1.413,1057,1.469,1075,1.091,1085,1.146,1098,1.259,1099,2.267,1259,1.118,1260,1.273,1324,3.002,1355,1.239,1356,2.534,1357,1.273,1358,1.273,1359,1.905,1360,1.273,1361,1.273,1362,2.507,1363,1.273,1364,1.091,1365,1.273,1366,1.146,1367,1.176,1368,1.273,1369,1.176,1370,1.273,1371,1.118,1372,1.273,1373,1.273,1374,1.118,1375,1.905,1376,1.176,1377,1.176,1378,1.273,1379,0.99,1380,1.273,1381,1.146,1382,1.273,1383,1.146,1384,1.273,1385,1.146,1386,1.273,1387,1.146,1388,1.273,1389,1.273,1390,1.146,1391,1.273,1392,1.091,1393,1.273,1394,1.273,1395,1.273,1396,1.118,1397,1.146,1398,1.273,1399,1.146,1400,1.273,1401,1.176,1402,1.273,1403,1.039,1404,0.967,1405,1.273,1406,0.967,1407,1.273,1408,1.118,1409,1.273,1410,1.146,1411,1.273,1412,1.118,1413,1.273,1414,1.146,1415,1.273,1416,1.039,1417,1.273,1418,1.039,1419,1.905,1420,1.039,1421,1.273,1422,1.146,1423,1.273,1424,1.039,1425,1.273,1426,1.039,1427,1.118,1428,1.273,1429,1.146,1430,1.273,1431,1.118,1432,1.273,1433,0.967,1434,1.273,1435,1.118,1436,1.239,1437,1.273,1451,3.071,1506,2.865,1507,4.854,1508,3.637,1509,4.854,1510,4.854,1511,4.854,1512,5.817,1513,4.854,1514,4.854,1515,6.457,1516,6.457,1517,6.457,1518,4.288,1519,5.347,1520,5.817,1521,3.244,1522,5.208,1523,5.817,1524,4.854,1525,4.854,1526,5.208,1527,4.854,1528,3.244,1529,4.854,1530,7.314,1531,3.244,1532,3.244,1533,3.415,1534,3.244,1535,3.244,1536,6.108,1537,3.244,1538,3.244,1539,4.577,1540,3.244,1541,3.244,1542,3.244,1543,3.244,1544,3.244,1545,3.514,1546,2.616,1547,4.288,1548,4.854,1549,3.244,1550,4.854,1551,3.244,1552,4.854,1553,3.244,1554,4.854,1555,4.854,1556,4.854,1557,2.43,1558,4.854,1559,3.244,1560,2.616,1561,1.877,1562,1.674,1563,3.244,1564,3.244,1565,2.865,1566,3.244,1567,2.865,1568,2.616,1569,3.244,1570,5.139,1571,5.139,1572,5.139,1573,5.139,1574,5.139,1575,3.244,1576,2.865,1577,3.244,1578,3.244,1579,4.854,1580,4.854,1581,3.244,1582,2.43,1583,2.616,1584,4.854,1585,3.244,1586,4.854,1587,4.854,1588,4.854,1589,3.244,1590,2.865,1591,2.616,1592,3.244,1593,7.521,1594,3.244,1595,3.244,1596,3.244,1597,3.244,1598,3.244,1599,3.244,1600,3.244,1601,3.244,1602,3.244,1603,3.244,1604,3.244]],["title/modules/TsChartModule.html",[906,0.581,921,3.114]],["body/modules/TsChartModule.html",[2,0.109,4,0.082,5,0.044,6,0.044,16,0.009,38,0.184,100,2.124,194,0.19,236,0.131,254,0.063,257,1.877,259,0.929,579,0.007,580,0.007,614,1.466,734,1.166,823,1.842,850,2.024,906,1.017,908,1.719,909,1.166,910,1.842,921,6.433,947,2.256,950,2.256,998,5.931,1000,4.852,1002,4.555,1008,4.555,1009,4.308,1011,4.555,1015,5.45,1026,2.365,1027,1.93,1362,3.359,1539,4.484,1576,6.844,1605,5.72,1606,5.72,1607,5.72,1608,5.72,1609,6.475,1610,7.747,1611,4.555,1612,4.852]],["title/classes/TsCheckboxChange.html",[254,0.043,1613,3.571]],["body/classes/TsCheckboxChange.html",[2,0.08,3,1.501,4,0.061,5,0.032,6,0.032,11,1.002,14,1.19,16,0.009,18,1.218,19,1.163,20,2.209,21,2.155,31,2.109,36,1.741,37,1.634,38,0.172,42,2.174,47,1.074,49,1.625,52,1.59,63,1.212,64,1.347,72,0.865,76,1.295,83,1.936,85,1.163,86,0.78,98,2.155,99,2.585,101,0.993,123,1.823,127,1.274,132,0.954,140,0.885,143,1.872,155,2.836,160,0.978,172,1.272,175,1.387,179,1.19,180,2.685,182,2.23,188,2.006,190,1.834,191,1.039,193,3.309,194,0.141,196,3.564,197,2.316,198,1.334,202,1.063,205,1.655,207,1.537,215,1.824,224,0.993,226,2.449,227,1.936,228,1.936,232,2.052,233,2.901,234,2.643,235,2.901,236,0.106,238,1.614,245,1.936,246,1.218,247,3.091,248,1.911,249,1.614,250,1.274,251,2.052,252,3.267,253,1.697,254,0.081,255,2.779,256,1.472,257,1.451,259,0.763,260,1.991,262,2.669,263,2.779,264,1.625,265,1.163,267,1.575,279,1.246,280,0.732,281,1.183,282,1.19,284,1.137,286,0.865,289,1.19,290,1.19,291,1.039,292,1.039,293,1.039,295,1.83,297,0.943,298,2.902,299,2.669,311,1.209,318,2.994,320,1.501,352,1.266,369,2.316,391,2.394,392,3.196,393,3.564,394,2.394,400,2.174,422,2.57,445,2.385,447,0.806,467,0.885,470,3.038,473,2.242,474,1.991,475,2.049,476,2.394,481,2.779,482,2.049,579,0.006,580,0.006,586,1.501,625,1.465,627,3.431,691,0.732,706,2.515,777,0.614,780,1.884,784,1.366,878,2.57,895,2.14,1058,4.265,1318,2.669,1331,3.038,1364,2.589,1460,3.195,1613,6.211,1614,3.873,1615,7.088,1616,4.872,1617,5.644,1618,6.012,1619,6.055,1620,4.242,1621,4.242,1622,3.873,1623,3.091,1624,4.242,1625,3.873,1626,5.663,1627,3.873,1628,4.509,1629,4.242,1630,4.242,1631,4.242,1632,4.242,1633,4.242,1634,4.242,1635,6.012,1636,2.57,1637,4.242,1638,3.598,1639,5.663,1640,4.242,1641,2.901,1642,4.242,1643,4.242,1644,4.242]],["title/components/TsCheckboxComponent.html",[86,0.403,1364,1.488]],["body/components/TsCheckboxComponent.html",[0,0.936,2,0.053,3,0.983,4,0.04,5,0.032,6,0.059,10,0.468,11,1.121,14,1.176,15,0.966,16,0.009,18,0.798,19,0.762,20,1.635,21,1.595,31,1.382,36,1.141,37,1.545,38,0.15,42,1.424,47,1.141,49,1.448,50,1.007,52,1.632,63,1.068,64,1.293,69,0.895,72,1.029,73,0.745,76,1.712,83,2.564,85,0.762,86,0.772,98,1.595,99,1.269,101,1.181,123,1.809,127,1.259,132,1.301,140,0.58,143,1.482,146,0.96,150,1.895,155,2.869,160,1.196,165,1.504,172,1.195,175,1.38,179,0.78,180,2.669,182,2.069,185,1.469,188,1.896,190,1.812,191,0.681,193,2.449,194,0.092,196,2.637,197,3.291,198,0.874,202,0.696,205,1.084,207,1.007,215,1.893,223,1.635,224,1.315,226,2.182,227,1.269,228,1.269,232,2.634,233,1.901,234,2.384,235,1.901,236,0.084,238,1.058,245,1.269,246,0.798,247,2.754,248,1.414,249,2.138,250,0.835,251,2.036,252,3.371,253,1.112,254,0.07,255,1.821,256,1.28,257,1.074,259,0.787,260,1.305,261,1.084,262,1.749,263,1.821,264,1.612,265,1.149,267,1.556,273,0.996,279,1.231,280,1.407,281,1.499,282,1.176,284,1.124,286,0.854,289,1.176,290,1.176,291,1.026,292,1.026,293,1.026,295,1.448,297,1.033,298,3.916,299,3.535,311,1.2,315,1.058,318,2.216,320,0.983,326,0.938,352,1.128,369,1.517,391,1.569,392,2.365,393,3.175,394,3.17,400,2.586,422,1.684,445,2.539,447,0.528,467,0.875,470,1.991,473,1.469,474,1.305,475,1.342,476,1.569,478,1.991,481,1.821,482,1.342,534,2.637,535,2.539,579,0.005,580,0.005,586,1.483,588,1.437,598,1.032,601,1.058,625,0.96,627,3.839,691,0.871,706,1.861,777,0.403,778,0.983,780,2.241,784,1.349,840,1.007,878,2.539,895,1.767,909,0.567,961,0.854,965,0.938,980,1.084,1004,1.976,1005,1.624,1038,1.112,1043,0.798,1046,1.381,1057,1.424,1058,4.54,1075,1.058,1085,1.112,1098,1.231,1259,1.084,1260,1.234,1309,2.538,1311,2.538,1318,1.749,1331,1.991,1355,1.202,1356,2.495,1357,1.234,1358,1.234,1359,1.861,1360,1.234,1361,1.234,1362,1.141,1363,1.234,1364,2.412,1365,1.234,1366,1.112,1367,1.141,1368,1.234,1369,1.141,1370,1.234,1371,1.084,1372,1.234,1373,1.234,1374,1.084,1375,1.861,1376,1.141,1377,1.141,1378,1.234,1379,0.96,1380,1.234,1381,1.112,1382,1.234,1383,1.112,1384,1.234,1385,1.112,1386,1.234,1387,1.112,1388,1.234,1389,1.234,1390,1.112,1391,1.234,1392,1.058,1393,1.234,1394,1.234,1395,1.234,1396,1.084,1397,1.112,1398,1.234,1399,1.112,1400,1.234,1401,1.141,1402,1.234,1403,1.007,1404,0.938,1405,1.234,1406,0.938,1407,1.234,1408,1.084,1409,1.234,1410,1.112,1411,1.234,1412,1.084,1413,1.234,1414,1.112,1415,1.234,1416,1.007,1417,1.234,1418,1.007,1419,1.861,1420,1.007,1421,1.234,1422,1.112,1423,1.234,1424,1.007,1425,1.234,1426,1.007,1427,1.084,1428,1.234,1429,1.112,1430,1.234,1431,1.084,1432,1.234,1433,0.938,1434,1.234,1435,1.084,1436,1.202,1437,1.234,1460,2.093,1613,3.827,1614,2.538,1615,5.045,1616,4.023,1617,5.622,1618,5.987,1619,6.026,1620,2.779,1621,2.779,1622,2.538,1623,2.754,1624,2.779,1625,2.538,1626,5.617,1627,2.538,1628,4.017,1629,4.191,1630,4.191,1631,4.191,1632,4.191,1633,2.779,1634,2.779,1635,5.113,1636,1.684,1637,2.779,1638,4.765,1639,5.617,1640,5.045,1641,3.45,1642,2.779,1643,5.045,1644,5.045,1645,4.017,1646,4.017,1647,4.017,1648,4.017,1649,3.827,1650,3.827,1651,3.827,1652,2.779,1653,4.744,1654,4.744,1655,4.744,1656,3.146,1657,3.146,1658,3.146,1659,4.744,1660,3.146,1661,3.146,1662,6.77,1663,2.779,1664,3.146,1665,2.779,1666,2.093,1667,1.901,1668,2.213,1669,2.779,1670,4.023,1671,4.017,1672,2.213,1673,2.779,1674,2.213,1675,2.213,1676,2.779,1677,2.213,1678,3.146,1679,3.146,1680,3.146,1681,3.146,1682,2.779,1683,1.517,1684,1.991,1685,3.337,1686,2.779,1687,3.002,1688,3.337,1689,2.779,1690,3.146,1691,2.779,1692,3.146,1693,3.146,1694,3.146]],["title/modules/TsCheckboxModule.html",[906,0.581,922,2.945]],["body/modules/TsCheckboxModule.html",[2,0.111,4,0.084,5,0.045,6,0.045,16,0.009,38,0.187,194,0.195,198,1.843,236,0.13,254,0.065,257,1.896,259,0.701,579,0.007,580,0.007,614,1.501,734,1.195,906,1.032,908,1.76,909,1.195,910,1.887,922,6.024,947,2.288,950,2.288,1026,2.399,1027,1.977,1028,4.548,1364,3.14,1627,5.35,1628,5.891,1695,5.859,1696,5.859,1697,5.859,1698,5.859,1699,6.632,1700,7.858,1701,7.858]],["title/directives/TsColumnDefDirective.html",[691,0.675,1420,1.417]],["body/directives/TsColumnDefDirective.html",[2,0.086,4,0.065,5,0.035,6,0.053,10,0.763,11,1.164,15,0.81,16,0.009,18,1.696,19,1.621,38,0.14,45,2.195,47,1.176,52,1.262,63,1.376,64,1.306,76,1.035,85,1.241,91,2.965,93,2.846,132,0.763,140,0.944,153,2.251,172,1.082,175,1.205,181,2.879,194,0.151,236,0.121,245,2.698,246,1.299,248,1.527,254,0.088,259,0.905,260,3.089,268,1.352,271,1.811,273,0.929,280,1.282,281,1.295,286,1.205,295,2.131,297,0.998,304,1.948,326,2.355,349,1.621,439,2.855,447,1.251,467,0.944,497,2.698,579,0.006,580,0.007,635,1.457,691,1.306,777,0.655,840,1.64,1043,1.299,1093,2.47,1094,3.657,1098,2.126,1107,2.01,1113,4.236,1165,3.241,1263,3.593,1293,1.957,1318,4.391,1336,2.855,1406,2.355,1416,2.142,1418,1.64,1420,2.529,1424,2.142,1426,1.64,1469,3.604,1470,3.809,1471,3.719,1472,4.772,1473,4.451,1474,3.604,1475,4.707,1476,5.241,1477,5.417,1478,4.707,1479,5.241,1480,2.47,1481,3.604,1482,4.572,1483,3.604,1484,4.707,1485,5.241,1486,4.707,1487,3.604,1488,4.707,1489,3.336,1490,5.557,1491,2.965,1492,3.604,1493,3.604,1494,3.408,1495,4.707,1496,3.604,1497,5.256,1498,5.557,1499,4.312,1500,2.392,1501,3.604,1502,2.392,1503,4.233,1702,5.123,1703,5.123,1704,5.123]],["title/directives/TsConfirmationDirective.html",[691,0.675,1422,1.565]],["body/directives/TsConfirmationDirective.html",[2,0.073,3,1.361,4,0.055,5,0.029,6,0.058,10,0.648,11,0.938,15,0.805,16,0.009,18,1.104,19,1.055,20,2.366,21,2.017,30,3.625,31,1.913,37,1.996,38,0.178,52,0.822,63,1.007,74,2.755,98,1.464,99,1.756,100,2.545,101,1.24,118,3.597,120,2.425,123,1.952,135,1.913,140,1.265,143,1.781,152,2.752,154,2.983,160,1.128,165,1.717,169,1.394,172,1.216,175,1.081,180,3.057,181,2.696,182,2.056,184,4.147,186,2.846,187,2.622,188,2.056,194,0.128,200,2.331,202,1.519,203,1.361,205,1.501,207,1.394,209,3.847,210,1.972,211,2.755,236,0.064,254,0.059,256,0.749,264,1.104,273,0.543,280,0.915,281,1.272,286,1.332,293,0.942,296,1.389,297,0.95,300,3.472,311,1.69,343,1.298,344,1.298,349,1.055,352,1.461,374,2.506,432,2.331,447,0.731,464,3.847,467,1.106,479,1.268,483,2.825,487,3.472,501,2.248,503,3.067,509,3.847,538,3.421,541,2.898,544,2.331,561,1.62,579,0.006,580,0.006,584,3.796,588,0.841,658,2.331,690,1.361,691,1.277,759,3.263,777,0.557,794,1.858,823,1.952,850,1.875,1004,1.156,1043,1.104,1046,1.747,1047,3.064,1075,2.696,1284,5.3,1331,4.68,1335,3.064,1341,3.064,1366,2.614,1367,3.295,1422,2.121,1705,4.355,1706,5.537,1707,6.064,1708,7.396,1709,8.371,1710,7.396,1711,7.396,1712,7.595,1713,6.81,1714,6,1715,3.513,1716,4.355,1717,4.355,1718,6,1719,4.355,1720,4.355,1721,7.396,1722,4.355,1723,4.84,1724,3.335,1725,4.355,1726,5.3,1727,4.355,1728,6.853,1729,4.355,1730,4.355,1731,6.064,1732,4.355,1733,3.847,1734,3.847,1735,3.263,1736,6,1737,7.396,1738,3.847,1739,3.847,1740,3.847,1741,6,1742,2.898,1743,3.847,1744,3.847,1745,4.355,1746,4.355,1747,6,1748,7.396,1749,6,1750,4.355,1751,4.355,1752,4.355,1753,4.355,1754,4.355,1755,4.355,1756,4.355,1757,4.355,1758,4.355,1759,4.355,1760,6,1761,4.355,1762,4.355,1763,4.355,1764,4.355,1765,4.355,1766,4.355,1767,6,1768,4.355,1769,4.355,1770,4.355,1771,4.355,1772,6,1773,6,1774,3.513,1775,4.355,1776,4.355,1777,4.355,1778,4.355]],["title/components/TsConfirmationModalComponent.html",[86,0.403,1366,1.565]],["body/components/TsConfirmationModalComponent.html",[2,0.086,4,0.066,5,0.045,6,0.05,10,0.768,11,1.05,15,0.731,16,0.009,38,0.156,47,1.113,50,1.651,69,1.467,72,0.929,73,1.221,76,1.358,86,0.748,120,2.1,128,3.468,132,1,172,1.223,179,1.278,191,1.116,194,0.152,216,2.984,217,3.431,223,2.316,224,1.389,232,1.651,236,0.076,254,0.066,256,1.155,261,1.777,273,0.932,280,1.443,281,1.543,282,1.665,284,1.592,286,1.21,289,1.665,290,1.665,291,1.454,292,1.454,293,1.454,297,0.886,307,5.269,315,1.734,326,1.537,352,1.327,447,0.866,579,0.006,580,0.006,593,4.471,598,1.692,601,1.734,655,1.919,691,1.025,777,0.66,778,1.612,814,3.24,909,0.929,961,1.4,965,1.537,980,1.777,1038,1.822,1043,1.307,1075,1.734,1085,1.822,1098,1.743,1259,1.777,1260,2.023,1356,3.107,1357,2.023,1358,2.023,1359,2.636,1360,2.023,1361,2.023,1362,1.87,1363,2.023,1364,1.734,1365,2.023,1366,2.799,1367,3.334,1368,2.023,1369,1.87,1370,2.023,1371,1.777,1372,2.023,1373,2.023,1374,1.777,1375,2.636,1376,1.87,1377,1.87,1378,2.023,1379,1.574,1380,2.023,1381,1.822,1382,2.023,1383,1.822,1384,2.023,1385,1.822,1386,2.023,1387,1.822,1388,2.023,1389,2.023,1390,1.822,1391,2.023,1392,1.734,1393,2.023,1394,2.023,1395,2.023,1396,1.777,1397,1.822,1398,2.023,1399,1.822,1400,2.023,1401,1.87,1402,2.023,1403,1.651,1404,1.537,1405,2.023,1406,1.537,1407,2.023,1408,1.777,1409,2.023,1410,1.822,1411,2.023,1412,1.777,1413,2.023,1414,1.822,1415,2.023,1416,1.651,1417,2.023,1418,1.651,1419,2.636,1420,1.651,1421,2.023,1422,2.642,1423,2.023,1424,1.651,1425,2.023,1426,1.651,1427,1.777,1428,2.023,1429,1.822,1430,2.023,1431,1.777,1432,2.023,1433,1.537,1434,2.023,1435,1.777,1436,1.97,1437,2.023,1707,5.936,1712,5.936,1728,6.996,1779,7.474,1780,5.156,1781,6.719,1782,6.719,1783,5.327,1784,5.156,1785,5.936,1786,6.719,1787,5.156]],["title/modules/TsConfirmationModule.html",[906,0.581,923,3.114]],["body/modules/TsConfirmationModule.html",[2,0.108,4,0.082,5,0.043,6,0.043,16,0.009,38,0.191,194,0.189,236,0.129,254,0.063,257,1.872,259,0.68,306,2.274,579,0.007,580,0.007,614,1.457,734,1.159,906,1.013,908,1.708,909,1.159,910,1.831,918,4.594,923,6.488,947,2.247,950,2.247,953,3.444,1026,2.356,1027,1.918,1088,4.291,1089,3.321,1366,3.208,1367,2.333,1422,3.272,1738,5.685,1743,5.685,1788,5.685,1789,5.685,1790,6.435,1791,5.685,1792,6.435,1793,6.819,1794,7.718,1795,7.718]],["title/components/TsCopyComponent.html",[86,0.403,1369,1.605]],["body/components/TsCopyComponent.html",[2,0.055,4,0.042,5,0.033,6,0.058,10,0.493,11,0.77,15,0.93,16,0.009,19,2.149,31,2.164,33,3.08,37,1.115,38,0.123,47,1.222,49,0.839,50,1.059,52,1.613,63,0.827,64,1.115,69,0.941,72,0.596,73,0.784,76,1.572,85,1.194,86,0.748,97,3.117,101,1.217,118,2.811,127,1.308,132,1.205,133,2.201,140,1.202,143,1.278,145,2.479,146,1.01,150,2.078,152,2.426,154,2.629,160,1.268,165,1.318,172,1.301,175,1.401,181,2.616,190,1.882,191,0.716,194,0.097,199,4.126,202,0.732,203,1.034,208,1.771,223,1.698,224,1.719,226,2.248,227,1.334,228,1.334,232,1.059,236,0.049,238,1.979,249,1.112,251,1.577,254,0.064,261,1.14,264,1.973,265,1.194,266,2.398,267,1.616,268,1.477,273,0.911,274,2.669,279,1.278,280,1.412,281,1.501,282,1.221,284,1.167,286,0.887,291,1.066,292,1.066,293,1.066,297,1.014,300,4.23,301,2.456,311,1.468,314,2.543,315,1.112,320,2.772,326,0.986,349,0.802,374,1.034,422,1.771,445,2.594,448,2.739,467,0.908,468,3.278,478,3.724,479,1.899,490,3.117,511,4.803,559,1.987,579,0.005,580,0.005,588,1.136,598,1.085,601,1.112,614,1.332,625,1.504,639,3.691,691,0.751,697,2.139,702,2.093,760,3.038,777,0.753,778,1.034,784,2.213,805,4.416,811,5.223,820,1.839,850,1.54,851,1.987,896,1.545,909,0.596,961,0.899,965,2.505,980,1.14,1004,1.562,1005,1.708,1038,1.169,1043,0.839,1046,1.434,1051,3.466,1056,4.352,1057,1.498,1058,3.278,1075,1.112,1079,4.886,1085,1.169,1098,1.278,1107,1.298,1259,1.14,1260,1.298,1319,3.466,1339,3.406,1355,1.264,1356,2.559,1357,1.298,1358,1.298,1359,1.933,1360,1.298,1361,1.298,1362,1.2,1363,1.298,1364,1.112,1365,1.298,1366,1.169,1367,1.2,1368,1.298,1369,2.65,1370,1.298,1371,1.14,1372,1.298,1373,1.298,1374,1.14,1375,1.933,1376,1.2,1377,1.2,1378,1.298,1379,1.01,1380,1.298,1381,1.169,1382,1.298,1383,1.169,1384,1.298,1385,1.169,1386,1.298,1387,1.169,1388,1.298,1389,1.298,1390,1.169,1391,1.298,1392,1.112,1393,1.298,1394,1.298,1395,1.298,1396,1.14,1397,1.169,1398,1.298,1399,1.169,1400,1.298,1401,1.2,1402,1.298,1403,1.059,1404,0.986,1405,1.298,1406,0.986,1407,1.298,1408,1.14,1409,1.298,1410,1.169,1411,1.298,1412,1.14,1413,1.298,1414,1.169,1415,1.298,1416,1.059,1417,1.298,1418,1.059,1419,1.933,1420,1.059,1421,1.298,1422,1.169,1423,1.298,1424,1.059,1425,1.298,1426,1.059,1427,1.14,1428,1.298,1429,1.169,1430,1.298,1431,1.14,1432,1.298,1433,0.986,1434,1.298,1435,1.14,1436,1.264,1437,1.298,1545,4.803,1667,2.976,1683,2.376,1715,2.669,1726,2.923,1796,3.308,1797,7.571,1798,4.926,1799,4.926,1800,4.926,1801,7.95,1802,5.26,1803,4.926,1804,6.521,1805,4.926,1806,5.886,1807,5.886,1808,3.308,1809,4.748,1810,4.926,1811,3.308,1812,3.308,1813,4.926,1814,3.308,1815,3.308,1816,4.926,1817,3.308,1818,4.926,1819,4.926,1820,3.308,1821,3.466,1822,3.974,1823,3.308,1824,3.308,1825,3.974,1826,4.926,1827,3.308,1828,4.926,1829,3.308,1830,2.231,1831,3.974,1832,4.352,1833,3.308,1834,4.926,1835,3.308,1836,3.308,1837,2.923,1838,3.308,1839,4.926,1840,3.308,1841,3.308,1842,4.926,1843,2.923,1844,3.308,1845,2.923,1846,3.308,1847,2.327,1848,3.308,1849,3.308,1850,3.308,1851,3.308,1852,3.308,1853,4.926,1854,2.669,1855,3.308,1856,3.308,1857,3.308,1858,3.308,1859,2.669,1860,3.308,1861,3.308,1862,3.308,1863,3.308,1864,4.926,1865,3.308,1866,3.308,1867,3.308,1868,3.308,1869,3.308,1870,3.308,1871,3.974,1872,2.669,1873,3.308,1874,3.308,1875,2.923,1876,2.201,1877,3.308,1878,3.308]],["title/modules/TsCopyModule.html",[906,0.581,924,3.114]],["body/modules/TsCopyModule.html",[2,0.109,4,0.082,5,0.044,6,0.044,16,0.009,38,0.191,194,0.19,236,0.129,254,0.063,257,1.877,259,0.685,306,2.291,579,0.007,580,0.007,614,1.467,734,1.167,906,1.018,908,1.72,909,1.167,910,1.844,924,6.494,928,3.917,944,5.16,947,2.257,950,2.257,968,3.232,990,4.56,1026,2.366,1027,1.932,1088,4.309,1089,3.345,1369,3.359,1443,5.808,1444,3.126,1879,5.726,1880,5.726,1881,6.482,1882,5.726,1883,6.482,1884,7.752]],["title/classes/TsDateAdapter.html",[254,0.043,1885,3.317]],["body/classes/TsDateAdapter.html",[2,0.092,4,0.07,5,0.037,6,0.055,10,0.821,14,2.159,15,0.839,16,0.009,38,0.147,47,1.312,49,1.779,52,1.323,63,1.178,64,0.841,72,1.463,104,1.9,127,1.862,134,2.659,140,1.497,144,1.569,157,1.949,160,1.358,236,0.103,248,2.091,254,0.069,256,0.948,273,0.962,295,1.779,297,0.863,311,1.456,403,2.497,473,3.277,479,2.365,535,2.951,574,4.448,579,0.007,580,0.007,588,1.489,635,1.996,645,3.568,777,1.039,895,1.95,961,2.539,1004,2.048,1046,2.043,1323,4.448,1324,4.328,1444,2.659,1503,4.439,1735,5.257,1830,3.176,1885,5.257,1886,7.174,1887,4.871,1888,5.257,1889,4.935,1890,7.716,1891,7.015,1892,4.882,1893,7.015,1894,5.514,1895,8.121,1896,7.015,1897,7.015,1898,7.015,1899,7.716,1900,5.514,1901,4.448,1902,7.015,1903,5.514,1904,6.198,1905,3.277,1906,4.448,1907,3.879,1908,6.198,1909,6.03,1910,4.935,1911,6.03,1912,7.572,1913,6.085,1914,4.871,1915,4.871,1916,4.871,1917,5.514,1918,5.514,1919,5.514,1920,5.514,1921,5.514,1922,5.514,1923,5.514]],["title/pipes/TsDatePipe.html",[604,1.691,1924,3.114]],["body/pipes/TsDatePipe.html",[2,0.105,4,0.079,5,0.042,6,0.051,15,0.824,16,0.009,38,0.158,47,1.263,72,1.47,76,1.262,132,1.263,140,1.151,160,1.156,192,2.974,194,0.183,236,0.112,250,1.657,254,0.061,273,1.017,295,1.922,296,1.446,297,0.848,304,2.207,406,2.827,447,1.048,535,3.341,579,0.007,580,0.007,588,1.205,604,3.117,823,1.776,840,1.999,895,2.268,961,2.401,1004,1.657,1043,1.583,1046,1.818,1054,3.222,1324,4.562,1892,3.95,1910,5.97,1924,5.741,1925,5.515,1926,6.695,1927,4.392,1928,5.331,1929,7.681,1930,6.243,1931,5.331,1932,5.036,1933,6.243,1934,7.579,1935,7.579,1936,7.209,1937,6.113,1938,6.243,1939,6.243,1940,6.243,1941,6.243,1942,6.113,1943,6.243,1944,6.243,1945,3.95,1946,3.772,1947,3.772,1948,5.515,1949,5.515,1950,6.243]],["title/interfaces/TsDateRange.html",[0,0.726,1951,3.911]],["body/interfaces/TsDateRange.html",[0,1.026,2,0.051,3,0.953,4,0.039,5,0.021,6,0.021,10,0.454,11,0.724,15,0.681,16,0.009,18,0.773,19,0.739,20,1.597,21,1.558,29,1.521,31,2.036,33,2.802,36,1.106,37,1.76,38,0.148,47,0.834,52,1.057,63,0.941,64,1.274,72,0.549,79,1.695,83,3.249,85,1.839,86,0.692,88,2.799,91,3.243,92,3.386,97,5.677,99,1.869,101,1.158,121,2.682,123,1.594,127,0.81,128,1.574,132,1.055,135,3.803,140,1.433,143,0.791,144,0.868,157,2.212,160,1.158,165,1.432,171,2.036,172,1.289,175,0.549,182,2.047,187,1.77,188,1.97,191,0.66,194,0.09,197,3.246,198,0.848,202,0.675,205,1.051,207,0.976,208,2.48,215,1.483,226,1.77,227,1.23,228,1.23,234,2.616,236,0.068,238,2.104,246,1.175,251,1.484,254,0.055,256,1.385,259,0.49,264,1.587,265,0.739,267,1.52,268,0.616,273,0.698,279,0.791,280,0.465,281,0.76,282,0.756,284,0.722,286,0.549,291,0.66,292,0.66,293,0.66,296,0.706,297,0.95,304,2.545,311,1.337,343,2.113,344,2.113,352,1.71,374,0.953,378,6.508,381,2.48,388,1.471,403,1.381,422,2.48,439,1.301,445,1.724,446,1.574,447,1.13,475,1.977,477,2.329,479,1.96,483,1.165,490,3.546,533,3.472,538,1.301,561,1.135,579,0.004,580,0.004,585,3.083,614,1.049,625,1.414,636,1.93,645,1.34,654,3.356,655,1.135,697,2.208,706,1.818,740,1.695,777,0.39,780,1.197,784,2.211,813,1.471,823,2.376,852,3.631,853,1.381,868,1.695,872,2.932,901,4.785,961,2.548,962,2.46,994,1.765,1099,1.424,1118,4.643,1129,4.22,1136,3.622,1138,3.942,1331,1.93,1371,1.931,1379,1.414,1455,4.735,1460,2.029,1667,2.799,1733,4.093,1854,3.738,1889,3.942,1909,3.26,1911,2.145,1951,5.529,1952,2.694,1953,3.05,1954,4.093,1955,5.529,1956,4.093,1957,3.26,1958,4.634,1959,4.634,1960,1.632,1961,3.96,1962,3.05,1963,5.942,1964,6.271,1965,6.59,1966,6.271,1967,4.986,1968,4.634,1969,2.46,1970,3.472,1971,1.93,1972,2.46,1973,2.46,1974,2.932,1975,2.46,1976,3.05,1977,3.05,1978,4.634,1979,4.634,1980,2.46,1981,4.634,1982,6.259,1983,6.259,1984,4.634,1985,3.05,1986,3.05,1987,3.05,1988,3.05,1989,3.05,1990,2.029,1991,3.05,1992,3.05,1993,3.05,1994,2.285,1995,8.057,1996,3.05,1997,2.46,1998,3.05,1999,3.05,2000,3.05,2001,3.05,2002,4.634,2003,3.05,2004,6.731,2005,3.05,2006,3.05,2007,3.083,2008,4.634,2009,4.634,2010,3.05,2011,4.634,2012,3.05,2013,3.05,2014,3.05,2015,3.05,2016,3.05,2017,3.05,2018,3.05,2019,4.634,2020,3.05,2021,2.46,2022,2.932,2023,1.93,2024,1.842,2025,3.05,2026,2.694,2027,3.05,2028,3.05,2029,4.634,2030,3.05,2031,4.634,2032,3.05,2033,4.634,2034,3.05,2035,4.634,2036,3.05,2037,4.634,2038,3.05,2039,4.634,2040,3.05,2041,4.634,2042,5.049,2043,4.634,2044,3.05,2045,4.634,2046,3.05,2047,3.05,2048,3.05,2049,4.634,2050,3.05,2051,3.05,2052,4.634,2053,3.05,2054,3.05,2055,3.05,2056,3.05,2057,3.05,2058,3.05]],["title/modules/TsDateRangeModule.html",[906,0.581,925,3.114]],["body/modules/TsDateRangeModule.html",[2,0.11,4,0.084,5,0.044,6,0.044,16,0.009,38,0.189,194,0.193,236,0.13,254,0.064,257,1.89,259,0.696,306,2.327,579,0.007,580,0.007,614,1.49,734,1.186,906,1.027,908,1.748,909,1.186,910,1.873,925,6.449,929,5.179,947,2.278,950,2.278,961,2.125,962,5.311,969,4.632,1026,2.388,1027,1.963,1088,4.35,1089,3.398,1371,3.199,1952,5.816,2059,5.816,2060,5.816,2061,6.584,2062,5.816,2063,6.584,2064,7.824]],["title/injectables/TsDropProtectionService.html",[229,3.114,850,1.384]],["body/injectables/TsDropProtectionService.html",[2,0.1,4,0.076,5,0.04,6,0.059,7,5.06,10,0.888,11,1.152,15,0.802,16,0.009,37,2.006,38,0.154,76,1.616,132,0.888,143,1.547,154,2.972,160,1.22,162,4.463,165,1.767,175,1.596,194,0.175,202,1.32,203,1.864,215,1.746,229,5.184,230,4.029,236,0.088,238,2.478,254,0.058,273,0.919,297,0.96,298,3.782,311,1.576,349,2.118,467,1.359,479,1.737,501,3.804,579,0.007,580,0.007,588,1.423,635,2.096,850,2.5,1004,1.956,1046,2.432,1079,6.259,1562,3.804,1809,5.945,2065,8.742,2066,5.964,2067,8.353,2068,5.047,2069,5.964,2070,7.369,2071,5.964,2072,7.369,2073,5.964,2074,5.964,2075,5.964,2076,8.353,2077,5.964,2078,8.353,2079,5.964,2080,5.964,2081,5.964,2082,5.964]],["title/interfaces/TsFileImageDimensionContraint.html",[0,0.726,89,3.317]],["body/interfaces/TsFileImageDimensionContraint.html",[0,1.311,2,0.115,4,0.087,5,0.054,6,0.046,7,3.956,10,1.017,11,1.25,14,2.167,15,0.991,16,0.009,23,4.447,25,4.129,27,5.322,84,2.356,89,6.354,90,5.282,91,4.629,92,4.832,93,3.34,110,4.808,236,0.118,579,0.008,580,0.008,777,0.874,2083,5.513,2084,6.038,2085,6.834,2086,6.551]],["title/modules/TsFileUploadModule.html",[906,0.581,926,3.114]],["body/modules/TsFileUploadModule.html",[2,0.099,4,0.075,5,0.054,6,0.04,7,3.426,8,4.435,16,0.009,24,3.939,25,3.576,27,3.939,38,0.193,72,1.066,194,0.174,198,1.645,199,4.641,202,1.31,203,1.85,229,6.139,230,2.855,231,5.229,236,0.129,254,0.058,257,1.804,258,5.972,259,0.843,261,3.18,278,4.164,306,2.092,579,0.007,580,0.007,614,1.34,734,1.066,906,0.963,908,1.571,909,1.066,910,1.684,918,4.504,926,6.565,927,5.521,928,3.834,944,5.051,945,4.851,947,2.136,950,2.136,953,3.168,965,1.765,966,4.164,967,4.775,968,2.951,990,4.164,991,3.291,992,3.939,1026,2.239,1027,1.765,1028,4.245,1036,4.775,1088,4.078,1089,3.055,2087,5.229,2088,5.229,2089,5.229,2090,5.919,2091,5.229,2092,5.229,2093,5.919,2094,7.335,2095,7.335]],["title/interfaces/TsFileValidations.html",[0,0.726,59,3.317]],["body/interfaces/TsFileValidations.html",[0,1.031,1,5.886,2,0.078,4,0.059,5,0.059,6,0.032,7,2.7,10,0.695,11,0.983,14,2.159,15,0.91,16,0.009,22,4.712,23,3.954,24,5.735,25,5.139,26,5.567,27,5.447,33,2.223,37,1.424,38,0.166,47,0.936,49,1.183,52,1.69,59,5.329,63,0.783,65,5.355,69,1.327,72,1.583,79,2.594,80,4.712,84,2.623,87,1.991,88,3.799,90,2.819,93,1.782,95,3.799,110,5.355,140,1.403,143,2.124,150,1.391,160,1.212,169,1.494,171,2.763,172,1.236,175,1.431,225,4.733,234,1.494,236,0.093,237,3.496,244,3.496,250,1.669,254,0.046,271,1.649,273,0.582,297,0.522,304,2.477,311,1.605,343,2.44,344,2.44,352,1.405,359,2.819,375,2.594,400,2.113,412,5.072,447,1.056,467,0.86,474,1.935,479,2.477,562,5.954,564,5.954,566,5.954,579,0.007,580,0.006,635,1.327,645,2.763,654,3.546,655,1.736,690,1.458,697,2.063,767,1.935,777,0.597,866,2.179,891,2.594,894,2.408,964,3.764,1296,2.952,1508,3.496,1591,3.764,1670,5.028,1683,3.033,1825,5.072,1876,3.104,1905,2.937,2096,3.764,2097,3.764,2098,4.712,2099,3.104,2100,5.072,2101,5.072,2102,5.555,2103,5.555,2104,5.555,2105,4.122,2106,6.724,2107,4.122,2108,5.555,2109,4.122,2110,4.122,2111,4.122,2112,4.122,2113,5.555,2114,4.122,2115,4.122,2116,4.122,2117,4.122,2118,4.122,2119,4.122,2120,4.122,2121,5.555,2122,4.122,2123,4.122,2124,4.122,2125,4.122,2126,4.122,2127,4.122,2128,5.555,2129,4.122,2130,5.555,2131,4.122,2132,4.122,2133,4.122,2134,3.282,2135,4.122,2136,3.282,2137,4.122,2138,4.122,2139,4.122,2140,4.122,2141,4.122,2142,4.122,2143,4.122,2144,4.122,2145,4.122,2146,4.122,2147,4.122,2148,5.555,2149,6.283,2150,4.122,2151,4.122]],["title/directives/TsHeaderCellDefDirective.html",[691,0.675,1424,1.417]],["body/directives/TsHeaderCellDefDirective.html",[2,0.089,4,0.067,5,0.036,6,0.036,11,1.249,16,0.009,18,1.341,19,1.281,38,0.143,45,1.734,47,1.017,52,0.997,63,1.342,64,1.263,85,1.281,91,3.06,93,2.609,140,0.975,153,2.323,172,1.099,175,0.952,181,2.9,194,0.155,236,0.122,245,2.132,246,1.341,248,1.576,254,0.088,259,0.912,260,3.136,268,1.38,271,1.868,273,0.851,280,1.293,281,1.311,286,1.23,295,2.15,297,0.894,304,1.539,326,2.467,349,1.655,439,2.256,447,1.27,467,0.975,497,3.05,579,0.007,580,0.007,635,1.504,691,1.316,777,0.676,840,1.693,1043,1.341,1093,2.55,1094,3.592,1098,2.238,1107,2.074,1113,4.282,1165,3.345,1263,3.648,1293,2.019,1318,4.205,1336,2.914,1406,2.383,1416,2.186,1418,1.693,1420,2.422,1424,2.422,1426,1.693,1469,3.719,1470,3.855,1471,4.205,1472,4.83,1473,5.033,1474,3.719,1475,4.804,1476,5.321,1477,5.458,1478,4.804,1479,5.321,1480,2.55,1481,4.804,1482,4.627,1483,3.719,1484,4.804,1485,5.321,1486,4.804,1487,3.719,1488,4.804,1489,3.405,1490,4.804,1491,3.06,1492,3.719,1493,3.719,1494,3.517,1495,4.804,1496,3.719,1497,4.543,1498,3.719,1499,4.378,1500,2.469,1501,3.719,1502,2.469,1503,3.345]],["title/directives/TsHeaderCellDirective.html",[691,0.675,1426,1.417]],["body/directives/TsHeaderCellDirective.html",[2,0.088,4,0.067,5,0.035,6,0.046,11,1.178,15,0.571,16,0.009,18,1.332,19,1.272,38,0.142,45,1.723,47,1.012,52,0.991,63,1.339,64,1.26,85,1.272,91,3.039,93,2.597,140,0.968,153,2.307,172,1.095,175,0.946,181,3.012,194,0.154,236,0.122,245,2.117,246,1.332,248,1.565,254,0.089,259,0.895,260,3.126,268,1.524,271,1.856,273,0.94,280,1.291,281,1.354,286,1.225,295,2.146,297,0.924,304,1.529,326,2.462,349,1.827,439,2.241,447,1.266,467,1.253,497,2.742,579,0.006,580,0.007,588,1.014,635,1.494,691,1.314,777,0.672,840,1.681,1004,1.394,1043,1.332,1093,2.532,1094,3.588,1098,2.234,1107,2.06,1113,4.265,1165,3.322,1263,3.636,1293,2.006,1318,4.192,1336,3.217,1406,2.248,1416,2.177,1418,1.681,1420,2.414,1424,2.177,1426,2.177,1469,3.694,1470,3.636,1471,3.78,1472,4.555,1473,4.524,1474,3.694,1475,4.783,1476,5.304,1477,5.581,1478,4.783,1479,5.304,1480,2.532,1481,3.694,1482,4.78,1483,4.783,1484,4.783,1485,5.304,1486,4.783,1487,3.694,1488,5.304,1489,3.39,1490,4.783,1491,3.039,1492,3.694,1493,3.694,1494,3.494,1495,4.783,1496,3.694,1497,4.524,1498,3.694,1499,4.364,1500,2.453,1501,3.694,1502,2.453,1503,3.322,2152,5.251]],["title/components/TsHeaderRowComponent.html",[86,0.403,1374,1.526]],["body/components/TsHeaderRowComponent.html",[2,0.08,4,0.061,5,0.043,6,0.032,11,1.287,15,0.518,16,0.009,38,0.133,50,1.526,64,1.283,69,1.355,72,0.858,73,1.129,86,0.75,104,2.198,175,1.295,179,1.181,191,1.031,194,0.14,223,2.198,224,1.318,232,1.526,236,0.113,254,0.085,256,1.376,259,0.812,260,2.645,261,1.642,268,1.664,273,0.896,280,1.441,281,1.539,286,1.295,289,1.782,290,1.782,291,1.555,292,1.555,293,1.555,295,2.029,315,1.602,326,2.548,349,1.742,447,1.071,579,0.006,580,0.006,598,1.563,601,1.602,635,1.814,691,1.221,777,0.61,778,1.489,784,1.814,840,2.042,909,0.858,961,1.294,965,1.42,980,1.642,1005,3.962,1038,1.684,1043,1.208,1075,1.602,1085,1.684,1093,4.284,1094,3.096,1098,2.288,1113,3.357,1259,1.642,1260,1.87,1336,3.067,1356,3.012,1357,1.87,1358,1.87,1359,2.502,1360,1.87,1361,1.87,1362,1.728,1363,1.87,1364,1.602,1365,1.87,1366,1.684,1367,1.728,1368,1.87,1369,1.728,1370,1.87,1371,1.642,1372,1.87,1373,1.87,1374,2.646,1375,2.502,1376,1.728,1377,1.728,1378,1.87,1379,1.454,1380,1.87,1381,1.684,1382,1.87,1383,1.684,1384,1.87,1385,1.684,1386,1.87,1387,1.684,1388,1.87,1389,1.87,1390,1.684,1391,1.87,1392,1.602,1393,1.87,1394,1.87,1395,1.87,1396,2.198,1397,1.684,1398,1.87,1399,1.684,1400,1.87,1401,1.728,1402,1.87,1403,1.526,1404,1.42,1405,1.87,1406,2.143,1407,1.87,1408,1.642,1409,1.87,1410,1.684,1411,1.87,1412,1.642,1413,1.87,1414,1.684,1415,1.87,1416,1.526,1417,1.87,1418,1.526,1419,2.502,1420,1.526,1421,1.87,1422,1.684,1423,1.87,1424,1.526,1425,1.87,1426,1.526,1427,2.478,1428,1.87,1429,1.684,1430,1.87,1431,2.478,1432,1.87,1433,1.42,1434,1.87,1435,1.642,1436,1.82,1437,1.87,1470,3.076,1471,3.545,1480,2.298,1482,4.632,1489,3.18,1500,2.979,1502,2.979,1830,2.888,2153,3.57,2154,5.386,2155,5.386,2156,4.779,2157,4.783,2158,5.996,2159,5.386,2160,4.779,2161,5.386,2162,4.487,2163,3.853,2164,4.779,2165,4.035,2166,4.779,2167,3.57,2168,3.352,2169,3.352,2170,3.57,2171,3.57,2172,3.57]],["title/directives/TsHeaderRowDefDirective.html",[691,0.675,1427,1.526]],["body/directives/TsHeaderRowDefDirective.html",[2,0.095,4,0.072,5,0.038,6,0.038,11,1.37,15,0.617,16,0.009,38,0.149,64,1.337,86,0.712,104,2.695,175,1.287,179,1.406,191,1.227,194,0.167,236,0.121,254,0.087,256,1.454,259,0.894,260,2.962,268,1.658,280,1.29,281,1.345,286,1.287,289,1.771,290,1.771,291,1.545,292,1.545,293,1.545,295,2.081,326,2.613,349,1.731,447,1.199,579,0.007,580,0.007,635,2.032,691,1.252,777,0.726,784,2.032,840,2.287,1005,4.235,1043,1.439,1093,4.393,1094,3.411,1098,2.338,1113,3.336,1336,3.048,1374,1.955,1396,1.955,1406,2.331,1427,2.695,1431,2.462,1470,3.771,1471,4.346,1480,2.736,1482,4.749,1489,3.561,1500,3.336,1502,3.336,1830,3.234,2153,4.251,2154,5.352,2155,5.352,2156,4.251,2157,4.753,2158,5.858,2159,5.858,2160,5.352,2161,5.858,2162,5.5,2163,4.723,2164,5.858,2165,4.52,2166,5.352,2167,4.251,2168,3.991,2169,3.991,2170,4.251,2171,4.251,2172,4.251]],["title/components/TsIconButtonComponent.html",[86,0.403,1376,1.605]],["body/components/TsIconButtonComponent.html",[2,0.073,3,1.368,4,0.056,5,0.041,6,0.057,10,0.651,14,1.492,15,0.925,16,0.009,18,1.11,19,1.459,20,2.075,21,2.024,37,1.558,38,0.126,49,1.526,50,1.401,52,1.136,63,0.735,64,1.255,69,1.245,72,1.084,73,1.037,76,1.57,85,1.667,86,0.75,101,1.423,118,2.428,120,2.825,127,1.598,132,1.103,145,4.511,146,1.336,160,1.131,171,2.645,172,1.166,175,1.084,179,1.085,181,2.818,182,2.06,188,2.06,191,0.947,194,0.129,215,1.037,223,2.075,224,1.245,232,1.401,236,0.064,249,1.471,251,2.203,254,0.073,256,1.274,261,1.508,264,1.879,265,1.459,266,1.975,267,1.975,268,1.216,273,0.969,279,1.562,280,1.433,281,1.53,282,1.492,284,1.426,286,1.084,289,1.492,290,1.492,291,1.302,292,1.302,293,1.302,297,0.998,311,0.826,315,1.471,326,1.305,352,0.864,445,2.24,447,1.011,467,1.11,549,2.259,579,0.006,580,0.006,588,0.845,598,1.436,601,1.471,624,2.645,691,0.918,706,2.7,777,0.56,778,1.368,780,2.7,784,1.712,794,2.569,813,2.903,909,0.788,953,2.342,961,1.189,965,2.646,966,5.896,980,1.508,1004,1.598,1038,1.547,1043,1.11,1047,3.079,1057,1.982,1058,5.171,1063,3.53,1075,1.471,1085,1.547,1098,1.562,1259,1.508,1260,1.717,1339,3.983,1355,1.672,1356,2.908,1357,1.717,1358,1.717,1359,2.362,1360,1.717,1361,1.717,1362,1.587,1363,1.717,1364,1.471,1365,1.717,1366,1.547,1367,1.587,1368,1.717,1369,1.587,1370,1.717,1371,1.508,1372,1.717,1373,1.717,1374,1.508,1375,2.362,1376,2.687,1377,1.587,1378,1.717,1379,1.336,1380,1.717,1381,1.547,1382,1.717,1383,1.547,1384,1.717,1385,1.547,1386,1.717,1387,1.547,1388,1.717,1389,1.717,1390,1.547,1391,1.717,1392,1.471,1393,1.717,1394,1.717,1395,1.717,1396,1.508,1397,1.547,1398,1.717,1399,1.547,1400,1.717,1401,1.587,1402,1.717,1403,1.401,1404,1.305,1405,1.717,1406,1.305,1407,1.717,1408,1.508,1409,1.717,1410,1.547,1411,1.717,1412,1.508,1413,1.717,1414,1.547,1415,1.717,1416,1.401,1417,1.717,1418,1.401,1419,2.362,1420,1.401,1421,1.717,1422,1.547,1423,1.717,1424,1.401,1425,1.717,1426,1.401,1427,1.508,1428,1.717,1429,1.547,1430,1.717,1431,1.508,1432,1.717,1433,1.305,1434,1.717,1435,1.508,1436,1.672,1437,1.717,1457,3.637,1830,1.982,2173,7.403,2174,4.376,2175,6.02,2176,6.02,2177,6.02,2178,6.02,2179,7.771,2180,6.268,2181,6.881,2182,4.376,2183,3.826,2184,6.017,2185,4.376,2186,6.017,2187,4.376,2188,4.376,2189,4.376,2190,4.376,2191,6.02,2192,4.376,2193,4.376,2194,6.02,2195,4.376,2196,6.881,2197,4.376,2198,4.376,2199,2.912,2200,4.376]],["title/modules/TsIconButtonModule.html",[906,0.581,927,2.801]],["body/modules/TsIconButtonModule.html",[2,0.11,4,0.083,5,0.044,6,0.044,16,0.009,38,0.19,194,0.192,236,0.13,254,0.064,257,1.886,259,0.693,579,0.007,580,0.007,614,1.483,734,1.18,906,1.024,908,1.738,909,1.18,910,1.863,927,5.796,928,3.927,947,2.271,950,2.271,965,2.325,966,4.607,968,3.265,1026,2.381,1027,1.952,1077,5.844,1078,4.907,1080,6.891,1376,3.363,1443,5.844,1444,3.159,2173,5.786,2201,5.786,2202,5.786,2203,6.549,2204,5.786,2205,6.549]],["title/components/TsIconComponent.html",[86,0.403,1377,1.605]],["body/components/TsIconComponent.html",[2,0.067,3,1.249,4,0.051,5,0.044,6,0.058,10,0.595,11,0.883,15,0.906,16,0.009,18,1.013,19,0.968,20,1.947,21,2.395,23,2.221,32,2.413,36,1.448,38,0.163,45,1.853,50,2.407,52,1.593,63,0.948,64,1.224,69,1.136,72,1.18,73,0.946,76,1.142,84,1.377,85,0.968,86,0.759,95,2.413,101,1.355,127,1.499,128,2.062,132,1.162,140,0.736,144,1.136,146,2.174,160,1,165,1.142,172,1.035,175,1.283,179,0.99,191,0.864,192,1.567,194,0.117,202,0.884,205,1.377,207,1.279,223,1.947,224,1.168,226,2.503,227,1.611,228,1.611,232,1.279,236,0.097,238,2.203,248,2.484,249,1.343,250,1.06,251,1.279,254,0.074,256,0.971,261,1.377,264,1.806,265,1.821,266,1.853,267,2.337,268,1.142,273,1.075,279,1.465,280,1.427,281,1.525,282,1.4,284,1.338,286,1.017,289,1.4,290,1.4,291,1.222,292,1.222,293,1.222,297,0.996,304,2.074,306,2.316,311,1.418,315,1.343,320,2.439,326,1.191,388,1.927,445,3.1,446,2.916,467,0.736,579,0.005,580,0.005,588,1.265,598,1.311,601,1.343,615,2.138,691,0.862,777,0.723,778,1.249,814,1.927,909,0.72,961,1.085,965,2.765,980,1.377,1004,1.739,1038,1.412,1043,1.013,1055,2.138,1057,1.809,1075,1.343,1085,1.412,1098,1.465,1259,1.377,1260,1.567,1293,2.981,1333,2.658,1339,3.793,1342,2.221,1355,2.158,1356,2.795,1357,1.567,1358,1.567,1359,2.216,1360,1.567,1361,1.567,1362,1.448,1363,1.567,1364,1.343,1365,1.567,1366,1.412,1367,1.448,1368,1.567,1369,1.448,1370,1.567,1371,1.377,1372,1.567,1373,1.567,1374,1.377,1375,2.216,1376,1.448,1377,2.583,1378,1.567,1379,1.219,1380,1.567,1381,1.412,1382,1.567,1383,1.412,1384,1.567,1385,1.412,1386,1.567,1387,1.412,1388,1.567,1389,1.567,1390,1.412,1391,1.567,1392,1.343,1393,1.567,1394,1.567,1395,1.567,1396,1.377,1397,1.412,1398,1.567,1399,1.412,1400,1.567,1401,1.448,1402,1.567,1403,1.279,1404,1.191,1405,1.567,1406,1.191,1407,1.567,1408,1.377,1409,1.567,1410,1.412,1411,1.567,1412,1.377,1413,1.567,1414,1.412,1415,1.567,1416,1.279,1417,1.567,1418,1.279,1419,2.216,1420,1.279,1421,1.567,1422,1.412,1423,1.567,1424,1.279,1425,1.567,1426,1.279,1427,1.377,1428,1.567,1429,1.412,1430,1.567,1431,1.377,1432,1.567,1433,1.191,1434,1.567,1435,1.377,1436,1.526,1437,1.567,1456,1.992,1460,3.759,1494,5.544,1830,1.809,1854,3.222,2206,3.222,2207,6.553,2208,3.574,2209,5.649,2210,5.649,2211,5.649,2212,7.124,2213,6.553,2214,8.332,2215,6.553,2216,3.995,2217,7.124,2218,6.063,2219,5.649,2220,4.61,2221,5.649,2222,5.649,2223,3.995,2224,5.649,2225,3.995,2226,6.294,2227,3.995,2228,3.995,2229,3.995,2230,3.995,2231,3.995,2232,3.995,2233,3.995,2234,3.995,2235,2.658,2236,4.557,2237,3.995,2238,3.529,2239,2.993,2240,3.995,2241,4.233,2242,3.995,2243,3.995,2244,3.995,2245,3.995,2246,2.81,2247,3.529,2248,3.529,2249,3.995,2250,6.063,2251,4.233,2252,4.557,2253,3.995,2254,5.649,2255,3.995,2256,3.995,2257,3.995]],["title/modules/TsIconModule.html",[906,0.581,928,1.945]],["body/modules/TsIconModule.html",[2,0.113,4,0.085,5,0.045,6,0.045,16,0.009,38,0.185,194,0.198,236,0.131,254,0.066,257,1.907,259,0.711,579,0.008,580,0.008,614,1.522,734,1.211,906,1.04,908,1.785,909,1.211,910,1.913,928,3.989,947,2.307,950,2.307,1026,2.418,1027,2.005,1377,3.374,2247,5.941,2258,5.941,2259,5.941,2260,5.941,2261,6.725,2262,7.923,2263,7.923]],["title/classes/TsImageDimensions.html",[254,0.043,2098,3.317]],["body/classes/TsImageDimensions.html",[2,0.113,4,0.086,5,0.046,6,0.059,7,5.037,10,1.003,11,1.24,14,2.291,15,0.917,16,0.009,24,4.484,25,4.071,90,5.434,93,3.391,101,1.393,152,2.508,172,1.306,236,0.099,254,0.083,273,0.84,297,0.943,467,1.462,579,0.008,580,0.008,588,1.301,777,0.862,1004,1.789,2083,7.021,2098,5.944,2264,6.739,2265,6.739,2266,6.739,2267,6.739,2268,6.739]],["title/modules/TsInputModule.html",[906,0.581,929,2.562]],["body/modules/TsInputModule.html",[2,0.099,4,0.075,5,0.04,6,0.04,16,0.009,38,0.193,72,1.067,194,0.174,198,1.647,236,0.126,254,0.058,257,1.805,259,0.881,306,2.094,579,0.007,580,0.007,614,1.341,734,1.067,906,0.964,908,1.573,909,1.067,910,1.685,928,3.835,929,5.323,945,4.852,946,5.273,947,2.137,950,2.137,961,1.609,968,2.954,991,3.294,992,3.942,997,4.168,1026,2.24,1027,1.766,1028,4.248,1029,4.883,1088,4.08,1089,3.058,1379,2.843,1444,2.857,1612,4.44,1888,4.44,1907,5.163,2246,4.168,2269,5.234,2270,5.234,2271,5.234,2272,5.925,2273,5.234,2274,5.925,2275,5.61,2276,5.925,2277,7.339,2278,5.925,2279,7.339,2280,4.779,2281,5.92,2282,7.339,2283,7.339]],["title/components/TsLinkComponent.html",[86,0.403,1381,1.565]],["body/components/TsLinkComponent.html",[2,0.078,3,1.454,4,0.059,5,0.042,6,0.054,10,1.057,11,0.981,14,1.556,15,0.827,16,0.009,18,1.18,19,1.127,20,2.163,21,2.11,38,0.097,47,1.132,49,1.591,50,1.489,52,1.184,63,1.192,64,1.248,69,1.323,72,0.838,73,1.102,76,1.435,86,0.762,101,1.468,127,1.666,132,1.057,143,1.628,144,1.323,146,1.42,172,1.188,175,1.13,179,1.153,191,1.006,194,0.137,223,2.163,224,1.757,232,1.489,234,1.489,236,0.069,238,1.564,248,1.387,254,0.074,261,1.603,264,2.156,265,1.521,266,2.683,273,0.885,279,1.628,280,1.437,281,1.535,282,1.556,284,1.487,286,1.13,289,1.556,290,1.556,291,1.358,292,1.358,293,1.358,297,0.996,315,1.564,320,1.454,326,1.387,447,1.574,579,0.006,580,0.006,598,1.526,601,1.564,691,0.957,777,0.595,778,1.454,793,5.175,795,5.558,909,0.838,961,1.263,965,2.117,980,1.603,1038,1.644,1043,1.18,1057,2.106,1058,5.442,1075,1.564,1085,1.644,1098,1.628,1213,3.971,1259,1.603,1260,1.825,1318,2.586,1355,1.777,1356,2.983,1357,1.825,1358,1.825,1359,2.462,1360,1.825,1361,1.825,1362,1.687,1363,1.825,1364,1.564,1365,1.825,1366,1.644,1367,1.687,1368,1.825,1369,1.687,1370,1.825,1371,1.603,1372,1.825,1373,1.825,1374,1.603,1375,2.462,1376,1.687,1377,1.687,1378,1.825,1379,1.42,1380,1.825,1381,2.687,1382,1.825,1383,1.644,1384,1.825,1385,1.644,1386,1.825,1387,1.644,1388,1.825,1389,1.825,1390,1.644,1391,1.825,1392,1.564,1393,1.825,1394,1.825,1395,1.825,1396,1.603,1397,1.644,1398,1.825,1399,1.644,1400,1.825,1401,1.687,1402,1.825,1403,1.489,1404,1.387,1405,1.825,1406,1.387,1407,1.825,1408,1.603,1409,1.825,1410,1.644,1411,1.825,1412,1.603,1413,1.825,1414,1.644,1415,1.825,1416,1.489,1417,1.825,1418,1.489,1419,2.462,1420,1.489,1421,1.825,1422,1.644,1423,1.825,1424,1.489,1425,1.825,1426,1.489,1427,1.603,1428,1.825,1429,1.644,1430,1.825,1431,1.603,1432,1.825,1433,1.387,1434,1.825,1435,1.603,1436,1.777,1437,1.825,1568,3.752,1683,3.666,2238,6.716,2284,4.652,2285,6.276,2286,6.276,2287,6.276,2288,7.602,2289,7.102,2290,6.276,2291,4.652,2292,4.652,2293,4.652,2294,4.652,2295,5.544,2296,4.652,2297,4.652,2298,4.652,2299,4.652,2300,2.943]],["title/modules/TsLinkModule.html",[906,0.581,930,2.945]],["body/modules/TsLinkModule.html",[2,0.111,4,0.084,5,0.045,6,0.045,16,0.009,38,0.189,194,0.195,236,0.13,254,0.065,257,1.894,259,0.7,579,0.007,580,0.007,614,1.498,734,1.192,906,1.031,908,1.757,909,1.192,910,1.883,928,3.936,930,6.105,947,2.285,950,2.285,968,3.3,1026,2.396,1027,1.973,1381,3.282,2301,5.847,2302,5.847,2303,6.618,2304,5.847,2305,6.618,2306,6.934,2307,5.339,2308,7.849]],["title/components/TsLoadingOverlayComponent.html",[86,0.403,1383,1.565]],["body/components/TsLoadingOverlayComponent.html",[2,0.09,4,0.068,5,0.047,6,0.036,16,0.009,38,0.112,50,1.722,69,2.572,72,0.968,73,1.274,86,0.789,101,1.427,191,1.163,194,0.158,223,2.379,224,1.427,232,1.722,236,0.079,254,0.079,261,1.853,264,2.04,265,1.673,266,2.265,268,1.395,273,0.95,280,1.446,281,1.547,284,1.635,286,1.243,291,1.494,292,1.494,293,1.494,296,1.599,315,1.808,326,2.058,446,3.563,447,1.159,579,0.007,580,0.007,598,1.764,601,1.808,661,4.171,691,1.053,777,0.688,778,1.681,805,4.171,909,0.968,961,1.46,965,1.603,971,4.029,980,1.853,1038,1.9,1043,1.363,1075,1.808,1085,1.9,1098,1.791,1259,1.853,1260,2.11,1356,3.157,1357,2.11,1358,2.11,1359,2.709,1360,2.11,1361,2.11,1362,1.95,1363,2.11,1364,1.808,1365,2.11,1366,1.9,1367,1.95,1368,2.11,1369,1.95,1370,2.11,1371,1.853,1372,2.11,1373,2.11,1374,1.853,1375,2.709,1376,1.95,1377,1.95,1378,2.11,1379,1.641,1380,2.11,1381,1.9,1382,2.11,1383,2.844,1384,2.11,1385,1.9,1386,2.11,1387,1.9,1388,2.11,1389,2.11,1390,1.9,1391,2.11,1392,1.808,1393,2.11,1394,2.11,1395,2.11,1396,1.853,1397,1.9,1398,2.11,1399,1.9,1400,2.11,1401,1.95,1402,2.11,1403,1.722,1404,1.603,1405,2.11,1406,1.603,1407,2.11,1408,1.853,1409,2.11,1410,1.9,1411,2.11,1412,1.853,1413,2.11,1414,1.9,1415,2.11,1416,1.722,1417,2.11,1418,1.722,1419,2.709,1420,1.722,1421,2.11,1422,1.9,1423,2.11,1424,1.722,1425,2.11,1426,1.722,1427,1.853,1428,2.11,1429,2.844,1430,2.11,1431,1.853,1432,2.11,1433,1.603,1434,2.11,1435,1.853,1436,2.054,1437,2.11,1713,6.639,2309,4.337,2310,5.377,2311,6.099,2312,6.904]],["title/directives/TsLoadingOverlayDirective.html",[691,0.675,1429,1.565]],["body/directives/TsLoadingOverlayDirective.html",[2,0.079,4,0.06,5,0.032,6,0.059,10,0.7,11,0.988,15,0.912,16,0.009,38,0.167,47,1.269,52,1.441,63,1.282,64,1.165,69,2.334,86,0.651,101,1.477,127,1.678,132,1.186,140,1.166,144,1.799,146,1.436,154,3.08,160,1.3,163,5.081,165,1.61,169,2.287,172,1.238,181,2.759,183,5.761,186,2.962,187,2.728,194,0.138,202,1.399,203,1.47,205,1.621,207,1.506,224,0.973,236,0.069,249,1.582,254,0.046,259,0.669,265,1.14,271,2.235,273,0.89,279,1.64,280,0.965,286,1.435,296,1.464,297,0.992,311,1.692,314,3.264,352,1.249,369,3.445,374,1.976,388,2.269,467,1.166,479,1.37,483,2.917,502,3.515,503,3.167,549,3.264,579,0.006,580,0.006,588,1.379,635,1.799,661,3.82,691,1.216,777,0.809,840,2.025,850,1.976,851,2.55,971,6.537,1004,1.896,1043,1.193,1046,1.841,1047,3.309,1057,2.13,1063,3.795,1079,5.722,1123,3.795,1293,2.415,1355,1.797,1383,1.663,1429,2.235,1713,5.97,1739,6.747,1740,4.156,1809,5.761,1832,4.156,1859,3.795,2309,7.038,2311,7.406,2313,4.704,2314,6.323,2315,6.323,2316,7.637,2317,7.637,2318,6.323,2319,7.142,2320,8.384,2321,7.142,2322,7.637,2323,8.384,2324,6.323,2325,7.142,2326,6.323,2327,6.323,2328,4.889,2329,6.323,2330,6.323,2331,4.704,2332,4.704,2333,8.523,2334,4.704,2335,7.968,2336,4.704,2337,4.704,2338,4.704,2339,4.156,2340,4.704,2341,6.323,2342,4.704,2343,4.704,2344,4.704,2345,6.323,2346,4.704,2347,4.704,2348,4.704,2349,4.704,2350,4.704,2351,4.704,2352,4.704,2353,4.704,2354,4.704,2355,6.323]],["title/modules/TsLoadingOverlayModule.html",[906,0.581,931,3.114]],["body/modules/TsLoadingOverlayModule.html",[2,0.111,4,0.084,5,0.045,6,0.045,16,0.009,38,0.184,69,2.377,194,0.194,236,0.13,254,0.065,257,1.892,259,0.698,579,0.007,580,0.007,614,1.494,734,1.188,906,1.029,908,1.751,909,1.188,910,1.877,931,6.451,947,2.281,950,2.281,971,4.943,1026,2.391,1027,1.967,1383,3.222,1429,3.281,1793,6.921,2309,5.322,2339,5.828,2356,5.828,2357,5.828,2358,5.828,2359,6.597,2360,7.834]],["title/components/TsLoginFormComponent.html",[86,0.403,1385,1.565]],["body/components/TsLoginFormComponent.html",[0,0.493,2,0.05,4,0.038,5,0.031,6,0.058,10,0.448,11,0.716,14,1.377,15,0.914,16,0.009,28,1.362,29,2.286,30,2.77,36,1.662,37,1.258,38,0.14,47,1.125,50,0.963,52,1.49,63,0.505,64,1.318,69,0.855,72,1.361,73,0.712,76,1.596,85,0.729,86,0.705,88,1.817,100,1.504,101,1.149,120,1.942,123,1.304,127,1.217,132,1.24,143,1.735,144,1.304,146,0.918,149,2.77,160,0.699,162,3.335,165,1.256,169,0.963,171,1.321,172,1.255,175,1.395,182,1.727,185,2.595,188,1.727,189,3.932,190,1.751,191,0.651,194,0.088,198,0.836,215,1.834,223,1.58,224,1.285,232,0.963,234,2.948,236,0.068,246,1.163,250,1.217,251,1.99,254,0.074,256,1.4,259,0.657,261,1.037,264,2.112,265,1.111,266,2.672,268,0.926,273,0.834,279,1.189,280,1.403,281,1.489,282,1.136,284,1.086,286,0.826,291,0.992,292,0.992,293,0.992,296,1.062,297,1.011,300,3.216,311,1.426,314,1.552,315,2.465,320,1.942,326,0.896,349,0.729,352,0.594,423,4.959,439,1.956,447,1.348,448,2.549,450,3.932,467,0.845,474,1.901,479,0.876,498,2.901,502,1.672,560,1.499,563,2.001,579,0.004,580,0.004,588,0.885,598,2.924,601,1.011,614,1.788,625,2.042,690,1.433,691,0.699,697,1.504,734,0.542,752,1.741,753,1.672,767,1.901,777,0.587,778,0.94,786,3.754,787,2.77,794,1.956,818,2.77,823,2.15,850,1.433,851,1.849,852,2.141,853,2.076,896,2.141,909,0.542,946,3.754,961,0.817,965,0.896,973,6.394,980,1.037,997,2.116,1004,1.217,1005,2.366,1038,1.063,1043,0.763,1046,2.053,1057,1.362,1075,1.868,1085,1.063,1098,1.189,1099,2.141,1107,1.799,1117,4.46,1118,3.455,1259,1.037,1260,1.18,1293,1.751,1333,4.135,1355,1.149,1356,2.438,1357,1.18,1358,1.18,1359,1.799,1360,1.18,1361,1.18,1362,1.09,1363,1.18,1364,2.465,1365,1.18,1366,1.063,1367,1.09,1368,1.18,1369,1.09,1370,1.18,1371,1.037,1372,1.18,1373,1.18,1374,1.037,1375,1.799,1376,1.09,1377,1.09,1378,1.18,1379,2.152,1380,1.18,1381,1.964,1382,1.18,1383,1.063,1384,1.18,1385,2.196,1386,1.18,1387,1.063,1388,1.18,1389,1.18,1390,1.063,1391,1.18,1392,1.011,1393,1.18,1394,1.18,1395,1.18,1396,1.037,1397,1.063,1398,1.18,1399,1.063,1400,1.18,1401,1.09,1402,1.18,1403,0.963,1404,0.896,1405,1.18,1406,0.896,1407,1.18,1408,1.037,1409,1.18,1410,1.063,1411,1.18,1412,1.037,1413,1.18,1414,1.063,1415,1.18,1416,0.963,1417,1.18,1418,0.963,1419,1.799,1420,0.963,1421,1.18,1422,1.063,1423,1.18,1424,0.963,1425,1.18,1426,0.963,1427,1.037,1428,1.18,1429,1.063,1430,1.18,1431,1.037,1432,1.18,1433,0.896,1434,1.18,1435,1.037,1436,1.149,1437,1.18,1451,2.901,1491,2.653,1533,5.157,1619,5.028,1830,2.076,1960,3.923,1967,3.225,1971,2.901,1974,3.932,1997,2.426,2007,3.05,2361,6.883,2362,2.657,2363,4.374,2364,5.025,2365,5.686,2366,7.194,2367,4.05,2368,4.05,2369,4.05,2370,5.49,2371,5.49,2372,5.49,2373,5.49,2374,6.227,2375,6.227,2376,4.908,2377,5.91,2378,4.908,2379,4.908,2380,5.91,2381,5.91,2382,2.657,2383,4.482,2384,4.585,2385,3.007,2386,3.007,2387,3.007,2388,3.698,2389,5.49,2390,2.454,2391,4.05,2392,3.007,2393,3.007,2394,3.007,2395,3.225,2396,3.007,2397,4.05,2398,3.007,2399,3.435,2400,4.05,2401,3.435,2402,3.698,2403,3.007,2404,3.698,2405,4.908,2406,3.007,2407,3.007,2408,4.908,2409,3.007,2410,3.007,2411,2.901,2412,3.007,2413,4.05,2414,2.657,2415,2.426,2416,2.657,2417,2.657,2418,2.657,2419,2.657,2420,2.657,2421,4.05,2422,4.05,2423,2.657,2424,2.657,2425,2.657]],["title/modules/TsLoginFormModule.html",[906,0.581,932,3.114]],["body/modules/TsLoginFormModule.html",[2,0.102,4,0.077,5,0.041,6,0.041,16,0.009,38,0.193,194,0.179,198,1.695,236,0.127,254,0.06,257,1.828,259,0.854,306,2.155,579,0.007,580,0.007,598,2.451,614,1.38,734,1.098,906,0.981,908,1.619,909,1.098,910,1.735,918,4.537,922,5.848,929,5.087,930,5.848,932,6.581,941,5.848,946,5.31,947,2.175,950,2.175,953,3.263,956,5.387,969,4.29,970,5.387,973,4.569,987,5.387,997,4.29,1026,2.28,1027,1.818,1029,4.971,1088,4.153,1089,3.147,1385,3.25,2361,4.919,2426,5.387,2427,5.387,2428,6.098,2429,5.387,2430,6.098,2431,6.098,2432,7.47]],["title/interfaces/TsLoginFormResponse.html",[0,0.726,2415,3.571]],["body/interfaces/TsLoginFormResponse.html",[0,0.99,2,0.074,4,0.056,5,0.03,6,0.03,10,0.655,11,0.944,14,1.09,15,0.75,16,0.009,28,1.991,29,2.193,30,2.657,36,1.594,37,0.996,38,0.163,47,1.267,52,1.554,63,1.014,64,1.338,72,1.338,85,1.066,86,0.677,88,3.649,100,1.443,101,0.909,120,1.888,123,1.251,127,1.167,132,0.899,143,1.79,144,1.251,149,2.657,162,3.44,165,1.221,169,1.934,171,1.932,172,1.263,175,1.402,182,1.918,185,2.821,188,1.679,189,3.822,190,1.68,191,0.951,194,0.129,198,1.222,215,1.844,224,0.909,234,2.961,236,0.089,246,1.115,250,1.167,251,1.934,254,0.076,256,1.382,259,0.639,264,2.089,265,1.066,266,2.638,268,0.889,279,1.141,280,0.671,281,0.99,282,1.09,284,1.042,286,0.792,291,0.951,292,0.951,293,0.951,296,1.018,297,0.964,300,3.993,311,1.401,314,2.27,315,2.497,320,1.888,349,1.066,352,0.869,423,4.853,439,1.876,447,1.409,448,4.129,450,3.822,467,0.811,474,1.824,479,1.281,498,2.782,502,2.445,560,3.011,563,2.926,579,0.006,580,0.006,598,2.93,614,1.762,625,2.106,690,1.375,734,0.792,752,2.545,753,2.445,767,1.824,777,0.563,786,3.649,787,2.657,794,1.876,818,2.657,823,2.113,850,1.375,851,1.773,852,2.054,853,1.991,896,2.054,946,3.649,973,3.295,997,3.094,1046,1.759,1075,1.479,1099,2.054,1107,1.726,1117,4.365,1118,3.358,1293,1.68,1333,4.019,1364,2.32,1379,2.106,1381,1.554,1385,1.554,1491,2.545,1533,5.225,1619,4.59,1830,1.991,1960,3.692,1967,3.094,1971,2.782,1974,3.822,1997,3.547,2007,2.926,2361,3.547,2362,3.885,2363,4.927,2364,5.169,2365,4.872,2366,7.105,2367,3.885,2368,3.885,2369,3.885,2370,3.885,2371,3.885,2372,3.885,2373,3.885,2374,5.336,2375,5.336,2376,3.885,2377,3.885,2378,3.885,2379,3.885,2380,3.885,2381,5.336,2383,3.547,2388,3.547,2389,5.336,2390,2.354,2391,3.885,2395,3.094,2397,3.885,2399,3.295,2400,3.885,2401,3.295,2402,3.547,2404,3.547,2405,6.877,2408,5.336,2411,2.782,2413,3.885,2414,3.885,2415,4.872,2416,5.336,2417,3.885,2418,3.885,2419,3.885,2420,3.885,2421,5.336,2422,5.336,2423,3.885,2424,3.885,2425,3.885]],["title/interfaces/TsMask.html",[0,0.726,2433,3.571]],["body/interfaces/TsMask.html",[0,0.727,2,0.024,3,0.439,4,0.018,5,0.009,6,0.009,10,0.209,11,0.51,14,1.506,15,0.843,16,0.009,18,0.356,19,0.947,20,0.845,21,1.097,28,2.519,29,1.627,31,1.717,32,0.848,33,1.723,35,1.524,36,0.889,37,1.504,38,0.15,42,1.477,45,1.455,47,1.234,49,1.757,52,1.596,63,1.402,64,1.376,69,0.697,72,1.474,73,0.333,74,0.889,75,0.752,76,1.18,83,2.932,84,0.845,85,1.271,86,0.631,92,0.848,93,0.937,94,2.466,95,1.481,96,4.231,97,2.473,98,1.314,99,0.566,100,1.282,101,0.674,104,0.845,119,0.848,120,0.766,121,0.813,123,0.697,127,0.866,132,1.339,140,1.528,143,1.361,144,1.112,146,0.996,150,1.564,152,1.454,153,1.433,154,1.789,155,1.568,157,2.222,160,1.274,162,1.222,163,2.601,165,1.401,168,0.781,169,1.781,170,1.133,171,1.433,172,1.272,175,1.248,178,1.977,179,0.348,180,1.214,181,1.764,182,1.689,185,2.072,186,1.017,187,0.937,188,1.086,189,1.551,190,0.536,191,0.304,192,0.962,193,1.265,194,0.041,196,1.363,197,3.342,198,0.39,199,1.551,202,0.543,203,0.439,205,0.484,206,0.813,207,0.45,208,0.752,210,2.009,212,0.988,213,0.988,214,0.988,215,1.534,216,0.813,217,0.934,224,1.084,226,0.536,227,0.566,228,0.566,234,1.946,236,0.089,238,2.114,245,0.566,246,0.827,247,1.182,248,0.973,249,1.314,250,1.803,251,1.421,252,1.11,253,1.854,254,0.048,255,0.813,256,1.32,257,0.555,259,0.665,260,0.582,262,0.781,263,1.419,264,1.541,265,0.34,266,0.461,268,0.897,269,1.481,271,1.382,273,0.407,275,2.064,276,1.133,277,3.526,279,0.364,280,0.214,281,0.535,282,0.348,284,0.333,286,0.442,289,0.348,290,0.348,291,0.304,292,0.304,293,0.304,296,0.325,297,0.911,298,1.477,300,2.262,304,2.054,306,0.496,307,2.171,309,0.988,311,1.564,313,1.977,314,0.725,318,1.145,320,1.899,343,2.196,344,2.196,348,0.7,349,0.947,351,2.466,352,1.488,359,0.848,369,1.182,370,1.551,371,1.133,374,1.387,377,1.977,379,1.133,385,1.746,388,2.351,391,0.7,392,1.222,394,0.7,400,1.477,403,1.477,423,2.295,446,2.707,447,1.087,450,0.889,467,0.259,468,0.934,473,0.656,474,1.621,475,1.046,476,0.7,477,1.952,478,1.551,479,1.934,480,1.133,481,2.262,482,0.599,483,0.536,485,0.988,490,0.889,491,1.133,495,1.977,497,1.789,498,0.889,499,2.75,500,1.133,501,1.265,503,0.582,517,1.133,527,1.133,533,1.052,534,2.173,535,1.746,538,0.599,541,0.934,544,0.752,549,2.018,559,1.316,561,0.912,563,1.631,579,0.002,580,0.004,583,2.807,584,0.889,586,2.124,587,3.748,588,1.282,591,0.889,600,0.813,604,1.695,614,0.555,615,0.752,623,0.752,625,0.996,627,0.752,635,1.933,645,0.617,647,1.145,657,0.889,662,1.419,690,1.387,696,0.656,697,1.455,706,2.058,715,0.725,716,1.888,731,2.207,734,0.588,737,1.631,739,1.631,740,1.363,742,0.656,752,0.813,754,2.173,767,0.582,777,0.18,780,1.28,784,1.89,813,0.677,814,0.677,820,0.781,823,1.582,831,0.848,840,0.45,852,2.277,853,2.375,864,0.813,866,0.656,868,2.173,891,1.363,895,1.086,896,0.656,961,2.328,965,1.93,1013,1.814,1041,2.952,1046,0.95,1051,3.69,1054,0.725,1055,1.746,1062,2.632,1099,2.598,1106,0.848,1107,0.962,1112,0.889,1114,0.813,1118,1.363,1124,1.725,1129,2.173,1136,1.888,1138,2.374,1192,1.837,1206,1.725,1256,3.69,1262,0.889,1263,1.573,1273,1.837,1304,3.43,1319,2.75,1324,2.018,1331,0.889,1333,0.934,1336,1.046,1338,0.988,1342,1.363,1371,0.484,1379,1.977,1412,0.484,1444,0.677,1454,2.601,1455,2.295,1456,0.7,1467,1.977,1470,1.182,1489,0.7,1491,1.419,1500,0.656,1502,0.656,1519,0.889,1522,2.632,1539,1.888,1545,1.971,1557,1.052,1562,0.725,1582,1.052,1583,1.133,1612,1.052,1616,2.064,1617,1.725,1623,1.182,1636,0.752,1641,1.481,1645,0.988,1646,0.988,1647,1.725,1648,0.988,1666,0.934,1667,2.362,1668,0.988,1670,3.085,1671,2.75,1672,0.988,1674,0.988,1675,0.988,1677,1.725,1683,0.677,1684,3.845,1685,2.295,1687,1.551,1688,1.725,1723,3.153,1735,1.052,1822,1.133,1830,1.477,1847,0.988,1876,0.934,1885,1.837,1888,1.052,1889,4.674,1892,2.064,1905,0.656,1906,1.133,1907,1.725,1909,1.725,1911,1.725,1913,2.929,1932,1.133,1945,0.889,1946,1.481,1960,1.312,1961,2.473,1963,3.153,1964,3.579,1965,4.231,1966,3.579,1967,2.75,1969,1.133,1970,1.837,1971,1.551,1972,1.133,1973,1.133,1974,3.319,1975,1.133,1980,1.133,1990,1.631,2007,0.934,2022,1.551,2023,0.889,2024,1.971,2042,2.632,2068,0.848,2163,1.481,2165,0.889,2199,0.934,2208,0.889,2235,0.934,2236,1.133,2239,1.052,2275,1.725,2280,1.133,2281,1.977,2300,0.889,2363,1.419,2364,1.888,2390,1.746,2399,1.052,2411,2.064,2433,3.153,2434,1.052,2435,6.527,2436,3.919,2437,4.307,2438,3.453,2439,4.914,2440,4.978,2441,3.153,2442,2.882,2443,2.882,2444,2.882,2445,4.307,2446,2.166,2447,4.231,2448,1.133,2449,1.133,2450,2.882,2451,1.241,2452,0.934,2453,1.241,2454,1.241,2455,1.241,2456,1.241,2457,1.241,2458,2.166,2459,1.052,2460,1.977,2461,1.241,2462,2.166,2463,0.781,2464,1.133,2465,1.837,2466,2.882,2467,1.241,2468,1.241,2469,2.166,2470,1.977,2471,2.882,2472,1.241,2473,3.93,2474,2.295,2475,1.241,2476,1.241,2477,1.241,2478,1.241,2479,1.837,2480,4.168,2481,2.473,2482,2.166,2483,2.882,2484,2.929,2485,2.882,2486,2.166,2487,1.241,2488,1.241,2489,2.166,2490,2.929,2491,1.241,2492,2.882,2493,1.241,2494,1.241,2495,1.133,2496,1.241,2497,1.241,2498,1.241,2499,1.241,2500,1.241,2501,1.241,2502,1.241,2503,1.241,2504,1.241,2505,5.942,2506,1.241,2507,1.241,2508,1.241,2509,1.725,2510,0.988,2511,1.725,2512,1.133,2513,1.133,2514,1.241,2515,1.241,2516,1.241,2517,2.171,2518,1.241,2519,1.241,2520,1.241,2521,2.166,2522,1.241,2523,2.166,2524,2.166,2525,1.241,2526,2.166,2527,2.166,2528,1.241,2529,1.241,2530,1.241,2531,2.166,2532,2.166,2533,1.052,2534,2.882,2535,1.241,2536,2.882,2537,1.241,2538,2.166,2539,1.241,2540,1.241,2541,3.919,2542,1.241,2543,1.241,2544,1.241,2545,3.453,2546,3.153,2547,1.977,2548,1.133,2549,1.052,2550,2.166,2551,1.977,2552,1.837,2553,2.929,2554,1.133,2555,1.133,2556,1.133,2557,1.133,2558,1.133,2559,3.579,2560,1.977,2561,3.153,2562,1.133,2563,2.882,2564,1.052,2565,1.241,2566,1.241,2567,1.241,2568,1.241,2569,1.241,2570,1.241,2571,1.241,2572,3.453,2573,1.241,2574,1.241,2575,1.241,2576,1.241,2577,1.241,2578,1.241,2579,1.241,2580,1.133,2581,1.241,2582,1.241,2583,2.064,2584,1.241,2585,1.241,2586,1.241,2587,1.133,2588,1.241,2589,1.241,2590,1.241,2591,1.241,2592,1.241,2593,1.241,2594,1.241,2595,2.166,2596,1.241,2597,1.241,2598,1.241,2599,1.241,2600,2.166,2601,1.241,2602,2.166,2603,1.052,2604,1.241,2605,1.241,2606,1.052,2607,1.241,2608,1.241,2609,1.052,2610,1.241,2611,1.241,2612,2.882,2613,1.241,2614,1.133,2615,1.241,2616,3.153,2617,1.133,2618,2.166,2619,1.241,2620,1.241,2621,1.241,2622,1.241,2623,2.166,2624,1.241,2625,1.241,2626,2.882,2627,1.241,2628,1.241,2629,1.241,2630,2.166,2631,1.241,2632,1.241,2633,1.241,2634,2.166,2635,1.241,2636,1.241,2637,1.241,2638,1.241,2639,1.241,2640,1.241,2641,1.241,2642,2.166,2643,1.241,2644,1.241,2645,2.166,2646,1.241,2647,1.977,2648,1.241,2649,1.241,2650,2.166,2651,1.241,2652,1.241,2653,1.241,2654,2.882,2655,1.241,2656,1.241,2657,1.241,2658,2.166,2659,1.241,2660,1.241,2661,2.166,2662,1.241,2663,1.241,2664,1.241,2665,1.241,2666,1.241,2667,1.241,2668,2.166,2669,1.241,2670,1.241,2671,4.307,2672,3.453,2673,4.231,2674,1.241,2675,1.241,2676,1.241,2677,3.919,2678,2.882,2679,1.241,2680,1.241,2681,1.241,2682,2.166,2683,2.166,2684,1.241,2685,2.166,2686,1.241,2687,1.241,2688,1.241,2689,2.166,2690,2.882,2691,1.241,2692,1.133,2693,1.241,2694,1.133,2695,1.241,2696,1.241,2697,1.241,2698,1.241,2699,1.241,2700,1.241,2701,1.241,2702,2.166,2703,1.241,2704,1.241,2705,1.241,2706,1.241,2707,0.988,2708,1.241,2709,1.241,2710,1.551,2711,1.241,2712,1.241,2713,1.241,2714,1.133,2715,1.241,2716,1.241,2717,1.241,2718,1.241,2719,1.241,2720,1.241,2721,1.241,2722,1.241,2723,2.632,2724,2.166,2725,1.133,2726,1.241,2727,1.241,2728,1.241,2729,3.453,2730,1.241,2731,1.241,2732,1.241,2733,1.241,2734,1.241,2735,3.919,2736,1.837,2737,1.241,2738,1.241,2739,1.241,2740,1.241,2741,1.241,2742,1.241,2743,1.241,2744,1.241,2745,1.241,2746,2.166,2747,1.241,2748,1.241,2749,2.166,2750,1.241,2751,4.307,2752,1.241,2753,1.241,2754,1.241,2755,2.166,2756,1.241,2757,1.241,2758,1.241,2759,1.241,2760,4.708,2761,1.241,2762,2.166,2763,1.241,2764,1.241,2765,2.166,2766,1.241,2767,1.241,2768,1.241,2769,5.368,2770,1.241,2771,1.977,2772,1.241,2773,1.241,2774,1.241,2775,1.241,2776,2.166,2777,1.241,2778,1.837,2779,1.241,2780,1.241,2781,1.241,2782,1.241,2783,1.241,2784,1.241,2785,1.241,2786,1.241,2787,1.241,2788,1.241,2789,2.166,2790,2.166,2791,1.241,2792,2.882,2793,1.241,2794,2.166,2795,1.241,2796,2.166,2797,2.166,2798,2.166,2799,2.166,2800,1.241,2801,1.241,2802,1.241,2803,1.241,2804,2.882,2805,1.241,2806,1.241,2807,1.241,2808,1.241,2809,1.241,2810,1.241,2811,1.241,2812,1.241,2813,1.241,2814,1.241,2815,1.241,2816,1.241,2817,1.241,2818,1.241,2819,2.166,2820,2.166,2821,1.241,2822,1.241]],["title/interfaces/TsMaskCollection.html",[0,0.726,2551,3.571]],["body/interfaces/TsMaskCollection.html",[0,0.734,2,0.024,3,0.445,4,0.018,5,0.01,6,0.017,10,0.212,11,0.223,14,1.515,15,0.794,16,0.009,18,0.361,19,0.956,20,0.855,21,1.109,28,2.536,29,1.644,31,1.734,32,0.86,33,1.737,35,1.843,36,0.9,37,1.511,38,0.15,42,1.493,45,1.468,47,1.232,49,1.765,52,1.567,63,1.405,64,1.377,69,0.706,72,1.478,73,0.337,74,0.901,75,0.762,76,1.187,83,2.944,84,0.855,85,1.28,86,0.634,92,0.86,93,0.948,94,2.488,95,1.499,96,4.262,97,2.497,98,1.327,99,0.574,100,1.295,101,0.682,104,0.855,119,0.86,120,0.776,121,0.824,123,0.706,127,0.875,132,1.341,140,1.532,143,1.371,144,1.123,146,1.006,150,1.334,152,1.468,153,1.449,154,1.805,155,1.582,157,2.235,160,1.277,162,1.237,163,2.626,165,1.407,168,0.792,169,1.793,170,1.148,171,1.449,172,1.273,175,1.254,178,2.001,179,0.353,180,1.227,181,1.777,182,1.699,185,2.09,186,1.029,187,0.948,188,1.097,189,1.57,190,0.544,191,0.308,192,0.974,193,1.281,194,0.042,196,1.379,197,3.358,198,0.396,199,1.57,202,0.549,203,0.445,205,0.491,206,0.824,207,0.456,208,0.762,210,2.026,212,1.002,213,1.002,214,1.002,215,1.542,216,0.824,217,0.947,224,1.092,226,0.544,227,0.574,228,0.574,234,1.957,236,0.09,238,2.126,245,0.574,246,0.836,247,1.197,248,0.983,249,1.327,250,1.812,251,1.433,252,1.123,253,1.868,254,0.048,255,0.824,256,1.325,257,0.562,259,0.669,260,0.59,262,0.792,263,1.436,264,1.55,265,0.345,266,0.467,268,0.904,269,1.499,271,1.395,273,0.411,275,2.086,276,1.148,277,3.549,279,0.369,280,0.217,281,0.541,282,0.353,284,0.337,286,0.447,289,0.353,290,0.353,291,0.308,292,0.308,293,0.308,296,0.33,297,0.918,298,1.493,300,2.284,304,1.988,306,0.503,307,2.194,309,1.002,311,1.567,313,2.001,314,0.735,318,1.159,320,1.911,343,2.204,344,2.204,348,0.71,349,0.956,351,2.488,352,1.494,359,0.86,369,1.197,370,1.57,371,1.148,374,1.399,377,2.001,379,1.148,385,1.765,388,2.37,391,0.71,392,1.237,394,0.71,400,1.493,403,1.493,423,2.32,446,2.727,447,1.093,450,0.901,467,0.262,468,0.947,473,0.665,474,1.636,475,1.059,476,0.71,477,1.966,478,1.57,479,1.944,480,1.148,481,2.284,482,0.607,483,0.544,485,1.002,490,0.901,491,1.148,495,2.001,497,1.805,498,0.901,499,2.776,500,1.148,501,1.281,503,0.59,517,1.148,527,1.148,533,1.067,534,2.194,535,1.765,538,0.607,541,0.947,544,0.762,549,2.037,559,1.33,561,1.227,563,1.651,579,0.002,580,0.004,583,2.831,584,0.901,586,2.134,587,3.768,588,0.637,591,0.901,600,0.824,604,0.948,614,0.562,615,0.762,623,0.762,625,1.006,627,0.762,635,1.942,645,0.626,647,1.159,657,0.901,662,0.824,690,1.399,696,0.665,697,1.468,706,2.073,715,0.735,716,1.908,731,2.225,734,0.594,737,1.651,739,1.651,740,1.379,742,0.665,752,0.824,754,2.194,767,0.59,777,0.182,780,1.294,784,1.899,813,0.687,814,0.687,820,0.792,823,1.593,831,0.86,840,0.456,852,2.295,853,2.393,864,0.824,866,0.665,868,2.194,891,1.379,895,1.097,896,0.665,961,2.332,965,1.94,1013,1.833,1041,2.978,1046,0.96,1051,3.717,1054,0.735,1055,1.765,1062,2.66,1099,2.616,1106,0.86,1107,0.974,1112,0.901,1114,0.824,1118,1.379,1124,1.745,1129,2.194,1136,1.908,1138,2.395,1192,1.859,1206,1.745,1256,3.717,1262,0.901,1263,1.59,1273,1.859,1304,3.457,1319,2.776,1324,2.037,1331,0.901,1333,0.947,1336,1.059,1338,1.002,1342,1.379,1371,0.491,1379,1.987,1412,0.491,1444,0.687,1454,2.626,1455,2.32,1456,0.71,1467,2.001,1470,0.687,1489,0.71,1491,1.436,1500,0.665,1502,0.665,1519,0.901,1522,2.66,1539,1.908,1545,1.992,1557,1.067,1562,0.735,1582,1.067,1583,1.148,1612,1.067,1616,2.086,1617,1.745,1623,1.197,1636,0.762,1641,1.499,1645,1.002,1646,1.002,1647,1.745,1648,1.002,1666,0.947,1667,2.384,1668,1.002,1670,3.109,1671,2.776,1672,1.002,1674,1.002,1675,1.002,1677,1.745,1683,0.687,1684,3.868,1685,2.32,1687,1.57,1688,1.745,1723,3.183,1735,1.067,1822,1.148,1830,1.493,1847,1.002,1876,0.947,1885,1.859,1888,1.067,1889,4.697,1892,2.086,1905,0.665,1906,1.148,1907,1.745,1909,1.745,1911,1.745,1913,2.957,1932,1.148,1945,0.901,1946,1.499,1960,1.328,1961,2.497,1963,3.183,1964,3.61,1965,4.262,1966,3.61,1967,2.776,1969,1.148,1970,1.859,1971,1.57,1972,1.148,1973,1.148,1974,3.343,1975,1.148,1980,1.148,1990,1.651,2007,0.947,2022,1.57,2023,0.901,2024,1.992,2042,2.66,2068,0.86,2163,1.499,2165,0.901,2199,0.947,2208,0.901,2235,0.947,2236,1.148,2239,1.067,2275,1.745,2280,1.148,2281,2.001,2300,0.901,2363,1.436,2364,1.908,2390,1.765,2399,1.067,2411,2.086,2433,3.183,2434,1.067,2435,6.502,2436,2.192,2437,2.913,2438,1.258,2439,3.953,2440,4.401,2441,2.001,2442,2.913,2443,2.913,2444,2.913,2445,4.341,2446,2.192,2447,4.262,2448,1.148,2449,1.148,2450,2.913,2451,1.258,2452,0.947,2453,1.258,2454,1.258,2455,1.258,2456,1.258,2457,1.258,2458,2.192,2459,1.067,2460,2.001,2461,1.258,2462,2.192,2463,0.792,2464,1.148,2465,1.859,2466,2.913,2467,1.258,2468,1.258,2469,2.192,2470,2.001,2471,2.913,2472,1.258,2473,3.959,2474,2.32,2475,1.258,2476,1.258,2477,1.258,2478,1.258,2479,1.859,2480,4.196,2481,2.497,2482,2.192,2483,2.913,2484,2.957,2485,2.913,2486,2.192,2487,1.258,2488,1.258,2489,2.192,2490,2.957,2491,1.258,2492,2.913,2493,1.258,2494,1.258,2495,1.148,2496,1.258,2497,1.258,2498,1.258,2499,1.258,2500,1.258,2501,1.258,2502,1.258,2503,1.258,2504,1.258,2505,5.965,2506,1.258,2507,1.258,2508,1.258,2509,1.745,2510,1.002,2511,1.745,2512,1.148,2513,1.148,2514,1.258,2515,1.258,2516,1.258,2517,2.194,2518,1.258,2519,1.258,2520,1.258,2521,2.192,2522,1.258,2523,2.192,2524,2.192,2525,1.258,2526,2.192,2527,2.192,2528,1.258,2529,1.258,2530,1.258,2531,2.192,2532,2.192,2533,1.067,2534,2.913,2535,1.258,2536,2.913,2537,1.258,2538,2.192,2539,1.258,2540,1.258,2541,3.953,2542,1.258,2543,1.258,2544,1.258,2545,3.486,2546,3.183,2547,2.001,2548,1.148,2549,1.067,2550,2.192,2551,2.66,2552,1.859,2553,2.957,2554,1.148,2555,1.148,2556,1.148,2557,1.148,2558,1.148,2559,3.61,2560,2.001,2561,3.183,2562,1.148,2563,2.913,2564,1.067,2565,1.258,2566,1.258,2567,1.258,2568,1.258,2569,1.258,2570,1.258,2571,1.258,2572,3.486,2573,1.258,2574,1.258,2575,1.258,2576,1.258,2577,1.258,2578,1.258,2579,1.258,2580,1.148,2581,1.258,2582,1.258,2583,2.086,2584,1.258,2585,1.258,2586,1.258,2587,1.148,2588,1.258,2589,1.258,2590,1.258,2591,1.258,2592,1.258,2593,1.258,2594,1.258,2595,2.192,2596,1.258,2597,1.258,2598,1.258,2599,1.258,2600,2.192,2601,1.258,2602,2.192,2603,1.067,2604,1.258,2605,1.258,2606,1.067,2607,1.258,2608,1.258,2609,1.067,2610,1.258,2611,1.258,2612,2.913,2613,1.258,2614,1.148,2615,1.258,2616,3.183,2617,1.148,2618,2.192,2619,1.258,2620,1.258,2621,1.258,2622,1.258,2623,2.192,2624,1.258,2625,1.258,2626,2.913,2627,1.258,2628,1.258,2629,1.258,2630,2.192,2631,1.258,2632,1.258,2633,1.258,2634,2.192,2635,1.258,2636,1.258,2637,1.258,2638,1.258,2639,1.258,2640,1.258,2641,1.258,2642,2.192,2643,1.258,2644,1.258,2645,2.192,2646,1.258,2647,2.001,2648,1.258,2649,1.258,2650,2.192,2651,1.258,2652,1.258,2653,1.258,2654,2.913,2655,1.258,2656,1.258,2657,1.258,2658,2.192,2659,1.258,2660,1.258,2661,2.192,2662,1.258,2663,1.258,2664,1.258,2665,1.258,2666,1.258,2667,1.258,2668,2.192,2669,1.258,2670,1.258,2671,4.341,2672,3.486,2673,4.262,2674,1.258,2675,1.258,2676,1.258,2677,3.953,2678,2.913,2679,1.258,2680,1.258,2681,1.258,2682,2.192,2683,2.192,2684,1.258,2685,2.192,2686,1.258,2687,1.258,2688,1.258,2689,2.192,2690,2.913,2691,1.258,2692,1.148,2693,1.258,2694,1.148,2695,1.258,2696,1.258,2697,1.258,2698,1.258,2699,1.258,2700,1.258,2701,1.258,2702,2.192,2703,1.258,2704,1.258,2705,1.258,2706,1.258,2707,1.002,2708,1.258,2709,1.258,2710,1.57,2711,1.258,2712,1.258,2713,1.258,2714,1.148,2715,1.258,2716,1.258,2717,1.258,2718,1.258,2719,1.258,2720,1.258,2721,1.258,2722,1.258,2723,2.66,2724,2.192,2725,1.148,2726,1.258,2727,1.258,2728,1.258,2729,3.486,2730,1.258,2731,1.258,2732,1.258,2733,1.258,2734,1.258,2735,3.953,2736,1.859,2737,1.258,2738,1.258,2739,1.258,2740,1.258,2741,1.258,2742,1.258,2743,1.258,2744,1.258,2745,1.258,2746,2.192,2747,1.258,2748,1.258,2749,2.192,2750,1.258,2751,4.341,2752,1.258,2753,1.258,2754,1.258,2755,2.192,2756,1.258,2757,1.258,2758,1.258,2759,1.258,2760,4.738,2761,1.258,2762,2.192,2763,1.258,2764,1.258,2765,2.192,2766,1.258,2767,1.258,2768,1.258,2769,5.4,2770,1.258,2771,2.001,2772,1.258,2773,1.258,2774,1.258,2775,1.258,2776,2.192,2777,1.258,2778,1.859,2779,1.258,2780,1.258,2781,1.258,2782,1.258,2783,1.258,2784,1.258,2785,1.258,2786,1.258,2787,1.258,2788,1.258,2789,2.192,2790,2.192,2791,1.258,2792,2.913,2793,1.258,2794,2.192,2795,1.258,2796,2.192,2797,2.192,2798,2.192,2799,2.192,2800,1.258,2801,1.258,2802,1.258,2803,1.258,2804,2.913,2805,1.258,2806,1.258,2807,1.258,2808,1.258,2809,1.258,2810,1.258,2811,1.258,2812,1.258,2813,1.258,2814,1.258,2815,1.258,2816,1.258,2817,1.258,2818,1.258,2819,2.192,2820,2.192,2821,1.258,2822,1.258,2823,1.424]],["title/components/TsMenuComponent.html",[86,0.403,1387,1.565]],["body/components/TsMenuComponent.html",[2,0.056,3,1.053,4,0.043,5,0.034,6,0.059,10,0.501,11,0.78,15,0.945,16,0.009,18,0.854,19,1.21,20,2.05,21,2,29,1.68,31,1.48,33,2.483,34,2.242,37,0.763,38,0.137,44,3.541,50,1.079,52,1.507,63,0.838,64,1.258,69,0.958,72,0.607,73,0.798,75,3.184,76,1.802,83,1.358,84,1.721,86,0.694,95,2.035,98,1.133,99,2.653,101,1.452,119,3.594,120,2.445,127,0.894,132,1.21,143,1.707,144,1.42,146,1.028,150,1.004,160,1.122,165,1.329,172,1.286,175,1.325,179,0.835,181,1.133,187,2.273,190,1.907,191,0.729,194,0.099,223,1.721,224,1.23,226,2.273,227,1.358,228,1.358,232,1.079,234,2.356,236,0.097,238,1.679,248,1.488,249,1.133,250,1.953,251,1.599,253,1.765,254,0.064,256,0.858,259,0.528,261,1.161,264,1.866,265,1.21,266,2.158,267,1.638,273,0.82,275,4.655,279,1.295,280,1.413,281,1.503,282,1.238,284,1.183,286,0.899,289,1.238,290,1.238,291,1.08,292,1.08,293,1.08,296,1.156,297,1.029,311,1.388,315,1.679,326,1.961,370,2.132,374,1.86,445,2.614,447,0.999,483,2.513,561,1.253,579,0.005,580,0.005,588,0.65,589,4.185,598,1.105,601,1.133,624,1.48,625,1.524,647,2.778,663,1.68,690,2.797,691,0.762,704,3.741,731,1.525,742,3.073,767,1.397,777,0.431,778,1.053,780,2.334,784,1.42,806,4.76,853,2.261,909,0.607,961,0.915,965,2.27,980,1.161,994,1.95,1005,1.739,1038,1.191,1043,0.854,1046,1.454,1057,1.525,1075,2,1085,1.191,1094,2.013,1098,1.295,1129,1.873,1138,1.803,1208,2.035,1259,1.161,1260,1.322,1262,3.159,1263,2.408,1293,1.287,1296,4.948,1297,4.799,1319,3.512,1324,3.626,1342,1.873,1345,4.185,1355,1.287,1356,2.581,1357,1.322,1358,1.322,1359,1.959,1360,1.322,1361,1.322,1362,1.221,1363,1.322,1364,1.133,1365,1.322,1366,1.191,1367,1.221,1368,1.322,1369,1.221,1370,1.322,1371,1.161,1372,1.322,1373,1.322,1374,1.161,1375,1.959,1376,1.221,1377,1.221,1378,1.322,1379,1.028,1380,1.322,1381,1.191,1382,1.322,1383,1.191,1384,1.322,1385,1.191,1386,1.322,1387,2.325,1388,1.322,1389,1.322,1390,1.191,1391,1.322,1392,1.133,1393,1.322,1394,1.322,1395,1.322,1396,1.161,1397,1.191,1398,1.322,1399,1.191,1400,1.322,1401,1.221,1402,1.322,1403,1.079,1404,1.004,1405,1.322,1406,1.004,1407,1.322,1408,1.161,1409,1.322,1410,1.191,1411,1.322,1412,1.161,1413,1.322,1414,1.191,1415,1.322,1416,1.079,1417,1.322,1418,1.079,1419,1.959,1420,1.079,1421,1.322,1422,1.191,1423,1.322,1424,1.079,1425,1.322,1426,1.079,1427,1.161,1428,1.322,1429,1.191,1430,1.322,1431,1.161,1432,1.322,1433,1.004,1434,1.322,1435,1.161,1436,1.287,1437,1.322,1455,2.37,1456,1.68,1460,2.242,1619,3.322,1744,2.976,1821,3.512,1961,2.132,1994,2.524,2241,3.741,2300,3.159,2328,3.938,2390,1.803,2448,2.717,2449,2.717,2459,2.524,2463,1.873,2495,2.717,2824,2.976,2825,4.993,2826,4.993,2827,4.993,2828,6.579,2829,6.579,2830,6.579,2831,8.127,2832,5.949,2833,5.949,2834,5.949,2835,5.949,2836,7.025,2837,3.369,2838,5.255,2839,3.369,2840,3.369,2841,3.369,2842,5.255,2843,3.369,2844,5.255,2845,3.369,2846,3.369,2847,6.206,2848,4.411,2849,4.993,2850,3.369,2851,3.369,2852,3.369,2853,3.369,2854,6.579,2855,3.369,2856,7.358,2857,3.369,2858,7.358,2859,3.369,2860,3.369,2861,4.993,2862,3.369,2863,3.369,2864,4.993,2865,3.369,2866,2.976,2867,3.369,2868,2.976,2869,3.369,2870,3.369,2871,3.369,2872,3.369,2873,3.369,2874,3.369,2875,2.717,2876,3.369,2877,3.369,2878,2.717,2879,4.993,2880,3.369,2881,3.369,2882,3.369,2883,3.369,2884,3.369,2885,3.369]],["title/modules/TsMenuModule.html",[906,0.581,933,2.945]],["body/modules/TsMenuModule.html",[2,0.109,4,0.082,5,0.044,6,0.044,16,0.009,38,0.191,194,0.191,236,0.129,254,0.064,257,1.878,259,0.686,579,0.007,580,0.007,614,1.469,734,1.169,906,1.018,908,1.722,909,1.169,910,1.846,918,4.603,928,3.918,933,6.143,947,2.258,950,2.258,953,3.472,968,3.235,1026,2.367,1027,1.934,1077,5.812,1078,4.862,1387,3.275,2878,5.234,2886,5.732,2887,5.732,2888,6.488,2889,5.732,2890,6.488,2891,6.852,2892,7.756]],["title/interfaces/TsNavigationActionItem.html",[0,0.726,798,2.674]],["body/interfaces/TsNavigationActionItem.html",[0,1.266,2,0.059,4,0.045,5,0.024,6,0.024,10,0.524,11,0.806,14,1.666,15,0.84,16,0.009,33,1.244,35,1.644,37,1.382,38,0.128,44,4.174,45,2.002,47,1.266,49,1.704,52,1.349,62,2.409,63,0.866,64,1.025,73,0.834,77,2.571,84,2.902,85,1.733,86,0.612,87,1.502,93,1.97,100,2.002,101,0.728,104,1.213,118,2.461,120,1.908,123,1.736,127,0.934,128,1.817,132,0.768,134,2.487,140,1.568,141,1.755,143,0.913,150,1.049,152,1.31,154,1.419,157,1.244,160,1.284,165,1.51,169,1.127,172,1.235,175,0.634,179,0.872,180,2.271,181,2.052,182,1.696,184,2.127,187,1.97,188,1.433,190,1.345,191,0.762,194,0.103,202,0.779,203,1.1,210,1.594,215,1.222,224,1.637,230,1.698,236,0.114,243,1.817,246,1.308,250,1.62,253,1.244,254,0.06,256,1.049,264,1.958,265,0.853,266,2.452,268,1.358,271,1.244,273,0.837,279,0.913,280,0.537,281,0.846,282,0.872,284,0.834,286,0.634,289,0.872,290,0.872,291,0.762,292,0.762,293,0.762,295,1.548,296,0.815,297,0.904,301,2.571,306,2.157,310,1.698,311,1.457,320,1.1,343,1.537,344,1.537,348,1.755,349,1.628,351,1.957,352,1.205,374,1.1,380,4.676,381,2.76,447,1.414,448,3.393,467,0.649,477,2.271,479,1.502,482,2.604,483,1.345,497,2.461,511,2.127,512,2.76,538,2.2,560,1.755,561,2.662,579,0.005,580,0.005,586,1.1,592,1.755,602,2.037,623,1.884,624,1.547,625,2.051,645,1.547,647,2.409,654,3.566,655,1.31,658,1.884,663,3.85,690,2.236,696,2.85,697,1.692,715,1.817,731,1.594,734,1.099,742,1.644,775,4.252,776,2.227,777,0.45,778,2.414,779,3.431,780,1.381,781,2.342,782,5.138,783,5.171,784,1.467,785,2.342,786,3.116,787,2.127,788,2.342,789,3.263,790,2.342,791,3.431,792,3.116,793,4.526,794,3.552,795,3.263,796,2.227,797,2.342,798,3.687,799,3.431,800,5.196,801,2.342,802,3.263,803,1.957,804,3.431,805,2.127,806,1.817,807,2.342,808,2.342,809,2.342,810,2.342,811,2.037,812,2.342,813,2.943,814,3.605,815,2.342,816,3.431,817,2.342,818,2.127,819,3.431,820,3.736,821,2.342,822,2.342,823,1.467,824,4.061,825,3.431,826,2.342,827,2.342,828,2.342,829,2.342,830,2.342,831,2.127,832,2.342,833,3.431,834,2.342,835,2.342,836,2.342,837,3.431,838,3.431,839,4.471,840,1.127,841,3.263,842,2.342,843,2.342,844,2.342,845,2.342,846,2.342,847,2.342,848,2.342,849,2.342,850,1.1,851,1.419,852,1.644,853,1.594,854,2.342,855,3.431,856,2.342,857,2.342,858,2.342,859,3.263,860,2.342,861,2.227,862,2.342,863,3.431,864,2.037,865,2.342,866,1.644,867,2.342,868,1.957,869,2.342,870,2.342,871,2.342,872,3.263,873,2.342,874,2.342,875,3.116,876,2.342,877,2.342,878,1.884,879,2.342,880,3.431,881,3.431,882,3.431,883,3.431,884,2.985,885,2.342,886,3.431,887,4.471,888,2.342,889,2.342,890,3.431,891,3.393,892,2.342,893,2.342,894,1.817,895,1.433,896,1.644,897,2.342,898,2.342,899,2.342,900,2.342,901,1.957,902,2.342,903,2.227,904,2.342,905,2.342,2086,3.864]],["title/components/TsNavigationComponent.html",[86,0.403,778,1.384]],["body/components/TsNavigationComponent.html",[0,1.071,2,0.042,4,0.032,5,0.027,6,0.058,10,0.372,11,0.621,14,1.761,15,0.905,16,0.009,33,0.884,35,1.855,37,1.389,38,0.103,44,4.167,45,2.013,47,1.256,49,1.426,50,0.801,52,1.292,62,2.866,63,0.829,64,0.996,69,0.711,72,0.45,73,1.17,76,1.137,77,1.98,84,2.82,85,1.363,86,0.667,87,1.067,93,2.149,100,2.143,101,1.021,104,1.369,118,2.475,120,2.042,123,1.405,127,1.054,128,2.05,132,1.019,134,1.915,140,1.457,141,1.98,143,0.649,146,0.763,150,0.745,152,1.478,154,1.601,157,0.884,160,1.32,165,1.574,169,1.272,172,1.266,175,0.45,179,0.62,180,2.43,181,2.063,182,1.563,184,2.984,187,1.887,188,1.563,190,1.517,191,0.541,194,0.073,202,0.553,203,0.782,210,1.132,215,0.941,223,1.369,224,1.72,230,1.915,232,0.801,236,0.101,243,1.291,246,1.426,249,0.841,250,1.311,253,0.884,254,0.055,256,0.849,261,0.862,264,2.031,265,0.962,266,2.555,268,1.436,271,1.404,273,0.971,279,1.03,280,1.385,281,1.464,282,0.984,284,0.941,286,0.715,289,0.984,290,0.984,291,0.859,292,0.859,293,0.859,295,1.007,296,0.92,297,0.995,301,2.805,306,2.169,310,1.915,311,1.557,315,0.841,320,0.782,326,0.745,343,1.184,344,1.184,348,1.247,349,1.363,351,1.39,352,1.212,374,0.782,380,4.634,381,2.125,447,1.36,448,3.127,467,0.732,477,2.283,479,1.156,482,2.108,483,2.149,497,1.601,511,2.399,512,1.338,538,2.108,560,1.247,561,2.093,579,0.004,580,0.004,586,1.241,588,1.086,592,1.98,598,0.82,601,0.841,602,1.447,623,1.338,624,1.099,625,2.169,645,1.745,647,2.307,654,3.816,655,0.93,658,1.338,663,3.992,690,2.344,691,0.606,696,2.627,697,1.303,715,2.05,731,1.132,734,0.89,742,2.627,775,3.125,776,1.582,777,0.632,778,2.288,779,2.642,780,0.981,781,1.664,782,5.259,783,5.216,784,1.13,785,1.664,786,3.398,787,2.399,788,1.664,789,3.125,790,1.664,791,2.642,792,2.399,793,4.495,794,3.031,795,3.125,796,1.582,797,1.664,798,2.399,799,1.664,800,5.176,801,1.664,802,3.125,803,1.39,804,3.743,805,2.399,806,2.05,807,2.642,808,2.642,809,2.642,810,2.642,811,2.298,812,3.743,813,3.15,814,3.302,815,2.642,816,2.642,817,1.664,818,2.399,819,4.346,820,3.411,821,3.743,822,3.743,823,1.405,824,3.287,825,2.642,826,1.664,827,1.664,828,3.743,829,2.642,830,1.664,831,2.984,832,1.664,833,2.642,834,1.664,835,1.664,836,1.664,837,2.642,838,2.642,839,3.743,840,1.272,841,3.559,842,4.083,843,1.664,844,3.743,845,1.664,846,3.743,847,2.642,848,1.664,849,1.664,850,1.241,851,1.601,852,1.855,853,1.798,854,3.743,855,2.642,856,1.664,857,1.664,858,1.664,859,2.513,860,1.664,861,1.582,862,1.664,863,3.287,864,2.298,865,2.642,866,1.855,867,2.642,868,1.39,869,1.664,870,1.664,871,1.664,872,2.513,873,1.664,874,1.664,875,2.399,876,1.664,877,1.664,878,2.125,879,3.743,880,2.642,881,2.642,882,2.642,883,2.642,884,2.298,885,1.664,886,2.642,887,3.743,888,1.664,889,1.664,890,2.642,891,3.127,892,1.664,893,1.664,894,1.291,895,1.373,896,1.168,897,1.664,898,1.664,899,1.664,900,1.664,901,1.39,902,1.664,903,2.513,904,2.642,905,1.664,909,0.45,961,0.679,965,0.745,980,0.862,1004,1.493,1005,2.05,1038,0.884,1043,0.634,1046,1.156,1057,1.132,1075,0.841,1085,0.884,1098,1.03,1259,0.862,1260,0.981,1355,0.955,1356,2.207,1357,0.981,1358,0.981,1359,1.558,1360,0.981,1361,0.981,1362,0.907,1363,0.981,1364,0.841,1365,0.981,1366,0.884,1367,0.907,1368,0.981,1369,0.907,1370,0.981,1371,0.862,1372,0.981,1373,0.981,1374,0.862,1375,1.558,1376,0.907,1377,0.907,1378,0.981,1379,0.763,1380,0.981,1381,0.884,1382,0.981,1383,0.884,1384,0.981,1385,0.884,1386,0.981,1387,0.884,1388,0.981,1389,0.981,1390,0.884,1391,0.981,1392,0.841,1393,0.981,1394,0.981,1395,0.981,1396,0.862,1397,0.884,1398,0.981,1399,0.884,1400,0.981,1401,0.907,1402,0.981,1403,0.801,1404,0.745,1405,0.981,1406,0.745,1407,0.981,1408,0.862,1409,0.981,1410,0.884,1411,0.981,1412,0.862,1413,0.981,1414,0.884,1415,0.981,1416,0.801,1417,0.981,1418,0.801,1419,1.558,1420,0.801,1421,0.981,1422,0.884,1423,0.981,1424,0.801,1425,0.981,1426,0.801,1427,0.862,1428,0.981,1429,0.884,1430,0.981,1431,0.862,1432,0.981,1433,0.745,1434,0.981,1435,0.862,1436,0.955,1437,0.981,1652,2.209,2893,3.971,2894,3.971,2895,4.939,2896,2.501,2897,3.971,2898,2.501,2899,2.501,2900,2.501,2901,2.501,2902,2.501,2903,2.501,2904,2.501,2905,2.501,2906,2.501,2907,2.501,2908,2.501,2909,2.501,2910,2.501,2911,2.501,2912,2.501,2913,2.501,2914,2.501,2915,2.501,2916,2.501,2917,2.501,2918,2.501,2919,2.501,2920,2.501,2921,7.499,2922,3.971]],["title/interfaces/TsNavigationLinkItem.html",[0,0.726,792,2.674]],["body/interfaces/TsNavigationLinkItem.html",[0,1.264,2,0.059,4,0.044,5,0.024,6,0.024,10,0.521,11,0.802,14,1.661,15,0.776,16,0.009,33,1.236,35,1.634,37,1.377,38,0.127,44,4.177,45,1.995,47,1.314,49,1.699,52,1.346,62,2.398,63,0.862,64,1.022,73,0.829,77,2.56,84,2.927,85,1.729,86,0.61,87,2.19,93,1.961,100,1.995,101,0.723,104,1.206,118,2.452,120,1.901,123,1.46,127,0.929,128,1.806,132,0.764,134,2.476,140,1.566,141,1.744,143,0.908,150,1.043,152,1.302,154,1.411,157,1.236,160,1.283,165,1.507,169,1.12,172,1.234,175,0.63,179,0.867,180,2.263,181,2.045,182,1.69,184,2.114,187,1.961,188,1.427,190,1.336,191,0.757,194,0.103,202,0.774,203,1.094,210,1.584,215,1.216,224,1.634,230,1.687,236,0.114,243,1.806,246,1.302,250,1.614,253,1.236,254,0.06,256,1.226,264,1.954,265,0.848,266,2.447,268,1.354,271,1.236,273,0.835,279,0.908,280,0.534,281,0.842,282,0.867,284,0.829,286,0.63,289,0.867,290,0.867,291,0.757,292,0.757,293,0.757,295,1.542,296,0.81,297,0.902,301,2.56,306,2.149,310,1.687,311,1.454,320,1.094,343,1.53,344,1.53,348,1.744,349,1.623,351,1.945,352,1.201,374,1.094,380,4.669,381,2.747,447,1.426,448,3.381,467,0.645,477,2.263,479,1.495,482,2.595,483,1.336,497,2.452,511,2.114,512,1.872,538,2.19,560,1.744,561,2.655,579,0.005,580,0.005,586,1.094,592,1.744,602,2.025,623,1.872,624,1.537,625,2.045,645,1.537,647,2.398,654,3.557,655,1.302,658,1.872,663,3.843,690,2.23,696,2.84,697,1.684,715,1.806,731,1.584,734,1.095,742,1.634,775,4.239,776,2.213,777,0.448,778,2.409,779,3.416,780,1.373,781,2.328,782,5.128,783,5.184,784,1.46,785,2.328,786,3.102,787,2.114,788,2.328,789,3.248,790,2.328,791,3.416,792,3.674,793,5.104,794,3.289,795,3.848,796,3.248,797,3.416,798,3.102,799,2.328,800,5.189,801,2.328,802,3.248,803,1.945,804,3.416,805,2.114,806,1.806,807,2.328,808,2.328,809,2.328,810,2.328,811,2.025,812,2.328,813,2.933,814,3.597,815,2.328,816,3.416,817,2.328,818,2.114,819,3.416,820,3.725,821,2.328,822,2.328,823,1.46,824,4.046,825,3.416,826,2.328,827,2.328,828,2.328,829,2.328,830,2.328,831,2.114,832,2.328,833,3.416,834,2.328,835,2.328,836,2.328,837,3.416,838,3.416,839,4.458,840,1.12,841,3.248,842,2.328,843,2.328,844,2.328,845,2.328,846,2.328,847,2.328,848,2.328,849,2.328,850,1.094,851,1.411,852,1.634,853,1.584,854,2.328,855,3.416,856,2.328,857,2.328,858,2.328,859,3.248,860,2.328,861,2.213,862,2.328,863,3.416,864,2.025,865,2.328,866,1.634,867,2.328,868,1.945,869,2.328,870,2.328,871,2.328,872,3.248,873,2.328,874,2.328,875,3.102,876,2.328,877,2.328,878,1.872,879,2.328,880,3.416,881,3.416,882,3.416,883,3.416,884,2.971,885,2.328,886,3.416,887,4.458,888,2.328,889,2.328,890,3.416,891,3.381,892,2.328,893,2.328,894,1.806,895,1.427,896,1.634,897,2.328,898,2.328,899,2.328,900,2.328,901,1.945,902,2.328,903,2.213,904,2.328,905,2.328]],["title/modules/TsNavigationModule.html",[906,0.581,934,3.114]],["body/modules/TsNavigationModule.html",[2,0.109,4,0.082,5,0.044,6,0.044,16,0.009,38,0.192,194,0.191,236,0.129,254,0.064,257,1.878,259,0.686,306,2.293,579,0.007,580,0.007,614,1.469,734,1.169,778,2.896,906,1.018,908,1.722,909,1.169,910,1.846,928,3.918,934,6.435,947,2.258,950,2.258,968,3.235,1026,2.367,1027,1.934,1077,5.812,1078,4.862,1088,4.312,1089,3.349,2306,6.852,2307,5.234,2878,5.234,2891,6.852,2923,5.732,2924,5.732,2925,6.488,2926,5.732,2927,6.488,2928,7.756]],["title/interfaces/TsNavigationPayload.html",[0,0.726,802,2.801]],["body/interfaces/TsNavigationPayload.html",[0,1.265,2,0.059,4,0.045,5,0.024,6,0.024,10,0.523,11,0.804,14,1.663,15,0.861,16,0.009,33,1.819,35,1.639,37,1.747,38,0.127,44,4.173,45,1.999,47,1.265,49,1.702,52,1.348,62,2.404,63,0.864,64,1.024,73,0.831,77,2.566,84,2.901,85,1.626,86,0.611,87,1.498,93,1.966,100,1.999,101,0.726,104,1.21,118,2.706,120,1.905,123,1.464,127,0.932,128,1.812,132,0.766,134,2.482,140,1.567,141,1.75,143,0.911,150,1.046,152,1.306,154,1.415,157,1.241,160,1.284,165,1.509,169,1.124,172,1.234,175,0.632,179,0.87,180,2.267,181,2.049,182,1.694,184,2.121,187,1.966,188,1.43,190,1.341,191,0.759,194,0.103,202,0.777,203,1.097,210,1.589,215,1.219,224,1.636,230,1.693,236,0.114,243,1.812,246,1.305,250,1.617,253,1.241,254,0.06,256,1.047,264,1.956,265,0.851,266,2.45,268,1.356,271,1.241,273,0.836,279,0.911,280,0.535,281,0.844,282,0.87,284,0.831,286,0.632,289,0.87,290,0.87,291,0.759,292,0.759,293,0.759,295,1.305,296,0.813,297,0.918,301,2.566,306,2.154,310,1.693,311,1.456,320,1.097,343,1.534,344,1.534,348,1.75,349,1.626,351,1.951,352,1.203,374,1.097,380,4.673,381,2.754,447,1.413,448,3.387,467,0.647,477,2.267,479,1.499,482,2.6,483,1.341,497,2.075,511,2.121,512,1.879,538,2.196,560,2.566,561,2.497,579,0.005,580,0.005,586,1.097,592,1.75,602,2.032,623,1.879,624,1.542,625,2.048,645,1.542,647,2.404,654,3.562,655,1.306,658,3.261,663,3.847,690,2.233,696,2.846,697,1.688,715,1.812,731,2.33,734,1.098,742,1.639,775,3.855,776,2.221,777,0.449,778,2.412,779,3.424,780,1.377,781,2.336,782,5.134,783,5.169,784,1.464,785,2.336,786,3.109,787,2.121,788,2.336,789,3.256,790,2.336,791,3.424,792,3.109,793,4.521,794,3.445,795,3.256,796,2.221,797,2.336,798,3.109,799,2.336,800,5.193,801,3.424,802,3.855,803,2.861,804,3.424,805,2.121,806,1.812,807,2.336,808,2.336,809,2.336,810,2.336,811,2.032,812,2.336,813,2.939,814,3.601,815,2.336,816,3.424,817,2.336,818,2.121,819,3.424,820,3.731,821,2.336,822,2.336,823,1.464,824,4.054,825,3.424,826,2.336,827,2.336,828,2.336,829,2.336,830,2.336,831,2.121,832,2.336,833,3.424,834,2.336,835,2.336,836,2.336,837,3.424,838,3.424,839,4.465,840,1.124,841,3.256,842,2.336,843,2.336,844,2.336,845,2.336,846,2.336,847,2.336,848,2.336,849,2.336,850,1.097,851,1.415,852,1.639,853,1.589,854,2.336,855,3.424,856,2.336,857,2.336,858,2.336,859,3.256,860,2.336,861,2.221,862,2.336,863,3.424,864,2.032,865,2.336,866,1.639,867,2.336,868,1.951,869,2.336,870,2.336,871,2.336,872,3.256,873,2.336,874,2.336,875,3.109,876,2.336,877,2.336,878,1.879,879,2.336,880,3.424,881,3.424,882,3.424,883,3.424,884,2.979,885,2.336,886,3.424,887,4.465,888,2.336,889,2.336,890,3.424,891,3.387,892,2.336,893,2.336,894,1.812,895,1.43,896,1.639,897,2.336,898,2.336,899,2.336,900,2.336,901,1.951,902,2.336,903,2.221,904,2.336,905,2.336,2086,3.856]],["title/interfaces/TsPaginatorMenuItem.html",[0,0.726,2929,3.571]],["body/interfaces/TsPaginatorMenuItem.html",[0,0.658,2,0.042,3,0.792,4,0.032,5,0.017,6,0.017,10,1.024,11,0.627,14,2.24,15,0.616,16,0.009,18,0.642,19,0.614,20,1.383,21,1.349,29,2.825,33,2.762,35,1.874,37,1.487,38,0.118,44,2.974,45,0.831,47,1.232,49,2.098,52,1.532,63,1.198,64,1.262,73,2.035,75,1.356,76,1.327,77,2.484,84,2.264,85,1.373,86,0.454,87,1.081,92,4.158,97,1.603,98,1.349,101,0.524,102,2.822,104,1.383,106,3.544,120,2.442,121,3.802,123,1.612,132,1.209,134,1.222,135,1.763,140,1.211,141,3.83,143,1.292,144,2.333,152,1.493,153,1.113,157,2.988,160,1.341,165,1.327,169,1.285,171,1.763,172,1.308,175,1.021,179,0.628,180,1.853,181,0.852,182,1.716,185,1.874,188,1.385,189,2.538,191,0.548,194,0.074,202,0.561,205,0.873,206,1.466,207,0.811,210,2.565,212,1.782,213,1.782,214,1.782,215,1.943,226,1.533,227,1.021,228,1.021,236,0.059,243,2.924,246,1.017,248,1.485,250,1.504,253,2.432,254,0.049,256,0.435,264,1.864,265,0.614,266,2.341,267,1.316,268,1.007,269,1.53,270,3.907,271,1.761,273,0.988,274,2.043,275,2.538,279,0.657,280,0.386,281,0.658,282,0.628,284,0.6,286,0.456,289,0.628,290,0.628,291,0.548,292,0.548,293,0.548,296,0.929,297,0.98,301,3.431,304,0.738,311,1.42,314,1.307,320,0.792,326,1.689,343,1.689,344,1.689,348,3.753,349,0.614,351,4.185,352,1.119,359,1.53,374,1.557,380,1.466,400,1.816,445,1.493,447,0.836,467,0.467,475,1.081,477,0.942,479,2.365,482,1.081,498,1.603,499,2.822,538,1.712,561,1.493,579,0.007,580,0.004,588,0.962,589,1.782,590,1.782,624,1.113,625,1.885,647,1.874,690,0.792,697,1.634,706,1.955,715,1.307,716,1.466,737,1.685,741,1.685,742,1.183,749,5.156,753,1.408,754,1.408,777,0.324,784,1.417,796,1.603,806,4.033,813,2.402,852,1.183,853,2.565,859,3.907,866,1.183,895,1.115,896,1.874,965,1.689,994,2.322,1099,1.874,1105,1.898,1111,2.043,1121,6.714,1133,5.507,1213,5.915,1229,3.236,1232,2.043,1297,3.236,1323,2.043,1339,1.466,1342,1.408,1387,1.418,1390,1.761,1456,2,1518,2.238,1533,1.782,1545,1.53,1636,1.356,1785,2.238,1847,1.782,1872,3.236,2099,5.457,2163,1.53,2208,2.538,2251,1.898,2390,1.356,2402,2.043,2474,1.782,2929,6.303,2930,2.533,2931,6.335,2932,4.401,2933,2.533,2934,2.533,2935,2.533,2936,2.533,2937,4.981,2938,2.533,2939,5.005,2940,2.533,2941,2.238,2942,4.012,2943,2.238,2944,2.533,2945,2.533,2946,2.533,2947,2.533,2948,2.533,2949,2.533,2950,2.533,2951,2.533,2952,2.533,2953,2.533,2954,2.533,2955,2.533,2956,2.533,2957,2.533,2958,2.533,2959,2.533,2960,2.533,2961,2.533,2962,2.533,2963,2.533,2964,2.533,2965,2.043,2966,2.533,2967,2.533,2968,3.236,2969,2.533,2970,2.533,2971,4.012,2972,2.533,2973,4.012,2974,2.533,2975,5.757,2976,2.533,2977,2.533,2978,2.533,2979,2.533,2980,2.533,2981,4.012,2982,4.012,2983,2.533,2984,2.533,2985,2.533,2986,2.533,2987,2.533,2988,2.533,2989,4.012,2990,2.533,2991,6.175,2992,2.533,2993,4.012,2994,2.533,2995,2.533,2996,2.533,2997,2.533,2998,2.533,2999,2.533,3000,2.533,3001,5.666,3002,2.533,3003,6.175,3004,5.666,3005,2.533,3006,4.981,3007,4.981,3008,2.533,3009,2.533,3010,6.569,3011,2.533,3012,2.238,3013,6.175,3014,2.533,3015,4.012,3016,4.012,3017,4.012,3018,4.981,3019,2.533,3020,2.533,3021,2.533,3022,2.533,3023,2.533,3024,6.175,3025,5.666,3026,2.533,3027,2.533,3028,4.012,3029,6.882,3030,2.533,3031,2.533,3032,2.533,3033,2.533,3034,2.533,3035,2.533,3036,2.533,3037,2.533,3038,2.533,3039,2.533,3040,2.533,3041,4.012,3042,4.012,3043,2.533,3044,4.012,3045,5.803,3046,2.533,3047,2.533,3048,6.569,3049,2.533,3050,6.175,3051,4.981,3052,2.533,3053,2.533,3054,2.533,3055,2.533,3056,2.533]],["title/modules/TsPaginatorModule.html",[906,0.581,935,2.945]],["body/modules/TsPaginatorModule.html",[2,0.107,4,0.081,5,0.043,6,0.043,16,0.009,38,0.192,194,0.187,198,1.767,236,0.129,254,0.062,257,1.862,259,0.672,579,0.007,580,0.007,614,1.439,734,1.145,906,1.006,908,1.687,909,1.145,910,1.808,918,4.581,933,5.906,935,6.201,939,5.906,944,5.137,947,2.231,950,2.231,953,3.402,975,5.616,985,5.616,990,4.472,1026,2.339,1027,1.895,1028,4.434,1390,3.267,3057,5.616,3058,5.616,3059,6.357,3060,5.616,3061,6.357,3062,7.662]],["title/modules/TsPipesModule.html",[906,0.581,978,3.114]],["body/modules/TsPipesModule.html",[2,0.1,4,0.076,5,0.04,6,0.04,16,0.009,38,0.187,194,0.176,236,0.133,254,0.059,257,1.814,259,0.782,579,0.007,580,0.007,614,1.357,734,1.079,906,0.97,908,1.591,909,1.079,910,1.705,947,2.152,950,2.152,978,6.572,1026,2.256,1027,1.786,1099,3.452,1208,4.465,1924,6.479,3063,5.294,3064,5.294,3065,5.294,3066,6.9,3067,6.9,3068,6.9,3069,6.9,3070,5.993,3071,7.391,3072,6.53,3073,6.53,3074,7.391,3075,6.53,3076,6.53,3077,8.367,3078,6.53,3079,7.391,3080,6.53]],["title/classes/TsRadioChange.html",[254,0.043,3081,3.571]],["body/classes/TsRadioChange.html",[0,0.499,2,0.051,3,0.951,4,0.039,5,0.021,6,0.021,11,0.475,15,0.68,16,0.009,18,0.771,19,1.629,20,1.594,21,1.554,31,2.458,33,1.634,34,2.023,36,1.103,37,1.522,38,0.158,42,1.377,44,3.741,47,1.264,49,0.771,52,1.465,62,2.159,63,1.401,64,1.285,72,1.126,73,1.095,76,1.13,83,2.855,84,1.594,85,1.882,86,0.67,87,1.297,98,1.554,99,2.256,101,0.629,104,2.877,118,1.226,120,0.951,123,0.865,124,2.139,127,1.953,132,1.338,140,0.852,143,1.621,146,0.928,150,2.315,153,1.336,155,2.376,157,1.075,160,1.295,165,1.13,168,3.11,169,2.001,172,1.296,175,1.008,179,0.754,180,2.081,182,1.555,186,1.917,187,1.766,188,1.285,191,0.658,192,2.452,193,2.386,194,0.089,196,2.57,198,0.845,200,2.474,202,1.023,203,0.951,205,1.048,207,0.974,215,1.48,223,1.594,224,0.629,226,2.137,227,1.226,228,1.226,232,1.48,233,1.837,234,2.267,235,1.837,236,0.099,238,1.554,245,1.226,246,0.771,247,2.23,248,1.863,249,1.022,250,1.227,251,0.974,252,2.093,253,1.075,254,0.069,255,1.76,256,1.435,257,1.047,259,0.489,260,1.261,262,1.691,263,1.76,264,1.585,265,0.737,267,1.517,268,1.13,273,0.576,278,5.872,279,0.789,280,0.464,281,0.917,282,0.754,284,0.72,286,0.548,289,0.754,290,0.754,291,0.658,292,0.658,293,0.658,295,1.418,296,0.704,297,0.968,298,2.093,299,1.691,300,1.76,304,1.629,311,1.431,314,1.57,318,2.159,320,2.101,326,2.194,343,1.863,344,1.863,349,0.737,352,0.601,369,1.467,374,0.951,381,1.627,388,2.23,391,1.516,392,2.305,393,3.474,394,1.516,400,3.206,406,2.533,432,1.627,445,1.72,447,1.235,450,1.924,467,0.561,470,1.924,473,1.42,474,1.261,475,1.297,476,1.516,477,1.131,479,1.629,481,1.76,483,1.162,485,2.139,501,1.57,503,1.261,541,3.076,549,3.47,561,2.325,579,0.004,580,0.005,585,3.076,586,2.101,588,1.65,604,1.162,635,1.315,657,1.924,659,5.168,662,1.76,697,0.998,699,3.935,706,3.108,716,2.676,734,0.548,740,1.691,743,2.139,777,0.389,780,1.814,784,2.35,813,1.467,823,1.315,851,1.226,852,3.934,895,0.845,980,3.036,981,2.023,1138,2.474,1178,2.278,1293,1.162,1296,1.924,1324,1.57,1339,1.76,1355,1.162,1392,2.26,1499,3.237,1500,1.42,1502,1.42,1519,4.479,1561,1.76,1641,1.837,1683,1.467,1684,3.539,1724,3.11,1802,2.453,1831,3.729,1871,2.453,1960,1.627,1961,2.925,1974,1.924,1994,2.278,2134,2.139,2183,3.11,2218,4.512,2246,2.139,2300,2.925,2463,2.57,2533,2.278,2564,2.278,2603,2.278,2609,2.278,2778,2.278,3081,5.423,3082,2.139,3083,2.278,3084,5.939,3085,5.521,3086,4.942,3087,7.374,3088,4.942,3089,5.521,3090,4.942,3091,4.942,3092,4.942,3093,4.084,3094,4.084,3095,4.084,3096,4.084,3097,2.686,3098,4.942,3099,2.686,3100,2.686,3101,2.686,3102,3.253,3103,2.453,3104,4.084,3105,6.265,3106,4.942,3107,2.686,3108,2.686,3109,2.453,3110,2.686,3111,6.733,3112,3.253,3113,2.686,3114,2.686,3115,2.686,3116,2.278,3117,2.453,3118,2.686,3119,2.686,3120,2.686,3121,4.942,3122,2.278,3123,4.084,3124,2.686,3125,4.084,3126,2.686,3127,2.686,3128,4.084,3129,2.686,3130,5.711,3131,2.686,3132,4.084,3133,4.942,3134,2.686,3135,2.686,3136,4.084,3137,2.686,3138,2.686,3139,4.084,3140,4.084,3141,2.686,3142,2.686,3143,2.686,3144,4.084,3145,2.686,3146,2.686,3147,4.084,3148,2.686,3149,2.686,3150,4.084,3151,2.686,3152,2.686,3153,4.084,3154,2.686,3155,2.686,3156,2.686,3157,2.686,3158,2.686,3159,4.084,3160,2.686,3161,2.686,3162,2.686,3163,2.686]],["title/modules/TsRadioGroupModule.html",[906,0.581,936,3.114]],["body/modules/TsRadioGroupModule.html",[2,0.106,4,0.08,5,0.043,6,0.043,16,0.009,38,0.192,72,1.136,194,0.185,198,1.753,236,0.128,254,0.062,257,1.855,259,0.667,306,2.229,579,0.007,580,0.007,614,1.428,734,1.136,906,1.001,908,1.674,909,1.136,910,1.794,928,3.893,936,6.471,945,4.925,947,2.22,950,2.22,968,3.144,980,2.628,981,4.196,991,3.506,992,4.196,1026,2.327,1027,1.88,1028,4.413,1029,5.073,1088,4.239,1089,3.255,1392,3.123,1443,5.713,1444,3.041,3082,4.436,3109,5.087,3112,5.766,3164,5.571,3165,5.571,3166,5.571,3167,6.306,3168,5.571,3169,6.306,3170,7.625,3171,7.625]],["title/interfaces/TsRadioOption.html",[0,0.726,3105,3.571]],["body/interfaces/TsRadioOption.html",[0,0.748,2,0.05,3,0.934,4,0.038,5,0.02,6,0.031,10,0.679,11,0.865,15,0.796,16,0.009,18,0.758,19,1.704,20,1.572,21,1.534,31,2.431,33,1.612,34,1.988,36,1.083,37,1.402,38,0.158,42,1.353,44,3.801,47,1.285,49,0.758,52,1.512,62,2.13,63,1.396,64,1.28,72,1.115,73,1.08,76,1.118,83,2.835,84,1.572,85,1.91,86,0.666,87,1.275,98,1.534,99,1.839,101,0.618,104,2.867,118,1.205,120,0.934,123,0.85,124,2.102,127,1.941,132,1.336,140,0.841,143,1.607,146,0.912,150,2.304,153,1.313,155,2.357,157,1.056,160,1.291,165,1.118,168,3.076,169,1.983,172,1.293,175,0.997,179,0.74,180,2.059,182,1.538,186,1.891,187,1.742,188,1.268,191,0.646,192,2.43,193,2.354,194,0.088,196,2.536,198,0.83,200,2.441,202,1.009,203,0.934,205,1.03,207,0.957,215,1.467,223,1.572,224,0.618,226,2.114,227,1.205,228,1.205,232,1.46,233,1.805,234,2.251,235,1.805,236,0.098,238,1.534,245,1.205,246,0.758,247,2.2,248,1.846,249,1.004,250,1.469,251,0.957,252,2.065,253,1.056,254,0.065,255,1.729,256,1.43,257,1.033,259,0.482,260,1.239,262,1.661,263,1.729,264,1.57,265,0.724,267,1.496,268,1.118,273,0.568,278,5.851,279,0.775,280,0.456,281,0.907,282,0.74,284,0.708,286,0.538,289,0.74,290,0.74,291,0.646,292,0.646,293,0.646,295,1.157,296,0.692,297,0.983,298,2.065,299,1.661,300,1.729,304,1.611,311,1.423,314,1.542,318,2.13,320,2.085,326,2.39,343,1.846,344,1.846,349,0.724,352,0.59,369,1.441,374,0.934,381,1.599,388,2.2,391,1.489,392,2.274,393,3.443,394,1.489,400,3.183,406,2.505,432,1.599,445,1.697,447,1.266,450,1.89,467,0.551,470,1.89,473,1.395,474,1.239,475,1.275,476,1.489,477,1.112,479,1.611,481,1.729,483,1.141,485,2.102,501,1.542,503,1.239,541,3.035,549,3.442,561,2.616,579,0.004,580,0.005,585,3.035,586,2.085,588,1.683,604,1.141,635,1.298,657,1.89,659,5.142,662,1.729,697,0.98,699,3.892,706,3.094,716,2.64,734,0.538,740,1.661,743,2.102,777,0.382,780,1.79,784,2.425,813,1.441,823,1.298,851,1.205,852,3.921,895,0.83,980,3.029,981,3.035,1138,2.441,1178,2.238,1293,1.141,1296,1.89,1324,1.542,1339,1.729,1355,1.141,1392,2.082,1499,3.202,1500,1.395,1502,1.395,1519,4.627,1561,1.729,1641,1.805,1683,1.441,1684,3.501,1724,3.076,1802,2.41,1831,3.679,1871,2.41,1960,1.599,1961,2.886,1974,1.89,1994,2.238,2134,2.102,2183,3.076,2218,4.463,2246,2.102,2300,2.886,2463,2.536,2533,2.238,2564,2.238,2603,2.238,2609,2.238,2778,2.238,3081,4.463,3082,3.209,3083,2.238,3084,4.888,3085,5.471,3086,4.888,3087,7.348,3088,4.888,3089,5.471,3090,4.888,3091,4.888,3092,4.888,3093,4.03,3094,4.03,3095,4.03,3096,4.03,3097,2.639,3098,4.888,3099,2.639,3100,2.639,3101,2.639,3102,3.209,3103,2.41,3104,4.03,3105,6.36,3106,4.888,3107,2.639,3108,2.639,3109,2.41,3110,4.03,3111,6.709,3112,3.209,3113,2.639,3114,2.639,3115,2.639,3116,2.238,3117,2.41,3118,2.639,3119,2.639,3120,2.639,3121,4.888,3122,2.238,3123,4.03,3124,2.639,3125,4.03,3126,2.639,3127,2.639,3128,4.03,3129,2.639,3130,5.671,3131,2.639,3132,4.03,3133,4.888,3134,2.639,3135,2.639,3136,4.03,3137,2.639,3138,2.639,3139,4.03,3140,4.03,3141,2.639,3142,2.639,3143,2.639,3144,4.03,3145,2.639,3146,2.639,3147,4.03,3148,2.639,3149,2.639,3150,4.03,3151,2.639,3152,2.639,3153,4.03,3154,2.639,3155,2.639,3156,2.639,3157,2.639,3158,2.639,3159,4.03,3160,2.639,3161,2.639,3162,2.639,3163,2.639,3172,2.987]],["title/components/TsReactiveFormBaseComponent.html",[86,0.403,232,1.417]],["body/components/TsReactiveFormBaseComponent.html",[0,1.293,2,0.069,4,0.052,5,0.039,6,0.058,10,0.614,11,0.903,15,0.899,16,0.009,38,0.139,50,1.321,63,1.277,64,1.102,69,1.174,72,1.201,73,0.977,76,1.46,83,3.179,86,0.693,101,1.195,132,1.331,144,1.174,150,2.154,160,1.203,165,1.636,172,1.145,185,3.375,194,0.121,197,3.984,198,1.147,202,0.913,203,1.29,223,1.992,224,1.494,232,2.524,234,2.834,236,0.098,238,1.943,248,1.723,249,2.722,251,1.85,253,2.042,254,0.077,259,0.764,261,1.422,273,1.009,280,1.432,281,1.522,295,1.465,297,1.004,298,4.063,310,1.99,315,1.387,326,1.23,343,1.23,344,1.23,352,1.141,400,3.02,474,2.396,478,3.656,534,4.017,535,3.867,538,1.76,579,0.006,580,0.006,588,1.395,598,1.354,601,1.387,634,2.903,691,0.882,777,0.528,778,1.29,840,1.85,909,0.743,961,1.121,965,1.23,980,1.422,1004,1.918,1038,1.458,1043,1.046,1046,1.683,1075,1.387,1085,1.458,1098,1.499,1259,1.422,1260,1.619,1356,2.835,1357,1.619,1358,1.619,1359,2.267,1360,1.619,1361,1.619,1362,1.496,1363,1.619,1364,1.387,1365,1.619,1366,1.458,1367,1.496,1368,1.619,1369,1.496,1370,1.619,1371,1.422,1372,1.619,1373,1.619,1374,1.422,1375,2.267,1376,1.496,1377,1.496,1378,1.619,1379,2.036,1380,1.619,1381,1.458,1382,1.619,1383,1.458,1384,1.619,1385,1.458,1386,1.619,1387,1.458,1388,1.619,1389,1.619,1390,1.458,1391,1.619,1392,1.387,1393,1.619,1394,2.835,1395,1.619,1396,1.422,1397,1.458,1398,1.619,1399,1.458,1400,1.619,1401,1.496,1402,1.619,1403,1.321,1404,1.23,1405,1.619,1406,1.23,1407,1.619,1408,1.422,1409,1.619,1410,1.458,1411,1.619,1412,1.422,1413,1.619,1414,1.458,1415,1.619,1416,1.321,1417,1.619,1418,1.321,1419,2.267,1420,1.321,1421,1.619,1422,1.458,1423,1.619,1424,1.321,1425,1.619,1426,1.321,1427,1.422,1428,1.619,1429,1.458,1430,1.619,1431,1.422,1432,1.619,1433,1.23,1434,1.619,1435,1.422,1436,1.576,1437,1.619,1616,3.656,1645,5.083,1646,5.083,1647,5.083,1648,5.083,1649,4.661,1650,4.661,1651,4.661,1666,3.845,1667,3.491,1668,4.065,1670,5.381,1671,5.547,1672,4.065,1674,4.065,1675,4.065,1677,4.065,1683,2.787,1684,3.656,1685,5.352,1687,4.572,1688,5.083,1971,2.611,2007,2.745,2580,3.328,2614,3.328,2616,6.136,2617,3.328,2723,4.661,2725,3.328,3173,8.596,3174,4.126,3175,4.126,3176,4.126,3177,4.126,3178,4.126,3179,4.126,3180,4.126,3181,4.126,3182,4.126,3183,4.126,3184,4.126,3185,4.126,3186,4.126,3187,4.126,3188,3.645,3189,4.126,3190,4.126]],["title/pipes/TsRoundNumberPipe.html",[604,1.691,3066,3.317]],["body/pipes/TsRoundNumberPipe.html",[2,0.112,4,0.085,5,0.045,6,0.053,14,2.247,15,0.725,16,0.009,38,0.165,49,1.999,76,1.347,132,1.291,160,1.28,194,0.196,202,1.476,203,2.084,236,0.098,254,0.065,273,1.046,296,1.544,297,0.746,304,2.295,579,0.008,580,0.008,588,1.287,604,3.206,823,1.897,840,2.135,895,1.853,1004,1.77,1043,1.691,1046,1.941,1054,3.441,1927,4.691,1928,5.546,1931,5.546,1945,4.219,1946,4.028,1947,4.028,3066,5.907,3073,6.964,3191,7.883,3192,6.668,3193,6.964,3194,7.663,3195,6.668,3196,6.668,3197,6.668]],["title/components/TsRowComponent.html",[86,0.403,1396,1.526]],["body/components/TsRowComponent.html",[2,0.08,4,0.061,5,0.043,6,0.032,11,1.287,15,0.518,16,0.009,38,0.133,50,1.526,64,1.283,69,1.355,72,0.858,73,1.129,86,0.75,104,2.198,175,1.295,179,1.181,191,1.031,194,0.14,223,2.198,224,1.318,232,1.526,236,0.113,254,0.085,256,1.376,259,0.812,260,2.645,261,1.642,268,1.664,273,0.896,280,1.441,281,1.539,286,1.295,289,1.782,290,1.782,291,1.555,292,1.555,293,1.555,295,2.029,315,1.602,326,2.548,349,1.742,447,1.071,579,0.006,580,0.006,598,1.563,601,1.602,635,1.814,691,1.221,777,0.61,778,1.489,784,1.814,840,2.302,909,0.858,961,1.294,965,1.42,980,1.642,1005,3.962,1038,1.684,1043,1.208,1075,1.602,1085,1.684,1093,4.31,1094,3.096,1098,2.246,1113,3.357,1259,1.642,1260,1.87,1336,3.067,1356,3.012,1357,1.87,1358,1.87,1359,2.502,1360,1.87,1361,1.87,1362,1.728,1363,1.87,1364,1.602,1365,1.87,1366,1.684,1367,1.728,1368,1.87,1369,1.728,1370,1.87,1371,1.642,1372,1.87,1373,1.87,1374,2.198,1375,2.502,1376,1.728,1377,1.728,1378,1.87,1379,1.454,1380,1.87,1381,1.684,1382,1.87,1383,1.684,1384,1.87,1385,1.684,1386,1.87,1387,1.684,1388,1.87,1389,1.87,1390,1.684,1391,1.87,1392,1.602,1393,1.87,1394,1.87,1395,1.87,1396,2.646,1397,1.684,1398,1.87,1399,1.684,1400,1.87,1401,1.728,1402,1.87,1403,1.526,1404,1.42,1405,1.87,1406,2.143,1407,1.87,1408,1.642,1409,1.87,1410,1.684,1411,1.87,1412,1.642,1413,1.87,1414,1.684,1415,1.87,1416,1.526,1417,1.87,1418,1.526,1419,2.502,1420,1.526,1421,1.87,1422,1.684,1423,1.87,1424,1.526,1425,1.87,1426,1.526,1427,2.478,1428,1.87,1429,1.684,1430,1.87,1431,2.478,1432,1.87,1433,1.42,1434,1.87,1435,1.642,1436,1.82,1437,1.87,1470,3.076,1471,3.545,1480,2.298,1482,4.632,1489,3.18,1500,2.979,1502,2.979,1830,2.888,2153,3.57,2154,5.386,2155,4.779,2156,3.57,2157,4.783,2158,5.996,2159,5.386,2160,5.386,2161,5.386,2162,4.487,2163,3.853,2164,4.779,2165,4.035,2166,4.779,2167,3.57,2168,3.352,2169,3.352,2170,3.57,2171,3.57,2172,4.779]],["title/directives/TsRowDefDirective.html",[691,0.675,1431,1.526]],["body/directives/TsRowDefDirective.html",[2,0.095,4,0.072,5,0.038,6,0.038,11,1.369,15,0.615,16,0.009,38,0.149,64,1.336,86,0.711,104,2.69,175,1.284,179,1.401,191,1.223,194,0.166,236,0.121,254,0.087,256,1.483,259,0.893,260,2.955,268,1.656,280,1.289,281,1.344,286,1.284,289,1.767,290,1.767,291,1.542,292,1.542,293,1.542,295,2.078,326,2.611,349,1.727,447,1.197,579,0.007,580,0.007,635,2.027,691,1.25,777,0.723,784,2.027,840,2.499,1005,4.23,1043,1.433,1093,4.426,1094,3.407,1098,2.298,1113,3.329,1336,3.041,1374,1.948,1396,1.948,1406,2.327,1427,2.456,1431,2.69,1470,3.764,1471,4.339,1480,2.726,1482,4.743,1489,3.553,1500,3.329,1502,3.329,1830,3.227,2153,4.236,2154,5.34,2155,5.34,2156,4.236,2157,4.742,2158,5.848,2159,5.848,2160,5.34,2161,5.848,2162,5.491,2163,4.716,2164,5.34,2165,4.509,2166,5.34,2167,5.34,2168,5.014,2169,5.014,2170,4.236,2171,4.236,2172,4.236]],["title/classes/TsScrollbarPosition.html",[254,0.043,3198,3.571]],["body/classes/TsScrollbarPosition.html",[2,0.066,3,1.237,4,0.05,5,0.027,6,0.027,14,2.152,15,0.43,16,0.009,18,1.003,19,1.719,20,1.934,21,1.886,31,1.739,37,1.606,38,0.136,42,2.952,45,1.298,47,1.115,49,1.003,52,1.338,63,1.095,64,0.994,76,0.8,86,0.682,90,2.391,93,1.512,94,2.2,101,0.818,113,3.192,119,2.391,127,1.05,132,0.589,144,2.213,155,2.647,160,1.324,165,1.616,169,1.267,172,1.321,175,0.713,179,0.981,182,2.508,188,2.37,190,1.512,191,0.856,193,2.042,194,0.116,202,0.876,205,1.364,207,1.267,224,0.818,236,0.104,245,1.596,246,1.003,247,2.706,251,1.267,252,2.541,254,0.081,264,1.423,265,0.959,266,1.298,267,1.298,268,1.317,279,1.027,280,0.604,281,1.069,282,0.981,284,0.937,286,0.713,289,0.981,290,0.981,291,0.856,292,0.856,293,0.856,295,1.653,297,0.838,298,2.952,299,2.2,301,3.25,302,3.192,311,0.746,315,1.33,318,2.621,343,2.384,344,2.384,352,1.665,369,1.908,388,1.908,391,1.973,392,2.798,393,3.119,394,1.973,446,2.042,447,0.942,467,0.729,473,1.848,474,1.641,475,1.688,476,1.973,477,3.041,479,2.507,579,0.005,580,0.005,588,0.764,592,1.973,635,1.596,690,1.237,691,1.187,697,1.841,731,1.792,754,3.119,777,0.506,780,1.553,784,2.018,823,2.213,878,4.008,895,1.1,1214,6.107,1320,2.784,1335,2.784,1336,1.688,1340,2.504,1341,2.784,1342,3.119,1345,4.586,1355,1.512,1397,1.983,1539,2.29,1623,1.908,1774,3.192,1905,1.848,1947,2.391,2021,3.192,2022,3.55,2023,2.504,2024,2.391,2136,2.784,2328,4.374,2452,2.633,2510,2.784,2875,3.192,3198,5.722,3199,2.965,3200,6.366,3201,2.784,3202,3.496,3203,3.496,3204,3.496,3205,3.496,3206,4.957,3207,4.957,3208,4.957,3209,4.957,3210,4.957,3211,4.957,3212,4.957,3213,4.957,3214,4.957,3215,4.957,3216,6.616,3217,5.759,3218,2.965,3219,2.965,3220,5.722,3221,3.496,3222,5.259,3223,3.496,3224,3.496,3225,3.496,3226,3.496,3227,3.496,3228,3.496,3229,7.772,3230,3.496,3231,3.496,3232,3.496,3233,7.447,3234,3.496,3235,3.496,3236,4.957,3237,3.496,3238,3.496,3239,3.496,3240,3.496,3241,3.496,3242,7.772,3243,3.192,3244,3.496,3245,3.496,3246,6.616,3247,3.496,3248,5.722,3249,3.496,3250,3.496,3251,3.496,3252,3.496,3253,3.496,3254,3.496,3255,3.496,3256,3.496,3257,3.496]],["title/classes/TsScrollbarsGeometry.html",[254,0.043,3222,3.571]],["body/classes/TsScrollbarsGeometry.html",[2,0.066,3,1.236,4,0.05,5,0.027,6,0.027,14,2.152,15,0.43,16,0.009,18,1.003,19,1.718,20,1.933,21,1.886,31,1.737,37,1.605,38,0.136,42,2.951,45,1.297,47,1.115,49,1.003,52,1.338,63,1.094,64,0.994,76,0.799,86,0.682,90,2.389,93,1.511,94,2.198,101,0.818,113,3.19,119,2.389,127,1.05,132,0.589,144,2.212,155,2.646,160,1.324,165,1.616,169,1.266,172,1.321,175,0.712,179,0.98,182,2.508,188,2.37,190,1.511,191,0.856,193,2.041,194,0.116,202,0.875,205,1.363,207,1.266,224,0.818,236,0.104,245,1.595,246,1.003,247,2.705,251,1.266,252,2.539,254,0.081,264,1.422,265,0.958,266,1.297,267,1.297,268,1.317,279,1.026,280,0.603,281,1.069,282,0.98,284,0.937,286,0.712,289,0.98,290,0.98,291,0.856,292,0.856,293,0.856,295,1.653,297,0.838,298,2.951,299,2.198,301,3.249,302,3.19,311,0.746,315,1.33,318,2.619,343,2.384,344,2.384,352,1.665,369,1.907,388,1.907,391,1.972,392,2.796,393,3.118,394,1.972,446,2.041,447,0.942,467,0.729,473,1.847,474,1.64,475,1.687,476,1.972,477,3.041,479,2.507,579,0.005,580,0.005,588,0.763,592,1.972,635,1.595,690,1.236,691,1.186,697,1.84,731,1.791,754,3.118,777,0.506,780,1.552,784,2.017,823,2.212,878,4.007,895,1.099,1214,6.15,1320,2.782,1335,2.782,1336,1.687,1340,2.502,1341,2.782,1342,3.118,1345,4.585,1355,1.511,1397,1.982,1539,2.289,1623,2.705,1774,3.19,1905,1.847,1947,2.389,2021,3.19,2022,3.549,2023,2.502,2024,2.389,2136,2.782,2328,4.162,2452,2.631,2510,2.782,2875,3.19,3198,5.257,3199,2.963,3200,6.347,3201,2.782,3202,3.493,3203,3.493,3204,3.493,3205,3.493,3206,4.955,3207,4.955,3208,4.955,3209,4.955,3210,4.955,3211,4.955,3212,4.955,3213,4.955,3214,4.955,3215,4.955,3216,6.87,3217,5.757,3218,2.963,3219,2.963,3220,5.72,3221,4.955,3222,5.72,3223,3.493,3224,3.493,3225,3.493,3226,3.493,3227,3.493,3228,3.493,3229,7.772,3230,3.493,3231,3.493,3232,3.493,3233,7.446,3234,3.493,3235,3.493,3236,4.955,3237,3.493,3238,3.493,3239,3.493,3240,3.493,3241,3.493,3242,7.772,3243,3.19,3244,3.493,3245,3.493,3246,6.614,3247,3.493,3248,5.72,3249,3.493,3250,3.493,3251,3.493,3252,3.493,3253,3.493,3254,3.493,3255,3.493,3256,3.493,3257,3.493]],["title/modules/TsScrollbarsModule.html",[906,0.581,937,3.114]],["body/modules/TsScrollbarsModule.html",[2,0.113,4,0.085,5,0.045,6,0.045,16,0.009,38,0.185,194,0.197,236,0.131,254,0.066,257,1.905,259,0.71,579,0.008,580,0.008,614,1.519,734,1.209,906,1.039,908,1.781,909,1.209,910,1.909,937,6.384,947,2.304,950,2.304,1026,2.415,1027,2,1397,3.288,3200,4.721,3218,5.028,3219,5.028,3258,5.928,3259,5.928,3260,5.928,3261,6.71,3262,7.913,3263,7.913]],["title/components/TsSearchComponent.html",[86,0.403,1399,1.565]],["body/components/TsSearchComponent.html",[0,0.743,2,0.05,4,0.038,5,0.031,6,0.06,10,0.441,11,0.708,14,1.737,15,0.962,16,0.009,28,3.302,37,1.927,38,0.139,47,1.29,49,1.149,50,0.948,52,1.484,64,1.374,69,0.843,72,1.417,73,0.702,75,2.425,76,1.72,85,1.098,86,0.702,98,1.524,100,2.18,101,1.138,107,3.015,120,2.351,123,2.238,132,1.332,143,1.176,144,1.754,146,0.904,152,1.686,153,1.301,160,1.147,165,1.416,168,2.519,172,1.33,175,1.355,179,0.734,182,2.187,187,2.103,188,1.948,191,0.641,194,0.087,198,0.823,202,0.656,203,0.926,208,2.425,215,1.574,223,1.562,224,1.275,226,2.103,227,1.194,228,1.194,232,0.948,234,2.408,236,0.067,238,1.85,249,0.996,254,0.06,256,1.142,261,1.021,264,1.907,265,1.098,266,2.299,267,2.023,268,0.916,273,0.873,277,2.738,279,1.176,280,1.402,281,1.487,282,1.123,284,1.073,286,0.816,289,1.123,290,1.123,291,0.98,292,0.98,296,1.049,297,1.04,304,1.319,311,1.376,315,0.996,320,1.927,326,0.883,343,0.883,344,0.883,352,1.087,403,2.052,422,2.425,439,1.934,445,2.472,447,0.761,467,0.835,483,2.355,490,2.867,512,2.425,544,2.425,579,0.004,580,0.004,588,0.572,592,4.36,594,3.872,598,0.972,600,2.623,601,0.996,615,4.838,625,2.296,635,2.074,645,1.991,691,0.691,697,0.972,706,2.419,731,2.052,777,0.379,778,0.926,780,2.16,784,1.289,794,1.934,823,1.289,850,1.417,851,1.827,895,0.823,909,0.534,953,1.585,961,0.804,965,2.174,980,1.021,1004,0.786,1038,1.047,1041,3.015,1043,0.751,1046,1.795,1057,1.341,1075,1.85,1085,1.047,1098,1.176,1099,2.117,1117,4.434,1118,3.427,1138,2.425,1259,1.021,1260,1.162,1262,2.867,1263,2.185,1355,1.131,1356,2.419,1357,1.162,1358,1.162,1359,1.778,1360,1.162,1361,1.162,1362,1.074,1363,1.162,1364,0.996,1365,1.162,1366,1.047,1367,1.074,1368,1.162,1369,1.074,1370,1.162,1371,1.021,1372,1.162,1373,1.162,1374,1.021,1375,1.778,1376,1.074,1377,1.074,1378,1.162,1379,1.68,1380,1.162,1381,1.047,1382,1.162,1383,1.047,1384,1.162,1385,1.047,1386,1.162,1387,1.047,1388,1.162,1389,1.162,1390,1.047,1391,1.162,1392,0.996,1393,1.162,1394,1.162,1395,1.162,1396,1.021,1397,1.047,1398,1.162,1399,2.179,1400,1.162,1401,1.074,1402,1.162,1403,0.948,1404,0.883,1405,1.162,1406,0.883,1407,1.162,1408,1.021,1409,1.162,1410,1.047,1411,1.162,1412,1.021,1413,1.162,1414,1.047,1415,1.162,1416,0.948,1417,1.162,1418,0.948,1419,1.778,1420,0.948,1421,1.162,1422,1.047,1423,1.162,1424,0.948,1425,1.162,1426,0.948,1427,1.021,1428,1.162,1429,1.047,1430,1.162,1431,1.021,1432,1.162,1433,0.883,1434,1.162,1435,1.021,1436,1.131,1437,1.162,1683,2.973,1821,3.188,1960,4.555,2180,4.973,2184,4.62,2186,4.62,2382,2.617,2395,3.188,2411,3.901,2465,4.124,3264,2.617,3265,4.003,3266,4.003,3267,5.446,3268,5.446,3269,5.446,3270,5.446,3271,5.446,3272,5.446,3273,5.446,3274,6.19,3275,4.862,3276,4.862,3277,4.862,3278,4.862,3279,4.862,3280,4.862,3281,4.532,3282,2.867,3283,2.962,3284,2.962,3285,3.655,3286,2.962,3287,2.962,3288,2.962,3289,2.962,3290,2.962,3291,2.962,3292,2.962,3293,2.962,3294,2.962,3295,2.962,3296,2.962,3297,2.962,3298,2.962,3299,2.962,3300,4.003,3301,4.003,3302,2.962,3303,2.962,3304,2.962,3305,4.003,3306,4.003,3307,4.003,3308,4.003,3309,2.962,3310,4.003,3311,3.655,3312,2.962,3313,2.962,3314,4.003,3315,4.003,3316,2.962,3317,4.003,3318,2.962,3319,2.962,3320,2.389,3321,2.617,3322,2.617,3323,4.003,3324,2.617,3325,2.617,3326,2.219,3327,2.617,3328,3.655,3329,2.617,3330,2.617,3331,2.617,3332,2.617,3333,2.617,3334,2.617]],["title/modules/TsSearchModule.html",[906,0.581,938,3.114]],["body/modules/TsSearchModule.html",[2,0.109,4,0.082,5,0.044,6,0.044,16,0.009,38,0.191,194,0.19,198,1.802,236,0.129,254,0.063,257,1.877,259,0.685,306,2.291,579,0.007,580,0.007,614,1.467,734,1.167,906,1.018,908,1.72,909,1.167,910,1.844,918,4.602,929,5.16,938,6.494,947,2.257,950,2.257,953,3.469,969,4.56,1026,2.366,1027,1.932,1029,5.158,1088,4.309,1089,3.345,1399,3.274,3335,5.726,3336,5.726,3337,6.482,3338,5.726,3339,6.482,3340,7.752]],["title/interfaces/TsSearchResponse.html",[0,0.726,3320,3.571]],["body/interfaces/TsSearchResponse.html",[0,1.221,2,0.074,4,0.056,5,0.03,6,0.03,10,0.658,11,0.948,14,1.503,15,0.753,16,0.009,28,3.133,37,1.868,38,0.163,47,1.296,49,1.538,52,1.471,64,1.389,72,1.486,75,2.367,85,1.072,86,0.678,98,1.487,100,2.442,101,0.914,107,2.943,120,2.327,123,2.219,132,1.199,143,1.147,144,1.725,152,1.646,153,1.943,160,1.055,165,1.398,168,2.459,172,1.332,175,1.341,179,1.096,182,2.293,187,2.316,188,2.069,191,0.957,194,0.13,198,1.229,202,0.979,203,1.382,208,2.367,215,1.436,224,0.914,226,2.316,227,1.783,228,1.783,234,2.384,236,0.089,238,2.039,254,0.068,256,1.189,264,1.888,265,1.072,266,2.27,267,1.989,268,0.894,273,0.551,277,2.672,279,1.147,280,0.675,281,0.994,282,1.096,284,1.048,286,0.797,289,1.096,290,1.096,291,0.957,292,0.957,296,1.024,297,1.015,304,1.288,311,1.305,320,1.895,343,1.318,344,1.318,352,1.367,403,2.002,422,2.367,439,1.887,445,2.256,447,1.018,467,0.815,483,1.689,490,2.798,512,2.367,544,2.367,579,0.006,580,0.006,592,4.476,594,4.266,600,2.56,615,4.842,625,2.272,635,2.118,645,1.943,697,1.989,706,2.379,731,2.002,777,0.566,780,1.735,784,1.258,794,1.887,823,1.258,850,1.382,851,1.783,895,1.229,953,2.367,965,1.807,1041,2.943,1046,1.288,1075,1.487,1099,2.066,1117,4.378,1118,3.371,1138,2.367,1262,2.798,1263,2.133,1379,1.35,1399,1.563,1683,2.924,1821,3.111,1960,4.496,2180,3.567,2184,4.543,2186,4.543,2395,3.111,2411,4.378,2465,3.314,3264,3.907,3265,3.907,3266,3.907,3267,3.907,3268,3.907,3269,3.907,3270,3.907,3271,3.907,3272,3.907,3273,3.907,3274,5.357,3275,3.907,3276,3.907,3277,3.907,3278,3.907,3279,3.907,3280,3.907,3282,2.798,3285,3.567,3300,3.907,3301,3.907,3305,3.907,3306,3.907,3307,3.907,3308,3.907,3310,3.907,3311,3.567,3314,3.907,3315,3.907,3317,3.907,3320,4.891,3321,3.907,3322,3.907,3323,5.357,3324,3.907,3325,3.907,3326,3.314,3327,3.907,3328,4.891,3329,3.907,3330,3.907,3331,3.907,3332,3.907,3333,3.907,3334,3.907]],["title/modules/TsSelectModule.html",[906,0.581,939,2.945]],["body/modules/TsSelectModule.html",[2,0.109,4,0.083,5,0.044,6,0.044,16,0.009,38,0.19,72,1.174,194,0.191,198,1.811,236,0.13,254,0.064,257,1.882,259,0.689,579,0.007,580,0.007,614,1.475,734,1.174,906,1.021,908,1.729,909,1.174,910,1.853,939,6.09,945,4.963,947,2.264,950,2.264,991,3.622,992,4.335,1026,2.373,1027,1.942,1028,4.5,1401,3.38,3341,5.756,3342,5.756,3343,5.756,3344,6.515,3345,5.756,3346,6.704,3347,6.515,3348,7.776,3349,6.515,3350,7.776]],["title/classes/TsSelectedFile.html",[22,3.317,254,0.043]],["body/classes/TsSelectedFile.html",[0,0.582,1,5.049,2,0.06,4,0.045,5,0.06,6,0.06,7,5.176,10,0.528,11,0.811,14,2.242,15,0.957,16,0.009,19,0.86,22,5.378,23,4.168,24,5.826,25,5.226,26,5.667,27,5.387,33,2.168,37,1.175,38,0.15,47,1.153,49,0.9,50,1.137,52,1.62,59,5.055,63,0.596,65,5.274,69,1.01,72,1.585,76,1.239,79,1.973,80,3.888,84,2.736,87,2.214,88,2.145,90,3.705,93,2.343,95,4.076,101,0.734,110,5.584,132,0.913,140,1.244,143,1.945,150,2.14,160,1.32,165,0.717,169,1.964,171,2.695,172,1.307,175,1.458,225,4.081,234,1.137,236,0.076,237,2.66,244,2.66,249,1.193,250,1.377,254,0.051,271,1.255,273,1.009,297,1.004,301,2.587,304,2.62,311,1.675,343,2.235,344,2.235,352,1.418,359,2.145,375,2.885,400,1.607,412,5.442,447,0.871,467,0.957,474,2.152,479,2.311,562,4.595,564,4.595,566,4.595,579,0.007,580,0.005,588,1.495,635,1.476,645,2.964,654,3.738,655,1.321,690,1.11,697,1.165,767,2.152,777,0.918,866,2.424,891,1.973,894,2.678,964,2.863,1004,1.905,1046,1.511,1296,3.283,1508,3.888,1591,2.863,1670,4.743,1683,1.712,1825,2.863,1876,3.453,1892,2.246,1901,2.863,1905,3.151,2096,7.214,2097,2.863,2098,5.055,2099,2.362,2100,5.442,2101,4.186,2102,5.96,2103,5.96,2104,5.96,2105,5.96,2106,7.269,2107,4.584,2108,6.623,2109,5.96,2110,4.584,2111,3.136,2112,3.136,2113,4.584,2114,3.136,2115,3.136,2116,3.136,2117,3.136,2118,3.136,2119,3.136,2120,3.136,2121,4.584,2122,3.136,2123,3.136,2124,3.136,2125,3.136,2126,3.136,2127,3.136,2128,4.584,2129,3.136,2130,4.584,2131,3.136,2132,3.136,2133,3.136,2134,2.497,2135,3.136,2136,4.314,2137,4.584,2138,3.136,2139,3.136,2140,3.136,2141,3.136,2142,3.136,2143,3.136,2144,3.136,2145,3.136,2146,3.136,2147,3.136,2148,5.418,2149,6.341,2150,4.584,2151,3.136,2606,2.66,3351,5.189,3352,5.189,3353,5.189,3354,5.189,3355,3.55,3356,5.189,3357,3.55,3358,3.55,3359,3.55,3360,3.55,3361,3.55,3362,3.55,3363,3.55,3364,3.55,3365,3.55,3366,3.55,3367,3.55,3368,3.55,3369,3.55,3370,3.55,3371,3.55,3372,3.55,3373,3.55,3374,3.55,3375,3.55,3376,3.55,3377,3.55,3378,3.55,3379,3.55,3380,3.55,3381,3.55,3382,3.55,3383,3.55,3384,3.55,3385,3.55,3386,3.55,3387,3.55,3388,3.55]],["title/pipes/TsSentenceCasePipe.html",[604,1.691,3067,3.317]],["body/pipes/TsSentenceCasePipe.html",[2,0.114,4,0.086,5,0.046,6,0.054,15,0.737,16,0.009,38,0.142,47,1.323,132,1.258,160,1.289,194,0.199,236,0.1,254,0.066,273,1.053,296,1.569,297,0.758,304,2.317,579,0.008,580,0.008,588,1.308,604,3.228,823,1.927,840,2.169,895,1.883,1004,1.798,1043,1.718,1046,1.973,1054,3.497,1927,4.767,1928,5.598,1931,5.598,1945,4.287,1946,4.093,1947,4.093,3067,5.963,3076,7.03,3389,7.958,3390,5.986,3391,7.03,3392,5.986,3393,6.775,3394,6.775]],["title/classes/TsSlideToggleChange.html",[254,0.043,3395,3.571]],["body/classes/TsSlideToggleChange.html",[2,0.092,4,0.07,5,0.037,6,0.037,16,0.009,31,2.41,36,1.989,37,1.742,38,0.179,47,1.041,52,1.579,63,1.174,64,1.356,72,0.988,83,2.212,86,0.763,98,2.588,99,2.82,101,1.134,123,1.56,132,1.041,140,1.011,143,1.814,160,0.837,172,1.291,175,1.259,179,1.36,182,2.139,188,1.943,191,1.187,193,3.609,194,0.161,196,3.887,198,1.525,202,1.214,205,1.891,207,1.756,215,1.656,224,1.134,226,2.671,227,2.212,228,2.212,232,2.239,233,3.314,234,2.239,235,3.314,236,0.113,246,1.391,248,2.084,249,1.844,250,1.856,251,1.756,252,2.484,253,1.939,254,0.084,255,3.175,256,1.393,257,1.583,259,0.739,260,2.274,262,3.049,263,3.175,264,1.773,265,1.329,267,1.799,273,0.871,279,1.423,280,0.837,281,1.146,282,1.36,284,1.299,286,0.988,289,1.36,290,1.36,291,1.187,292,1.187,295,1.952,297,0.958,304,1.597,311,1.035,352,1.083,388,2.645,445,2.602,447,0.921,481,3.175,579,0.007,580,0.007,586,1.715,627,4.853,706,2.744,777,0.702,780,2.152,784,1.56,895,1.525,1099,2.562,1408,2.794,1618,4.11,1623,2.645,1635,5.767,1638,4.11,1641,3.314,2183,3.049,2328,2.935,3122,4.11,3395,6.538,3396,4.424,3397,7.396,3398,4.424,3399,4.919,3400,4.846,3401,4.846,3402,4.846,3403,4.846]],["title/classes/TsSortBase.html",[254,0.043,3404,3.114]],["body/classes/TsSortBase.html",[0,1.067,2,0.066,3,1.234,4,0.05,5,0.027,6,0.027,15,0.429,16,0.009,18,2.027,19,0.956,28,3.388,35,3.041,37,1.474,38,0.156,47,0.969,49,1.001,52,1.337,63,1.431,64,1.081,76,1.316,86,0.36,87,1.684,100,2.55,118,1.592,120,1.234,121,3.768,123,1.852,135,3.512,140,1.306,143,1.453,144,1.593,150,1.941,155,2.937,157,1.395,160,1.246,162,2.793,165,1.512,169,1.264,172,1.207,175,0.711,182,1.557,185,2.616,186,2.323,188,1.097,192,2.78,194,0.116,202,0.874,205,1.36,207,1.264,215,1.841,224,0.816,236,0.114,246,1.001,250,1.048,251,1.793,254,0.064,256,1.428,259,0.688,268,1.571,280,0.602,281,1.311,293,0.854,295,1.001,296,0.914,297,0.442,311,1.228,349,1.577,352,1.399,375,3.114,385,2.112,406,2.948,447,0.663,497,2.259,501,2.037,502,2.194,503,1.637,506,2.497,534,3.114,559,1.592,579,0.005,580,0.005,586,1.234,624,1.734,625,1.205,643,2.385,655,1.469,690,2.339,691,1.393,703,3.544,706,1.549,723,4.917,753,3.939,760,2.037,767,1.637,784,2.274,794,1.684,803,2.194,823,1.123,866,1.843,895,1.097,1004,1.487,1010,2.284,1012,3.242,1054,2.037,1094,3.017,1098,2.325,1107,2.198,1114,2.284,1285,2.777,1293,1.508,1403,1.264,1404,2.793,1433,2.477,1444,1.904,1451,2.497,1456,1.968,1457,2.385,1561,2.284,1562,4.011,1611,3.94,1623,3.748,1636,2.112,1724,2.194,1783,3.544,1905,2.616,1957,2.777,2068,3.384,2183,2.194,2220,2.777,2390,2.997,2710,2.497,3404,3.94,3405,2.626,3406,2.385,3407,2.957,3408,4.727,3409,4.58,3410,2.957,3411,4.809,3412,5.149,3413,4.197,3414,2.957,3415,2.957,3416,5.319,3417,4.197,3418,2.284,3419,3.727,3420,2.626,3421,2.957,3422,2.957,3423,4.197,3424,4.734,3425,2.777,3426,2.626,3427,2.626,3428,3.94,3429,2.777,3430,5.606,3431,5.171,3432,2.957,3433,2.957,3434,2.957,3435,4.197,3436,2.957,3437,2.957,3438,2.957,3439,2.957,3440,4.197,3441,2.957,3442,2.957,3443,2.957,3444,2.626,3445,3.727,3446,2.626,3447,2.957,3448,2.957,3449,2.957,3450,2.957,3451,4.878,3452,2.957,3453,2.957,3454,2.957,3455,2.957,3456,2.957,3457,2.957,3458,2.957,3459,4.878,3460,4.878,3461,4.197,3462,4.197,3463,2.957,3464,2.957,3465,2.957,3466,4.197,3467,2.957,3468,2.957,3469,2.957,3470,4.878,3471,2.957,3472,2.957,3473,2.957,3474,2.777,3475,2.957,3476,4.197,3477,2.957,3478,2.957]],["title/directives/TsSortDirective.html",[691,0.675,1433,1.32]],["body/directives/TsSortDirective.html",[0,0.948,2,0.054,3,1.004,4,0.041,5,0.022,6,0.059,10,0.478,11,0.753,15,0.899,16,0.009,18,1.901,19,0.778,28,3.57,35,3.376,37,1.558,38,0.144,47,0.956,49,0.814,52,1.488,63,1.402,64,1.176,76,1.594,86,0.439,87,1.37,100,2.587,118,1.295,120,1.004,121,3.984,123,1.827,132,1.025,135,3.388,140,1.184,143,1.25,144,1.827,150,2.052,155,2.883,157,1.135,160,1.316,162,2.882,165,1.669,169,1.542,172,1.235,175,0.868,182,1.607,185,2.7,186,2.397,188,1.607,192,2.521,194,0.094,202,0.71,205,1.107,207,1.028,215,1.868,224,0.664,236,0.106,246,0.814,249,1.079,250,0.852,251,1.542,254,0.047,256,1.42,259,0.679,268,1.623,273,0.901,280,0.735,281,1.229,293,0.695,295,0.814,296,1.115,297,0.98,311,1.488,349,1.557,352,1.481,375,3.571,385,1.718,400,1.454,406,2.618,447,0.539,497,1.942,501,2.486,502,2.678,503,2.664,506,2.031,534,4.018,559,1.295,579,0.005,580,0.005,586,1.004,588,1.395,624,1.41,625,1.47,643,2.91,655,1.195,690,2.259,691,1.397,703,3.658,706,1.26,723,5.16,753,4.018,760,1.657,767,1.331,777,0.411,784,2.32,794,1.37,803,1.785,823,0.913,866,2.25,895,1.339,1004,2.093,1010,2.788,1012,3.346,1043,0.814,1046,1.403,1054,1.657,1094,2.776,1098,2.263,1107,1.89,1114,1.858,1285,3.389,1293,1.226,1403,1.028,1404,2.792,1433,2.535,1444,1.548,1451,4.064,1456,1.601,1457,1.94,1561,1.858,1562,3.731,1611,4.842,1623,3.718,1636,1.718,1724,2.678,1783,3.658,1905,3,1957,2.258,2068,2.91,2183,1.785,2220,2.258,2390,2.578,2710,2.031,3404,2.258,3405,2.136,3406,1.94,3407,2.405,3408,4.564,3409,4.067,3410,2.405,3411,4.72,3412,4.991,3413,3.609,3414,4.332,3415,4.332,3416,5.13,3417,3.609,3418,1.858,3419,3.846,3420,2.136,3421,2.405,3422,2.405,3423,3.609,3424,5.285,3425,2.258,3426,2.136,3427,2.136,3428,3.389,3429,2.258,3430,5.856,3431,5.659,3432,4.813,3433,3.609,3434,2.405,3435,5.157,3436,2.405,3437,2.405,3438,2.405,3439,2.405,3440,3.609,3441,4.813,3442,4.332,3443,2.405,3444,2.136,3445,3.205,3446,4.274,3447,2.405,3448,2.405,3449,2.405,3450,3.609,3451,4.332,3452,2.405,3453,2.405,3454,2.405,3455,3.609,3456,3.609,3457,2.405,3458,3.609,3459,4.332,3460,4.332,3461,3.609,3462,3.609,3463,2.405,3464,2.405,3465,3.609,3466,3.609,3467,2.405,3468,2.405,3469,2.405,3470,4.332,3471,2.405,3472,2.405,3473,2.405,3474,2.258,3475,2.405,3476,3.609,3477,2.405,3478,2.405,3479,3.885,3480,4.817,3481,4.817,3482,4.817,3483,3.21,3484,4.817,3485,4.817,3486,3.21,3487,3.21,3488,3.21,3489,3.21,3490,3.21,3491,3.21,3492,3.21,3493,3.21,3494,3.21,3495,3.21,3496,3.21,3497,3.21,3498,3.21,3499,3.21,3500,3.21,3501,3.21,3502,3.21,3503,2.836]],["title/classes/TsSortHeaderBase.html",[254,0.043,3504,3.571]],["body/classes/TsSortHeaderBase.html",[2,0.081,4,0.062,5,0.033,6,0.033,16,0.009,28,2.197,34,3.229,37,1.099,38,0.185,47,0.722,52,1.369,63,1.218,64,1.309,76,1.466,86,0.754,98,1.632,104,2.225,118,2.926,132,1.08,135,2.837,140,0.895,144,1.837,155,2.733,160,1.107,165,1.305,172,1.247,175,0.874,179,1.203,180,2.699,186,2.677,187,2.466,191,1.05,192,2.533,194,0.143,200,2.597,202,1.429,203,1.517,205,1.673,207,1.554,215,1.832,224,1.335,236,0.107,254,0.076,256,1.11,259,0.513,267,1.592,268,1.563,273,0.805,280,1.18,281,1.059,282,1.203,284,1.15,286,0.874,289,1.203,290,1.203,291,1.05,292,1.05,293,1.05,295,1.231,296,1.124,311,0.916,318,3.388,406,2.197,432,2.597,467,0.895,470,3.071,483,1.854,487,2.809,503,2.012,538,2.071,559,1.957,579,0.006,580,0.006,588,1.401,600,2.809,604,1.854,635,1.837,655,1.806,691,1.107,752,3.737,784,2.2,884,2.809,894,2.505,895,1.349,1012,3.737,1055,2.597,1094,2.604,1098,2.254,1107,1.904,1113,2.267,1293,1.854,1403,1.554,1404,2.732,1433,2.163,1444,2.341,1456,3.219,1457,2.932,1470,2.341,1472,2.932,1477,4.59,1480,2.341,1489,3.219,1499,4.199,1500,3.015,1502,3.015,1561,3.737,1562,2.505,1636,2.597,1724,2.698,1742,3.229,1905,3.015,2022,3.071,2023,4.085,2157,3.229,2250,5.208,2328,2.597,2583,4.085,2968,3.915,3282,3.071,3406,2.932,3408,3.737,3411,3.737,3412,3.901,3416,3.229,3418,3.737,3419,4.296,3420,3.229,3424,4.085,3426,3.229,3427,3.229,3430,4.296,3431,3.229,3444,3.229,3445,4.296,3446,3.229,3479,3.915,3504,5.208,3505,3.636,3506,3.915,3507,4.838,3508,3.915,3509,5.704,3510,3.915,3511,5.208,3512,3.915,3513,5.704,3514,3.915,3515,3.915,3516,6.409,3517,4.287,3518,4.287,3519,5.704,3520,5.704,3521,4.287,3522,4.287,3523,4.287,3524,4.287,3525,4.287,3526,4.287,3527,6.409,3528,4.287,3529,4.287,3530,4.287,3531,4.287,3532,4.287,3533,4.287,3534,4.287,3535,4.287,3536,4.287,3537,4.287,3538,4.287,3539,4.287,3540,4.287,3541,4.287,3542,3.915,3543,3.915,3544,4.287,3545,5.704,3546,4.287,3547,4.287]],["title/components/TsSortHeaderComponent.html",[86,0.403,1403,1.417]],["body/components/TsSortHeaderComponent.html",[2,0.057,4,0.044,5,0.034,6,0.058,10,0.51,11,0.79,15,0.888,16,0.009,28,2.289,34,3.364,37,1.144,38,0.173,47,0.753,50,1.097,52,1.514,63,1.188,64,1.245,69,0.975,72,0.617,73,0.811,76,1.547,86,0.731,98,1.7,104,2.286,118,2.853,132,1.102,135,3.108,140,0.632,144,1.887,155,2.706,160,1.224,165,1.496,172,1.302,175,0.911,179,0.849,180,2.849,186,2.491,187,2.295,191,0.741,192,1.984,194,0.101,200,1.833,202,1.119,203,1.071,205,1.181,207,1.097,215,1.753,223,1.742,224,1.462,232,1.097,236,0.088,249,1.152,254,0.059,256,1.14,259,0.535,261,1.181,267,1.124,268,1.588,273,1,280,1.418,281,1.509,282,1.253,284,1.197,286,0.911,289,1.253,290,1.253,291,1.094,292,1.094,293,1.094,295,1.282,296,1.171,297,0.962,311,1.133,315,1.152,318,2.806,326,1.021,400,1.551,406,1.551,432,1.833,467,0.932,470,2.168,483,2.534,487,1.983,503,2.75,538,2.157,559,1.381,579,0.005,580,0.005,588,1.478,598,1.124,600,2.926,601,1.152,604,1.309,635,1.438,655,1.275,691,1.129,752,3.477,777,0.438,778,1.071,784,2.106,884,1.983,894,1.768,895,1.405,909,0.617,961,0.93,965,1.021,980,1.181,1004,1.342,1005,2.609,1012,3.839,1038,1.211,1043,0.869,1046,1.472,1055,2.705,1075,1.152,1085,1.211,1094,2.675,1098,2.26,1107,1.344,1113,2.361,1259,1.181,1260,1.344,1293,1.931,1356,2.602,1357,1.344,1358,1.344,1359,1.984,1360,1.344,1361,1.344,1362,1.242,1363,1.344,1364,1.152,1365,1.344,1366,1.211,1367,1.242,1368,1.344,1369,1.242,1370,1.344,1371,1.181,1372,1.344,1373,1.344,1374,1.181,1375,1.984,1376,1.242,1377,1.242,1378,1.344,1379,1.046,1380,1.344,1381,1.211,1382,1.344,1383,1.211,1384,1.344,1385,1.211,1386,1.344,1387,1.211,1388,1.344,1389,1.344,1390,1.211,1391,1.344,1392,1.152,1393,1.344,1394,1.344,1395,1.344,1396,1.181,1397,1.211,1398,1.344,1399,1.211,1400,1.344,1401,1.242,1402,1.344,1403,2.124,1404,2.724,1405,1.344,1406,1.021,1407,1.344,1408,1.181,1409,1.344,1410,1.211,1411,1.344,1412,1.181,1413,1.344,1414,1.211,1415,1.344,1416,1.097,1417,1.344,1418,1.097,1419,1.984,1420,1.097,1421,1.344,1422,1.211,1423,1.344,1424,1.097,1425,1.344,1426,1.097,1427,1.181,1428,1.344,1429,1.211,1430,1.344,1431,1.181,1432,1.344,1433,2.392,1434,1.344,1435,1.181,1436,1.309,1437,1.344,1444,1.652,1456,3.307,1457,3.054,1470,2.438,1472,3.054,1477,4.972,1480,1.652,1489,2.52,1499,3.477,1500,2.361,1502,2.361,1561,3.477,1562,2.609,1636,1.833,1724,2.81,1742,2.279,1905,3.098,2022,2.168,2023,4.476,2157,3.364,2250,4.078,2328,2.705,2583,3.199,2968,4.078,3282,3.199,3406,3.054,3408,3.839,3411,3.477,3412,3.63,3416,4.413,3418,4.284,3419,3.997,3420,2.279,3424,3.801,3426,2.279,3427,2.279,3430,4.413,3431,2.279,3444,2.279,3445,3.364,3446,4.413,3479,4.078,3503,3.026,3504,2.763,3505,6.488,3506,2.763,3507,3.788,3508,2.763,3509,4.466,3510,2.763,3511,4.846,3512,2.763,3513,5.859,3514,4.078,3515,2.763,3516,6.539,3517,4.466,3518,4.466,3519,6.249,3520,6.249,3521,3.026,3522,3.026,3523,3.026,3524,3.026,3525,3.026,3526,5.307,3527,7.088,3528,6.249,3529,6.539,3530,3.026,3531,3.026,3532,3.026,3533,3.026,3534,3.026,3535,4.466,3536,3.026,3537,3.026,3538,3.026,3539,4.466,3540,3.026,3541,3.026,3542,4.078,3543,4.078,3544,3.026,3545,4.466,3546,3.026,3547,3.026,3548,3.426,3549,5.055,3550,3.426,3551,3.426,3552,3.426,3553,3.426,3554,3.426,3555,3.426,3556,3.426,3557,3.426,3558,3.426,3559,3.426,3560,3.426,3561,3.426,3562,3.426,3563,3.426,3564,5.055,3565,5.055]],["title/injectables/TsSortHeaderIntl.html",[850,1.384,3418,2.562]],["body/injectables/TsSortHeaderIntl.html",[2,0.094,4,0.071,5,0.038,6,0.055,10,0.836,11,1.109,15,0.611,16,0.009,38,0.163,42,3.524,45,1.843,47,1.217,76,1.573,86,0.647,104,2.447,120,2.219,123,2.019,132,1.159,140,1.036,144,2.019,150,1.675,153,3.119,155,3.127,160,1.314,171,2.468,194,0.165,215,2.131,236,0.115,248,2.116,254,0.055,256,1.338,257,1.272,259,0.892,297,0.871,320,2.219,352,1.748,374,2.219,380,4.109,579,0.007,580,0.007,588,1.37,593,4.723,625,2.167,643,4.289,655,2.09,691,1.247,706,3.53,760,2.899,777,0.719,850,2.433,1055,3.799,1098,2.121,1404,2.638,1433,2.32,1463,5.726,1547,4.963,1560,4.531,1783,5.449,2168,4.994,2183,3.946,3201,3.952,3411,4.109,3418,5.239,3505,6.127,3507,4.209,3542,5.726,3543,5.726,3566,4.963,3567,6.271,3568,8.177,3569,8.177,3570,5.618,3571,7.099,3572,5.618,3573,5.618,3574,7.099,3575,5.618,3576,5.618,3577,4.531,3578,4.963,3579,4.963]],["title/modules/TsSortModule.html",[906,0.581,940,2.945]],["body/modules/TsSortModule.html",[2,0.105,4,0.104,5,0.042,6,0.042,16,0.009,38,0.185,194,0.184,236,0.133,254,0.061,257,1.85,259,0.803,579,0.007,580,0.007,614,1.418,636,4.804,734,1.472,777,0.801,895,2.11,906,0.997,908,1.662,909,1.128,910,1.781,940,6.086,947,2.211,949,5.689,950,2.211,1026,2.317,1027,1.867,1098,1.97,1403,2.954,1404,2.594,1433,2.75,1830,3.438,2481,4.804,2583,3.962,3507,5.689,3508,6.124,3577,6.124,3580,5.532,3581,5.532,3582,5.532,3583,6.262,3584,6.707,3585,6.707,3586,6.707,3587,6.707,3588,7.592,3589,7.592]],["title/interfaces/TsSortState.html",[0,0.726,3425,3.114]],["body/interfaces/TsSortState.html",[0,1.153,2,0.065,3,1.213,4,0.049,5,0.026,6,0.026,10,0.578,11,0.865,15,0.702,16,0.009,18,2.017,19,0.94,28,3.366,35,3.013,37,1.46,38,0.155,47,1.107,49,0.984,52,1.327,63,1.426,64,1.073,76,1.303,86,0.354,87,1.656,100,2.536,118,1.565,120,1.213,121,3.733,123,1.835,135,3.495,140,1.296,143,1.436,144,1.835,150,1.923,155,2.967,157,1.372,160,1.24,162,2.759,165,1.502,169,1.243,172,1.202,175,0.699,182,1.538,185,2.585,186,2.295,188,1.079,192,2.759,194,0.114,202,0.859,205,1.338,207,1.243,215,1.831,224,0.802,236,0.114,246,0.984,250,1.03,251,1.772,254,0.054,256,1.423,259,0.682,268,1.562,280,0.592,281,1.304,293,0.84,295,0.984,296,0.899,297,0.434,311,1.217,349,1.563,352,1.389,375,3.077,385,2.077,406,2.92,447,0.652,497,2.232,501,2.003,502,2.158,503,1.609,506,2.456,534,3.077,559,1.565,579,0.005,580,0.005,586,1.213,624,1.705,625,1.185,643,2.345,655,1.444,690,2.324,691,1.401,703,3.502,706,1.523,723,5.236,753,3.909,760,2.003,767,1.609,777,0.497,784,2.263,794,1.656,803,2.158,823,1.104,866,1.813,895,1.079,1004,1.469,1010,2.246,1012,3.203,1054,2.003,1094,3.117,1098,2.32,1107,2.172,1114,2.246,1285,2.73,1293,1.483,1403,1.243,1404,2.795,1433,2.532,1444,1.872,1451,2.456,1456,1.935,1457,2.345,1561,2.246,1562,3.989,1611,3.893,1623,3.836,1636,2.077,1724,2.158,1783,3.502,1905,2.585,1957,2.73,2068,3.344,2183,2.158,2220,2.73,2390,3.452,2710,2.456,3404,2.73,3405,2.582,3406,2.345,3407,2.908,3408,4.707,3409,4.538,3410,2.908,3411,4.79,3412,5.132,3413,4.147,3414,2.908,3415,2.908,3416,5.293,3417,4.147,3418,2.246,3419,3.682,3420,2.582,3421,2.908,3422,2.908,3423,4.147,3424,4.704,3425,3.893,3426,2.582,3427,2.582,3428,3.893,3429,2.73,3430,5.586,3431,5.143,3432,2.908,3433,2.908,3434,2.908,3435,4.147,3436,2.908,3437,2.908,3438,2.908,3439,2.908,3440,4.147,3441,2.908,3442,2.908,3443,2.908,3444,2.582,3445,3.682,3446,2.582,3447,2.908,3448,2.908,3449,2.908,3450,2.908,3451,4.833,3452,2.908,3453,2.908,3454,2.908,3455,2.908,3456,2.908,3457,2.908,3458,2.908,3459,4.833,3460,4.833,3461,4.147,3462,4.147,3463,2.908,3464,2.908,3465,2.908,3466,4.147,3467,2.908,3468,2.908,3469,2.908,3470,4.833,3471,2.908,3472,2.908,3473,2.908,3474,2.73,3475,2.908,3476,4.147,3477,2.908,3478,2.908]],["title/interfaces/TsSortableItem.html",[0,0.726,3424,2.801]],["body/interfaces/TsSortableItem.html",[0,1.213,2,0.064,3,1.198,4,0.049,5,0.026,6,0.026,10,0.57,11,0.857,15,0.76,16,0.009,18,2.009,19,0.928,28,3.485,35,2.991,37,1.45,38,0.155,47,1.101,49,0.972,52,1.452,63,1.422,64,1.066,76,1.294,86,0.349,87,1.635,100,2.525,118,1.545,120,1.198,121,3.706,123,1.822,135,3.723,140,1.289,143,1.423,144,1.56,150,1.909,155,3.051,157,1.354,160,1.236,162,2.734,165,1.495,169,1.227,172,1.198,175,0.69,182,1.524,185,2.561,186,2.274,188,1.065,192,2.743,194,0.113,202,0.848,205,1.321,207,1.227,215,1.823,224,0.792,236,0.113,246,0.972,250,1.017,251,1.756,254,0.054,256,1.418,259,0.677,268,1.555,280,0.584,281,1.299,293,0.829,295,0.972,296,0.887,297,0.429,311,1.208,349,1.552,352,1.381,375,3.048,385,2.05,406,2.9,447,0.643,497,2.211,501,1.978,502,2.13,503,1.589,506,2.424,534,3.048,559,1.545,579,0.005,580,0.005,586,1.198,624,1.683,625,1.169,643,2.315,655,1.426,690,2.312,691,1.395,703,3.47,706,1.503,723,4.869,753,3.886,760,1.978,767,2.274,777,0.49,784,2.305,794,1.635,803,2.13,823,1.09,866,1.789,895,1.065,1004,1.456,1010,2.218,1012,3.174,1054,1.978,1094,3.103,1098,2.316,1107,2.152,1114,2.218,1285,2.695,1293,1.464,1403,1.756,1404,2.795,1433,2.459,1444,1.848,1451,2.424,1456,1.91,1457,2.315,1561,2.218,1562,3.972,1611,3.858,1623,3.909,1636,2.05,1724,2.13,1783,3.47,1905,2.991,1957,2.695,2068,3.313,2183,2.13,2220,2.695,2390,3.427,2710,3.47,3404,2.695,3405,2.549,3406,2.315,3407,2.871,3408,4.691,3409,4.505,3410,2.871,3411,4.904,3412,5.216,3413,4.109,3414,2.871,3415,2.871,3416,5.57,3417,4.109,3418,2.218,3419,3.649,3420,2.549,3421,2.871,3422,2.871,3423,4.109,3424,4.869,3425,2.695,3426,2.549,3427,2.549,3428,3.858,3429,2.695,3430,5.57,3431,5.121,3432,2.871,3433,2.871,3434,2.871,3435,4.109,3436,2.871,3437,2.871,3438,2.871,3439,2.871,3440,4.109,3441,2.871,3442,2.871,3443,2.871,3444,2.549,3445,3.649,3446,2.549,3447,2.871,3448,2.871,3449,2.871,3450,2.871,3451,4.798,3452,2.871,3453,2.871,3454,2.871,3455,2.871,3456,2.871,3457,2.871,3458,2.871,3459,4.798,3460,4.798,3461,4.109,3462,4.109,3463,2.871,3464,2.871,3465,2.871,3466,4.109,3467,2.871,3468,2.871,3469,2.871,3470,4.798,3471,2.871,3472,2.871,3473,2.871,3474,2.695,3475,2.871,3476,4.109,3477,2.871,3478,2.871]],["title/modules/TsSpacingModule.html",[906,0.581,941,2.945]],["body/modules/TsSpacingModule.html",[2,0.113,4,0.086,5,0.046,6,0.046,16,0.009,38,0.182,194,0.198,236,0.131,254,0.066,257,1.91,259,0.714,579,0.008,580,0.008,614,1.529,734,1.216,906,1.043,908,1.793,909,1.216,910,1.921,941,6.045,947,2.313,950,2.313,1026,2.424,1027,2.013,1435,3.208,3590,5.966,3591,5.966,3592,5.966,3593,6.754,3594,7.017,3595,7.943]],["title/components/TsTableComponent.html",[86,0.403,1406,1.32]],["body/components/TsTableComponent.html",[0,1.066,2,0.055,3,1.028,4,0.075,5,0.033,6,0.022,11,1.016,14,2.003,15,0.358,16,0.009,18,2.128,19,1.575,20,1.691,21,1.649,23,1.829,31,1.445,33,1.734,37,0.745,38,0.174,39,3.104,42,2.221,44,2.656,45,1.079,47,1.156,49,1.244,50,1.053,63,0.552,64,0.502,69,0.936,72,1.056,73,0.779,76,0.665,82,3.675,84,1.134,85,1.189,86,0.723,91,3.395,93,2.657,95,1.987,100,1.079,101,1.606,104,2.241,127,0.873,132,1.086,134,2.366,140,1.081,154,2.365,155,1.163,157,1.734,160,1.061,165,0.991,171,1.445,172,0.478,179,0.815,190,1.874,191,0.712,194,0.172,215,1.728,223,2.241,224,1.014,232,1.053,236,0.111,243,1.698,245,1.326,246,1.649,254,0.071,256,1.118,259,0.771,261,1.134,265,0.797,268,1.185,269,1.987,270,2.081,273,1.096,280,1.413,281,1.502,284,1.162,286,0.884,289,1.216,290,1.216,291,1.061,292,1.061,293,1.061,295,1.244,296,1.358,297,0.917,306,1.163,311,0.621,314,1.698,315,1.106,320,1.028,326,1.938,348,1.64,349,1.575,352,1.64,374,2.428,385,1.76,403,2.221,422,1.76,439,1.404,467,0.606,475,1.404,477,1.825,487,1.904,497,1.326,501,1.698,579,0.005,580,0.006,586,1.533,598,1.079,601,1.106,604,1.257,614,1.11,625,1.004,635,0.936,647,3.037,655,1.224,663,2.446,690,1.028,691,1.113,696,3.037,697,1.079,734,0.592,740,1.829,742,2.291,754,4.055,777,0.421,778,1.028,823,0.936,840,2.866,903,3.104,909,0.592,910,0.936,961,0.893,965,0.981,980,1.134,1010,1.904,1038,1.163,1043,0.834,1075,1.106,1085,1.163,1093,3.897,1094,3.637,1098,1.96,1103,2.653,1107,1.291,1108,2.465,1112,2.081,1113,3.406,1121,2.465,1129,1.829,1208,4.202,1213,4.114,1259,1.134,1260,1.291,1263,3.517,1293,1.874,1318,3.615,1340,2.081,1342,1.829,1356,2.551,1357,1.291,1358,1.291,1359,1.925,1360,1.291,1361,1.291,1362,1.193,1363,1.291,1364,1.106,1365,1.291,1366,1.163,1367,1.193,1368,1.291,1369,1.193,1370,1.291,1371,1.134,1372,1.291,1373,1.291,1374,1.134,1375,1.925,1376,1.193,1377,1.193,1378,1.291,1379,1.004,1380,1.291,1381,1.163,1382,1.291,1383,1.163,1384,1.291,1385,1.163,1386,1.291,1387,1.163,1388,1.291,1389,1.291,1390,2.073,1391,1.291,1392,1.106,1393,1.291,1394,1.291,1395,1.291,1396,1.134,1397,1.163,1398,1.291,1399,1.163,1400,1.291,1401,2.357,1402,1.291,1403,1.053,1404,2.564,1405,1.291,1406,1.938,1407,1.291,1408,1.134,1409,1.291,1410,1.163,1411,1.291,1412,1.134,1413,1.291,1414,1.163,1415,1.291,1416,1.053,1417,1.291,1418,1.053,1419,1.925,1420,1.053,1421,1.291,1422,1.163,1423,1.291,1424,1.053,1425,1.291,1426,1.053,1427,1.134,1428,1.291,1429,1.163,1430,1.291,1431,1.134,1432,1.291,1433,2.315,1434,1.291,1435,1.134,1436,1.257,1437,1.291,1470,3.136,1471,1.829,1472,2.963,1480,1.586,1497,2.189,1526,3.957,1562,3.59,1617,2.314,1622,3.957,1623,3.354,1724,2.727,1742,2.189,1821,3.451,1830,2.221,1843,2.906,1847,2.314,1875,2.906,1947,1.987,2024,1.987,2026,2.906,2099,2.189,2162,2.314,2169,2.314,2208,2.081,2328,2.625,2463,1.829,2549,5.465,2848,2.906,2929,2.653,2931,4.872,3045,2.906,3130,2.653,3248,3.957,3282,2.081,3326,2.465,3406,1.987,3408,1.904,3409,2.314,3474,3.451,3514,5.61,3596,3.289,3597,4.333,3598,4.905,3599,4.905,3600,6.144,3601,3.675,3602,3.289,3603,4.905,3604,2.906,3605,2.906,3606,6.518,3607,6.955,3608,4.905,3609,3.289,3610,4.333,3611,3.289,3612,3.289,3613,3.289,3614,3.289,3615,5.865,3616,3.289,3617,3.289,3618,3.289,3619,3.289,3620,3.289,3621,3.289,3622,4.905,3623,4.905,3624,3.289,3625,2.465,3626,3.289,3627,4.905,3628,4.905,3629,5.865,3630,4.905,3631,3.289,3632,3.289,3633,4.905,3634,3.289,3635,2.906,3636,3.289,3637,5.865,3638,5.865,3639,3.289,3640,2.906,3641,2.906,3642,3.289,3643,3.289,3644,5.865,3645,3.289,3646,4.905,3647,3.289,3648,3.289,3649,4.905,3650,3.289,3651,4.905,3652,3.289,3653,3.289,3654,3.289,3655,3.289,3656,6.502,3657,3.289,3658,3.289,3659,4.905,3660,3.289,3661,3.289,3662,3.289,3663,3.289,3664,4.905,3665,3.289,3666,3.289,3667,3.289,3668,3.289,3669,3.289,3670,3.289,3671,3.289,3672,3.289,3673,3.289,3674,3.289,3675,3.289,3676,3.289,3677,2.653,3678,4.905,3679,3.289,3680,3.289,3681,3.289,3682,3.289,3683,4.905,3684,3.289,3685,3.289,3686,3.289,3687,3.289,3688,3.289,3689,3.289,3690,3.289,3691,3.289,3692,3.289,3693,3.289,3694,3.289,3695,3.289,3696,3.289]],["title/classes/TsTableDataSource.html",[254,0.043,3606,3.571]],["body/classes/TsTableDataSource.html",[2,0.077,4,0.106,5,0.031,6,0.059,10,0.683,11,0.972,15,0.86,16,0.009,18,2.178,33,2.198,38,0.13,47,0.926,62,2.905,63,1.483,76,0.928,84,2.808,100,2.04,101,1.286,123,2.151,124,4.375,132,0.683,144,1.769,145,4.66,146,1.898,150,1.854,160,1.243,165,1.528,171,2.733,210,4.084,215,2.117,236,0.068,246,1.577,249,1.543,253,2.793,254,0.061,256,1.493,259,0.746,270,3.935,273,0.775,296,1.44,297,0.972,301,3.77,311,1.537,352,1.561,385,3.329,431,7.36,447,1.269,467,0.846,474,3.135,477,2.813,487,3.6,502,3.458,538,2.654,579,0.007,580,0.007,588,1.201,593,5.031,654,4.062,655,1.708,690,2.364,697,2.04,762,4.66,777,0.587,840,3.019,908,1.651,1004,1.651,1046,1.811,1055,3.329,1093,3.929,1213,2.905,1263,4.227,1338,4.375,1390,2.198,1404,2.429,1406,2.254,1433,1.854,1480,2.214,1562,3.21,1623,3,1954,5.495,2163,3.758,2931,6.104,3600,6.68,3606,5.017,3610,6.232,3697,8.764,3698,4.591,3699,6.22,3700,7.561,3701,7.561,3702,7.561,3703,7.561,3704,7.561,3705,7.197,3706,7.561,3707,6.22,3708,4.591,3709,8.475,3710,4.591,3711,4.591,3712,4.591,3713,4.591,3714,4.591,3715,6.22,3716,4.591,3717,6.22,3718,6.232,3719,4.591,3720,4.591,3721,6.22,3722,4.591,3723,4.591,3724,4.591,3725,4.591,3726,4.591,3727,4.591,3728,4.591,3729,6.22,3730,4.591,3731,4.591,3732,6.22,3733,4.591,3734,6.22,3735,4.591,3736,4.591,3737,4.591]],["title/modules/TsTableModule.html",[906,0.581,942,3.114]],["body/modules/TsTableModule.html",[2,0.087,4,0.101,5,0.035,6,0.035,16,0.009,18,1.309,38,0.185,194,0.152,236,0.129,254,0.051,257,1.693,259,0.546,579,0.006,580,0.006,614,1.168,636,4.253,734,1.347,777,0.66,840,1.652,895,1.868,906,0.883,908,1.37,909,0.929,910,1.468,935,5.604,940,5.604,942,6.631,947,1.957,949,5.037,950,1.957,977,4.559,986,5.939,1026,2.052,1027,1.538,1093,3.242,1113,3.14,1374,3.099,1396,3.099,1406,2.68,1416,2.907,1418,2.879,1420,2.907,1424,2.907,1426,2.879,1427,3.129,1431,3.129,1480,2.489,1830,3.044,2481,4.253,3584,5.939,3585,5.939,3586,5.939,3587,5.939,3738,4.559,3739,4.559,3740,4.559,3741,5.16,3742,4.559,3743,5.16,3744,6.722,3745,6.722,3746,6.722]],["title/pipes/TsTimeAgoPipe.html",[604,1.691,3068,3.317]],["body/pipes/TsTimeAgoPipe.html",[2,0.104,4,0.079,5,0.042,6,0.051,15,0.675,16,0.009,38,0.158,47,1.377,72,1.466,132,1.314,140,1.392,160,1.242,192,3.194,194,0.182,236,0.091,254,0.061,273,1.014,296,1.437,297,0.694,304,2.199,352,1.491,359,3.749,406,3.419,535,3.321,579,0.007,580,0.007,588,1.198,604,3.109,697,2.036,746,5.658,823,2.148,840,1.987,895,2.099,961,2.493,1004,1.647,1043,1.574,1046,1.807,1054,3.203,1892,3.927,1927,4.366,1928,5.312,1931,5.312,1945,3.927,1946,3.749,1947,3.749,1948,5.483,1949,5.483,2512,5.006,2513,6.091,2736,4.65,3068,5.658,3078,6.671,3747,7.551,3748,6.206,3749,6.671,3750,8.68,3751,6.206,3752,6.206,3753,6.206,3754,6.206,3755,6.206,3756,6.206,3757,6.206]],["title/pipes/TsTitleCasePipe.html",[604,1.691,3069,3.317]],["body/pipes/TsTitleCasePipe.html",[2,0.112,4,0.085,5,0.045,6,0.053,15,0.727,16,0.009,38,0.14,47,1.318,132,1.292,160,1.324,194,0.196,236,0.098,254,0.065,273,1.047,296,1.547,297,0.747,304,2.298,329,5.007,579,0.008,580,0.008,588,1.29,604,3.209,823,2.245,840,2.139,895,1.857,1004,1.774,1043,1.694,1046,1.946,1054,3.449,1927,4.701,1928,5.553,1931,5.553,1945,4.228,1946,4.037,1947,4.037,3069,5.914,3080,6.973,3390,5.903,3392,5.903,3758,7.893,3759,6.973,3760,6.682,3761,6.682,3762,6.682,3763,6.682]],["title/components/TsToggleComponent.html",[86,0.403,1408,1.526]],["body/components/TsToggleComponent.html",[0,1.028,2,0.062,4,0.047,5,0.036,6,0.057,10,0.55,11,0.834,15,0.958,16,0.009,31,1.622,36,1.339,37,1.556,38,0.159,47,1.023,50,1.182,52,1.603,63,1.224,64,1.297,69,1.05,72,1.13,73,0.874,76,1.678,83,2.771,86,0.745,98,2.311,99,1.489,101,1.297,123,1.519,132,1.323,140,0.681,143,1.627,146,1.127,150,2.049,160,1.159,165,1.473,172,1.221,175,1.238,179,0.915,182,1.91,185,1.724,188,1.91,191,0.799,193,2.756,194,0.108,196,2.968,197,3.314,198,1.026,202,0.817,205,1.272,207,1.182,215,1.727,223,1.84,224,1.421,226,2.396,227,1.489,228,1.489,232,2.721,233,2.23,234,2.008,235,2.23,236,0.092,246,1.354,248,1.591,249,2.311,250,1.824,251,1.709,252,1.672,253,1.305,254,0.074,255,2.137,256,1.078,257,1.209,259,0.771,260,1.531,261,1.272,262,2.052,263,2.137,264,1.743,265,1.294,267,1.752,273,1.059,279,1.385,280,1.421,281,1.513,282,1.323,284,1.265,286,0.962,289,1.323,290,1.323,291,1.155,292,1.155,295,1.59,297,1.031,298,3.848,304,1.555,311,1.183,315,1.241,326,1.1,352,1.055,388,1.78,445,2.713,447,0.62,478,2.336,481,2.137,534,2.968,535,2.857,579,0.005,580,0.005,586,1.669,588,1.327,598,1.211,601,1.241,627,4.807,691,0.814,706,2.696,777,0.472,778,1.154,780,2.461,784,1.519,840,1.182,895,1.743,909,0.665,961,1.003,965,1.1,980,1.272,1004,1.824,1038,1.305,1043,0.936,1046,1.555,1057,1.672,1075,1.241,1085,1.305,1098,1.385,1099,2.494,1259,1.272,1260,1.449,1355,1.41,1356,2.696,1357,1.449,1358,1.449,1359,2.095,1360,1.449,1361,1.449,1362,1.339,1363,1.449,1364,1.241,1365,1.449,1366,1.305,1367,1.339,1368,1.449,1369,1.339,1370,1.449,1371,1.272,1372,1.449,1373,1.449,1374,1.272,1375,2.095,1376,1.339,1377,1.339,1378,1.449,1379,1.127,1380,1.449,1381,1.305,1382,1.449,1383,1.305,1384,1.449,1385,1.305,1386,1.449,1387,1.305,1388,1.449,1389,1.449,1390,1.305,1391,1.449,1392,1.241,1393,1.449,1394,1.449,1395,1.449,1396,1.272,1397,1.305,1398,1.449,1399,1.305,1400,1.449,1401,1.339,1402,1.449,1403,1.182,1404,1.1,1405,1.449,1406,1.1,1407,1.449,1408,2.619,1409,1.449,1410,1.305,1411,1.449,1412,1.272,1413,1.449,1414,1.305,1415,1.449,1416,1.182,1417,1.449,1418,1.182,1419,2.095,1420,1.182,1421,1.449,1422,1.305,1423,1.449,1424,1.182,1425,1.449,1426,1.182,1427,1.272,1428,1.449,1429,1.305,1430,1.449,1431,1.272,1432,1.449,1433,1.1,1434,1.449,1435,1.272,1436,1.41,1437,1.449,1618,5.149,1623,3.025,1635,4.699,1638,5.149,1641,3.789,1645,4.412,1646,4.412,1647,4.412,1648,4.412,1649,4.307,1650,4.307,1651,4.307,1662,7.089,1663,3.261,1665,3.261,1666,2.456,1667,2.23,1668,2.597,1669,3.261,1670,4.348,1671,4.412,1672,2.597,1673,3.261,1674,2.597,1675,2.597,1676,3.261,1677,2.597,1682,3.261,1683,1.78,1684,2.336,1685,3.756,1686,3.261,1687,3.378,1688,3.756,1689,3.261,1691,3.261,2183,2.968,2328,2.857,3122,4.699,3395,4.307,3396,2.978,3397,5.541,3398,2.978,3399,4.412,3400,4.717,3401,4.717,3402,3.261,3403,5.541,3764,3.692,3765,5.339,3766,3.692,3767,3.692,3768,3.692,3769,3.692,3770,3.692,3771,3.692,3772,3.692,3773,3.692,3774,3.692]],["title/modules/TsToggleModule.html",[906,0.581,943,3.114]],["body/modules/TsToggleModule.html",[2,0.111,4,0.084,5,0.045,6,0.045,16,0.009,38,0.187,194,0.195,198,1.841,236,0.13,254,0.065,257,1.895,259,0.701,579,0.007,580,0.007,614,1.5,627,3.546,734,1.193,906,1.031,908,1.759,909,1.193,910,1.885,943,6.368,947,2.287,950,2.287,1026,2.397,1027,1.975,1028,4.545,1408,3.218,3398,5.344,3399,5.889,3775,5.853,3776,5.853,3777,5.853,3778,5.853,3779,6.625,3780,7.853,3781,7.853]],["title/components/TsTooltipComponent.html",[86,0.403,1410,1.565]],["body/components/TsTooltipComponent.html",[2,0.083,4,0.063,5,0.044,6,0.053,10,0.735,15,0.847,16,0.009,19,1.582,38,0.103,47,1.089,50,1.581,52,1.232,62,2.306,64,1.269,69,1.404,72,0.889,73,1.169,75,3.916,76,1.32,86,0.794,98,1.66,101,1.513,104,2.251,127,1.733,132,1.089,146,1.507,172,1.063,175,1.176,179,1.224,191,1.068,194,0.145,223,2.251,224,1.61,232,1.581,236,0.096,254,0.076,256,1.122,261,1.702,264,1.974,265,1.582,266,2.142,270,4.132,273,0.912,279,1.694,280,1.441,281,1.54,282,1.619,284,1.547,286,1.176,289,1.619,290,1.619,291,1.413,292,1.413,297,0.985,315,1.66,320,2.041,326,1.472,447,0.829,579,0.006,580,0.006,598,1.62,601,1.66,691,0.996,777,0.632,778,1.543,909,0.889,961,1.341,965,1.472,980,1.702,994,2.858,1038,1.745,1043,1.252,1057,2.236,1075,1.66,1085,1.745,1098,1.694,1259,1.702,1260,1.937,1336,2.107,1340,3.124,1355,1.886,1356,3.055,1357,1.937,1358,1.937,1359,2.562,1360,1.937,1361,1.937,1362,1.79,1363,1.937,1364,1.66,1365,1.937,1366,1.745,1367,1.79,1368,1.937,1369,1.79,1370,1.937,1371,1.702,1372,1.937,1373,1.937,1374,1.702,1375,2.562,1376,1.79,1377,1.79,1378,1.937,1379,1.507,1380,1.937,1381,1.745,1382,1.937,1383,1.745,1384,1.937,1385,1.745,1386,1.937,1387,1.745,1388,1.937,1389,1.937,1390,1.745,1391,1.937,1392,1.66,1393,1.937,1394,1.937,1395,1.937,1396,1.702,1397,1.745,1398,1.937,1399,1.745,1400,1.937,1401,1.79,1402,1.937,1403,1.581,1404,1.472,1405,1.937,1406,1.472,1407,1.937,1408,1.702,1409,1.937,1410,2.862,1411,1.937,1412,1.702,1413,1.937,1414,1.745,1415,1.937,1416,1.581,1417,1.937,1418,1.581,1419,2.562,1420,1.581,1421,1.937,1422,1.745,1423,1.937,1424,1.581,1425,1.937,1426,1.581,1427,1.702,1428,1.937,1429,1.745,1430,1.937,1431,1.702,1432,1.937,1433,1.472,1434,1.937,1435,1.702,1436,1.886,1437,1.937,1456,3.256,1905,3.05,2328,3.916,2975,7.245,3782,4.362,3783,5.769,3784,6.53,3785,6.53,3786,7.317,3787,7.317,3788,7.317,3789,6.53,3790,6.53,3791,4.937,3792,6.464,3793,4.937,3794,4.937]],["title/modules/TsTooltipModule.html",[906,0.581,944,2.562]],["body/modules/TsTooltipModule.html",[2,0.113,4,0.085,5,0.045,6,0.045,16,0.009,38,0.185,194,0.198,236,0.131,254,0.066,257,1.907,259,0.711,579,0.008,580,0.008,614,1.522,734,1.211,906,1.04,908,1.785,909,1.211,910,1.913,944,5.254,947,2.307,950,2.307,1026,2.418,1027,2.005,1410,3.289,3795,5.941,3796,5.941,3797,5.941,3798,6.725,3799,7.923,3800,6.725,3801,7.923]],["title/interfaces/TsUser.html",[0,0.726,789,2.801]],["body/interfaces/TsUser.html",[0,1.3,2,0.059,4,0.045,5,0.024,6,0.024,10,0.526,11,0.808,14,1.669,15,0.779,16,0.009,33,1.249,35,1.65,37,1.385,38,0.128,44,4.17,45,2.007,47,1.287,49,1.707,52,1.352,62,2.416,63,0.868,64,1.027,73,0.837,77,2.579,84,2.904,85,1.631,86,0.613,87,1.508,93,1.976,100,2.209,101,0.731,104,1.218,118,2.467,120,1.912,123,1.471,127,0.938,128,1.824,132,0.77,134,2.494,140,1.569,141,1.762,143,0.917,150,1.053,152,1.315,154,1.425,157,1.249,160,1.285,165,1.513,169,1.131,172,1.236,175,0.637,179,0.876,180,2.276,181,2.057,182,1.7,184,2.135,187,1.976,188,1.437,190,1.35,191,0.765,194,0.104,202,0.782,203,1.105,210,1.6,215,1.225,224,1.639,230,1.704,236,0.114,243,1.824,246,1.311,250,1.624,253,1.249,254,0.06,256,1.051,264,1.961,265,0.856,266,2.455,268,1.36,271,1.249,273,0.893,279,0.917,280,0.539,281,0.848,282,0.876,284,0.837,286,0.637,289,0.876,290,0.876,291,0.765,292,0.765,293,0.765,295,1.311,296,0.818,297,0.92,301,2.579,306,2.162,310,1.704,311,1.459,320,1.105,343,1.542,344,1.542,348,1.762,349,1.631,351,1.965,352,1.208,374,1.105,380,4.681,381,2.768,447,1.415,448,3.743,467,0.651,477,2.276,479,1.506,482,2.61,483,1.35,497,2.086,511,2.135,512,1.891,538,2.207,560,1.762,561,2.505,579,0.005,580,0.005,586,1.105,592,1.762,602,2.045,623,1.891,624,1.553,625,2.055,645,1.553,647,2.416,654,3.572,655,1.315,658,1.891,663,3.855,690,2.239,696,3.144,697,2.007,715,1.824,731,1.6,734,1.102,742,1.65,775,3.87,776,2.236,777,0.452,778,2.34,779,3.441,780,1.387,781,2.351,782,5.145,783,5.173,784,1.471,785,2.351,786,3.125,787,2.135,788,2.351,789,3.87,790,4.479,791,3.441,792,3.125,793,4.533,794,3.194,795,3.272,796,2.236,797,2.351,798,3.125,799,2.351,800,5.201,801,2.351,802,3.272,803,1.965,804,3.441,805,2.135,806,1.824,807,2.351,808,2.351,809,2.351,810,2.351,811,2.045,812,2.351,813,2.95,814,3.61,815,2.351,816,3.441,817,2.351,818,2.135,819,3.441,820,3.743,821,2.351,822,2.351,823,1.471,824,4.07,825,3.441,826,2.351,827,2.351,828,2.351,829,2.351,830,2.351,831,2.135,832,2.351,833,3.441,834,2.351,835,2.351,836,2.351,837,3.441,838,3.441,839,4.479,840,1.131,841,3.272,842,2.351,843,2.351,844,2.351,845,2.351,846,2.351,847,2.351,848,2.351,849,2.351,850,1.105,851,1.425,852,1.65,853,1.6,854,2.351,855,3.441,856,2.351,857,2.351,858,2.351,859,3.272,860,2.351,861,2.236,862,2.351,863,3.441,864,2.045,865,2.351,866,1.65,867,2.351,868,1.965,869,2.351,870,2.351,871,2.351,872,3.272,873,2.351,874,2.351,875,3.125,876,2.351,877,2.351,878,1.891,879,2.351,880,3.441,881,3.441,882,3.441,883,3.441,884,2.993,885,2.351,886,3.441,887,4.479,888,2.351,889,2.351,890,3.441,891,3.401,892,2.351,893,2.351,894,1.824,895,1.437,896,1.65,897,2.351,898,2.351,899,2.351,900,2.351,901,1.965,902,2.351,903,2.236,904,2.351,905,2.351]],["title/injectables/TsValidationMessageService.html",[850,1.384,3802,3.114]],["body/injectables/TsValidationMessageService.html",[1,4.76,2,0.087,4,0.066,5,0.035,6,0.046,10,0.776,14,2.043,15,0.736,16,0.009,24,4.502,25,3.149,26,3.468,29,2.599,32,3.149,33,1.842,38,0.141,47,1.28,62,2.434,72,1.587,73,2.143,77,2.599,79,2.897,85,1.263,98,1.752,100,1.71,102,3.666,128,2.69,132,1.007,140,1.557,146,2.065,149,3.149,160,1.257,163,4.502,172,1.091,194,0.153,225,3.468,236,0.077,248,2.37,250,1.796,254,0.051,268,1.665,273,0.936,297,0.945,381,3.621,439,2.224,446,2.69,479,1.97,535,2.789,559,3.514,560,3.373,561,1.939,562,3.905,564,3.905,566,5.07,579,0.007,580,0.006,586,2.115,587,3.016,588,1.006,591,3.298,634,3.666,635,1.925,697,1.71,733,3.905,734,1.219,760,2.69,767,2.161,777,0.866,814,2.514,850,2.348,851,2.728,901,2.897,961,2.04,991,3.761,1004,1.383,1046,1.97,1106,4.088,1136,3.016,1206,3.666,1264,4.281,1324,2.69,1568,4.204,1837,5.977,1901,4.204,2099,3.468,2208,3.298,2300,3.298,2363,4.348,2364,4.348,2411,4.281,2509,4.76,2511,4.76,2760,4.204,3116,3.905,3285,6.06,3328,4.204,3802,4.76,3803,5.07,3804,4.604,3805,6.766,3806,6.766,3807,6.766,3808,7.951,3809,5.212,3810,8.445,3811,7.28,3812,5.977,3813,3.905,3814,5.07,3815,5.977,3816,5.977,3817,5.212,3818,5.212,3819,6.766,3820,5.212,3821,4.204,3822,8.24,3823,4.204,3824,8.809,3825,5.458,3826,5.212,3827,4.204,3828,6.06,3829,5.212,3830,5.212,3831,4.204,3832,5.458,3833,5.212,3834,4.204,3835,5.212,3836,5.212,3837,5.212,3838,4.204,3839,5.212,3840,5.458,3841,5.212,3842,5.977,3843,5.212,3844,5.212,3845,5.212,3846,5.212,3847,5.212,3848,6.766,3849,5.212,3850,5.212,3851,5.212,3852,5.212,3853,5.212,3854,5.212]],["title/components/TsValidationMessagesComponent.html",[86,0.403,1412,1.526]],["body/components/TsValidationMessagesComponent.html",[2,0.064,4,0.049,5,0.037,6,0.06,10,0.57,11,0.857,15,0.922,16,0.009,29,1.91,38,0.146,42,1.735,47,1.246,49,0.972,50,1.227,52,1.661,63,1.075,64,1.209,69,1.09,72,1.624,73,2.045,76,1.555,83,2.983,86,0.792,101,1.134,124,4.505,132,1.206,140,1.181,155,2.995,160,1.277,165,1.294,172,1.118,175,1.259,191,0.829,194,0.113,197,3.088,198,1.065,202,0.848,205,1.321,207,1.227,215,0.908,223,1.89,224,1.445,232,1.227,234,1.756,236,0.056,245,1.545,246,0.972,247,3.088,249,1.288,254,0.068,256,0.943,261,1.321,264,1.773,265,1.329,266,1.799,273,0.988,280,1.424,281,1.52,282,1.359,284,1.299,286,0.988,291,1.186,292,1.186,293,1.186,297,1.028,298,3.485,304,2.036,311,1.495,315,1.288,318,2.561,326,1.142,343,1.142,344,1.142,369,1.848,388,2.645,391,1.91,392,2.734,394,3.485,467,1.011,473,1.789,474,1.589,475,1.635,476,1.91,559,3.268,579,0.005,580,0.005,588,1.349,598,1.257,601,1.288,691,0.836,777,0.49,778,1.198,823,1.989,909,0.69,961,1.041,965,1.142,980,1.321,991,4.921,1004,1.856,1038,1.354,1043,0.972,1075,1.288,1085,1.354,1098,1.423,1140,5.639,1259,1.321,1260,1.503,1262,3.47,1263,2.645,1309,3.091,1311,3.091,1356,2.743,1357,1.503,1358,1.503,1359,2.152,1360,1.503,1361,1.503,1362,1.389,1363,1.503,1364,1.288,1365,1.503,1366,1.354,1367,1.389,1368,1.503,1369,1.389,1370,1.503,1371,1.321,1372,1.503,1373,1.503,1374,1.321,1375,2.152,1376,1.389,1377,1.389,1378,1.503,1379,1.169,1380,1.503,1381,1.354,1382,1.503,1383,1.354,1384,1.503,1385,1.354,1386,1.503,1387,1.354,1388,1.503,1389,1.503,1390,1.354,1391,1.503,1392,1.288,1393,1.503,1394,1.503,1395,1.503,1396,1.321,1397,1.354,1398,1.503,1399,1.354,1400,1.503,1401,1.389,1402,1.503,1403,1.227,1404,1.142,1405,1.503,1406,1.142,1407,1.503,1408,1.321,1409,1.503,1410,1.354,1411,1.503,1412,2.409,1413,1.503,1414,1.354,1415,1.503,1416,1.227,1417,1.503,1418,1.227,1419,2.152,1420,1.227,1421,1.503,1422,1.354,1423,1.503,1424,1.227,1425,1.503,1426,1.227,1427,1.321,1428,1.503,1429,1.354,1430,1.503,1431,1.321,1432,1.503,1433,1.142,1434,1.503,1435,1.321,1436,1.464,1437,1.503,1666,2.549,1667,3.869,1990,3.649,2587,5.639,2647,5.166,3802,4.918,3803,6.632,3855,3.385,3856,5.483,3857,5.483,3858,5.483,3859,6.991,3860,6.991,3861,6.991,3862,6.991,3863,3.831,3864,5.483,3865,5.483,3866,3.831,3867,5.483,3868,7.696,3869,5.483,3870,5.483,3871,3.831,3872,3.831,3873,3.831,3874,3.831,3875,3.831,3876,3.831,3877,3.831,3878,3.831,3879,3.831,3880,3.831,3881,3.831,3882,3.831,3883,3.385,3884,3.831,3885,5.483,3886,5.483,3887,5.483,3888,3.831,3889,5.483,3890,3.831,3891,3.831,3892,3.831,3893,3.831,3894,5.483,3895,3.831,3896,5.483]],["title/modules/TsValidationMessagesModule.html",[906,0.581,945,2.461]],["body/modules/TsValidationMessagesModule.html",[2,0.11,4,0.083,5,0.044,6,0.044,16,0.009,38,0.187,72,1.552,194,0.192,198,1.817,236,0.132,254,0.064,257,1.884,259,0.88,579,0.007,580,0.007,614,1.48,734,1.177,906,1.023,908,1.735,909,1.177,910,1.859,945,5.091,947,2.268,950,2.268,991,3.633,1026,2.378,1027,1.948,1028,4.509,1412,3.196,3802,6.284,3803,4.897,3883,6.882,3897,5.774,3898,5.774,3899,5.774,3900,5.774,3901,6.536,3902,7.79]],["title/injectables/TsValidatorsService.html",[850,1.384,946,2.674]],["body/injectables/TsValidatorsService.html",[2,0.08,3,1.493,4,0.061,5,0.032,6,0.061,10,0.711,11,0.998,14,2.187,16,0.009,18,1.211,19,1.157,20,2.481,21,2.147,38,0.19,39,3.022,45,2.361,72,1.601,73,1.131,76,1.816,77,2.381,79,2.655,86,0.435,98,1.606,99,2.576,117,3.852,132,1.374,150,1.424,160,0.729,194,0.14,198,1.327,234,2.564,236,0.094,248,1.904,253,1.688,254,0.07,256,1.098,268,1.291,297,1.014,311,1.205,374,1.493,439,3.278,467,0.88,559,1.926,579,0.006,580,0.006,586,1.997,587,3.697,777,0.611,823,2.047,850,2.25,851,2.902,894,4.134,946,4.642,961,2.087,1013,2.655,1106,4.979,1112,3.022,1117,4.554,1118,3.551,1138,2.556,1264,3.022,1616,4.041,1715,3.852,1892,3.022,1961,3.022,2199,3.178,2235,3.178,2363,4.871,2364,4.77,2383,3.852,2404,3.852,2509,5.634,2511,5.634,2965,5.805,3813,3.578,3814,3.578,3821,6.46,3823,6.648,3825,5.152,3827,6.46,3828,5.805,3831,6.46,3832,5.152,3834,6.46,3838,6.46,3840,6.648,3842,7.281,3903,4.776,3904,7.197,3905,4.776,3906,7.197,3907,4.776,3908,7.197,3909,4.776,3910,7.197,3911,4.776,3912,7.197,3913,4.776,3914,7.197,3915,4.776,3916,7.197,3917,4.776,3918,7.197,3919,4.776,3920,7.197,3921,4.776,3922,7.197,3923,4.776,3924,7.197,3925,4.776,3926,7.197,3927,4.776,3928,7.197,3929,4.776,3930,7.197,3931,4.776,3932,8.241,3933,4.776,3934,4.776,3935,5.643,3936,4.219,3937,4.776,3938,4.776,3939,4.776,3940,4.776,3941,4.776,3942,4.776,3943,4.776,3944,4.776,3945,4.776,3946,4.776,3947,4.776,3948,4.776,3949,4.776,3950,4.776,3951,4.776,3952,4.776]],["title/directives/TsVerticalSpacingDirective.html",[691,0.675,1435,1.526]],["body/directives/TsVerticalSpacingDirective.html",[2,0.095,4,0.072,5,0.038,6,0.055,10,0.843,14,1.404,15,0.92,16,0.009,19,2.091,23,4.343,38,0.149,47,1.163,49,2.144,52,1.346,62,3.648,63,1.419,64,1.251,72,1.02,76,1.579,85,2.091,101,1.615,127,1.894,132,1.356,140,1.512,146,1.729,157,2.761,160,0.864,165,1.144,172,0.823,181,2.757,192,2.222,194,0.166,216,3.278,236,0.105,243,2.923,249,1.904,253,2.761,254,0.08,273,0.889,279,1.851,280,1.088,297,0.917,401,5.003,403,3.231,447,1.198,467,1.044,479,1.649,522,5.019,579,0.007,580,0.007,588,1.508,691,1.289,777,0.913,814,4.225,850,1.77,851,2.284,864,3.278,1004,1.894,1043,1.436,1047,3.984,1057,2.564,1129,3.148,1136,3.278,1355,2.163,1435,2.692,1436,3.229,1454,3.768,2463,4.343,2517,3.768,3102,6.164,3594,6.303,3601,4.243,3953,7.245,3954,5.003,3955,7.245,3956,5.663,3957,7.135,3958,5.663,3959,5.663,3960,5.663,3961,5.663,3962,5.663,3963,5.663,3964,5.663,3965,5.663,3966,5.663]],["title/classes/Version.html",[254,0.043,1013,2.461]],["body/classes/Version.html",[2,0.108,4,0.082,5,0.044,6,0.06,10,0.96,11,1.208,15,0.954,16,0.009,47,1.389,140,1.189,172,1.34,236,0.114,254,0.076,273,0.804,297,0.981,352,1.274,374,2.016,467,1.189,579,0.007,580,0.007,588,1.245,696,4.097,777,0.825,1004,1.712,1013,4.877,1114,5.289,1687,4.08,2452,4.291,3967,5.697,3968,7.579,3969,8.579,3970,7.579,3971,6.448,3972,7.728,3973,6.448,3974,6.448,3975,6.448,3976,6.448,3977,6.448,3978,6.448,3979,6.448,3980,6.448,3981,6.448,3982,6.448,3983,5.697]],["title/contributing.html",[135,1.619,2707,2.592,3984,2.972]],["body/contributing.html",[4,0.08,5,0.032,6,0.043,14,1.163,16,0.007,18,1.19,19,1.137,28,2.125,36,2.289,39,2.97,62,2.192,63,0.788,73,1.69,74,2.97,85,1.729,94,4.798,98,2.399,101,0.97,127,1.246,134,2.264,144,1.335,149,2.836,153,2.774,154,1.893,161,5.577,171,2.062,172,0.682,215,1.942,238,2.123,250,1.246,256,1.312,259,0.754,271,1.659,273,0.585,275,5.038,296,1.087,310,2.264,320,1.467,348,3.148,352,1.62,374,1.467,385,3.818,473,2.192,475,2.694,477,2.654,559,2.546,579,0.006,580,0.006,586,1.467,590,3.302,591,3.995,615,3.379,621,4.747,624,2.062,636,2.97,696,2.192,734,0.845,735,3.302,739,3.123,760,2.423,772,2.97,777,0.808,868,3.966,875,4.81,884,5.129,895,1.305,896,3.564,994,2.717,995,3.786,1013,2.609,1046,1.367,1055,3.379,1107,1.842,1115,3.786,1124,5.368,1256,3.302,1293,1.793,1320,4.441,1355,2.412,1454,3.123,1519,2.97,1533,4.441,1539,2.717,1545,4.31,1557,3.517,1582,3.517,1590,4.146,1706,3.786,1734,4.146,1742,4.747,1845,4.146,1859,3.786,1872,3.786,1904,6.741,1946,5.533,1960,4.708,1990,3.123,2068,2.836,2134,3.302,2165,4.828,2208,5.46,2235,3.123,2388,3.786,2390,3.379,2395,3.302,2401,5.346,2452,4.201,2460,3.786,2463,2.609,2464,3.786,2479,3.517,2481,5.566,2505,3.786,2673,6.423,2692,3.786,2694,5.755,2868,4.146,2939,4.146,2941,5.577,3282,2.97,3326,3.517,3406,2.836,3515,3.786,3604,4.146,3625,6.144,3635,5.577,3641,4.146,3677,6.871,3718,4.146,3936,7.402,3968,4.146,3970,4.146,3984,5.755,3985,4.146,3986,4.146,3987,6.313,3988,7.134,3989,7.962,3990,7.624,3991,8.798,3992,7.63,3993,6.313,3994,4.694,3995,7.134,3996,4.694,3997,6.741,3998,4.694,3999,6.313,4000,6.313,4001,7.134,4002,4.694,4003,7.134,4004,6.313,4005,6.313,4006,4.694,4007,3.786,4008,4.694,4009,4.694,4010,7.134,4011,6.313,4012,4.146,4013,4.694,4014,4.694,4015,4.694,4016,6.302,4017,4.694,4018,4.694,4019,4.694,4020,4.694,4021,4.694,4022,3.786,4023,4.694,4024,4.694,4025,4.694,4026,4.694,4027,4.694,4028,4.694,4029,4.694,4030,4.694,4031,4.694,4032,4.694,4033,4.694,4034,4.694,4035,4.694,4036,6.313,4037,6.313,4038,4.694,4039,4.694,4040,4.694,4041,7.034,4042,8.63,4043,8.966,4044,6.313,4045,7.63,4046,8.2,4047,7.134,4048,6.313,4049,7.63,4050,6.313,4051,4.694,4052,4.694,4053,4.146,4054,4.694,4055,7.134,4056,4.694,4057,6.313,4058,4.694,4059,4.146,4060,4.694,4061,4.694,4062,7.134,4063,4.694,4064,4.694,4065,4.694,4066,4.694,4067,4.694,4068,4.694,4069,4.694,4070,4.694,4071,4.694,4072,6.313,4073,4.694,4074,4.146]],["title/dependencies.html",[908,1.415,4075,3.684]],["body/dependencies.html",[16,0.009,39,4.296,194,0.2,198,1.887,202,1.503,203,2.123,306,2.4,320,2.491,535,3.634,579,0.008,580,0.008,655,2.527,754,3.775,908,1.802,961,1.844,1008,4.777,1027,2.024,1089,3.505,1355,3.044,2246,5.606,2307,5.477,2435,5.97,3200,4.777,3218,5.088,3219,5.088,4076,7.968,4077,6.79,4078,6.79,4079,6.79,4080,6.79,4081,6.79,4082,9.16,4083,6.79,4084,6.79,4085,6.79,4086,6.79,4087,6.79,4088,6.79,4089,6.79,4090,7.968,4091,6.79,4092,6.79,4093,6.79,4094,6.79]],["title/index.html",[10,0.548,135,1.619,2707,2.592]],["body/index.html",[4,0.053,5,0.049,6,0.053,10,0.619,14,1.959,16,0.007,17,5.133,18,2.004,19,1.408,21,3.079,23,2.312,30,3.511,33,1.47,35,2.714,38,0.152,39,3.677,45,2.593,47,0.865,50,1.861,64,1.106,69,1.905,72,1.461,73,0.985,79,2.312,83,1.677,86,0.61,97,2.631,98,1.398,99,2.343,117,3.355,120,2.094,127,1.778,132,1.232,133,2.767,135,1.827,144,1.183,146,1.774,149,2.513,150,1.732,153,1.827,168,4.51,202,0.92,203,1.3,208,2.226,216,2.407,221,3.674,224,0.86,230,2.006,234,1.861,238,2.565,246,1.055,248,1.732,251,1.332,253,1.47,256,1.246,259,0.614,265,1.008,268,1.174,273,0.518,275,2.631,281,0.682,295,1.055,306,1.47,310,3.23,348,2.074,349,1.408,374,1.3,385,2.226,439,2.479,446,2.999,447,0.976,449,3.674,475,2.858,497,2.701,512,2.226,538,1.774,561,1.547,579,0.006,580,0.006,583,3.677,586,1.816,587,2.407,598,1.364,604,3.099,615,3.11,627,2.226,635,1.183,640,3.116,661,2.513,734,1.047,735,4.088,772,2.631,783,3.363,806,2.999,811,2.407,814,3.497,841,2.631,851,2.343,852,1.942,853,1.883,861,2.631,894,3.938,901,2.312,908,1.104,949,3.116,961,2.147,965,1.997,980,1.433,1009,3.866,1013,2.312,1040,3.674,1041,2.767,1046,1.211,1051,2.926,1089,2.147,1094,1.677,1096,3.355,1099,1.942,1105,3.116,1106,3.511,1112,2.631,1133,3.116,1208,2.513,1213,2.631,1264,3.677,1288,3.674,1293,2.914,1320,4.088,1324,2.147,1339,2.407,1367,2.107,1379,1.269,1404,1.732,1473,2.767,1508,3.116,1526,3.355,1539,4.79,1545,4.901,1565,3.674,1567,8.224,1616,2.631,1619,3.866,1625,3.355,1683,2.006,1706,3.355,1713,4.354,1731,3.674,1830,2.631,1876,2.767,1889,2.926,1910,2.926,1926,3.674,1937,3.355,1942,3.355,1955,3.674,2024,2.513,2199,4.457,2235,3.866,2239,3.116,2295,3.674,2363,3.363,2364,3.363,2365,3.355,2401,3.116,2447,3.355,2459,3.116,2479,3.116,2481,2.631,2509,2.926,2511,2.926,2583,2.631,2606,5.717,2710,2.631,2714,5.403,2736,3.116,2866,5.133,2931,3.116,2932,3.674,2943,3.674,2965,3.355,2975,3.355,3012,5.133,3072,3.674,3075,3.674,3103,3.355,3116,3.116,3117,5.403,3188,8.269,3193,3.674,3194,3.674,3200,2.926,3282,2.631,3391,3.674,3597,5.133,3605,3.674,3625,4.354,3640,3.674,3677,3.355,3749,3.674,3759,3.674,3783,3.674,3813,4.354,3814,3.116,3821,3.355,3823,3.355,3825,4.687,3827,3.355,3828,5.403,3831,3.355,3832,4.687,3834,3.355,3838,3.355,3840,4.687,3935,5.133,3984,5.403,3985,3.674,3986,5.917,3990,7.429,3997,3.674,4007,3.355,4012,5.917,4016,3.674,4041,3.674,4053,5.917,4059,3.674,4074,3.674,4095,5.811,4096,5.811,4097,5.811,4098,5.811,4099,4.159,4100,4.159,4101,4.159,4102,4.159,4103,4.159,4104,4.159,4105,4.159,4106,4.159,4107,3.674,4108,6.698,4109,4.159,4110,4.159,4111,4.159,4112,4.159,4113,4.159,4114,4.159,4115,4.159,4116,6.698,4117,9.377,4118,4.159,4119,4.159,4120,4.159,4121,4.159,4122,4.159,4123,4.159,4124,4.159,4125,4.159,4126,4.159,4127,4.159,4128,4.159,4129,4.159,4130,4.159,4131,4.159,4132,4.159,4133,4.159,4134,4.159,4135,4.159,4136,4.159,4137,4.159,4138,4.159,4139,4.159,4140,4.159,4141,4.159,4142,4.159,4143,4.159,4144,4.159,4145,4.159,4146,4.159,4147,4.159,4148,4.159,4149,4.159,4150,4.159,4151,4.159,4152,4.159,4153,4.159,4154,4.159,4155,4.159,4156,6.698,4157,4.159,4158,4.159,4159,4.159,4160,4.159,4161,4.159,4162,4.159,4163,4.159,4164,4.159,4165,4.159,4166,4.159,4167,4.159,4168,4.159,4169,4.159,4170,4.159,4171,4.159,4172,4.159,4173,4.159,4174,4.159,4175,4.159,4176,6.698,4177,4.159,4178,5.811,4179,5.811,4180,4.159,4181,4.159,4182,4.159]],["title/license.html",[135,1.619,1546,2.972,2707,2.592]],["body/license.html",[5,0.045,6,0.045,16,0.007,37,1.501,82,5.888,256,1.351,259,0.701,347,4.196,359,4.748,579,0.007,580,0.007,734,1.195,794,2.83,811,5.011,994,3.839,1055,4.482,1102,5.35,1108,4.97,1336,2.83,1545,4.007,1546,5.35,1742,4.413,1783,4.196,1905,3.098,1936,5.859,1956,5.859,1970,5.888,1971,5.299,1990,4.413,2136,4.666,2199,4.413,2510,4.666,3201,4.666,3311,5.35,3567,5.859,3625,4.97,3705,5.859,4007,5.35,4183,6.632,4184,8.374,4185,9.222,4186,6.632,4187,7.858,4188,6.632,4189,6.632,4190,6.632,4191,6.632,4192,7.858,4193,6.632,4194,6.632,4195,6.632,4196,6.632,4197,6.632,4198,6.632,4199,6.632,4200,6.632,4201,7.858,4202,6.632,4203,7.858,4204,6.632,4205,6.632,4206,6.632,4207,6.632,4208,6.632,4209,6.632,4210,6.632,4211,6.632,4212,6.632,4213,6.632,4214,6.632,4215,6.632]],["title/modules.html",[906,0.797]],["body/modules.html",[16,0.007,146,2.892,579,0.007,580,0.007,906,0.813,907,4.641,916,4.357,917,4.357,918,3.197,919,4.357,920,4.357,921,4.357,922,4.121,923,4.357,924,4.357,925,4.357,926,4.357,927,3.919,928,2.721,929,3.585,930,4.121,931,4.357,932,4.357,933,4.121,934,4.357,935,4.121,936,4.357,937,4.357,938,4.357,939,4.121,940,4.121,941,4.121,942,4.357,943,4.357,944,3.585,945,3.443,978,4.357,1355,3.62,4107,8.371,4216,9.476]],["title/overview.html",[4022,4.894]],["body/overview.html",[0,0.461,16,0.009,86,0.256,229,3.748,232,1.706,236,0.041,254,0.028,257,0.637,258,3.992,259,0.297,261,2.617,579,0.004,580,0.004,601,2.406,604,1.074,614,0.637,691,0.429,734,0.507,778,2.237,850,0.879,906,0.572,907,7.045,908,0.746,909,0.507,910,0.8,911,2.484,912,2.484,913,2.484,914,2.484,915,2.484,916,5.888,917,5.457,918,4.412,919,5.976,920,5.837,921,5.641,922,5.255,923,5.78,924,5.78,925,5.641,926,6.108,927,5.198,928,3.815,929,4.976,930,5.405,931,5.641,932,6.108,933,5.521,934,5.641,935,5.688,936,5.78,937,5.457,938,5.78,939,5.405,940,5.466,941,5.255,942,6.403,943,5.457,944,4.755,945,4.69,946,3.92,947,1.268,978,5.934,998,3.545,1021,2.484,1022,2.484,1024,2.484,1038,2.53,1066,2.484,1067,2.484,1068,2.484,1071,2.484,1072,2.484,1074,2.484,1075,2.406,1081,2.484,1082,2.484,1084,2.484,1085,2.53,1259,2.467,1362,2.595,1364,2.553,1366,1.883,1369,2.595,1371,2.467,1374,2.467,1376,2.595,1377,2.595,1379,2.479,1381,2.53,1383,1.883,1385,2.53,1387,2.53,1390,2.53,1392,2.553,1396,2.467,1397,2.53,1399,2.53,1401,2.753,1403,2.292,1406,2.134,1408,2.617,1410,2.53,1412,2.467,1414,2.53,1416,2.431,1418,2.292,1420,2.431,1422,2.53,1424,2.431,1426,2.292,1427,2.617,1429,2.53,1431,2.617,1433,2.134,1435,2.467,1438,2.484,1439,2.484,1441,2.484,1605,2.484,1606,2.484,1607,2.484,1608,2.484,1628,3.748,1695,2.484,1696,2.484,1697,2.484,1698,2.484,1788,2.484,1789,2.484,1791,2.484,1879,2.484,1880,2.484,1882,2.484,1924,5.035,2059,2.484,2060,2.484,2062,2.484,2087,2.484,2088,2.484,2089,2.484,2091,2.484,2092,2.484,2201,2.484,2202,2.484,2204,2.484,2258,2.484,2259,2.484,2260,2.484,2269,2.484,2270,2.484,2271,2.484,2273,2.484,2275,3.748,2301,2.484,2302,2.484,2304,2.484,2356,2.484,2357,2.484,2358,2.484,2426,2.484,2427,2.484,2429,2.484,2517,2.897,2886,2.484,2887,2.484,2889,2.484,2923,2.484,2924,2.484,2926,2.484,3057,2.484,3058,2.484,3060,2.484,3063,2.484,3064,2.484,3065,2.484,3066,5.363,3067,5.363,3068,5.363,3069,5.363,3112,3.748,3164,2.484,3165,2.484,3166,2.484,3168,2.484,3258,2.484,3259,2.484,3260,2.484,3335,2.484,3336,2.484,3338,2.484,3341,2.484,3342,2.484,3343,2.484,3345,2.484,3346,4.298,3399,3.748,3580,2.484,3581,2.484,3582,2.484,3590,2.484,3591,2.484,3592,2.484,3738,2.484,3739,2.484,3740,2.484,3742,2.484,3775,2.484,3776,2.484,3777,2.484,3778,2.484,3795,2.484,3796,2.484,3797,2.484,3802,3.748,3897,2.484,3898,2.484,3899,2.484,3900,2.484,4022,2.268,4217,2.812,4218,2.812,4219,4.354,4220,2.812]],["title/miscellaneous/typealiases.html",[4221,2.76,4222,5.331]],["body/miscellaneous/typealiases.html",[5,0.03,6,0.064,7,3.554,10,0.671,14,1.522,15,0.975,16,0.009,23,2.504,25,3.71,26,2.997,27,2.997,44,2.04,47,0.914,49,1.771,62,2.868,64,0.687,65,4.915,67,3.634,68,3.634,72,0.811,75,3.286,76,1.412,84,2.116,85,1.092,89,3.376,98,2.065,99,2.476,110,4.915,119,3.71,120,1.919,132,0.914,144,1.747,146,2.132,150,2.624,157,2.17,160,0.687,169,1.966,171,1.979,210,2.04,225,2.997,226,2.669,238,1.515,248,1.343,250,2.407,256,1.393,261,1.553,267,1.478,273,0.561,295,1.142,297,1.028,320,1.408,352,0.89,403,2.78,445,2.285,447,0.756,522,4.32,561,1.676,579,0.006,580,0.006,581,3.376,583,2.85,588,0.87,601,2.065,614,1.02,615,3.286,618,3.376,619,5.234,632,5.234,659,4.648,690,1.408,691,0.937,776,2.85,778,1.408,792,2.722,794,2.62,798,2.722,800,4.42,806,3.872,820,2.504,961,1.897,965,1.343,981,2.997,994,3.554,1009,2.997,1010,2.607,1075,2.349,1106,2.722,1129,2.504,1136,2.607,1214,3.169,1258,3.376,1259,2.116,1261,3.634,1273,4.601,1280,3.98,1282,6.172,1296,2.85,1304,3.169,1324,3.169,1325,6.172,1326,3.98,1327,3.98,1328,3.98,1329,3.98,1330,3.98,1335,3.169,1336,2.62,1338,3.169,1339,2.607,1340,3.885,1341,3.169,1342,2.504,1345,4.32,1379,2.396,1392,1.515,1404,1.343,1410,1.592,1433,2.082,1435,1.553,1506,3.98,1519,2.85,1530,6.172,1536,3.98,1539,2.607,1570,3.98,1571,3.98,1572,3.98,1573,3.98,1574,3.98,1910,3.169,1924,3.169,1925,3.98,1929,6.172,1937,3.634,1942,3.634,1960,3.286,2024,2.722,2083,3.634,2084,5.425,2184,5.234,2186,5.234,2206,3.634,2226,5.635,2241,3.376,2251,3.376,2252,3.634,2328,3.739,2363,3.554,2364,4.043,2434,3.376,2435,3.376,2440,4.601,2441,5.635,2463,3.884,2470,5.635,2473,5.234,2480,4.601,2481,2.85,2484,3.376,2490,3.376,2517,2.997,2546,5.635,2547,4.953,2548,3.634,2549,3.376,2552,3.376,2553,5.234,2824,3.98,2838,6.172,2842,6.172,2844,6.172,2847,6.172,3082,3.169,3083,4.601,3102,5.832,3111,5.635,3199,3.376,3220,6.052,3405,2.997,3408,2.607,3411,2.607,3412,2.722,3601,3.376,3782,3.98,3792,6.172,3953,3.98,3954,5.425,3955,6.172,4221,3.376,4223,4.505,4224,3.98,4225,5.425,4226,6.141,4227,6.172,4228,4.505,4229,6.935,4230,4.505,4231,3.98,4232,5.425,4233,4.505,4234,6.986,4235,4.505,4236,3.98,4237,3.98,4238,6.986,4239,3.98,4240,3.98,4241,3.98,4242,5.425,4243,4.505,4244,4.505,4245,3.98,4246,3.98,4247,3.98,4248,3.98,4249,3.98,4250,3.98,4251,3.98]],["title/miscellaneous/variables.html",[2474,3.75,4221,2.76]],["body/miscellaneous/variables.html",[5,0.021,6,0.063,7,3.293,8,2.343,9,5.6,10,0.466,14,2.224,15,0.991,16,0.009,23,1.739,36,2.595,42,3.24,45,1.026,49,2.147,50,1.001,64,0.477,65,3.322,67,2.523,68,2.523,72,1.338,73,1.348,76,1.856,78,5.027,79,1.739,80,2.343,82,2.343,83,2.886,84,2.185,85,0.758,86,0.748,90,1.889,93,1.195,102,2.2,104,1.078,126,2.763,128,1.614,132,1.377,143,1.857,144,0.89,146,0.954,155,2.529,157,2.241,165,0.954,171,1.374,193,3.694,196,3.978,216,3.293,225,2.081,226,2.174,234,2.291,237,3.539,238,1.588,239,2.763,240,2.763,241,2.763,242,5.027,243,1.614,244,3.539,245,2.886,246,1.815,247,4.278,248,2.477,249,2.406,250,2.03,251,2.291,252,3.24,253,2.937,254,0.07,256,1.09,257,0.708,258,4.264,259,0.828,260,2.967,261,1.628,262,3.978,267,1.026,268,0.632,297,0.761,352,1.344,374,1.476,403,3.463,522,4.788,559,2.295,574,2.523,579,0.004,580,0.004,584,4.528,587,1.81,588,0.604,691,0.72,697,2.08,734,0.563,760,1.614,767,1.297,814,2.278,850,0.978,853,1.416,878,2.527,895,0.869,959,2.2,961,0.849,965,0.932,981,2.081,991,2.625,999,2.523,1007,3.809,1011,2.2,1012,1.81,1013,3.524,1014,2.343,1015,4.003,1016,2.523,1086,2.343,1092,3.809,1098,1.225,1129,3.163,1136,2.733,1258,2.343,1261,2.523,1264,2.988,1304,2.2,1334,6.757,1336,1.334,1340,1.979,1364,1.051,1379,1.441,1392,1.051,1401,1.134,1404,2.029,1408,1.078,1454,2.081,1463,2.523,1503,2.988,1560,2.523,1614,2.523,1628,4.003,1687,1.979,1886,2.763,1887,4.172,1907,4.003,1908,4.172,1909,4.46,1910,3.322,1911,4.46,1912,6.322,1913,3.539,1914,2.763,1915,2.763,1916,2.763,2086,4.75,2096,2.523,2097,3.809,2099,2.081,2100,2.523,2101,4.59,2206,2.523,2226,5.49,2241,2.343,2248,5.027,2251,2.343,2252,2.523,2275,4.003,2363,2.733,2364,2.733,2434,2.343,2440,4.75,2463,1.739,2473,3.539,2474,2.2,2480,2.343,2484,2.343,2490,2.343,2517,3.142,2552,2.343,2553,3.539,2554,4.59,2555,4.59,2556,2.523,2557,4.59,2558,4.59,2559,4.59,2560,2.523,2561,4.59,2562,2.523,2583,4.306,2771,2.523,3082,2.2,3083,4.264,3102,2.2,3112,4.003,3199,2.343,3201,2.2,3243,6.538,3346,4.59,3396,2.523,3399,4.003,3405,2.081,3408,1.81,3411,1.81,3412,3.83,3418,3.669,3428,4.003,3429,2.2,3505,4.264,3506,3.809,3510,4.59,3511,4.59,3512,2.523,3566,4.172,3577,4.59,3578,2.763,3579,2.763,3601,2.343,3803,3.539,3804,5.6,3811,6.012,3812,5.027,3813,2.343,3814,3.539,3815,5.027,3816,5.027,3855,4.172,3967,2.763,3983,2.763,4221,2.343,4224,2.763,4225,2.763,4227,2.763,4229,6.757,4231,2.763,4232,4.172,4236,4.172,4237,2.763,4239,2.763,4240,2.763,4241,2.763,4242,4.172,4245,2.763,4246,2.763,4247,2.763,4248,2.763,4249,2.763,4250,2.763,4251,2.763,4252,6.339,4253,4.722,4254,3.127,4255,6.339,4256,3.127,4257,4.722,4258,5.69,4259,3.127,4260,3.127,4261,5.69,4262,5.69,4263,3.127,4264,3.127,4265,5.69,4266,5.69,4267,3.127,4268,3.127,4269,3.127,4270,3.127,4271,3.127,4272,3.127,4273,3.127,4274,7.979,4275,3.127,4276,3.127,4277,3.127,4278,3.127,4279,3.127,4280,3.127,4281,3.127,4282,3.127,4283,3.127,4284,3.127,4285,5.69,4286,8.392,4287,3.127,4288,3.127,4289,3.127,4290,5.69,4291,5.69,4292,3.127,4293,6.339,4294,7.43,4295,6.339,4296,3.127,4297,3.127,4298,4.722,4299,4.722,4300,3.127,4301,3.127,4302,3.127,4303,3.127,4304,3.127,4305,4.722,4306,6.339,4307,4.722,4308,4.722,4309,4.722,4310,3.127]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":49,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDateAdapter.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsLinkComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.75",{"_index":2556,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/variables.html":{}}}],["00",{"_index":1920,"title":{},"body":{"classes/TsDateAdapter.html":{}}}],["02",{"_index":1940,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["02/08/2018",{"_index":1933,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["08t05:00:00.000z",{"_index":1941,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["1",{"_index":157,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsDateAdapter.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["1);open",{"_index":2514,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["1,234.56",{"_index":2488,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["10",{"_index":243,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":1958,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["100",{"_index":102,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCardComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"injectables/TsValidationMessageService.html":{},"miscellaneous/variables.html":{}}}],["100`exampl",{"_index":109,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["100px",{"_index":3642,"title":{},"body":{"components/TsTableComponent.html":{}}}],["101",{"_index":1861,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["1024",{"_index":244,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/variables.html":{}}}],["10mb",{"_index":241,"title":{},"body":{"interfaces/ImageRatio.html":{},"miscellaneous/variables.html":{}}}],["10px",{"_index":4288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":4276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12);open",{"_index":2518,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["12.34",{"_index":2485,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["12.4",{"_index":2489,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["12/12/1982",{"_index":2486,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["123",{"_index":2492,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["1231231234",{"_index":2491,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["1234",{"_index":2483,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["1234.56",{"_index":2487,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["12345",{"_index":2482,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["123456789",{"_index":2493,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["1234567890",{"_index":2499,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["12:00:00am",{"_index":1939,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["12rem",{"_index":3643,"title":{},"body":{"components/TsTableComponent.html":{}}}],["13",{"_index":4219,"title":{},"body":{"overview.html":{}}}],["138",{"_index":3120,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["16",{"_index":4269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16:9",{"_index":1326,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["1:1",{"_index":1330,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["1:2",{"_index":408,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["1a237",{"_index":1828,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["1px",{"_index":1864,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["1}&per_page=${perpag",{"_index":3695,"title":{},"body":{"components/TsTableComponent.html":{}}}],["2",{"_index":403,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsDateAdapter.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":4088,"title":{},"body":{"dependencies.html":{}}}],["2.25.2",{"_index":4086,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1232,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["200",{"_index":107,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["2000",{"_index":1132,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["2018",{"_index":1936,"title":{},"body":{"pipes/TsDatePipe.html":{},"license.html":{}}}],["22",{"_index":4220,"title":{},"body":{"overview.html":{}}}],["243",{"_index":3043,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["25",{"_index":4309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2;disabl",{"_index":1989,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["3",{"_index":3601,"title":{},"body":{"components/TsTableComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["3.7.2",{"_index":4093,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":103,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["300x100",{"_index":105,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["300x50",{"_index":108,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["31",{"_index":4218,"title":{},"body":{"overview.html":{}}}],["312",{"_index":4045,"title":{},"body":{"contributing.html":{}}}],["32",{"_index":4217,"title":{},"body":{"overview.html":{}}}],["342299450",{"_index":2785,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["3:2",{"_index":1328,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["3:4",{"_index":409,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCardComponent.html":{}}}],["4",{"_index":1129,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"components/TsTableComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":4077,"title":{},"body":{"dependencies.html":{}}}],["4.0.10",{"_index":4080,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":113,"title":{},"body":{"interfaces/ImageRatio.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["456",{"_index":2496,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["45deg",{"_index":4298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4:3",{"_index":1327,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["5",{"_index":2517,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"directives/TsVerticalSpacingDirective.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["5.0.1",{"_index":4094,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":106,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["500",{"_index":114,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["5:4",{"_index":1329,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["6",{"_index":1136,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["6.0.0",{"_index":4083,"title":{},"body":{"dependencies.html":{}}}],["6.0.7",{"_index":4082,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":4090,"title":{},"body":{"dependencies.html":{}}}],["6789",{"_index":2494,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["7",{"_index":4275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["700",{"_index":115,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["72",{"_index":112,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["7890)while",{"_index":2497,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["8",{"_index":1967,"title":{},"body":{"interfaces/TsDateRange.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["8.13.1",{"_index":4087,"title":{},"body":{"dependencies.html":{}}}],["800",{"_index":116,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["83",{"_index":3119,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["8th",{"_index":1935,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["9",{"_index":2771,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/variables.html":{}}}],["9.]/g",{"_index":2562,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/variables.html":{}}}],["9]/g",{"_index":2560,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/variables.html":{}}}],["9_",{"_index":3308,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["_",{"_index":2580,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{}}}],["_acceptedtyp",{"_index":373,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["_autocapit",{"_index":2624,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["_autocomplet",{"_index":2627,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["_background",{"_index":2212,"title":{},"body":{"components/TsIconComponent.html":{}}}],["_border",{"_index":1269,"title":{},"body":{"components/TsCardComponent.html":{}}}],["_cdkcolumndef",{"_index":3529,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_columncount",{"_index":1154,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["_columnhead",{"_index":1166,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["_columnvalid",{"_index":1170,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["_currentpageindex",{"_index":2984,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["_data",{"_index":3700,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["_datefilt",{"_index":2632,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["_dateformgroup",{"_index":2020,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["_datepick",{"_index":2635,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["_debouncedelay",{"_index":695,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["_direct",{"_index":3441,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["_disableclear",{"_index":3446,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["_formatmodelvaluefn",{"_index":3141,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_formatuilabelfn",{"_index":3134,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_formatuisublabelfn",{"_index":3137,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_formcontrol",{"_index":379,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["_handleclick",{"_index":3520,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_hidebutton",{"_index":390,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["_hiderequiredmark",{"_index":2643,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["_hint",{"_index":2646,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["_id",{"_index":394,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsValidationMessagesComponent.html":{}}}],["_initialgapcalcul",{"_index":2700,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["_intl",{"_index":3528,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_intl.chang",{"_index":3533,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_intl.sortdescriptionlabel(id",{"_index":3564,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["_ischeck",{"_index":1638,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["_isclear",{"_index":2651,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["_isdis",{"_index":2023,"title":{},"body":{"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_isfocus",{"_index":2656,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["_isrequir",{"_index":2659,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["_issort",{"_index":3519,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_isvisu",{"_index":3145,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_iszerobas",{"_index":2974,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["_label",{"_index":2662,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["_maximumkilobytesperfil",{"_index":398,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["_maxrow",{"_index":1149,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["_minimumcharact",{"_index":710,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["_multipl",{"_index":417,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["_name",{"_index":3148,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_ngzone",{"_index":2696,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["_option",{"_index":3151,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_parent",{"_index":1449,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["_progress",{"_index":421,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["_ratioconstraint",{"_index":414,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["_renderchangessubscript",{"_index":3701,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["_renderdata",{"_index":3702,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["_rowcount",{"_index":1159,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["_seedfil",{"_index":438,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["_selectionscontrol",{"_index":722,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["_sizeconstraint",{"_index":444,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["_small",{"_index":3154,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["_sort",{"_index":3527,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_sort._statechang",{"_index":3532,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["_sort.direct",{"_index":3565,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["_spacing.scss",{"_index":4279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_statechang",{"_index":3432,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["_svgicon",{"_index":2213,"title":{},"body":{"components/TsIconComponent.html":{}}}],["_theme",{"_index":1270,"title":{},"body":{"components/TsCardComponent.html":{}}}],["_totalrecord",{"_index":2992,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["_tssortheadermixinbas",{"_index":3511,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["_tssortmixinbas",{"_index":3428,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"miscellaneous/variables.html":{}}}],["_uid",{"_index":299,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["_updatechangesubscript",{"_index":3704,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["_validateimmedi",{"_index":3859,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["_validateonchang",{"_index":3860,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["_valuechang",{"_index":2571,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["_visual",{"_index":1515,"title":{},"body":{"components/TsChartComponent.html":{}}}],["abil",{"_index":1206,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"injectables/TsValidationMessageService.html":{}}}],["abov",{"_index":994,"title":{},"body":{"modules/TerminusUIModule.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsDateRange.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTooltipComponent.html":{},"contributing.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["absolut",{"_index":1859,"title":{},"body":{"components/TsCopyComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"contributing.html":{}}}],["abstract",{"_index":3116,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{}}}],["abstractcontrol",{"_index":1995,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["accent",{"_index":2251,"title":{},"body":{"components/TsIconComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["accept",{"_index":62,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsTableDataSource.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["accept(valu",{"_index":365,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["acceptedtyp",{"_index":372,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["access",{"_index":251,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["accessor",{"_index":249,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/variables.html":{}}}],["accident",{"_index":1212,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["accord",{"_index":1192,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["account",{"_index":2870,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["action",{"_index":794,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsConfirmationDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["actionnam",{"_index":2179,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["activ",{"_index":723,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["actual",{"_index":563,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsChartComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["actual_compon",{"_index":1437,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["ad",{"_index":1107,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"contributing.html":{}}}],["adapt",{"_index":1888,"title":{},"body":{"classes/TsDateAdapter.html":{},"modules/TsInputModule.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["adapter.t",{"_index":1887,"title":{},"body":{"classes/TsDateAdapter.html":{},"miscellaneous/variables.html":{}}}],["adapter.ts:43",{"_index":1900,"title":{},"body":{"classes/TsDateAdapter.html":{}}}],["adapter.ts:58",{"_index":1894,"title":{},"body":{"classes/TsDateAdapter.html":{}}}],["adapter.ts:69",{"_index":1903,"title":{},"body":{"classes/TsDateAdapter.html":{}}}],["add",{"_index":349,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["add/remov",{"_index":2413,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["added(chip",{"_index":637,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["addheaders(headercount",{"_index":1253,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["addon",{"_index":4092,"title":{},"body":{"dependencies.html":{}}}],["addons/dist/createautocorrecteddatepip",{"_index":2544,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["addons/dist/createnumbermask",{"_index":2542,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["address",{"_index":3813,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["addrows(rowcount",{"_index":1181,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["adher",{"_index":4051,"title":{},"body":{"contributing.html":{}}}],["admin",{"_index":785,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["advis",{"_index":4054,"title":{},"body":{"contributing.html":{}}}],["affect",{"_index":2220,"title":{},"body":{"components/TsIconComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["aftercontentcheck",{"_index":2531,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["aftercontentinit",{"_index":178,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["afterviewinit",{"_index":647,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["ag",{"_index":3615,"title":{},"body":{"components/TsTableComponent.html":{}}}],["again",{"_index":2523,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["ago.pip",{"_index":3079,"title":{},"body":{"modules/TsPipesModule.html":{}}}],["ago.pipe.t",{"_index":3748,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["ago.pipe.ts:16",{"_index":3751,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["ago/tim",{"_index":3078,"title":{},"body":{"modules/TsPipesModule.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["alert",{"_index":1876,"title":{},"body":{"components/TsCopyComponent.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsSelectedFile.html":{},"index.html":{}}}],["alia",{"_index":2327,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["alias",{"_index":4223,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":2222,"title":{},"body":{"components/TsIconComponent.html":{}}}],["allcolumn",{"_index":3622,"title":{},"body":{"components/TsTableComponent.html":{}}}],["allerror",{"_index":1141,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["allitem",{"_index":870,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["allow",{"_index":250,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["allowdecim",{"_index":2769,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["allowedmaskshorcut",{"_index":2554,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/variables.html":{}}}],["allowedmaskshorcuts.indexof(valu",{"_index":2664,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["allowleadingzero",{"_index":2772,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["allowsimag",{"_index":330,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["alon",{"_index":2449,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{}}}],["along",{"_index":3717,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["alpha.7",{"_index":4089,"title":{},"body":{"dependencies.html":{}}}],["alpha.7glob",{"_index":4142,"title":{},"body":{"index.html":{}}}],["alreadi",{"_index":760,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCopyComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["alter",{"_index":1292,"title":{},"body":{"components/TsCardComponent.html":{}}}],["altern",{"_index":3126,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["alway",{"_index":1557,"title":{},"body":{"components/TsChartComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"contributing.html":{}}}],["alwayshidden",{"_index":779,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["am4chart",{"_index":1550,"title":{},"body":{"components/TsChartComponent.html":{}}}],["am4charts.chart",{"_index":1564,"title":{},"body":{"components/TsChartComponent.html":{}}}],["am4cor",{"_index":1548,"title":{},"body":{"components/TsChartComponent.html":{}}}],["am4map",{"_index":1552,"title":{},"body":{"components/TsChartComponent.html":{}}}],["am4themes_anim",{"_index":1554,"title":{},"body":{"components/TsChartComponent.html":{}}}],["am4themes_materi",{"_index":1556,"title":{},"body":{"components/TsChartComponent.html":{}}}],["amchart",{"_index":1000,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{}}}],["amcharts.core.usetheme(them",{"_index":1020,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{}}}],["amcharts.servic",{"_index":1576,"title":{},"body":{"components/TsChartComponent.html":{},"modules/TsChartModule.html":{}}}],["amcharts.them",{"_index":1018,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{}}}],["amcharts.themes.length",{"_index":1019,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{}}}],["amcharts/amcharts4",{"_index":4076,"title":{},"body":{"dependencies.html":{}}}],["amcharts/amcharts4/chart",{"_index":1551,"title":{},"body":{"components/TsChartComponent.html":{}}}],["amcharts/amcharts4/cor",{"_index":1549,"title":{},"body":{"components/TsChartComponent.html":{}}}],["amcharts/amcharts4/map",{"_index":1553,"title":{},"body":{"components/TsChartComponent.html":{}}}],["amcharts/amcharts4/themes/anim",{"_index":1555,"title":{},"body":{"components/TsChartComponent.html":{}}}],["amchartsfactori",{"_index":1558,"title":{},"body":{"components/TsChartComponent.html":{}}}],["amchartsservic",{"_index":1523,"title":{},"body":{"components/TsChartComponent.html":{}}}],["amount",{"_index":2965,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["and/or",{"_index":2510,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"license.html":{}}}],["angular",{"_index":949,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsSortModule.html":{},"modules/TsTableModule.html":{},"index.html":{}}}],["angular'",{"_index":1621,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["angular/anim",{"_index":4081,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/overlay",{"_index":1738,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"modules/TsConfirmationModule.html":{}}}],["angular/cdk/platform",{"_index":2535,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["angular/cdk/port",{"_index":1740,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["angular/cdk/t",{"_index":1480,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{}}}],["angular/cdk/text",{"_index":2537,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["angular/common",{"_index":1027,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":3645,"title":{},"body":{"components/TsTableComponent.html":{}}}],["angular/cor",{"_index":194,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1089,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsInputModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/form",{"_index":198,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"interfaces/TsDateRange.html":{},"modules/TsFileUploadModule.html":{},"modules/TsInputModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"modules/TsPaginatorModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"dependencies.html":{}}}],["angular/http",{"_index":4085,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplet",{"_index":651,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["angular/material/button",{"_index":1078,"title":{},"body":{"modules/TsButtonModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{}}}],["angular/material/checkbox",{"_index":1627,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{}}}],["angular/material/chip",{"_index":1032,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["angular/material/cor",{"_index":1444,"title":{},"body":{"modules/TsCardModule.html":{},"modules/TsCopyModule.html":{},"classes/TsDateAdapter.html":{},"modules/TsIconButtonModule.html":{},"modules/TsInputModule.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"modules/TsRadioGroupModule.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["angular/material/datepick",{"_index":2280,"title":{},"body":{"modules/TsInputModule.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["angular/material/icon",{"_index":2247,"title":{},"body":{"components/TsIconComponent.html":{},"modules/TsIconModule.html":{}}}],["angular/material/input",{"_index":1034,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["angular/material/menu",{"_index":2878,"title":{},"body":{"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{}}}],["angular/material/progress",{"_index":1036,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsButtonModule.html":{},"modules/TsFileUploadModule.html":{}}}],["angular/material/radio",{"_index":3109,"title":{},"body":{"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{}}}],["angular/material/select",{"_index":3349,"title":{},"body":{"modules/TsSelectModule.html":{}}}],["angular/material/slid",{"_index":3398,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{}}}],["angular/material/tooltip",{"_index":3800,"title":{},"body":{"modules/TsTooltipModule.html":{}}}],["angular/platform",{"_index":2246,"title":{},"body":{"components/TsIconComponent.html":{},"modules/TsInputModule.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":2307,"title":{},"body":{"modules/TsLinkModule.html":{},"modules/TsNavigationModule.html":{},"dependencies.html":{}}}],["anim",{"_index":2583,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSortModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["animate(sort_animation_transit",{"_index":4294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animationcurves.standard_curv",{"_index":4283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animationdurations.ent",{"_index":4282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animations.t",{"_index":4262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anoth",{"_index":894,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["answer",{"_index":4014,"title":{},"body":{"contributing.html":{}}}],["any).instanceof",{"_index":2795,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["anyth",{"_index":741,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["anytim",{"_index":2026,"title":{},"body":{"interfaces/TsDateRange.html":{},"components/TsTableComponent.html":{}}}],["api",{"_index":134,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsDateAdapter.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["app",{"_index":1568,"title":{},"body":{"components/TsChartComponent.html":{},"components/TsLinkComponent.html":{},"injectables/TsValidationMessageService.html":{}}}],["appar",{"_index":2740,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["appear",{"_index":74,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"contributing.html":{}}}],["appeas",{"_index":2107,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["appli",{"_index":1561,"title":{},"body":{"components/TsChartComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["applic",{"_index":2866,"title":{},"body":{"components/TsMenuComponent.html":{},"index.html":{}}}],["applicationref",{"_index":2322,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["appref",{"_index":2321,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["appropri",{"_index":1590,"title":{},"body":{"components/TsChartComponent.html":{},"contributing.html":{}}}],["area",{"_index":3103,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"index.html":{}}}],["argument",{"_index":1715,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsValidatorsService.html":{}}}],["aria",{"_index":2183,"title":{},"body":{"components/TsIconButtonComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{}}}],["ariadescribedbi",{"_index":3129,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["arialabel",{"_index":3122,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["arialabelledbi",{"_index":3127,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["aris",{"_index":1108,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsTableComponent.html":{},"license.html":{}}}],["around",{"_index":1319,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{}}}],["arr",{"_index":1222,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["arr.indexof(el",{"_index":1223,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["array",{"_index":84,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["array.from(item",{"_index":871,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["arraycontainsobject",{"_index":656,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["arraycontainsobject(select",{"_index":761,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["arrow",{"_index":3513,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["arrow_drop_down",{"_index":2856,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["arrowposit",{"_index":3526,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["asc",{"_index":3411,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ascend",{"_index":3542,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{}}}],["ask",{"_index":1732,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["aspect",{"_index":1280,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["aspectratio",{"_index":1272,"title":{},"body":{"components/TsCardComponent.html":{}}}],["aspectratio(valu",{"_index":1343,"title":{},"body":{"components/TsCardComponent.html":{}}}],["aspectratiopad",{"_index":1271,"title":{},"body":{"components/TsCardComponent.html":{}}}],["asset",{"_index":4135,"title":{},"body":{"index.html":{}}}],["assign",{"_index":1847,"title":{},"body":{"components/TsCopyComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{}}}],["assist",{"_index":4097,"title":{},"body":{"index.html":{}}}],["associ",{"_index":1990,"title":{},"body":{"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsValidationMessagesComponent.html":{},"contributing.html":{},"license.html":{}}}],["assumpt",{"_index":3624,"title":{},"body":{"components/TsTableComponent.html":{}}}],["asterisk",{"_index":2442,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["async",{"_index":2315,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["asynchron",{"_index":3368,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["attach",{"_index":1331,"title":{},"body":{"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["attempt",{"_index":1104,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["attr",{"_index":496,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["attribut",{"_index":549,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsIconButtonComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["author",{"_index":4208,"title":{},"body":{"license.html":{}}}],["auto",{"_index":600,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["autocapit",{"_index":2471,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["autocapitalize(valu",{"_index":2622,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["autocomplet",{"_index":583,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["autocomplete'},{'nam",{"_index":1358,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["autocomplete(valu",{"_index":2625,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["autocomplete.compon",{"_index":1037,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["autocomplete.component.html",{"_index":676,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["autocomplete.component.scss",{"_index":677,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["autocomplete/autocomplete.modul",{"_index":951,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["autocompletedefault",{"_index":2558,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/variables.html":{}}}],["autocompletetrigg",{"_index":689,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["autocompletetrigger(valu",{"_index":687,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["autofil",{"_index":2572,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["autofillmonitor",{"_index":2536,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["autofocu",{"_index":1040,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"index.html":{}}}],["autofocus.direct",{"_index":1070,"title":{},"body":{"modules/TsAutofocusModule.html":{}}}],["autofocus/autofocus.modul",{"_index":952,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["autom",{"_index":3230,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["automat",{"_index":3282,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"contributing.html":{},"index.html":{}}}],["autosubmit",{"_index":3275,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["avail",{"_index":45,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["availablespac",{"_index":815,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["avoid",{"_index":1945,"title":{},"body":{"pipes/TsDatePipe.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["axi",{"_index":1565,"title":{},"body":{"components/TsChartComponent.html":{},"index.html":{}}}],["b",{"_index":590,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{}}}],["back",{"_index":314,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCardComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{}}}],["backdropclass",{"_index":1757,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["background",{"_index":2214,"title":{},"body":{"components/TsIconComponent.html":{}}}],["background(valu",{"_index":2253,"title":{},"body":{"components/TsIconComponent.html":{}}}],["badg",{"_index":4119,"title":{},"body":{"index.html":{}}}],["bar",{"_index":278,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsChartComponent.html":{},"modules/TsFileUploadModule.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["bar_valu",{"_index":3090,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["base",{"_index":253,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["base.compon",{"_index":235,"title":{},"body":{"interfaces/ImageRatio.html":{},"modules/TerminusUIModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["base.component.t",{"_index":3174,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:26",{"_index":3180,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:31",{"_index":3181,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:36",{"_index":3182,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:42",{"_index":3175,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:47",{"_index":3186,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:53",{"_index":3184,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:61",{"_index":3176,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:69",{"_index":3177,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:77",{"_index":3178,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["base.component.ts:85",{"_index":3179,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["basic",{"_index":20,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"injectables/TsValidatorsService.html":{}}}],["baz",{"_index":3092,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["baz_valu",{"_index":3091,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["be",{"_index":2390,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"contributing.html":{}}}],["befor",{"_index":98,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["begin",{"_index":891,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSelectedFile.html":{},"interfaces/TsUser.html":{}}}],["behavior",{"_index":3406,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"contributing.html":{}}}],["behaviorsubject",{"_index":654,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSelectedFile.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{}}}],["behaviorsubject(initialdata",{"_index":3730,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["behaviorsubject(this.filerefer",{"_index":2110,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["behaviorsubject(undefin",{"_index":2009,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["behind",{"_index":4271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["believ",{"_index":4115,"title":{},"body":{"index.html":{}}}],["below",{"_index":75,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTooltipComponent.html":{},"miscellaneous/typealiases.html":{}}}],["benjamin",{"_index":4152,"title":{},"body":{"index.html":{}}}],["best",{"_index":735,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"contributing.html":{},"index.html":{}}}],["beta.15",{"_index":4140,"title":{},"body":{"index.html":{}}}],["beta.16",{"_index":4084,"title":{},"body":{"dependencies.html":{}}}],["beta.50",{"_index":4078,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":2939,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{}}}],["between",{"_index":128,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"components/TsConfirmationModalComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"miscellaneous/variables.html":{}}}],["bind",{"_index":1054,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["bing",{"_index":3089,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["blob",{"_index":1100,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["blob([join",{"_index":1257,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["blobgener",{"_index":1172,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["block",{"_index":2245,"title":{},"body":{"components/TsIconComponent.html":{}}}],["blur",{"_index":1667,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["bodi",{"_index":1123,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["bodyportalhost",{"_index":2316,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["boilerpl",{"_index":3426,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["book",{"_index":4132,"title":{},"body":{"index.html":{}}}],["bookmark",{"_index":2200,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["boolean",{"_index":52,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDateAdapter.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["bootstrap",{"_index":910,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["border",{"_index":1273,"title":{},"body":{"components/TsCardComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["border(valu",{"_index":1349,"title":{},"body":{"components/TsCardComponent.html":{}}}],["borderclass",{"_index":1315,"title":{},"body":{"components/TsCardComponent.html":{}}}],["both",{"_index":2024,"title":{},"body":{"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["bother",{"_index":2713,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["bottom",{"_index":1341,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"miscellaneous/typealiases.html":{}}}],["bound",{"_index":1980,"title":{},"body":{"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["boundari",{"_index":1959,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["box",{"_index":3142,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["branch",{"_index":4043,"title":{},"body":{"contributing.html":{}}}],["breadcrumb",{"_index":4120,"title":{},"body":{"index.html":{}}}],["break",{"_index":818,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["breakpoint",{"_index":861,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["breakwidth",{"_index":819,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["brian",{"_index":4162,"title":{},"body":{"index.html":{}}}],["brows",{"_index":4107,"title":{},"body":{"index.html":{},"modules.html":{}}}],["browser",{"_index":1355,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":2278,"title":{},"body":{"modules/TsInputModule.html":{}}}],["browseranimationsmodul",{"_index":2277,"title":{},"body":{"modules/TsInputModule.html":{}}}],["budget",{"_index":2871,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["bug",{"_index":2673,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"contributing.html":{}}}],["built",{"_index":1171,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["button",{"_index":120,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["button'",{"_index":1730,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["button'},{'nam",{"_index":1359,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["button.compon",{"_index":1080,"title":{},"body":{"modules/TsButtonModule.html":{},"modules/TsIconButtonModule.html":{}}}],["button.component.html",{"_index":2178,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.scss",{"_index":2177,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.t",{"_index":2174,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:50",{"_index":2185,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:56",{"_index":2187,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:62",{"_index":2188,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:68",{"_index":2189,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:74",{"_index":2190,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:80",{"_index":2193,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.component.ts:82",{"_index":2182,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["button.modul",{"_index":967,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsFileUploadModule.html":{}}}],["button.module.t",{"_index":2205,"title":{},"body":{"modules/TsIconButtonModule.html":{}}}],["button/button.compon",{"_index":1744,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsMenuComponent.html":{}}}],["button/button.modul",{"_index":953,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsFileUploadModule.html":{},"components/TsIconButtonComponent.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMenuModule.html":{},"modules/TsPaginatorModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{}}}],["button/icon",{"_index":966,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsFileUploadModule.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{}}}],["buttonact",{"_index":3267,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["buttonmessag",{"_index":321,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["buttontyp",{"_index":2180,"title":{},"body":{"components/TsIconButtonComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["bypass",{"_index":2133,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["byte",{"_index":237,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/variables.html":{}}}],["bytes_per_kb",{"_index":2101,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/variables.html":{}}}],["c",{"_index":347,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"license.html":{}}}],["c.height.max",{"_index":355,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["c.height.max.tolocalestr",{"_index":361,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["c.height.min",{"_index":354,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["c.height.min.tolocalestr",{"_index":360,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["c.width.max",{"_index":357,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["c.width.max.tolocalestr",{"_index":363,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["c.width.min",{"_index":356,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["c.width.min.tolocalestr",{"_index":362,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["c.width.min.tolocalestring()}x${c.height.min.tolocalestr",{"_index":358,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["calcul",{"_index":2100,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/variables.html":{}}}],["calendar",{"_index":2447,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"index.html":{}}}],["call",{"_index":474,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"classes/TsTableDataSource.html":{},"components/TsValidationMessagesComponent.html":{}}}],["callback",{"_index":1670,"title":{},"body":{"components/TsCheckboxComponent.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSelectedFile.html":{},"components/TsToggleComponent.html":{}}}],["can't",{"_index":4038,"title":{},"body":{"contributing.html":{}}}],["cancel",{"_index":1712,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{}}}],["candis",{"_index":3419,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["capabl",{"_index":4131,"title":{},"body":{"index.html":{}}}],["captur",{"_index":1471,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsTableComponent.html":{}}}],["card",{"_index":1264,"title":{},"body":{"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["card'},{'nam",{"_index":1361,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["card.compon",{"_index":1445,"title":{},"body":{"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{}}}],["card.component.html",{"_index":1268,"title":{},"body":{"components/TsCardComponent.html":{}}}],["card.component.scss",{"_index":1267,"title":{},"body":{"components/TsCardComponent.html":{}}}],["card/card.modul",{"_index":954,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["card__titl",{"_index":1458,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["caret",{"_index":2672,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["case",{"_index":475,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"components/TsValidationMessagesComponent.html":{},"contributing.html":{},"index.html":{}}}],["case.pip",{"_index":3077,"title":{},"body":{"modules/TsPipesModule.html":{}}}],["case.pipe.t",{"_index":3390,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["case.pipe.ts:11",{"_index":3392,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["case/sent",{"_index":3076,"title":{},"body":{"modules/TsPipesModule.html":{},"pipes/TsSentenceCasePipe.html":{}}}],["case/titl",{"_index":3080,"title":{},"body":{"modules/TsPipesModule.html":{},"pipes/TsTitleCasePipe.html":{}}}],["cast",{"_index":1492,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["catch",{"_index":1875,"title":{},"body":{"components/TsCopyComponent.html":{},"components/TsTableComponent.html":{}}}],["catcherror",{"_index":3651,"title":{},"body":{"components/TsTableComponent.html":{}}}],["caus",{"_index":1845,"title":{},"body":{"components/TsCopyComponent.html":{},"contributing.html":{}}}],["cdk",{"_index":3535,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["cdk_row_templ",{"_index":2158,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["cdkcell",{"_index":1475,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["cdkcelldef",{"_index":1476,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["cdkcolumndef",{"_index":1477,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["cdkheadercel",{"_index":1478,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["cdkheadercelldef",{"_index":1479,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["cdkheaderrow",{"_index":2155,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["cdkheaderrowdef",{"_index":2159,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["cdkrow",{"_index":2160,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["cdkrowdef",{"_index":2161,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["cdktabl",{"_index":3514,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{}}}],["cdktablemodul",{"_index":3745,"title":{},"body":{"modules/TsTableModule.html":{}}}],["cell",{"_index":1113,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{}}}],["cell'",{"_index":1252,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["cell'},{'nam",{"_index":1419,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["center",{"_index":1284,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsConfirmationDirective.html":{}}}],["centeredcont",{"_index":1274,"title":{},"body":{"components/TsCardComponent.html":{}}}],["certain",{"_index":1112,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsTableComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["chain",{"_index":1591,"title":{},"body":{"components/TsChartComponent.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["chanc",{"_index":4020,"title":{},"body":{"contributing.html":{}}}],["chang",{"_index":215,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"contributing.html":{}}}],["change(select",{"_index":642,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["changed/input",{"_index":214,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsChartComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["changedetect",{"_index":289,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{}}}],["changedetectionstrategi",{"_index":179,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{}}}],["changedetectionstrategy.onpush",{"_index":290,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{}}}],["changedetectorref",{"_index":180,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{}}}],["changedetectorref.markforcheck",{"_index":3534,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["changelog",{"_index":4174,"title":{},"body":{"index.html":{}}}],["changepag",{"_index":3026,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["changes.hasownproperty('triggerformreset",{"_index":2419,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["changes.iszerobased.currentvalu",{"_index":3011,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["charact",{"_index":587,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["charg",{"_index":4191,"title":{},"body":{"license.html":{}}}],["charity&#x1f4bb",{"_index":4153,"title":{},"body":{"index.html":{}}}],["chart",{"_index":1009,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["chart'},{'nam",{"_index":1363,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["chart.compon",{"_index":1610,"title":{},"body":{"modules/TsChartModule.html":{}}}],["chart.component.html",{"_index":1514,"title":{},"body":{"components/TsChartComponent.html":{}}}],["chart.component.scss",{"_index":1513,"title":{},"body":{"components/TsChartComponent.html":{}}}],["chart.responsive.en",{"_index":1601,"title":{},"body":{"components/TsChartComponent.html":{}}}],["chart/chart.modul",{"_index":955,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["chartdiv",{"_index":1516,"title":{},"body":{"components/TsChartComponent.html":{}}}],["chartiniti",{"_index":1520,"title":{},"body":{"components/TsChartComponent.html":{}}}],["check",{"_index":895,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["checkbox",{"_index":1619,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"index.html":{}}}],["checkbox'},{'nam",{"_index":1365,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["checkbox.compon",{"_index":1701,"title":{},"body":{"modules/TsCheckboxModule.html":{}}}],["checkbox.component.html",{"_index":1629,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":1630,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["checkbox/checkbox.compon",{"_index":2414,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["checkbox/checkbox.modul",{"_index":956,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoginFormModule.html":{}}}],["checkout",{"_index":4044,"title":{},"body":{"contributing.html":{}}}],["checkpar",{"_index":1450,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["child",{"_index":1285,"title":{},"body":{"components/TsCardComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["chip",{"_index":640,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"index.html":{}}}],["chips/select",{"_index":681,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["choic",{"_index":1785,"title":{},"body":{"components/TsConfirmationModalComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["chord",{"_index":1574,"title":{},"body":{"components/TsChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["chose",{"_index":763,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["chosen",{"_index":1735,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"classes/TsDateAdapter.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["circus_t",{"_index":4133,"title":{},"body":{"index.html":{}}}],["claim",{"_index":4211,"title":{},"body":{"license.html":{}}}],["clariti",{"_index":791,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["class",{"_index":254,"title":{"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsCheckboxChange.html":{},"classes/TsDateAdapter.html":{},"classes/TsImageDimensions.html":{},"classes/TsRadioChange.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"classes/TsSortHeaderBase.html":{},"classes/TsTableDataSource.html":{},"classes/Version.html":{}},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["class.t",{"_index":2250,"title":{},"body":{"components/TsIconComponent.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["clean",{"_index":1723,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["cleanvalu",{"_index":2796,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["cleanvalue(valu",{"_index":2761,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["cleanvalue.length",{"_index":2821,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["cleanvalue.slice(0",{"_index":2803,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["cleanvalue.split",{"_index":2800,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["clear",{"_index":28,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"contributing.html":{}}}],["clearabl",{"_index":2443,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["clearallrow",{"_index":1247,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["clearfile(id",{"_index":164,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["clearheadercel",{"_index":1249,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["cli",{"_index":4177,"title":{},"body":{"index.html":{}}}],["click",{"_index":118,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{}}}],["click(ev",{"_index":1716,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["clickabl",{"_index":2564,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["clickev",{"_index":2181,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["client",{"_index":3699,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["clipboard",{"_index":1797,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["clone",{"_index":863,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["close",{"_index":1734,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"contributing.html":{}}}],["cluster_terminusuimodul",{"_index":911,"title":{},"body":{"modules/TerminusUIModule.html":{},"overview.html":{}}}],["cluster_terminusuimodule_declar",{"_index":912,"title":{},"body":{"modules/TerminusUIModule.html":{},"overview.html":{}}}],["cluster_terminusuimodule_export",{"_index":914,"title":{},"body":{"modules/TerminusUIModule.html":{},"overview.html":{}}}],["cluster_terminusuimodule_import",{"_index":913,"title":{},"body":{"modules/TerminusUIModule.html":{},"overview.html":{}}}],["cluster_terminusuimodule_provid",{"_index":915,"title":{},"body":{"modules/TerminusUIModule.html":{},"overview.html":{}}}],["cluster_tsautocompletemodul",{"_index":1021,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"overview.html":{}}}],["cluster_tsautocompletemodule_declar",{"_index":1022,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"overview.html":{}}}],["cluster_tsautocompletemodule_export",{"_index":1024,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"overview.html":{}}}],["cluster_tsautocompletemodule_import",{"_index":1023,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["cluster_tsautofocusmodul",{"_index":1066,"title":{},"body":{"modules/TsAutofocusModule.html":{},"overview.html":{}}}],["cluster_tsautofocusmodule_declar",{"_index":1067,"title":{},"body":{"modules/TsAutofocusModule.html":{},"overview.html":{}}}],["cluster_tsautofocusmodule_export",{"_index":1068,"title":{},"body":{"modules/TsAutofocusModule.html":{},"overview.html":{}}}],["cluster_tsbuttonmodul",{"_index":1071,"title":{},"body":{"modules/TsButtonModule.html":{},"overview.html":{}}}],["cluster_tsbuttonmodule_declar",{"_index":1072,"title":{},"body":{"modules/TsButtonModule.html":{},"overview.html":{}}}],["cluster_tsbuttonmodule_export",{"_index":1074,"title":{},"body":{"modules/TsButtonModule.html":{},"overview.html":{}}}],["cluster_tsbuttonmodule_import",{"_index":1073,"title":{},"body":{"modules/TsButtonModule.html":{}}}],["cluster_tscardmodul",{"_index":1438,"title":{},"body":{"modules/TsCardModule.html":{},"overview.html":{}}}],["cluster_tscardmodule_declar",{"_index":1439,"title":{},"body":{"modules/TsCardModule.html":{},"overview.html":{}}}],["cluster_tscardmodule_export",{"_index":1441,"title":{},"body":{"modules/TsCardModule.html":{},"overview.html":{}}}],["cluster_tscardmodule_import",{"_index":1440,"title":{},"body":{"modules/TsCardModule.html":{}}}],["cluster_tschartmodul",{"_index":1605,"title":{},"body":{"modules/TsChartModule.html":{},"overview.html":{}}}],["cluster_tschartmodule_declar",{"_index":1606,"title":{},"body":{"modules/TsChartModule.html":{},"overview.html":{}}}],["cluster_tschartmodule_export",{"_index":1607,"title":{},"body":{"modules/TsChartModule.html":{},"overview.html":{}}}],["cluster_tschartmodule_provid",{"_index":1608,"title":{},"body":{"modules/TsChartModule.html":{},"overview.html":{}}}],["cluster_tscheckboxmodul",{"_index":1695,"title":{},"body":{"modules/TsCheckboxModule.html":{},"overview.html":{}}}],["cluster_tscheckboxmodule_declar",{"_index":1696,"title":{},"body":{"modules/TsCheckboxModule.html":{},"overview.html":{}}}],["cluster_tscheckboxmodule_export",{"_index":1698,"title":{},"body":{"modules/TsCheckboxModule.html":{},"overview.html":{}}}],["cluster_tscheckboxmodule_tscheckboxcomponent_provid",{"_index":1697,"title":{},"body":{"modules/TsCheckboxModule.html":{},"overview.html":{}}}],["cluster_tsconfirmationmodul",{"_index":1788,"title":{},"body":{"modules/TsConfirmationModule.html":{},"overview.html":{}}}],["cluster_tsconfirmationmodule_declar",{"_index":1789,"title":{},"body":{"modules/TsConfirmationModule.html":{},"overview.html":{}}}],["cluster_tsconfirmationmodule_export",{"_index":1791,"title":{},"body":{"modules/TsConfirmationModule.html":{},"overview.html":{}}}],["cluster_tsconfirmationmodule_import",{"_index":1790,"title":{},"body":{"modules/TsConfirmationModule.html":{}}}],["cluster_tscopymodul",{"_index":1879,"title":{},"body":{"modules/TsCopyModule.html":{},"overview.html":{}}}],["cluster_tscopymodule_declar",{"_index":1880,"title":{},"body":{"modules/TsCopyModule.html":{},"overview.html":{}}}],["cluster_tscopymodule_export",{"_index":1882,"title":{},"body":{"modules/TsCopyModule.html":{},"overview.html":{}}}],["cluster_tscopymodule_import",{"_index":1881,"title":{},"body":{"modules/TsCopyModule.html":{}}}],["cluster_tscsventrymodul",{"_index":1081,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"overview.html":{}}}],["cluster_tscsventrymodule_declar",{"_index":1082,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"overview.html":{}}}],["cluster_tscsventrymodule_export",{"_index":1084,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"overview.html":{}}}],["cluster_tscsventrymodule_import",{"_index":1083,"title":{},"body":{"modules/TsCSVEntryModule.html":{}}}],["cluster_tsdaterangemodul",{"_index":2059,"title":{},"body":{"modules/TsDateRangeModule.html":{},"overview.html":{}}}],["cluster_tsdaterangemodule_declar",{"_index":2060,"title":{},"body":{"modules/TsDateRangeModule.html":{},"overview.html":{}}}],["cluster_tsdaterangemodule_export",{"_index":2062,"title":{},"body":{"modules/TsDateRangeModule.html":{},"overview.html":{}}}],["cluster_tsdaterangemodule_import",{"_index":2061,"title":{},"body":{"modules/TsDateRangeModule.html":{}}}],["cluster_tsfileuploadmodul",{"_index":2087,"title":{},"body":{"modules/TsFileUploadModule.html":{},"overview.html":{}}}],["cluster_tsfileuploadmodule_declar",{"_index":2088,"title":{},"body":{"modules/TsFileUploadModule.html":{},"overview.html":{}}}],["cluster_tsfileuploadmodule_export",{"_index":2091,"title":{},"body":{"modules/TsFileUploadModule.html":{},"overview.html":{}}}],["cluster_tsfileuploadmodule_import",{"_index":2090,"title":{},"body":{"modules/TsFileUploadModule.html":{}}}],["cluster_tsfileuploadmodule_provid",{"_index":2092,"title":{},"body":{"modules/TsFileUploadModule.html":{},"overview.html":{}}}],["cluster_tsfileuploadmodule_tsfileuploadcomponent_provid",{"_index":2089,"title":{},"body":{"modules/TsFileUploadModule.html":{},"overview.html":{}}}],["cluster_tsiconbuttonmodul",{"_index":2201,"title":{},"body":{"modules/TsIconButtonModule.html":{},"overview.html":{}}}],["cluster_tsiconbuttonmodule_declar",{"_index":2202,"title":{},"body":{"modules/TsIconButtonModule.html":{},"overview.html":{}}}],["cluster_tsiconbuttonmodule_export",{"_index":2204,"title":{},"body":{"modules/TsIconButtonModule.html":{},"overview.html":{}}}],["cluster_tsiconbuttonmodule_import",{"_index":2203,"title":{},"body":{"modules/TsIconButtonModule.html":{}}}],["cluster_tsiconmodul",{"_index":2258,"title":{},"body":{"modules/TsIconModule.html":{},"overview.html":{}}}],["cluster_tsiconmodule_declar",{"_index":2259,"title":{},"body":{"modules/TsIconModule.html":{},"overview.html":{}}}],["cluster_tsiconmodule_export",{"_index":2260,"title":{},"body":{"modules/TsIconModule.html":{},"overview.html":{}}}],["cluster_tsinputmodul",{"_index":2269,"title":{},"body":{"modules/TsInputModule.html":{},"overview.html":{}}}],["cluster_tsinputmodule_declar",{"_index":2270,"title":{},"body":{"modules/TsInputModule.html":{},"overview.html":{}}}],["cluster_tsinputmodule_export",{"_index":2273,"title":{},"body":{"modules/TsInputModule.html":{},"overview.html":{}}}],["cluster_tsinputmodule_import",{"_index":2272,"title":{},"body":{"modules/TsInputModule.html":{}}}],["cluster_tsinputmodule_provid",{"_index":2274,"title":{},"body":{"modules/TsInputModule.html":{}}}],["cluster_tsinputmodule_tsinputcomponent_provid",{"_index":2271,"title":{},"body":{"modules/TsInputModule.html":{},"overview.html":{}}}],["cluster_tslinkmodul",{"_index":2301,"title":{},"body":{"modules/TsLinkModule.html":{},"overview.html":{}}}],["cluster_tslinkmodule_declar",{"_index":2302,"title":{},"body":{"modules/TsLinkModule.html":{},"overview.html":{}}}],["cluster_tslinkmodule_export",{"_index":2304,"title":{},"body":{"modules/TsLinkModule.html":{},"overview.html":{}}}],["cluster_tslinkmodule_import",{"_index":2303,"title":{},"body":{"modules/TsLinkModule.html":{}}}],["cluster_tsloadingoverlaymodul",{"_index":2356,"title":{},"body":{"modules/TsLoadingOverlayModule.html":{},"overview.html":{}}}],["cluster_tsloadingoverlaymodule_declar",{"_index":2357,"title":{},"body":{"modules/TsLoadingOverlayModule.html":{},"overview.html":{}}}],["cluster_tsloadingoverlaymodule_export",{"_index":2358,"title":{},"body":{"modules/TsLoadingOverlayModule.html":{},"overview.html":{}}}],["cluster_tsloginformmodul",{"_index":2426,"title":{},"body":{"modules/TsLoginFormModule.html":{},"overview.html":{}}}],["cluster_tsloginformmodule_declar",{"_index":2427,"title":{},"body":{"modules/TsLoginFormModule.html":{},"overview.html":{}}}],["cluster_tsloginformmodule_export",{"_index":2429,"title":{},"body":{"modules/TsLoginFormModule.html":{},"overview.html":{}}}],["cluster_tsloginformmodule_import",{"_index":2428,"title":{},"body":{"modules/TsLoginFormModule.html":{}}}],["cluster_tsloginformmodule_provid",{"_index":2430,"title":{},"body":{"modules/TsLoginFormModule.html":{}}}],["cluster_tsmenumodul",{"_index":2886,"title":{},"body":{"modules/TsMenuModule.html":{},"overview.html":{}}}],["cluster_tsmenumodule_declar",{"_index":2887,"title":{},"body":{"modules/TsMenuModule.html":{},"overview.html":{}}}],["cluster_tsmenumodule_export",{"_index":2889,"title":{},"body":{"modules/TsMenuModule.html":{},"overview.html":{}}}],["cluster_tsmenumodule_import",{"_index":2888,"title":{},"body":{"modules/TsMenuModule.html":{}}}],["cluster_tsnavigationmodul",{"_index":2923,"title":{},"body":{"modules/TsNavigationModule.html":{},"overview.html":{}}}],["cluster_tsnavigationmodule_declar",{"_index":2924,"title":{},"body":{"modules/TsNavigationModule.html":{},"overview.html":{}}}],["cluster_tsnavigationmodule_export",{"_index":2926,"title":{},"body":{"modules/TsNavigationModule.html":{},"overview.html":{}}}],["cluster_tsnavigationmodule_import",{"_index":2925,"title":{},"body":{"modules/TsNavigationModule.html":{}}}],["cluster_tspaginatormodul",{"_index":3057,"title":{},"body":{"modules/TsPaginatorModule.html":{},"overview.html":{}}}],["cluster_tspaginatormodule_declar",{"_index":3058,"title":{},"body":{"modules/TsPaginatorModule.html":{},"overview.html":{}}}],["cluster_tspaginatormodule_export",{"_index":3060,"title":{},"body":{"modules/TsPaginatorModule.html":{},"overview.html":{}}}],["cluster_tspaginatormodule_import",{"_index":3059,"title":{},"body":{"modules/TsPaginatorModule.html":{}}}],["cluster_tspipesmodul",{"_index":3063,"title":{},"body":{"modules/TsPipesModule.html":{},"overview.html":{}}}],["cluster_tspipesmodule_declar",{"_index":3064,"title":{},"body":{"modules/TsPipesModule.html":{},"overview.html":{}}}],["cluster_tspipesmodule_export",{"_index":3065,"title":{},"body":{"modules/TsPipesModule.html":{},"overview.html":{}}}],["cluster_tsradiogroupmodul",{"_index":3164,"title":{},"body":{"modules/TsRadioGroupModule.html":{},"overview.html":{}}}],["cluster_tsradiogroupmodule_declar",{"_index":3165,"title":{},"body":{"modules/TsRadioGroupModule.html":{},"overview.html":{}}}],["cluster_tsradiogroupmodule_export",{"_index":3168,"title":{},"body":{"modules/TsRadioGroupModule.html":{},"overview.html":{}}}],["cluster_tsradiogroupmodule_import",{"_index":3167,"title":{},"body":{"modules/TsRadioGroupModule.html":{}}}],["cluster_tsradiogroupmodule_tsradiogroupcomponent_provid",{"_index":3166,"title":{},"body":{"modules/TsRadioGroupModule.html":{},"overview.html":{}}}],["cluster_tsscrollbarsmodul",{"_index":3258,"title":{},"body":{"modules/TsScrollbarsModule.html":{},"overview.html":{}}}],["cluster_tsscrollbarsmodule_declar",{"_index":3259,"title":{},"body":{"modules/TsScrollbarsModule.html":{},"overview.html":{}}}],["cluster_tsscrollbarsmodule_export",{"_index":3260,"title":{},"body":{"modules/TsScrollbarsModule.html":{},"overview.html":{}}}],["cluster_tssearchmodul",{"_index":3335,"title":{},"body":{"modules/TsSearchModule.html":{},"overview.html":{}}}],["cluster_tssearchmodule_declar",{"_index":3336,"title":{},"body":{"modules/TsSearchModule.html":{},"overview.html":{}}}],["cluster_tssearchmodule_export",{"_index":3338,"title":{},"body":{"modules/TsSearchModule.html":{},"overview.html":{}}}],["cluster_tssearchmodule_import",{"_index":3337,"title":{},"body":{"modules/TsSearchModule.html":{}}}],["cluster_tsselectmodul",{"_index":3341,"title":{},"body":{"modules/TsSelectModule.html":{},"overview.html":{}}}],["cluster_tsselectmodule_declar",{"_index":3342,"title":{},"body":{"modules/TsSelectModule.html":{},"overview.html":{}}}],["cluster_tsselectmodule_export",{"_index":3345,"title":{},"body":{"modules/TsSelectModule.html":{},"overview.html":{}}}],["cluster_tsselectmodule_import",{"_index":3344,"title":{},"body":{"modules/TsSelectModule.html":{}}}],["cluster_tsselectmodule_tsselectcomponent_provid",{"_index":3343,"title":{},"body":{"modules/TsSelectModule.html":{},"overview.html":{}}}],["cluster_tssortmodul",{"_index":3580,"title":{},"body":{"modules/TsSortModule.html":{},"overview.html":{}}}],["cluster_tssortmodule_declar",{"_index":3581,"title":{},"body":{"modules/TsSortModule.html":{},"overview.html":{}}}],["cluster_tssortmodule_export",{"_index":3582,"title":{},"body":{"modules/TsSortModule.html":{},"overview.html":{}}}],["cluster_tsspacingmodul",{"_index":3590,"title":{},"body":{"modules/TsSpacingModule.html":{},"overview.html":{}}}],["cluster_tsspacingmodule_declar",{"_index":3591,"title":{},"body":{"modules/TsSpacingModule.html":{},"overview.html":{}}}],["cluster_tsspacingmodule_export",{"_index":3592,"title":{},"body":{"modules/TsSpacingModule.html":{},"overview.html":{}}}],["cluster_tstablemodul",{"_index":3738,"title":{},"body":{"modules/TsTableModule.html":{},"overview.html":{}}}],["cluster_tstablemodule_declar",{"_index":3739,"title":{},"body":{"modules/TsTableModule.html":{},"overview.html":{}}}],["cluster_tstablemodule_export",{"_index":3742,"title":{},"body":{"modules/TsTableModule.html":{},"overview.html":{}}}],["cluster_tstablemodule_import",{"_index":3741,"title":{},"body":{"modules/TsTableModule.html":{}}}],["cluster_tstablemodule_tscelldefdirective_provid",{"_index":3740,"title":{},"body":{"modules/TsTableModule.html":{},"overview.html":{}}}],["cluster_tstogglemodul",{"_index":3775,"title":{},"body":{"modules/TsToggleModule.html":{},"overview.html":{}}}],["cluster_tstogglemodule_declar",{"_index":3776,"title":{},"body":{"modules/TsToggleModule.html":{},"overview.html":{}}}],["cluster_tstogglemodule_export",{"_index":3778,"title":{},"body":{"modules/TsToggleModule.html":{},"overview.html":{}}}],["cluster_tstogglemodule_tstogglecomponent_provid",{"_index":3777,"title":{},"body":{"modules/TsToggleModule.html":{},"overview.html":{}}}],["cluster_tstooltipmodul",{"_index":3795,"title":{},"body":{"modules/TsTooltipModule.html":{},"overview.html":{}}}],["cluster_tstooltipmodule_declar",{"_index":3796,"title":{},"body":{"modules/TsTooltipModule.html":{},"overview.html":{}}}],["cluster_tstooltipmodule_export",{"_index":3797,"title":{},"body":{"modules/TsTooltipModule.html":{},"overview.html":{}}}],["cluster_tsvalidationmessagesmodul",{"_index":3897,"title":{},"body":{"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["cluster_tsvalidationmessagesmodule_declar",{"_index":3898,"title":{},"body":{"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["cluster_tsvalidationmessagesmodule_export",{"_index":3899,"title":{},"body":{"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["cluster_tsvalidationmessagesmodule_provid",{"_index":3900,"title":{},"body":{"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["code",{"_index":2481,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"modules/TsSortModule.html":{},"modules/TsTableModule.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["codecov",{"_index":4181,"title":{},"body":{"index.html":{}}}],["coercearray",{"_index":204,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["coercearray(selections.slic",{"_index":726,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["coercearray(valu",{"_index":368,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["coercebooleanproperti",{"_index":205,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["coercebooleanproperty(shouldproce",{"_index":1776,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["coercebooleanproperty(v",{"_index":1636,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["coercebooleanproperty(valu",{"_index":388,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["coercenumberproperti",{"_index":206,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(a.valu",{"_index":3055,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(b.valu",{"_index":3056,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(pag",{"_index":2982,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(page.valu",{"_index":3022,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(pagescount",{"_index":3039,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(record",{"_index":2990,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["coercenumberproperty(valu",{"_index":420,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["coercion/i",{"_index":220,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["collaps",{"_index":4247,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["collect",{"_index":35,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["collectfilesfromevent(ev",{"_index":523,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["color",{"_index":1339,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["color(acc",{"_index":2243,"title":{},"body":{"components/TsIconComponent.html":{}}}],["color(pur",{"_index":2197,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["column",{"_index":1094,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsMenuComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"index.html":{}}}],["column'",{"_index":1472,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{}}}],["column.minwidth",{"_index":1495,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["column.nowrap",{"_index":1493,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["columncount",{"_index":1153,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["columncount(valu",{"_index":1150,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["columndef",{"_index":1488,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["columndef.cssclassfriendlynam",{"_index":1486,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["columnhead",{"_index":1165,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["columnheaders(valu",{"_index":1160,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["columns[i",{"_index":2874,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["columnvalid",{"_index":1169,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["columnvalidators(valu",{"_index":1167,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["come",{"_index":133,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCopyComponent.html":{},"index.html":{}}}],["comma",{"_index":350,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["comment",{"_index":3656,"title":{},"body":{"components/TsTableComponent.html":{}}}],["commit",{"_index":4041,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["commitizen",{"_index":4176,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":1026,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{}}}],["compar",{"_index":618,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"miscellaneous/typealiases.html":{}}}],["comparatorfn",{"_index":714,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["comparedd",{"_index":3750,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["comparison",{"_index":2578,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["compat",{"_index":4091,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":866,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{}}}],["complient",{"_index":1510,"title":{},"body":{"components/TsChartComponent.html":{}}}],["compon",{"_index":86,"title":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["component_templ",{"_index":1357,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["componentfactoryresolv",{"_index":2320,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["componentport",{"_index":1739,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["componentportal(tsconfirmationmodalcompon",{"_index":1769,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["componentportal(tsloadingoverlaycompon",{"_index":2350,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["compos",{"_index":325,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["compress",{"_index":3639,"title":{},"body":{"components/TsTableComponent.html":{}}}],["concis",{"_index":4056,"title":{},"body":{"contributing.html":{}}}],["concret",{"_index":1569,"title":{},"body":{"components/TsChartComponent.html":{}}}],["condit",{"_index":4200,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":3988,"title":{},"body":{"contributing.html":{}}}],["config",{"_index":1837,"title":{},"body":{"components/TsCopyComponent.html":{},"injectables/TsValidationMessageService.html":{}}}],["config.imagedimens",{"_index":3851,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["config.imageratio",{"_index":3853,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["config.maxd",{"_index":3846,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["config.mind",{"_index":3849,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["config[validatornam",{"_index":3854,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["confirm",{"_index":1367,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["confirmation.direct",{"_index":1795,"title":{},"body":{"modules/TsConfirmationModule.html":{}}}],["confirmation/confirmation.modul",{"_index":957,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["conform",{"_index":1279,"title":{},"body":{"components/TsCardComponent.html":{}}}],["connect",{"_index":3705,"title":{},"body":{"classes/TsTableDataSource.html":{},"license.html":{}}}],["connectedpositionstrategi",{"_index":1736,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["consid",{"_index":2941,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{}}}],["consist",{"_index":2235,"title":{},"body":{"components/TsIconComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"index.html":{}}}],["console.error",{"_index":1585,"title":{},"body":{"components/TsChartComponent.html":{}}}],["console.error(`tschartcompon",{"_index":1603,"title":{},"body":{"components/TsChartComponent.html":{}}}],["console.log('compon",{"_index":2477,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["console.log('demo",{"_index":3673,"title":{},"body":{"components/TsTableComponent.html":{}}}],["console.log('select",{"_index":638,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["console.log('set",{"_index":719,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["console.warn('github",{"_index":3679,"title":{},"body":{"components/TsTableComponent.html":{}}}],["const",{"_index":140,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{}}}],["constant",{"_index":4095,"title":{},"body":{"index.html":{}}}],["constrain",{"_index":3373,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["constraint",{"_index":27,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/typealiases.html":{}}}],["constraint.height.min",{"_index":2139,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["constraint.width.min",{"_index":2140,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["constraints.length",{"_index":2138,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["constraints.map((r",{"_index":2141,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["constraints.t",{"_index":2084,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{},"miscellaneous/typealiases.html":{}}}],["constructor",{"_index":467,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{}}}],["constructor(_intl",{"_index":3548,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["constructor(amchart",{"_index":1001,"title":{},"body":{"injectables/TsAmChartsService.html":{}}}],["constructor(changedetectorref",{"_index":1652,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsNavigationComponent.html":{}}}],["constructor(columndef",{"_index":1483,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["constructor(documentservic",{"_index":1808,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["constructor(elementref",{"_index":1047,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsIconButtonComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["constructor(fil",{"_index":3355,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["constructor(formbuild",{"_index":2382,"title":{},"body":{"components/TsLoginFormComponent.html":{},"components/TsSearchComponent.html":{}}}],["constructor(ful",{"_index":3971,"title":{},"body":{"classes/Version.html":{}}}],["constructor(initialdata",{"_index":3707,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["constructor(maticonregistri",{"_index":2216,"title":{},"body":{"components/TsIconComponent.html":{}}}],["constructor(par",{"_index":1452,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["constructor(priv",{"_index":3687,"title":{},"body":{"components/TsTableComponent.html":{}}}],["constructor(publ",{"_index":3976,"title":{},"body":{"classes/Version.html":{}}}],["constructor(validationmessageservic",{"_index":3863,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["constructor(width",{"_index":2265,"title":{},"body":{"classes/TsImageDimensions.html":{}}}],["constructor(windowservic",{"_index":2069,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["constructor(zon",{"_index":1521,"title":{},"body":{"components/TsChartComponent.html":{}}}],["consum",{"_index":767,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChartComponent.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"injectables/TsValidationMessageService.html":{},"miscellaneous/variables.html":{}}}],["contain",{"_index":268,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["containerel",{"_index":2589,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["content",{"_index":19,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsTooltipComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"index.html":{}}}],["content.row",{"_index":1201,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["content.rows.length",{"_index":1200,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["content_copi",{"_index":1826,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["context",{"_index":2968,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["continu",{"_index":1774,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["contract",{"_index":4214,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":3984,"title":{"contributing.html":{}},"body":{"contributing.html":{},"index.html":{}}}],["contributor",{"_index":3986,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["control",{"_index":83,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["control'",{"_index":3935,"title":{},"body":{"injectables/TsValidatorsService.html":{},"index.html":{}}}],["control.setvalid",{"_index":2524,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["control.updatevalueandvalid",{"_index":2527,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["controlvalueaccessor",{"_index":1671,"title":{},"body":{"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["convent",{"_index":4050,"title":{},"body":{"contributing.html":{}}}],["convert",{"_index":2736,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"pipes/TsTimeAgoPipe.html":{},"index.html":{}}}],["cooki",{"_index":2416,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["coordin",{"_index":4009,"title":{},"body":{"contributing.html":{}}}],["copi",{"_index":811,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCopyComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"index.html":{},"license.html":{}}}],["copy'},{'nam",{"_index":1370,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["copy.compon",{"_index":1884,"title":{},"body":{"modules/TsCopyModule.html":{}}}],["copy.component.html",{"_index":1800,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["copy.component.scss",{"_index":1799,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["copy/copy.modul",{"_index":958,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["copyright",{"_index":4184,"title":{},"body":{"license.html":{}}}],["copytoclipboard",{"_index":1803,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["copytoclipboard(text",{"_index":1813,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["core",{"_index":1008,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"dependencies.html":{}}}],["core/dist/textmaskcor",{"_index":2540,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["coreyterminator&#x1f4bb",{"_index":4159,"title":{},"body":{"index.html":{}}}],["corner",{"_index":1337,"title":{},"body":{"components/TsCardComponent.html":{}}}],["correct",{"_index":163,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"injectables/TsValidationMessageService.html":{}}}],["correcti",{"_index":2780,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["correctli",{"_index":2244,"title":{},"body":{"components/TsIconComponent.html":{}}}],["count",{"_index":141,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["counter",{"_index":136,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["coverag",{"_index":4182,"title":{},"body":{"index.html":{}}}],["craft",{"_index":4011,"title":{},"body":{"contributing.html":{}}}],["creat",{"_index":374,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidatorsService.html":{},"classes/Version.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["createautocorrecteddatepip",{"_index":2543,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["createautocorrecteddatepipe(this.defaultdateformat",{"_index":2774,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["created_at",{"_index":3685,"title":{},"body":{"components/TsTableComponent.html":{}}}],["createdrow",{"_index":1188,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["createfileinput",{"_index":518,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["createmaskcollection(allowdecim",{"_index":2770,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["createnumbermask",{"_index":2541,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["createoverlay",{"_index":1710,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["createpagesarray(tot",{"_index":3046,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["createtextmaskinputel",{"_index":2539,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["credit",{"_index":3814,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["creditcard",{"_index":3821,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["creditcardmessag",{"_index":3815,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"miscellaneous/variables.html":{}}}],["creditcardvalid",{"_index":3904,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["css",{"_index":265,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["csv",{"_index":50,"title":{},"body":{"interfaces/ImageRatio.html":{},"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["csv_icon",{"_index":2248,"title":{},"body":{"components/TsIconComponent.html":{},"miscellaneous/variables.html":{}}}],["csvs)file",{"_index":61,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["ctr",{"_index":1992,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["ctrl",{"_index":378,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsDateRange.html":{}}}],["ctrl+c",{"_index":1878,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ctrl.enabl",{"_index":1993,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["currenc",{"_index":2484,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["current",{"_index":144,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsDateAdapter.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["currenthidden",{"_index":897,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["currenthidden.shift",{"_index":898,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["currentmask",{"_index":2573,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["currentpag",{"_index":3025,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["currentpagechanged(pag",{"_index":3021,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["currentpageindex",{"_index":2983,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["currentpageindex(pag",{"_index":2980,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["currentpagelabel",{"_index":2964,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["currentqueri",{"_index":3317,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["currentvis",{"_index":885,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["currentvisible.pop",{"_index":888,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["cursor",{"_index":449,"title":{},"body":{"interfaces/ImageRatio.html":{},"index.html":{}}}],["custom",{"_index":248,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"classes/TsDateAdapter.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSlideToggleChange.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["custom_checkbox_control_value_accessor",{"_index":1628,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["custom_file_upload_input_control_value_accessor",{"_index":258,"title":{},"body":{"interfaces/ImageRatio.html":{},"modules/TsFileUploadModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["custom_input_control_value_accessor",{"_index":2275,"title":{},"body":{"modules/TsInputModule.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["custom_radio_control_value_accessor",{"_index":3112,"title":{},"body":{"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["custom_select_control_value_accessor",{"_index":3346,"title":{},"body":{"modules/TsSelectModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["custom_toggle_control_value_accessor",{"_index":3399,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["cycl",{"_index":753,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["d",{"_index":2505,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"contributing.html":{}}}],["d.getday",{"_index":2506,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["damag",{"_index":4212,"title":{},"body":{"license.html":{}}}],["dark",{"_index":2198,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["data",{"_index":840,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"pipes/TsDatePipe.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"pipes/TsSentenceCasePipe.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{}}}],["data(data",{"_index":3726,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["data.item",{"_index":3676,"title":{},"body":{"components/TsTableComponent.html":{}}}],["data.total_count",{"_index":3675,"title":{},"body":{"components/TsTableComponent.html":{}}}],["databas",{"_index":3686,"title":{},"body":{"components/TsTableComponent.html":{}}}],["datasourc",{"_index":3610,"title":{},"body":{"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{}}}],["datatorend",{"_index":3609,"title":{},"body":{"components/TsTableComponent.html":{}}}],["datatorender;dynam",{"_index":3621,"title":{},"body":{"components/TsTableComponent.html":{}}}],["date",{"_index":961,"title":{},"body":{"modules/TerminusUIModule.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["date(2017",{"_index":1965,"title":{},"body":{"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["date(compareddate).toisostr",{"_index":3756,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["date(d",{"_index":2816,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["date(valu",{"_index":2759,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["date(value).toisostr",{"_index":3755,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["date.getfullyear",{"_index":1919,"title":{},"body":{"classes/TsDateAdapter.html":{}}}],["date/date.pip",{"_index":3071,"title":{},"body":{"modules/TsPipesModule.html":{}}}],["date1",{"_index":2512,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["date2",{"_index":2513,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["date:shortd",{"_index":3638,"title":{},"body":{"components/TsTableComponent.html":{}}}],["datea11ylabel",{"_index":1915,"title":{},"body":{"classes/TsDateAdapter.html":{},"miscellaneous/variables.html":{}}}],["dateadapt",{"_index":2545,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["datefilt",{"_index":2631,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["datefilter(valu",{"_index":2629,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["dateformgroup",{"_index":1968,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["dateformgroup(valu",{"_index":2018,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["dateinput",{"_index":1908,"title":{},"body":{"classes/TsDateAdapter.html":{},"miscellaneous/variables.html":{}}}],["datepick",{"_index":1889,"title":{},"body":{"classes/TsDateAdapter.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"index.html":{}}}],["datepicker(valu",{"_index":2633,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["datepickerev",{"_index":2041,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["daterang",{"_index":1963,"title":{},"body":{"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["david",{"_index":4164,"title":{},"body":{"index.html":{}}}],["day",{"_index":1913,"title":{},"body":{"classes/TsDateAdapter.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/variables.html":{}}}],["dd",{"_index":2808,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["de",{"_index":595,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["deal",{"_index":359,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSelectedFile.html":{},"pipes/TsTimeAgoPipe.html":{},"license.html":{}}}],["dealt",{"_index":4021,"title":{},"body":{"contributing.html":{}}}],["dean",{"_index":4170,"title":{},"body":{"index.html":{}}}],["debounc",{"_index":594,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["debounce(this.emitsubmit",{"_index":3300,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["debouncedelay",{"_index":617,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["debouncedelay(valu",{"_index":693,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["debouncedemit",{"_index":3268,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["debouncetim",{"_index":652,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["debouncetime(1",{"_index":1177,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["debouncetime(this.debouncedelay",{"_index":748,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["decid",{"_index":384,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["decim",{"_index":2445,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["decis",{"_index":4108,"title":{},"body":{"index.html":{}}}],["declar",{"_index":257,"title":{},"body":{"interfaces/ImageRatio.html":{},"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"classes/TsSlideToggleChange.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["decor",{"_index":1005,"title":{},"body":{"injectables/TsAmChartsService.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSortHeaderComponent.html":{}}}],["default",{"_index":76,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"injectables/TsDropProtectionService.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["default_high_record_messag",{"_index":2951,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["default_max_prefered_record",{"_index":2949,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["default_per_pag",{"_index":2948,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["default_records_per_page_opt",{"_index":2950,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["defaultcolumncount",{"_index":1130,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["defaultdateformat",{"_index":2574,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["defaultmaxrow",{"_index":1131,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["defaultopen",{"_index":2832,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["defaultrowcount",{"_index":1128,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["defin",{"_index":297,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["definit",{"_index":1470,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{}}}],["delay",{"_index":616,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["delet",{"_index":1124,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"contributing.html":{}}}],["delete_forev",{"_index":2175,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["delete_foreverthem",{"_index":2195,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["deleterow(index",{"_index":1242,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["demo",{"_index":1567,"title":{},"body":{"components/TsChartComponent.html":{},"index.html":{}}}],["demonstr",{"_index":2314,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["dep",{"_index":3578,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{},"miscellaneous/variables.html":{}}}],["depend",{"_index":908,"title":{"dependencies.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deprec",{"_index":1955,"title":{},"body":{"interfaces/TsDateRange.html":{},"index.html":{}}}],["deregist",{"_index":3479,"title":{},"body":{"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["deregister(sort",{"_index":3456,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["desc",{"_index":3412,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["descend",{"_index":3543,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{}}}],["describ",{"_index":2168,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"injectables/TsSortHeaderIntl.html":{}}}],["describedbi",{"_index":3128,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["descript",{"_index":777,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDateAdapter.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{}}}],["deselect",{"_index":770,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["deselectoption(opt",{"_index":771,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["design",{"_index":3597,"title":{},"body":{"components/TsTableComponent.html":{},"index.html":{}}}],["desir",{"_index":1323,"title":{},"body":{"components/TsCardComponent.html":{},"classes/TsDateAdapter.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["destin",{"_index":793,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsLinkComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["destination.indexof('http",{"_index":905,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["destinationisvalid",{"_index":3027,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["destinationpag",{"_index":3024,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["destroy",{"_index":502,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsChartComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{}}}],["destroychart",{"_index":1517,"title":{},"body":{"components/TsChartComponent.html":{}}}],["detail",{"_index":4072,"title":{},"body":{"contributing.html":{}}}],["detect",{"_index":752,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["detector",{"_index":3155,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["determin",{"_index":169,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsFileValidations.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["determineimagedimens",{"_index":3351,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["determineimagedimensions(callback",{"_index":3366,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["determineposit",{"_index":2318,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["determineposition(posit",{"_index":2330,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["determinepostalmask(valu",{"_index":2775,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["develop",{"_index":4074,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["deviat",{"_index":4110,"title":{},"body":{"index.html":{}}}],["devon",{"_index":4168,"title":{},"body":{"index.html":{}}}],["diagnos",{"_index":4002,"title":{},"body":{"contributing.html":{}}}],["dialog",{"_index":4123,"title":{},"body":{"index.html":{}}}],["differ",{"_index":370,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{}}}],["digit",{"_index":1895,"title":{},"body":{"classes/TsDateAdapter.html":{}}}],["dimens",{"_index":25,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"classes/TsImageDimensions.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{},"miscellaneous/typealiases.html":{}}}],["dimension/ratio",{"_index":2132,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["dimensionconstraint",{"_index":443,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["dimensionconstraints(valu",{"_index":441,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["dimensions.t",{"_index":2264,"title":{},"body":{"classes/TsImageDimensions.html":{}}}],["dimensions.ts:10",{"_index":2267,"title":{},"body":{"classes/TsImageDimensions.html":{}}}],["dimensions.ts:7",{"_index":2266,"title":{},"body":{"classes/TsImageDimensions.html":{}}}],["dimensions.ts:9",{"_index":2268,"title":{},"body":{"classes/TsImageDimensions.html":{}}}],["dir",{"_index":1219,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["direct",{"_index":691,"title":{"directives/TsAutofocusDirective.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"directives/TsHeaderRowDefDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"directives/TsRowDefDirective.html":{},"directives/TsSortDirective.html":{},"directives/TsVerticalSpacingDirective.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["direction(direct",{"_index":3438,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["directli",{"_index":636,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsDateRange.html":{},"modules/TsSortModule.html":{},"modules/TsTableModule.html":{},"contributing.html":{}}}],["disabl",{"_index":784,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{}}}],["disableclear",{"_index":3416,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["disableclear(v",{"_index":3444,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["disableinitialselect",{"_index":1806,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["disallow",{"_index":2628,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["disconnect",{"_index":3706,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["discuss",{"_index":4008,"title":{},"body":{"contributing.html":{}}}],["dismiss",{"_index":1721,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["dismissoverlay",{"_index":1711,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["display",{"_index":104,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsDateAdapter.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"miscellaneous/variables.html":{}}}],["displayedcolumn",{"_index":3623,"title":{},"body":{"components/TsTableComponent.html":{}}}],["displayformat",{"_index":1899,"title":{},"body":{"classes/TsDateAdapter.html":{}}}],["displaywith",{"_index":631,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["displaywith(valu",{"_index":698,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["distinctuntilchang",{"_index":653,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["distribut",{"_index":4195,"title":{},"body":{"license.html":{}}}],["div",{"_index":805,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCopyComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["divid",{"_index":4124,"title":{},"body":{"index.html":{}}}],["divyameher&#x1f41b",{"_index":4167,"title":{},"body":{"index.html":{}}}],["doc",{"_index":3188,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{},"index.html":{}}}],["doctoc",{"_index":4180,"title":{},"body":{"index.html":{}}}],["document",{"_index":1545,"title":{},"body":{"components/TsChartComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{},"index.html":{},"license.html":{}}}],["documentservic",{"_index":468,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCopyComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["doesn't",{"_index":1491,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["dom",{"_index":315,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["domportalhost",{"_index":2335,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["domsanit",{"_index":2218,"title":{},"body":{"components/TsIconComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["don't",{"_index":1582,"title":{},"body":{"components/TsChartComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"contributing.html":{}}}],["done",{"_index":4106,"title":{},"body":{"index.html":{}}}],["dot",{"_index":3789,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["down",{"_index":715,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["drag",{"_index":221,"title":{},"body":{"interfaces/ImageRatio.html":{},"index.html":{}}}],["dragev",{"_index":455,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["draginprogress",{"_index":303,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["driven",{"_index":585,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsDateRange.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["drop",{"_index":230,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["dropdown",{"_index":589,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["dropprotectionservic",{"_index":469,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["dual",{"_index":4122,"title":{},"body":{"index.html":{}}}],["due",{"_index":739,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"contributing.html":{}}}],["dummi",{"_index":1394,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["dupe",{"_index":596,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["duplic",{"_index":621,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"contributing.html":{}}}],["dure",{"_index":1947,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"pipes/TsSentenceCasePipe.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["dynam",{"_index":754,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"dependencies.html":{}}}],["e",{"_index":2074,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["e.filecont",{"_index":41,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["e.map((f",{"_index":159,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["e.preventdefault",{"_index":2082,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["each",{"_index":246,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"interfaces/TsDateRange.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["easili",{"_index":2461,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["edg",{"_index":1215,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["effect",{"_index":2787,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["effort",{"_index":4010,"title":{},"body":{"contributing.html":{}}}],["el",{"_index":1062,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["el.focu",{"_index":1064,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["el.nativeel",{"_index":2596,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["el.selectionend",{"_index":2720,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["el.selectionstart",{"_index":2719,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["el.setselectionrange(0",{"_index":2722,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["el.setselectionrange(1",{"_index":2721,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["el.valu",{"_index":2718,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["element",{"_index":224,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["element'",{"_index":3125,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["element.posit",{"_index":3626,"title":{},"body":{"components/TsTableComponent.html":{}}}],["elementref",{"_index":181,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["elementref.nativeelement.classlist.add(`t",{"_index":1485,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["elemetn",{"_index":2194,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["email",{"_index":2363,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["email/password",{"_index":4126,"title":{},"body":{"index.html":{}}}],["emailmessag",{"_index":3812,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"miscellaneous/variables.html":{}}}],["emailvalid",{"_index":3906,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["emit",{"_index":123,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{}}}],["emitsubmit",{"_index":3273,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["emitt",{"_index":731,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsUser.html":{}}}],["emoji",{"_index":4151,"title":{},"body":{"index.html":{}}}],["empti",{"_index":269,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{}}}],["enabl",{"_index":31,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsAutofocusDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{}}}],["enabled/dis",{"_index":4302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enableditem",{"_index":833,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["enablequickcopi",{"_index":1807,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["encapsul",{"_index":291,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["encourag",{"_index":2938,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["end",{"_index":901,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsChartComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{}}}],["endblur(d",{"_index":2058,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endcontrol",{"_index":2031,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endcontrol.valu",{"_index":2036,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["enddat",{"_index":1966,"title":{},"body":{"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["enddate1",{"_index":1987,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["enddate2",{"_index":1988,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["enddatecontrol",{"_index":2003,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["enddateselected(d",{"_index":2051,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endlabel",{"_index":2010,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endmaxd",{"_index":1981,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endmind",{"_index":1982,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endselect",{"_index":1979,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["endvalu",{"_index":2035,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["enforc",{"_index":2479,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"contributing.html":{},"index.html":{}}}],["engin",{"_index":4098,"title":{},"body":{"index.html":{}}}],["enough",{"_index":882,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["ensur",{"_index":4049,"title":{},"body":{"contributing.html":{}}}],["enter",{"_index":208,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"index.html":{}}}],["entir",{"_index":1994,"title":{},"body":{"interfaces/TsDateRange.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["entri",{"_index":1096,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"index.html":{}}}],["entry'},{'nam",{"_index":1360,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["entry.compon",{"_index":1090,"title":{},"body":{"modules/TsCSVEntryModule.html":{}}}],["entry.component.html",{"_index":1125,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["entry.component.scss",{"_index":1126,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["entry.component.t",{"_index":1092,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"miscellaneous/variables.html":{}}}],["entry.modul",{"_index":960,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["entry.module.t",{"_index":1087,"title":{},"body":{"modules/TsCSVEntryModule.html":{}}}],["entry/csv",{"_index":959,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"miscellaneous/variables.html":{}}}],["entrycompon",{"_index":1793,"title":{},"body":{"modules/TsConfirmationModule.html":{},"modules/TsLoadingOverlayModule.html":{}}}],["equal",{"_index":3828,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["equaltocontrol",{"_index":3838,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["equaltocontrolvalid",{"_index":3908,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["error",{"_index":559,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCopyComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["error('an",{"_index":407,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["error(`'${comparedd",{"_index":3754,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["error(`'${valu",{"_index":1949,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["error(`th",{"_index":1468,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["error(`tsautocompletecompon",{"_index":701,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["error(`tsautofocusdirect",{"_index":1065,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["error(`tsradiogroupcompon",{"_index":3133,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["error.actu",{"_index":1236,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["error.actual.length",{"_index":1234,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["error.actual.slice(0",{"_index":1235,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["error.rowid",{"_index":1230,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["erroritem",{"_index":1233,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["errorobj",{"_index":1226,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["errorobj.control",{"_index":1227,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["errorobj[nam",{"_index":1228,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["errors[key].filter((el",{"_index":1221,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["esc",{"_index":1763,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["escap",{"_index":1741,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["etc",{"_index":1526,"title":{},"body":{"components/TsChartComponent.html":{},"components/TsTableComponent.html":{},"index.html":{}}}],["even",{"_index":3326,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{},"contributing.html":{}}}],["event",{"_index":37,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"license.html":{}}}],["event.datatransfer.fil",{"_index":526,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["event.deltax",{"_index":1220,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["event.isautofil",{"_index":2670,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["event.keycod",{"_index":509,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsConfirmationDirective.html":{}}}],["event.option.valu",{"_index":758,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["event.preventdefault",{"_index":547,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["event.stoppropag",{"_index":548,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["event.target",{"_index":527,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["event.target.fil",{"_index":529,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["eventemitt",{"_index":182,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{}}}],["everyon",{"_index":4109,"title":{},"body":{"index.html":{}}}],["exactli",{"_index":4272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exampl",{"_index":101,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{}}}],["exampledatabas",{"_index":3658,"title":{},"body":{"components/TsTableComponent.html":{}}}],["examplehttpdao",{"_index":3659,"title":{},"body":{"components/TsTableComponent.html":{}}}],["examplehttpdao(this.http",{"_index":3663,"title":{},"body":{"components/TsTableComponent.html":{}}}],["exce",{"_index":81,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["except",{"_index":1059,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["exist",{"_index":271,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"directives/TsColumnDefDirective.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSelectedFile.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["exit",{"_index":451,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["expans",{"_index":4125,"title":{},"body":{"index.html":{}}}],["expect",{"_index":801,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["experi",{"_index":4100,"title":{},"body":{"index.html":{}}}],["explain",{"_index":4028,"title":{},"body":{"contributing.html":{}}}],["explan",{"_index":2397,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["export",{"_index":236,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"overview.html":{}}}],["exporta",{"_index":293,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["expos",{"_index":99,"title":{},"body":{"interfaces/ImageRatio.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["express",{"_index":3311,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"license.html":{}}}],["expressionchangedaftercheck",{"_index":2637,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["extend",{"_index":295,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["extern",{"_index":795,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsLinkComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["externalicon",{"_index":2288,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["extra",{"_index":2746,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["f",{"_index":161,"title":{},"body":{"interfaces/ImageRatio.html":{},"contributing.html":{}}}],["fab",{"_index":2849,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["factori",{"_index":1547,"title":{},"body":{"components/TsChartComponent.html":{},"injectables/TsSortHeaderIntl.html":{}}}],["fail",{"_index":1972,"title":{},"body":{"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["fake",{"_index":137,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["fall",{"_index":1871,"title":{},"body":{"components/TsCopyComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["fallback",{"_index":2011,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["fallbackenddatecontrol",{"_index":2012,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["fallbackstartdatecontrol",{"_index":2013,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["fals",{"_index":175,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["far",{"_index":2464,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"contributing.html":{}}}],["featur",{"_index":3990,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["februari",{"_index":1934,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["feel",{"_index":1321,"title":{},"body":{"components/TsCardComponent.html":{}}}],["fetch",{"_index":3629,"title":{},"body":{"components/TsTableComponent.html":{}}}],["few",{"_index":2869,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ff",{"_index":4067,"title":{},"body":{"contributing.html":{}}}],["field",{"_index":450,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["figur",{"_index":733,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"injectables/TsValidationMessageService.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["file${this.multipl",{"_index":323,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["file.dimens",{"_index":567,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["file.filecont",{"_index":46,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["file.height",{"_index":48,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["file.iscsv",{"_index":51,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["file.isimag",{"_index":53,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["file.isvalid",{"_index":54,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["file.mimetyp",{"_index":55,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["file.nam",{"_index":56,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["file.s",{"_index":57,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["file.t",{"_index":2097,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/variables.html":{}}}],["file.ts:104",{"_index":3377,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:113",{"_index":3380,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:122",{"_index":3383,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:131",{"_index":3386,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:140",{"_index":3388,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:150",{"_index":3367,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:201",{"_index":3370,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:228",{"_index":3372,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:251",{"_index":3369,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:36",{"_index":3362,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:37",{"_index":3361,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:38",{"_index":3357,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:39",{"_index":3363,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:40",{"_index":3364,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:41",{"_index":3365,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:47",{"_index":3359,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:52",{"_index":3360,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:57",{"_index":3356,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:61",{"_index":3358,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.ts:95",{"_index":3375,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["file.valid",{"_index":58,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["file.width",{"_index":60,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["filecont",{"_index":3384,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["fileexists(id",{"_index":173,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["filelist",{"_index":524,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["fileload",{"_index":2108,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["filenam",{"_index":122,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["fileread",{"_index":2106,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["filerefer",{"_index":2109,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["files",{"_index":562,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{}}}],["files.length",{"_index":530,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["filesarray[0",{"_index":532,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["filetyp",{"_index":564,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{}}}],["filewasclear",{"_index":125,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["fill",{"_index":2241,"title":{},"body":{"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":210,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["filter((ev",{"_index":1765,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["filter((t",{"_index":430,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["filter((v",{"_index":745,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["filtereddata",{"_index":3703,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["final",{"_index":2466,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["finalregex",{"_index":2765,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["finalvalu",{"_index":2810,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["finalvalue.slice(0",{"_index":2812,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["find",{"_index":772,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"contributing.html":{},"index.html":{}}}],["findpage(pag",{"_index":3041,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["finish",{"_index":3442,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["fire",{"_index":490,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["first",{"_index":348,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{},"index.html":{}}}],["first_pag",{"_index":2956,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["firstpageicon",{"_index":2955,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["firstpageindex",{"_index":3000,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["firstpagetooltip",{"_index":2976,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["fit",{"_index":2136,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"license.html":{}}}],["fix",{"_index":94,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"contributing.html":{}}}],["fixioscaretbug",{"_index":2716,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["fixm",{"_index":702,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"components/TsCopyComponent.html":{}}}],["flag",{"_index":300,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["flat",{"_index":1275,"title":{},"body":{"components/TsCardComponent.html":{}}}],["flex",{"_index":2576,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["flexbox",{"_index":305,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["flexgap",{"_index":2577,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["flexlayoutmodul",{"_index":1088,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsInputModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{}}}],["flip",{"_index":2701,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["float",{"_index":2610,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["floatinglabelscal",{"_index":2555,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":759,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{}}}],["flush",{"_index":3619,"title":{},"body":{"components/TsTableComponent.html":{}}}],["fn",{"_index":535,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidationMessageService.html":{},"dependencies.html":{}}}],["fns@2.0.0",{"_index":4141,"title":{},"body":{"index.html":{}}}],["focu",{"_index":1051,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"index.html":{}}}],["focus",{"_index":1041,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"index.html":{}}}],["focuschanged(nowfocus",{"_index":2732,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["focusinput",{"_index":2727,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["follow",{"_index":3625,"title":{},"body":{"components/TsTableComponent.html":{},"contributing.html":{},"index.html":{},"license.html":{}}}],["foo",{"_index":3087,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["foo_valu",{"_index":3088,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["forc",{"_index":473,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDateAdapter.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsValidationMessagesComponent.html":{},"contributing.html":{}}}],["forcetwodigit",{"_index":1891,"title":{},"body":{"classes/TsDateAdapter.html":{}}}],["forcetwodigits(n",{"_index":1893,"title":{},"body":{"classes/TsDateAdapter.html":{}}}],["forgot",{"_index":2366,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["forgotpasswordlink",{"_index":2376,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["forgotpasswordtext",{"_index":2377,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["fork",{"_index":4057,"title":{},"body":{"contributing.html":{}}}],["form",{"_index":234,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["form'},{'nam",{"_index":1386,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["form.compon",{"_index":2432,"title":{},"body":{"modules/TsLoginFormModule.html":{}}}],["form.component.html",{"_index":2369,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["form.component.scss",{"_index":2368,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["form.component.t",{"_index":2362,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["form.component.ts:106",{"_index":2410,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:111",{"_index":2409,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:116",{"_index":2412,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:122",{"_index":2407,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:128",{"_index":2403,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:134",{"_index":2385,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:140",{"_index":2386,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:146",{"_index":2387,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:152",{"_index":2392,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:158",{"_index":2393,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:164",{"_index":2394,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:170",{"_index":2384,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:188",{"_index":2396,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:205",{"_index":2398,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.component.ts:84",{"_index":2406,"title":{},"body":{"components/TsLoginFormComponent.html":{}}}],["form.modul",{"_index":974,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["form.module.t",{"_index":2431,"title":{},"body":{"modules/TsLoginFormModule.html":{}}}],["form/login",{"_index":973,"title":{},"body":{"modules/TerminusUIModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["form_group",{"_index":2370,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["formarray",{"_index":1116,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["format",{"_index":1324,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["format(d",{"_index":1898,"title":{},"body":{"classes/TsDateAdapter.html":{}}}],["format(validatorvalue.maxd",{"_index":3847,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["format(validatorvalue.mind",{"_index":3850,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["formatd",{"_index":1932,"title":{},"body":{"pipes/TsDatePipe.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["formatdate(valu",{"_index":2806,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["formatdist",{"_index":3752,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["formatdistance(date1",{"_index":3757,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["formatmodelvaluefn",{"_index":3140,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatmodelvaluefn(valu",{"_index":3138,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatt",{"_index":659,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"miscellaneous/typealiases.html":{}}}],["formatter(opt",{"_index":3159,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatuilabelfn",{"_index":3106,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatuilabelfn(valu",{"_index":3131,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatuisublabelfn",{"_index":3098,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formatuisublabelfn(valu",{"_index":3135,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["formbuild",{"_index":1117,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidatorsService.html":{}}}],["formbuilder.group",{"_index":1969,"title":{},"body":{"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["formcontrol",{"_index":197,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["formcontrol'",{"_index":2605,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["formcontrol(ctrl",{"_index":376,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["formcontrol(nul",{"_index":2456,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["formcontrol(valu",{"_index":2636,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["formcontrol({valu",{"_index":2454,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["formgroup",{"_index":1118,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidatorsService.html":{}}}],["formgroup.get('endd",{"_index":2032,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["formgroup.get('startd",{"_index":2030,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["formsmodul",{"_index":1028,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsInputModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSelectModule.html":{},"modules/TsToggleModule.html":{},"modules/TsValidationMessagesModule.html":{}}}],["forum",{"_index":2196,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["forwardref",{"_index":193,"title":{},"body":{"interfaces/ImageRatio.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":77,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{}}}],["foundpag",{"_index":3029,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["foundpage.nam",{"_index":3042,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["free",{"_index":4190,"title":{},"body":{"license.html":{}}}],["freeli",{"_index":869,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["full",{"_index":696,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChartComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"classes/Version.html":{},"contributing.html":{}}}],["full.split('.').slice(2).join",{"_index":3982,"title":{},"body":{"classes/Version.html":{}}}],["full.split('.')[0",{"_index":3978,"title":{},"body":{"classes/Version.html":{}}}],["full.split('.')[1",{"_index":3980,"title":{},"body":{"classes/Version.html":{}}}],["fulli",{"_index":2747,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["fullnam",{"_index":790,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["function",{"_index":150,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["furnish",{"_index":4199,"title":{},"body":{"license.html":{}}}],["futur",{"_index":148,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["gain",{"_index":2730,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["gap",{"_index":307,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsConfirmationModalComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["gemotr",{"_index":3221,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["gener",{"_index":310,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsReactiveFormBaseComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{},"index.html":{}}}],["generatebreakwidth",{"_index":854,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["geodata",{"_index":4079,"title":{},"body":{"dependencies.html":{}}}],["geometri",{"_index":3216,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["get",{"_index":2707,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["getavailablespac",{"_index":2914,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["getbackground",{"_index":2228,"title":{},"body":{"components/TsIconComponent.html":{}}}],["getbord",{"_index":1306,"title":{},"body":{"components/TsCardComponent.html":{}}}],["getborderclass",{"_index":1316,"title":{},"body":{"components/TsCardComponent.html":{}}}],["getcolumns(row",{"_index":1190,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["getcomputedstyle(this.elementref.nativeelement).getpropertyvalue('posit",{"_index":2351,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["getcurrentqueri",{"_index":3318,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["getdata",{"_index":3722,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["getdirect",{"_index":3498,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["getdisableclear",{"_index":3501,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["getfilecont",{"_index":3385,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["getheadercellname(index",{"_index":1209,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["getheight",{"_index":3376,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["gethostel",{"_index":2192,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["getid",{"_index":1309,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["getischeck",{"_index":1691,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["getiscsv",{"_index":3379,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["getisimag",{"_index":3382,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["getisutilitymenu",{"_index":2862,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["getisvalid",{"_index":3387,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["getnextsortdirect",{"_index":3480,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["getnextsortdirection(sort",{"_index":3465,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getrepoissues(sort",{"_index":3688,"title":{},"body":{"components/TsTableComponent.html":{}}}],["getsortdirectioncycle(sortable.start",{"_index":3469,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsortdirectioncycle(start",{"_index":3475,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsortduplicatesortableiderror",{"_index":3422,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsortduplicatesortableiderror(sortable.id",{"_index":3453,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsortheadermissingiderror",{"_index":3423,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsortheadernotcontainedwithinsorterror",{"_index":3509,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["getsortinvaliddirectionerror",{"_index":3421,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsortinvaliddirectionerror(direct",{"_index":3439,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["getsvgicon",{"_index":2231,"title":{},"body":{"components/TsIconComponent.html":{}}}],["getter",{"_index":813,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconButtonComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"interfaces/TsUser.html":{}}}],["gettextcont",{"_index":1835,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["getthem",{"_index":1312,"title":{},"body":{"components/TsCardComponent.html":{}}}],["getusersfullnam",{"_index":2916,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["getvalidateimmedi",{"_index":3880,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["getvalidateonchang",{"_index":3877,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["getvalidationmessag",{"_index":3874,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["getvalidatorerrormessag",{"_index":3806,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["getvalidatorerrormessage(validatornam",{"_index":3807,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["getvalu",{"_index":3183,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["getvisibleitemslength",{"_index":2918,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["getvisu",{"_index":1542,"title":{},"body":{"components/TsChartComponent.html":{}}}],["getwidth",{"_index":3374,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["git",{"_index":4042,"title":{},"body":{"contributing.html":{}}}],["github",{"_index":3677,"title":{},"body":{"components/TsTableComponent.html":{},"contributing.html":{},"index.html":{}}}],["githubapi",{"_index":3682,"title":{},"body":{"components/TsTableComponent.html":{}}}],["githubissu",{"_index":3683,"title":{},"body":{"components/TsTableComponent.html":{}}}],["given",{"_index":3474,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{}}}],["global",{"_index":3117,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"index.html":{}}}],["go",{"_index":3631,"title":{},"body":{"components/TsTableComponent.html":{}}}],["goe",{"_index":4148,"title":{},"body":{"index.html":{}}}],["good",{"_index":2399,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["grant",{"_index":4189,"title":{},"body":{"license.html":{}}}],["graph",{"_index":4121,"title":{},"body":{"index.html":{}}}],["greater",{"_index":3825,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["greaterthan",{"_index":3823,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["greaterthanorequ",{"_index":3827,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["greaterthanorequalvalid",{"_index":3912,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["greaterthanvalid",{"_index":3910,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["gridcel",{"_index":1487,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["group",{"_index":852,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsDateRange.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["group'},{'nam",{"_index":1393,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["group.compon",{"_index":3171,"title":{},"body":{"modules/TsRadioGroupModule.html":{}}}],["group.component.html",{"_index":3113,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["group.component.scss",{"_index":3114,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["group.component.t",{"_index":3083,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["group.component.ts:31",{"_index":3172,"title":{},"body":{"interfaces/TsRadioOption.html":{}}}],["group.modul",{"_index":982,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["group.module.t",{"_index":3169,"title":{},"body":{"modules/TsRadioGroupModule.html":{}}}],["group/radio",{"_index":981,"title":{},"body":{"modules/TerminusUIModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["groupbi",{"_index":788,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["groupby(allitem",{"_index":874,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["guess",{"_index":736,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["guid",{"_index":2436,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["guidelin",{"_index":3987,"title":{},"body":{"contributing.html":{}}}],["hack",{"_index":423,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["hammer",{"_index":4116,"title":{},"body":{"index.html":{}}}],["hand",{"_index":2451,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["handl",{"_index":34,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["handleclick",{"_index":465,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["handledragleave(ev",{"_index":459,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["handledragover(ev",{"_index":454,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["handledrop(ev",{"_index":462,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["handlefile(",{"_index":40,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["handlekeydown($ev",{"_index":288,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["handlekeydown(ev",{"_index":507,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["hankey",{"_index":4118,"title":{},"body":{"index.html":{}}}],["happen",{"_index":3410,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["hard",{"_index":240,"title":{},"body":{"interfaces/ImageRatio.html":{},"miscellaneous/variables.html":{}}}],["harkness&#x1f4bb",{"_index":4165,"title":{},"body":{"index.html":{}}}],["hasbackdrop",{"_index":1756,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["hascorrectlength",{"_index":2820,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["hasinnertext",{"_index":1839,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["hasmultipleset",{"_index":551,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["hasn't",{"_index":4015,"title":{},"body":{"contributing.html":{}}}],["hasprotect",{"_index":2067,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["hasrequiredcontrol",{"_index":2533,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["hasrequiredcontrol(this.formcontrol",{"_index":2603,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["hasselect",{"_index":1801,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["hasunderlin",{"_index":3786,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["header",{"_index":1098,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"miscellaneous/variables.html":{}}}],["header.compon",{"_index":3589,"title":{},"body":{"modules/TsSortModule.html":{}}}],["header.component.html",{"_index":3517,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["header.component.scss",{"_index":3518,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["header.component.t",{"_index":3506,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["header.component.ts:101",{"_index":3549,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:108",{"_index":3560,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:110",{"_index":3561,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:111",{"_index":3559,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:131",{"_index":3558,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:143",{"_index":3557,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:151",{"_index":3554,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:161",{"_index":3556,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:170",{"_index":3555,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:76",{"_index":3553,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:83",{"_index":3550,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:89",{"_index":3552,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:95",{"_index":3551,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header.component.ts:98",{"_index":3562,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["header]'},{'nam",{"_index":1405,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["headercel",{"_index":1142,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["headercount",{"_index":1251,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["heavili",{"_index":4112,"title":{},"body":{"index.html":{}}}],["height",{"_index":90,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"classes/TsImageDimensions.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/variables.html":{}}}],["heightratio",{"_index":12,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["help",{"_index":2208,"title":{},"body":{"components/TsIconComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{}}}],["helper",{"_index":168,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"index.html":{}}}],["here",{"_index":153,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsSortHeaderIntl.html":{},"contributing.html":{},"index.html":{}}}],["here'",{"_index":3602,"title":{},"body":{"components/TsTableComponent.html":{}}}],["herebi",{"_index":4188,"title":{},"body":{"license.html":{}}}],["hi",{"_index":3107,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["hidden",{"_index":820,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCopyComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["hiddenitem",{"_index":821,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["hide",{"_index":170,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["hidebutton",{"_index":389,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["hidebutton(valu",{"_index":386,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["hiderequiredmark",{"_index":2458,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["hiderequiredmarker(valu",{"_index":2641,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["hierarchi",{"_index":2877,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["high",{"_index":2932,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["highchart",{"_index":1014,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChartComponent.html":{},"miscellaneous/variables.html":{}}}],["higher",{"_index":2876,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["highli",{"_index":3586,"title":{},"body":{"modules/TsSortModule.html":{},"modules/TsTableModule.html":{}}}],["hint",{"_index":277,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["hint(valu",{"_index":2644,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["hint=\"begin",{"_index":665,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["hints.push(`must",{"_index":335,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["hit",{"_index":607,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["hold",{"_index":2710,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"index.html":{}}}],["holder",{"_index":4209,"title":{},"body":{"license.html":{}}}],["hollow",{"_index":4246,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["home",{"_index":2207,"title":{},"body":{"components/TsIconComponent.html":{}}}],["homeif",{"_index":2234,"title":{},"body":{"components/TsIconComponent.html":{}}}],["hope",{"_index":4103,"title":{},"body":{"index.html":{}}}],["host",{"_index":286,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["hostbind",{"_index":183,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["hostbinding('attr.id",{"_index":316,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["hostbinding('class",{"_index":1464,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["hostbinding('style.posit",{"_index":2344,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["hostdecor",{"_index":2742,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["hostel",{"_index":2191,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["hostlisten",{"_index":184,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["hostlistener('click",{"_index":464,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsConfirmationDirective.html":{}}}],["hostlistener('dragleav",{"_index":458,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["hostlistener('dragov",{"_index":453,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["hostlistener('drop",{"_index":461,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["hostlistener('window:res",{"_index":848,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["hover",{"_index":1291,"title":{},"body":{"components/TsCardComponent.html":{}}}],["href",{"_index":3689,"title":{},"body":{"components/TsTableComponent.html":{}}}],["href}?q=repo:getterminus/terminu",{"_index":3692,"title":{},"body":{"components/TsTableComponent.html":{}}}],["html",{"_index":223,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["html5",{"_index":2621,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["htmlinputel",{"_index":313,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["http",{"_index":903,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["httpclient",{"_index":3644,"title":{},"body":{"components/TsTableComponent.html":{}}}],["https://api.github.com/search/issu",{"_index":3690,"title":{},"body":{"components/TsTableComponent.html":{}}}],["https://github.com/angular/material2/blob/master/src/lib/input/input.t",{"_index":2715,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["https://github.com/angular/material2/tree/master/src/lib/sort",{"_index":3588,"title":{},"body":{"modules/TsSortModule.html":{}}}],["https://github.com/angular/material2/tree/master/src/lib/t",{"_index":3744,"title":{},"body":{"modules/TsTableModule.html":{}}}],["https://github.com/getterminus/terminu",{"_index":3817,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["https://github.com/text",{"_index":2782,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["https://goo.gl/ieupag",{"_index":279,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["https://material.io/icon",{"_index":2239,"title":{},"body":{"components/TsIconComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"index.html":{}}}],["https://www.amcharts.com/docs/v4",{"_index":1575,"title":{},"body":{"components/TsChartComponent.html":{}}}],["human",{"_index":4134,"title":{},"body":{"index.html":{}}}],["i.",{"_index":4127,"title":{},"body":{"index.html":{}}}],["icon",{"_index":965,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"modules/TsFileUploadModule.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["icon'},{'nam",{"_index":1378,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["icon.compon",{"_index":2263,"title":{},"body":{"modules/TsIconModule.html":{}}}],["icon.component.html",{"_index":2211,"title":{},"body":{"components/TsIconComponent.html":{}}}],["icon.component.scss",{"_index":2210,"title":{},"body":{"components/TsIconComponent.html":{}}}],["icon/icon.modul",{"_index":968,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsCopyModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsRadioGroupModule.html":{}}}],["icons/csv",{"_index":2249,"title":{},"body":{"components/TsIconComponent.html":{}}}],["icons/csv.t",{"_index":4281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":155,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsValidationMessagesComponent.html":{},"miscellaneous/variables.html":{}}}],["id(valu",{"_index":391,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsValidationMessagesComponent.html":{}}}],["idea",{"_index":3985,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["identifi",{"_index":3407,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["ifram",{"_index":1057,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsSearchComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["ignor",{"_index":344,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["imag",{"_index":24,"title":{},"body":{"interfaces/ImageRatio.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"classes/TsImageDimensions.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{}}}],["image/jpeg",{"_index":4249,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["image/jpg",{"_index":68,"title":{},"body":{"interfaces/ImageRatio.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["image/png",{"_index":67,"title":{},"body":{"interfaces/ImageRatio.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["imagedimens",{"_index":566,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{}}}],["imagedimensionconstraint",{"_index":2102,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["imageratio",{"_index":1,"title":{"interfaces/ImageRatio.html":{}},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{}}}],["img",{"_index":2121,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["img.naturalheight",{"_index":2127,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["img.onload",{"_index":2124,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["img.src",{"_index":2122,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["immedi",{"_index":3868,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["immediatelyoronchang",{"_index":3887,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["implement",{"_index":296,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["impli",{"_index":4204,"title":{},"body":{"license.html":{}}}],["implicit",{"_index":2970,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["import",{"_index":38,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{}}}],["imput",{"_index":489,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["includ",{"_index":1055,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsIconComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"classes/TsTableDataSource.html":{},"contributing.html":{},"license.html":{}}}],["inclus",{"_index":3994,"title":{},"body":{"contributing.html":{}}}],["incorrect",{"_index":70,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["increas",{"_index":4019,"title":{},"body":{"contributing.html":{}}}],["indetermin",{"_index":1639,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["indeterminatechang",{"_index":1644,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDateAdapter.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":584,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/variables.html":{}}}],["indicatortoggl",{"_index":4303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["individu",{"_index":662,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["indiviu",{"_index":2085,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{}}}],["infinit",{"_index":2699,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{}}}],["inform",{"_index":2452,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/Version.html":{},"contributing.html":{}}}],["inherit",{"_index":1662,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["init",{"_index":1518,"title":{},"body":{"components/TsChartComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["init(typ",{"_index":1529,"title":{},"body":{"components/TsChartComponent.html":{}}}],["initi",{"_index":625,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["initialdata",{"_index":3710,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["initializeminandmax(formgroup",{"_index":2028,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["initialselect",{"_index":626,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["initialselections(select",{"_index":724,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["initialvalu",{"_index":3276,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["inject",{"_index":850,"title":{"injectables/TsAmChartsService.html":{},"injectables/TsDropProtectionService.html":{},"injectables/TsSortHeaderIntl.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["inject(ts_amcharts_token",{"_index":1017,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{}}}],["injectiontoken",{"_index":1007,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('amchart",{"_index":1016,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":2323,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["inlin",{"_index":1494,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{}}}],["inner",{"_index":478,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["innervalu",{"_index":1645,"title":{},"body":{"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["inprogress",{"_index":2378,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["input",{"_index":64,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDateAdapter.html":{},"interfaces/TsDateRange.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["input'",{"_index":495,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["input'},{'nam",{"_index":1380,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["input('aria",{"_index":3121,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["input('t",{"_index":3525,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["input('tscolumndef",{"_index":1501,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["input('tssortact",{"_index":3434,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["input('tssortdirect",{"_index":3437,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["input('tssortdisableclear",{"_index":3443,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["input('tssortstart",{"_index":3436,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["input.compon",{"_index":2283,"title":{},"body":{"modules/TsInputModule.html":{}}}],["input.component.html",{"_index":2566,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["input.component.scss",{"_index":2567,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["input.hasattribute('multipl",{"_index":552,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["input.setattribute('typ",{"_index":520,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["input.style.display",{"_index":521,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["input.valu",{"_index":2598,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["input/input.compon",{"_index":1997,"title":{},"body":{"interfaces/TsDateRange.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["input/input.modul",{"_index":969,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsSearchModule.html":{}}}],["input_debounce_tim",{"_index":3269,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["inputblur",{"_index":2665,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["inputchang",{"_index":1643,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["inputcompon",{"_index":2371,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["inputel",{"_index":2594,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["inputfocu",{"_index":2666,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["inputhaschang",{"_index":212,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsChartComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["inputhaschanged(chang",{"_index":499,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsChartComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["inputhint",{"_index":3277,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["inputlabel",{"_index":3278,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["inputpatternregex",{"_index":3270,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["insid",{"_index":1460,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{}}}],["instal",{"_index":2714,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"index.html":{}}}],["instanc",{"_index":42,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"components/TsValidationMessagesComponent.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":1467,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["instead",{"_index":1957,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["interact",{"_index":512,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["intercept",{"_index":1726,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsAmChartsToken.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsRadioOption.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{}},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"overview.html":{}}}],["intern",{"_index":1683,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsFileValidations.html":{},"components/TsLinkComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"components/TsToggleComponent.html":{},"index.html":{}}}],["intl",{"_index":3508,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSortModule.html":{}}}],["intl.t",{"_index":3566,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{},"miscellaneous/variables.html":{}}}],["intl.ts:21",{"_index":3570,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["intl.ts:26",{"_index":3572,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["intl.ts:33",{"_index":3573,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["invalid",{"_index":3811,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"miscellaneous/variables.html":{}}}],["invok",{"_index":2763,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["io",{"_index":2671,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["ischeck",{"_index":1618,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["ischecked(v",{"_index":1634,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["ischecked(valu",{"_index":3402,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["isclear",{"_index":2462,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["isclearable(valu",{"_index":2649,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["iscsv",{"_index":3378,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["isdevmod",{"_index":192,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"pipes/TsDatePipe.html":{},"components/TsIconComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"pipes/TsTimeAgoPipe.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["isdis",{"_index":780,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconButtonComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{}}}],["isdisabled(v",{"_index":2652,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["isdisabled(valu",{"_index":2021,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["isdragev",{"_index":218,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["isdragevent(ev",{"_index":525,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["isextern",{"_index":2289,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["isexternallink",{"_index":2893,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["isexternallink(destin",{"_index":904,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["isfirstpage(pag",{"_index":3031,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["isfocus",{"_index":2465,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["isfocused(valu",{"_index":2653,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["isforadmin",{"_index":781,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["isfunct",{"_index":657,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["isfunction(mask",{"_index":2790,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["isfunction(regex",{"_index":2766,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["isfunction(v",{"_index":712,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["isfunction(valu",{"_index":699,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["ishtmlinputel",{"_index":222,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["ishtmlinputelement(event.target",{"_index":528,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["isimag",{"_index":3381,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["isindetermin",{"_index":1640,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["islastpage(pag",{"_index":3032,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["isn't",{"_index":634,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsReactiveFormBaseComponent.html":{},"injectables/TsValidationMessageService.html":{}}}],["isnan(date.gettim",{"_index":1923,"title":{},"body":{"classes/TsDateAdapter.html":{}}}],["isnumb",{"_index":201,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["isnumber(v[0",{"_index":404,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["isnumber(v[1",{"_index":405,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["isnumbermask",{"_index":2794,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["iso",{"_index":2813,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["isredirect",{"_index":2379,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["isrequir",{"_index":1641,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["isrequired(valu",{"_index":2657,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["issam",{"_index":3352,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["issame(number1",{"_index":2150,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["issu",{"_index":1946,"title":{},"body":{"pipes/TsDatePipe.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"contributing.html":{}}}],["issubmit",{"_index":3279,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["istanbul",{"_index":343,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["isutilitymenu",{"_index":2861,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["isvalid",{"_index":1892,"title":{},"body":{"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsSelectedFile.html":{},"pipes/TsTimeAgoPipe.html":{},"injectables/TsValidatorsService.html":{}}}],["isvalid(comparedd",{"_index":3753,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["isvalid(d",{"_index":1902,"title":{},"body":{"classes/TsDateAdapter.html":{}}}],["isvalid(valu",{"_index":1948,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["isvalidd",{"_index":1906,"title":{},"body":{"classes/TsDateAdapter.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["isvaliddate(d",{"_index":1922,"title":{},"body":{"classes/TsDateAdapter.html":{}}}],["isvaliddate(valu",{"_index":2822,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["isvaliddatestring(valu",{"_index":2818,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["isvisu",{"_index":3104,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["isvisual(valu",{"_index":3143,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["iszerobas",{"_index":2937,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["iszerobased(v",{"_index":2972,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["it'",{"_index":737,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["item",{"_index":44,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["item.ag",{"_index":3616,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.com",{"_index":3657,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.created_at",{"_index":3637,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.isdis",{"_index":835,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["item.nam",{"_index":2921,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["item.nativeelement.offsetwidth",{"_index":860,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["item.numb",{"_index":3653,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.st",{"_index":3655,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.titl",{"_index":3654,"title":{},"body":{"components/TsTableComponent.html":{}}}],["item.usernam",{"_index":3603,"title":{},"body":{"components/TsTableComponent.html":{}}}],["items(valu",{"_index":832,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["items.length",{"_index":644,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["itemtomov",{"_index":887,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["itself",{"_index":3605,"title":{},"body":{"components/TsTableComponent.html":{},"index.html":{}}}],["jest",{"_index":3938,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["jiggl",{"_index":2711,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["join",{"_index":329,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"pipes/TsTitleCasePipe.html":{}}}],["jones&#x1f4bb",{"_index":4171,"title":{},"body":{"index.html":{}}}],["js",{"_index":4277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kal93&#x1f41b",{"_index":4166,"title":{},"body":{"index.html":{}}}],["keep",{"_index":3635,"title":{},"body":{"components/TsTableComponent.html":{},"contributing.html":{}}}],["keepcharposit",{"_index":2437,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["key",{"_index":561,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["keyboard",{"_index":506,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["keyboard_arrow_down",{"_index":2922,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["keyboard_arrow_left",{"_index":2958,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["keyboard_arrow_right",{"_index":2960,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["keyboardev",{"_index":508,"title":{"interfaces/KeyboardEvent.html":{}},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["keydown",{"_index":287,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["keyfram",{"_index":4306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keyup",{"_index":3274,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["kick",{"_index":2698,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["kilobyt",{"_index":80,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":4007,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["know",{"_index":762,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsTableDataSource.html":{}}}],["known",{"_index":2779,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["kown",{"_index":2744,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["label",{"_index":706,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconButtonComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{}}}],["label(valu",{"_index":2660,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["label=\"select",{"_index":666,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["labelclick(opt",{"_index":3160,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["labelel",{"_index":2592,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["labelledbi",{"_index":3123,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["labelposit",{"_index":3403,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["languag",{"_index":4102,"title":{},"body":{"index.html":{}}}],["larg",{"_index":3102,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["larger",{"_index":2875,"title":{},"body":{"components/TsMenuComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["last",{"_index":351,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["last_pag",{"_index":2962,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["lastpageicon",{"_index":2961,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["lastpageindex",{"_index":3005,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["lastpagetooltip",{"_index":2979,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["lastvalu",{"_index":2579,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["later",{"_index":1688,"title":{},"body":{"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["latest",{"_index":4066,"title":{},"body":{"contributing.html":{}}}],["layout",{"_index":306,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"components/TsIconComponent.html":{},"modules/TsInputModule.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"dependencies.html":{},"index.html":{}}}],["layout@6.0.0",{"_index":4139,"title":{},"body":{"index.html":{}}}],["layoutgap",{"_index":308,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["learn",{"_index":2944,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["leav",{"_index":2298,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["left",{"_index":1340,"title":{},"body":{"components/TsCardComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"components/TsTooltipComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["leftpoint",{"_index":4296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":909,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"components/TsNavigationComponent.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["length",{"_index":2411,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidationMessageService.html":{}}}],["less",{"_index":3832,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["lessthan",{"_index":3831,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["lessthanorequ",{"_index":3834,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["lessthanorequalvalid",{"_index":3916,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["lessthanvalid",{"_index":3914,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["let",{"_index":2424,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["letter",{"_index":3285,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidationMessageService.html":{}}}],["liabil",{"_index":4213,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":4210,"title":{},"body":{"license.html":{}}}],["lib/src/scss/helpers/_spacing.scss",{"_index":4273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["librari",{"_index":1539,"title":{},"body":{"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["licens",{"_index":1546,"title":{"license.html":{}},"body":{"components/TsChartComponent.html":{},"license.html":{}}}],["lift",{"_index":3585,"title":{},"body":{"modules/TsSortModule.html":{},"modules/TsTableModule.html":{}}}],["limit",{"_index":82,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsTableComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":995,"title":{},"body":{"modules/TerminusUIModule.html":{},"components/TsChartComponent.html":{},"contributing.html":{}}}],["link",{"_index":447,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["link'",{"_index":2290,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["link'},{'nam",{"_index":1382,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["link.compon",{"_index":2308,"title":{},"body":{"modules/TsLinkModule.html":{}}}],["link.component.html",{"_index":2287,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["link.component.scss",{"_index":2286,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["link/link.modul",{"_index":970,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoginFormModule.html":{}}}],["linkextern",{"_index":2296,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["lint",{"_index":2743,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["linter",{"_index":4047,"title":{},"body":{"contributing.html":{}}}],["list",{"_index":663,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["listen",{"_index":501,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsConfirmationDirective.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{}}}],["liter",{"_index":2086,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsNavigationActionItem.html":{},"interfaces/TsNavigationPayload.html":{},"miscellaneous/variables.html":{}}}],["live",{"_index":4032,"title":{},"body":{"contributing.html":{}}}],["llc",{"_index":4186,"title":{},"body":{"license.html":{}}}],["load",{"_index":69,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsFileValidations.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["loadingoverlayport",{"_index":2317,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["local",{"_index":591,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{}}}],["locat",{"_index":796,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["lock",{"_index":1265,"title":{},"body":{"components/TsCardComponent.html":{}}}],["lock_outlin",{"_index":1354,"title":{},"body":{"components/TsCardComponent.html":{}}}],["log",{"_index":2389,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["login",{"_index":598,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["logincta",{"_index":2380,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["loginform",{"_index":2372,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["long",{"_index":1503,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"classes/TsDateAdapter.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"miscellaneous/variables.html":{}}}],["longer",{"_index":2778,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["loop",{"_index":623,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["loos",{"_index":2712,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["lose",{"_index":2731,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["lot",{"_index":2953,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["lowercas",{"_index":3840,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["lowercasevalid",{"_index":3918,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["m/d/yyyi",{"_index":3848,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["made",{"_index":639,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCopyComponent.html":{}}}],["main",{"_index":4061,"title":{},"body":{"contributing.html":{}}}],["maintain",{"_index":4099,"title":{},"body":{"index.html":{}}}],["major",{"_index":3968,"title":{},"body":{"classes/Version.html":{},"contributing.html":{}}}],["make",{"_index":1320,"title":{},"body":{"components/TsCardComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"contributing.html":{},"index.html":{}}}],["malinconico&#x1f41b",{"_index":4163,"title":{},"body":{"index.html":{}}}],["manag",{"_index":375,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["mani",{"_index":1133,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["manual",{"_index":1105,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["map",{"_index":1010,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChartComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"miscellaneous/typealiases.html":{}}}],["map((respons",{"_index":612,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["map((word",{"_index":3761,"title":{},"body":{"pipes/TsTitleCasePipe.html":{}}}],["map(data",{"_index":3672,"title":{},"body":{"components/TsTableComponent.html":{}}}],["mark",{"_index":3530,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["marker",{"_index":2640,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["mask",{"_index":2435,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["mask(this.valu",{"_index":2791,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["mask(valu",{"_index":2663,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["mask/issues/294#issuecom",{"_index":2784,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["mask/text",{"_index":2783,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["maskallowdecim",{"_index":2686,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["masklength",{"_index":2792,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["masksanitizevalu",{"_index":2684,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["master",{"_index":4046,"title":{},"body":{"contributing.html":{}}}],["mat_date_format",{"_index":2281,"title":{},"body":{"modules/TsInputModule.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["matautocomplet",{"_index":648,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["matautocompletemodul",{"_index":1030,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["matautocompleteselectedev",{"_index":649,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["matautocompletetrigg",{"_index":650,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["matbuttonmodul",{"_index":1077,"title":{},"body":{"modules/TsButtonModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{}}}],["match",{"_index":580,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matcheckbox",{"_index":1626,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["matcheckboxchang",{"_index":1615,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["matcheckboxcompon",{"_index":1632,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["matcheckboxmodul",{"_index":1700,"title":{},"body":{"modules/TsCheckboxModule.html":{}}}],["matchipsmodul",{"_index":1031,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["matdatepick",{"_index":2538,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["matdatepickerinputev",{"_index":2521,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["matdatepickermodul",{"_index":2279,"title":{},"body":{"modules/TsInputModule.html":{}}}],["materi",{"_index":1830,"title":{},"body":{"components/TsCopyComponent.html":{},"classes/TsDateAdapter.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"modules/TsSortModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"index.html":{}}}],["math.abs((number1",{"_index":2151,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["math.ceil(this.file.s",{"_index":2114,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["math.floor(bas",{"_index":4274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mathmat",{"_index":4270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maticonmodul",{"_index":2262,"title":{},"body":{"modules/TsIconModule.html":{}}}],["maticonregistri",{"_index":2217,"title":{},"body":{"components/TsIconComponent.html":{}}}],["matinputmodul",{"_index":1033,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["matmenumodul",{"_index":2891,"title":{},"body":{"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{}}}],["matmenutrigg",{"_index":2854,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["matprogressbarmodul",{"_index":2094,"title":{},"body":{"modules/TsFileUploadModule.html":{}}}],["matprogressspinnermodul",{"_index":1035,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsButtonModule.html":{}}}],["matradiochang",{"_index":3084,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["matradiomodul",{"_index":3170,"title":{},"body":{"modules/TsRadioGroupModule.html":{}}}],["matripplemodul",{"_index":1443,"title":{},"body":{"modules/TsCardModule.html":{},"modules/TsCopyModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsRadioGroupModule.html":{}}}],["matselectmodul",{"_index":3348,"title":{},"body":{"modules/TsSelectModule.html":{}}}],["matslidetogglechang",{"_index":3397,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["matslidetogglemodul",{"_index":3780,"title":{},"body":{"modules/TsToggleModule.html":{}}}],["mattooltipmodul",{"_index":3799,"title":{},"body":{"modules/TsTooltipModule.html":{}}}],["max",{"_index":92,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["max/min",{"_index":2446,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["maxdat",{"_index":2511,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["maxdatevalid",{"_index":3920,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["maxim",{"_index":4017,"title":{},"body":{"contributing.html":{}}}],["maximum",{"_index":79,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["maximum_kilobytes_per_fil",{"_index":242,"title":{},"body":{"interfaces/ImageRatio.html":{},"miscellaneous/variables.html":{}}}],["maximumkilobytesperfil",{"_index":397,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["maximumkilobytesperfile(valu",{"_index":395,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["maximumvalidationmessag",{"_index":1135,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["maxitemlength",{"_index":1231,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["maxlength",{"_index":3820,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["maxpreferredrecord",{"_index":2942,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["maxrow",{"_index":1148,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["maxrows(valu",{"_index":1145,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["maxsiz",{"_index":2104,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["mean",{"_index":2500,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["medium",{"_index":1937,"title":{},"body":{"pipes/TsDatePipe.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["meet",{"_index":117,"title":{},"body":{"interfaces/ImageRatio.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["menu",{"_index":806,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["menu'},{'nam",{"_index":1388,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["menu.compon",{"_index":2892,"title":{},"body":{"modules/TsMenuModule.html":{}}}],["menu.component.html",{"_index":2827,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["menu.component.scss",{"_index":2826,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["menu/menu.modul",{"_index":975,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsPaginatorModule.html":{}}}],["menuisdisabled(pagescount",{"_index":3038,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["menuitemstempl",{"_index":2833,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["menuloc",{"_index":2986,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["menupositioni",{"_index":2835,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["menupositionx",{"_index":2834,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["merchant",{"_index":4205,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1742,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"contributing.html":{},"license.html":{}}}],["merge(_sort.sortchang",{"_index":3531,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["merge(this.overlayref.backdropclick",{"_index":1766,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["merge(this.sort.sortchang",{"_index":3665,"title":{},"body":{"components/TsTableComponent.html":{}}}],["messag",{"_index":73,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["message.length",{"_index":3034,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["message.servic",{"_index":3883,"title":{},"body":{"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{}}}],["message.service.t",{"_index":3804,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"miscellaneous/variables.html":{}}}],["message.service.ts:40",{"_index":3809,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["messages.compon",{"_index":3902,"title":{},"body":{"modules/TsValidationMessagesModule.html":{}}}],["messages.component.html",{"_index":3858,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.scss",{"_index":3857,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.t",{"_index":3855,"title":{},"body":{"components/TsValidationMessagesComponent.html":{},"miscellaneous/variables.html":{}}}],["messages.component.ts:104",{"_index":3869,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.ts:107",{"_index":3881,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.ts:110",{"_index":3864,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.ts:42",{"_index":3873,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.ts:49",{"_index":3875,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.ts:74",{"_index":3866,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.ts:80",{"_index":3867,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.ts:83",{"_index":3876,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.ts:86",{"_index":3871,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.ts:92",{"_index":3870,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.ts:95",{"_index":3878,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.component.ts:98",{"_index":3872,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["messages.length",{"_index":1239,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["messages.modul",{"_index":992,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsInputModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSelectModule.html":{}}}],["messages.module.t",{"_index":3901,"title":{},"body":{"modules/TsValidationMessagesModule.html":{}}}],["messages.push(`and",{"_index":1241,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["messages.push(messag",{"_index":1237,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["messages/valid",{"_index":991,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsInputModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSelectModule.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":1043,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"pipes/TsSentenceCasePipe.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["method",{"_index":1046,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{},"index.html":{}}}],["methods/variables/mixin",{"_index":4146,"title":{},"body":{"index.html":{}}}],["mime",{"_index":225,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mime/typ",{"_index":71,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["mimetyp",{"_index":2105,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["min",{"_index":91,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsTableComponent.html":{}}}],["mind",{"_index":4069,"title":{},"body":{"contributing.html":{}}}],["mindat",{"_index":2509,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["mindatevalid",{"_index":3922,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["minifi",{"_index":4024,"title":{},"body":{"contributing.html":{}}}],["minim",{"_index":2933,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["minimum",{"_index":439,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"interfaces/TsDateRange.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["minimumcharact",{"_index":709,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["minimumcharacters(valu",{"_index":707,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["minlength",{"_index":3328,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidationMessageService.html":{}}}],["minor",{"_index":3969,"title":{},"body":{"classes/Version.html":{}}}],["minu",{"_index":4289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minwidth",{"_index":1497,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsTableComponent.html":{}}}],["miscellan",{"_index":4221,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mistak",{"_index":3996,"title":{},"body":{"contributing.html":{}}}],["mit",{"_index":4183,"title":{},"body":{"license.html":{}}}],["mixin",{"_index":3427,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["mixindis",{"_index":3420,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["mixindisabled(tssortbas",{"_index":3429,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"miscellaneous/variables.html":{}}}],["mixindisabled(tssortheaderbas",{"_index":3512,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":2807,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["mm/dd/yyyi",{"_index":2575,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["mock",{"_index":3932,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["modal",{"_index":1728,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{}}}],["modal'},{'nam",{"_index":1368,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["modal.compon",{"_index":1743,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"modules/TsConfirmationModule.html":{}}}],["modal.component.html",{"_index":1782,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["modal.component.scss",{"_index":1781,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["modal.component.t",{"_index":1780,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["modal.component.ts:29",{"_index":1784,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["modal.component.ts:34",{"_index":1787,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["modalinst",{"_index":1708,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["mode",{"_index":3086,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["model",{"_index":1684,"title":{},"body":{"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["modelformatt",{"_index":3096,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["modifi",{"_index":3567,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{},"license.html":{}}}],["modul",{"_index":906,"title":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"modules.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"modules.html":{},"overview.html":{}}}],["monitor",{"_index":2668,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["month",{"_index":1909,"title":{},"body":{"classes/TsDateAdapter.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/variables.html":{}}}],["monthyeara11ylabel",{"_index":1916,"title":{},"body":{"classes/TsDateAdapter.html":{},"miscellaneous/variables.html":{}}}],["monthyearlabel",{"_index":1914,"title":{},"body":{"classes/TsDateAdapter.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":896,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCopyComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["more_vert",{"_index":2858,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["motiv",{"_index":4027,"title":{},"body":{"contributing.html":{}}}],["mous",{"_index":803,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{}}}],["mouseev",{"_index":658,"title":{"interfaces/MouseEvent.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["move",{"_index":878,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"interfaces/TsUser.html":{},"miscellaneous/variables.html":{}}}],["movement",{"_index":302,"title":{},"body":{"interfaces/ImageRatio.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["much",{"_index":3584,"title":{},"body":{"modules/TsSortModule.html":{},"modules/TsTableModule.html":{}}}],["multi",{"_index":262,"title":{},"body":{"interfaces/ImageRatio.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"miscellaneous/variables.html":{}}}],["multipl",{"_index":32,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsIconComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"injectables/TsValidationMessageService.html":{}}}],["multiple(v",{"_index":711,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["multiple(valu",{"_index":415,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["multiple=\"(v",{"_index":667,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["mychangefunc(v",{"_index":2935,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["myclass",{"_index":2242,"title":{},"body":{"components/TsIconComponent.html":{}}}],["mycompon",{"_index":3933,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["mycontrol",{"_index":2450,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["mycontrol.valu",{"_index":1620,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["mydat",{"_index":2516,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["mydatasource.data",{"_index":3618,"title":{},"body":{"components/TsTableComponent.html":{}}}],["mydimensionconstraint",{"_index":111,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["myfilt",{"_index":2504,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["myfocusedflag",{"_index":2467,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["myform",{"_index":1961,"title":{},"body":{"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"injectables/TsValidatorsService.html":{}}}],["myform.get('daterang",{"_index":1973,"title":{},"body":{"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["myform.get('daterange');ev",{"_index":1975,"title":{},"body":{"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["myfunc(blob",{"_index":1101,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["mymimetyp",{"_index":66,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["myprogress",{"_index":129,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["myradiogroup",{"_index":3093,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["myselectfunc(v",{"_index":2934,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["mystr",{"_index":342,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["mystring.length",{"_index":353,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["mytableitem",{"_index":3613,"title":{},"body":{"components/TsTableComponent.html":{}}}],["myupdat",{"_index":3203,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["myvalid",{"_index":1109,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["myvalu",{"_index":1622,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsTableComponent.html":{}}}],["myvar",{"_index":2476,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["n",{"_index":1897,"title":{},"body":{"classes/TsDateAdapter.html":{}}}],["n).slice",{"_index":1921,"title":{},"body":{"classes/TsDateAdapter.html":{}}}],["name",{"_index":273,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["name(valu",{"_index":3146,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["name=\"product",{"_index":668,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["nameexist",{"_index":825,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["nativ",{"_index":145,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"classes/TsTableDataSource.html":{}}}],["nativedateadapt",{"_index":1890,"title":{},"body":{"classes/TsDateAdapter.html":{}}}],["nativedatemodul",{"_index":2282,"title":{},"body":{"modules/TsInputModule.html":{}}}],["natur",{"_index":4034,"title":{},"body":{"contributing.html":{}}}],["nav",{"_index":804,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["nav_width_buff",{"_index":816,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["navig",{"_index":783,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["navigation'},{'nam",{"_index":1389,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["navigation.compon",{"_index":2928,"title":{},"body":{"modules/TsNavigationModule.html":{}}}],["navigation.component.html",{"_index":807,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["navigation.component.scss",{"_index":808,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["navigation/navigation.modul",{"_index":976,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["navigationitembas",{"_index":775,"title":{"interfaces/NavigationItemBase.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["nb",{"_index":993,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["nbsp",{"_index":3563,"title":{},"body":{"components/TsSortHeaderComponent.html":{}}}],["necessari",{"_index":4052,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":635,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"directives/TsColumnDefDirective.html":{},"classes/TsDateAdapter.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{}}}],["nest",{"_index":1455,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{}}}],["new",{"_index":352,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"classes/Version.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["newfil",{"_index":426,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["newfile.fileloaded$.pip",{"_index":429,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["next",{"_index":121,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["nextdirectionindex",{"_index":3470,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["nextpageicon",{"_index":2959,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["nextpageindex",{"_index":3002,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["nextpagetooltip",{"_index":2978,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["nextuniqueid",{"_index":247,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsValidationMessagesComponent.html":{},"miscellaneous/variables.html":{}}}],["ng_value_accessor",{"_index":196,"title":{},"body":{"interfaces/ImageRatio.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"miscellaneous/variables.html":{}}}],["ngaftercontentcheck",{"_index":2693,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["ngaftercontentinit",{"_index":491,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["ngafterviewinit",{"_index":742,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["ngif=\"fileexists(v.id",{"_index":176,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["nginx",{"_index":239,"title":{},"body":{"interfaces/ImageRatio.html":{},"miscellaneous/variables.html":{}}}],["ngmodel",{"_index":1617,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsTableComponent.html":{}}}],["ngmodel(v",{"_index":1642,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["ngmodul",{"_index":950,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{}}}],["ngonchang",{"_index":1451,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"components/TsLoginFormComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["ngonchanges(chang",{"_index":498,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsChartComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["ngondestroy",{"_index":503,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["ngoninit",{"_index":483,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{}}}],["ngx",{"_index":3218,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"dependencies.html":{}}}],["ngzone",{"_index":1522,"title":{},"body":{"components/TsChartComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["node",{"_index":1848,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["node_modules/perfect",{"_index":3225,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["non",{"_index":3515,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"contributing.html":{}}}],["none",{"_index":522,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCardComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["noninfring",{"_index":4207,"title":{},"body":{"license.html":{}}}],["noop",{"_index":1685,"title":{},"body":{"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["noresult",{"_index":3837,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["normalizedvalu",{"_index":2735,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["normalizedvalue.toisostr",{"_index":2737,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["note",{"_index":238,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["note(b",{"_index":1489,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["noth",{"_index":3961,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["notic",{"_index":1970,"title":{},"body":{"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"license.html":{}}}],["notifi",{"_index":643,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["notuniqu",{"_index":3836,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["now",{"_index":740,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{}}}],["nowfocus",{"_index":2729,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["nowrap",{"_index":1490,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["nowrap=\"tru",{"_index":3634,"title":{},"body":{"components/TsTableComponent.html":{}}}],["npm",{"_index":4173,"title":{},"body":{"index.html":{}}}],["null",{"_index":823,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"modules/TsChartModule.html":{},"directives/TsConfirmationDirective.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{}}}],["number",{"_index":14,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsDateAdapter.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number(r.split(':')[0",{"_index":572,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["number(r.split(':')[1",{"_index":573,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["number.pip",{"_index":3074,"title":{},"body":{"modules/TsPipesModule.html":{}}}],["number.pipe.t",{"_index":3192,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{}}}],["number.pipe.ts:12",{"_index":3195,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{}}}],["number/round",{"_index":3073,"title":{},"body":{"modules/TsPipesModule.html":{},"pipes/TsRoundNumberPipe.html":{}}}],["number1",{"_index":2148,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["number2",{"_index":2149,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["number_only_regex",{"_index":2559,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/variables.html":{}}}],["number_with_decimal_regex",{"_index":2561,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/variables.html":{}}}],["numberofmissingcolumn",{"_index":1194,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["numbersinformattedd",{"_index":2819,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["numbersvalid",{"_index":3924,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["numer",{"_index":1912,"title":{},"body":{"classes/TsDateAdapter.html":{},"miscellaneous/variables.html":{}}}],["obj.id",{"_index":167,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["object",{"_index":697,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(file.valid",{"_index":568,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["observ",{"_index":1724,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{}}}],["obtain",{"_index":4193,"title":{},"body":{"license.html":{}}}],["occur",{"_index":124,"title":{},"body":{"interfaces/ImageRatio.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsTableDataSource.html":{},"components/TsValidationMessagesComponent.html":{}}}],["offer",{"_index":3805,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["offest",{"_index":3244,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["offset",{"_index":3242,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["old",{"_index":3620,"title":{},"body":{"components/TsTableComponent.html":{}}}],["olddat",{"_index":2615,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["on",{"_index":171,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsChartComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSelectedFile.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["onblur",{"_index":1648,"title":{},"body":{"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["onc",{"_index":382,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{}}}],["onchang",{"_index":185,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{}}}],["onchangecallback",{"_index":1646,"title":{},"body":{"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["onclick(ev",{"_index":1745,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ondestroy",{"_index":186,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["oninit",{"_index":187,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{}}}],["oninput(valu",{"_index":2750,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["onres",{"_index":849,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["onscroll(ev",{"_index":1217,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["onto",{"_index":2329,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["ontouch",{"_index":1674,"title":{},"body":{"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["ontouchedcallback",{"_index":1647,"title":{},"body":{"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["onvirtualinputelementchange(ev",{"_index":542,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["op",{"_index":3721,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["opac",{"_index":1334,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":275,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{},"index.html":{}}}],["open/clos",{"_index":4013,"title":{},"body":{"contributing.html":{}}}],["open_in_new",{"_index":2238,"title":{},"body":{"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{}}}],["opento",{"_index":2515,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["oper",{"_index":4029,"title":{},"body":{"contributing.html":{}}}],["option",{"_index":588,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["option.dis",{"_index":3161,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["optionremov",{"_index":730,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["optionremoved)=\"myremoved($ev",{"_index":673,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["options(valu",{"_index":3149,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["optionselect",{"_index":729,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["optionselected)=\"myselected($ev",{"_index":672,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["optiontyp",{"_index":597,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["order",{"_index":1562,"title":{},"body":{"components/TsChartComponent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{}}}],["origin",{"_index":1733,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{}}}],["origini",{"_index":1753,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["originx",{"_index":1752,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["other",{"_index":4104,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":3201,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"injectables/TsSortHeaderIntl.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":734,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"modules/TsValidationMessagesModule.html":{},"contributing.html":{},"index.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["outlet",{"_index":2154,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["outlin",{"_index":2692,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"contributing.html":{}}}],["outlinegappad",{"_index":2557,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/variables.html":{}}}],["outlinegapstart",{"_index":2581,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["outlinegapwidth",{"_index":2582,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["output",{"_index":188,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"components/TsIconButtonComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{}}}],["output('tssortchang",{"_index":3447,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["outsid",{"_index":2695,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["over",{"_index":2940,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["overlap",{"_index":704,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsMenuComponent.html":{}}}],["overlay",{"_index":1713,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"index.html":{}}}],["overlay'},{'nam",{"_index":1384,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["overlay.compon",{"_index":2339,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{}}}],["overlay.component.scss",{"_index":2312,"title":{},"body":{"components/TsLoadingOverlayComponent.html":{}}}],["overlay.component.t",{"_index":2310,"title":{},"body":{"components/TsLoadingOverlayComponent.html":{}}}],["overlay.direct",{"_index":2360,"title":{},"body":{"modules/TsLoadingOverlayModule.html":{}}}],["overlay.directive.t",{"_index":2313,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:101",{"_index":2332,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:114",{"_index":2331,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:35",{"_index":2337,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:40",{"_index":2336,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:46",{"_index":2326,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:59",{"_index":2324,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.directive.ts:88",{"_index":2334,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["overlay.modul",{"_index":972,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["overlay.module.t",{"_index":2359,"title":{},"body":{"modules/TsLoadingOverlayModule.html":{}}}],["overlay/load",{"_index":971,"title":{},"body":{"modules/TerminusUIModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{}}}],["overlay__panel",{"_index":1759,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["overlayconfig",{"_index":1737,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["overlayi",{"_index":1755,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["overlaymodul",{"_index":1794,"title":{},"body":{"modules/TsConfirmationModule.html":{}}}],["overlayref",{"_index":1709,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["overlayx",{"_index":1754,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["overrid",{"_index":1012,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"miscellaneous/variables.html":{}}}],["overridden",{"_index":646,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["overriden",{"_index":1611,"title":{},"body":{"modules/TsChartModule.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["overview",{"_index":4022,"title":{"overview.html":{}},"body":{"contributing.html":{},"overview.html":{}}}],["overwrit",{"_index":1559,"title":{},"body":{"components/TsChartComponent.html":{}}}],["packag",{"_index":4075,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":1213,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsLinkComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"index.html":{}}}],["page.valu",{"_index":3028,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pagenumb",{"_index":3050,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pages.find((pag",{"_index":3040,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pagesarray",{"_index":2963,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pagescount",{"_index":3037,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pageselect",{"_index":2998,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pagevalu",{"_index":3051,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["pagin",{"_index":2931,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"index.html":{}}}],["paginator'},{'nam",{"_index":1391,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["paginator.compon",{"_index":3062,"title":{},"body":{"modules/TsPaginatorModule.html":{}}}],["paginator.component.html",{"_index":2945,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["paginator.component.scss",{"_index":2946,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["paginator/paginator.modul",{"_index":977,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsTableModule.html":{}}}],["paginatorarray",{"_index":3047,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["paginatorarray.push",{"_index":3053,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["paginatorarray.sort((a",{"_index":3054,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["paginatormessagetempl",{"_index":2987,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["panelclass",{"_index":1758,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["param",{"_index":479,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDateAdapter.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["paramet",{"_index":1004,"title":{},"body":{"injectables/TsAmChartsService.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{}}}],["parent",{"_index":1457,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"components/TsIconButtonComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["parentintl",{"_index":3576,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["pars",{"_index":574,"title":{},"body":{"interfaces/ImageRatio.html":{},"classes/TsDateAdapter.html":{},"miscellaneous/variables.html":{}}}],["parsedimageratio",{"_index":569,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["parsedimageratio.push",{"_index":571,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["parsedratio",{"_index":576,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["parsedratio.push(r.widthratio.tostr",{"_index":577,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["parseint(value.split",{"_index":3962,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["parseint(value.split(':')[0",{"_index":1344,"title":{},"body":{"components/TsCardComponent.html":{}}}],["parseint(value.split(':')[1",{"_index":1346,"title":{},"body":{"components/TsCardComponent.html":{}}}],["parseratiotostring(ratio",{"_index":575,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["part",{"_index":2495,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{}}}],["partial",{"_index":3052,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["particular",{"_index":4206,"title":{},"body":{"license.html":{}}}],["pass",{"_index":85,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["password",{"_index":2364,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["password_minlength",{"_index":2373,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["passwordmessag",{"_index":3816,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"miscellaneous/variables.html":{}}}],["passwordvalid",{"_index":3926,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["past",{"_index":1103,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsTableComponent.html":{}}}],["pastedcolumncount",{"_index":1195,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["pastedrowid",{"_index":1202,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["patch",{"_index":3970,"title":{},"body":{"classes/Version.html":{},"contributing.html":{}}}],["path",{"_index":3189,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["pattern",{"_index":3822,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["peet&#x1f3a8",{"_index":4169,"title":{},"body":{"index.html":{}}}],["peopl",{"_index":4150,"title":{},"body":{"index.html":{}}}],["per",{"_index":2099,"title":{},"body":{"interfaces/TsFileValidations.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"injectables/TsValidationMessageService.html":{},"miscellaneous/variables.html":{}}}],["percentag",{"_index":1304,"title":{},"body":{"components/TsCardComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["percentage.tofixed(2",{"_index":1348,"title":{},"body":{"components/TsCardComponent.html":{}}}],["perfect",{"_index":3219,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"dependencies.html":{}}}],["perfectscrollbardirect",{"_index":3217,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["perfectscrollbarmodul",{"_index":3262,"title":{},"body":{"modules/TsScrollbarsModule.html":{}}}],["perform",{"_index":2402,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["perhap",{"_index":4040,"title":{},"body":{"contributing.html":{}}}],["permiss",{"_index":4187,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4198,"title":{},"body":{"license.html":{}}}],["perpag",{"_index":3045,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{}}}],["person",{"_index":4192,"title":{},"body":{"license.html":{}}}],["phone",{"_index":2490,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["pick",{"_index":3187,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["picker",{"_index":276,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["pie",{"_index":1570,"title":{},"body":{"components/TsChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["pipe",{"_index":604,"title":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"index.html":{},"overview.html":{}}}],["pipes/pipes.modul",{"_index":979,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["pipetransform",{"_index":1931,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["pixel",{"_index":440,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["place",{"_index":266,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["placehold",{"_index":1687,"title":{},"body":{"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{},"classes/Version.html":{},"miscellaneous/variables.html":{}}}],["placeholder/label",{"_index":705,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["plain",{"_index":2764,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["plan",{"_index":147,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["platform",{"_index":2534,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["pleas",{"_index":3995,"title":{},"body":{"contributing.html":{}}}],["plugin",{"_index":4179,"title":{},"body":{"index.html":{}}}],["point",{"_index":3641,"title":{},"body":{"components/TsTableComponent.html":{},"contributing.html":{}}}],["pointer",{"_index":4290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pop",{"_index":1731,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"index.html":{}}}],["popup",{"_index":2565,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["portal",{"_index":2333,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["portion",{"_index":1956,"title":{},"body":{"interfaces/TsDateRange.html":{},"license.html":{}}}],["posit",{"_index":2328,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{},"components/TsMenuComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"miscellaneous/typealiases.html":{}}}],["positionstrategi",{"_index":1749,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["possibl",{"_index":1342,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsIconComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"miscellaneous/typealiases.html":{}}}],["postal",{"_index":2480,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["potenti",{"_index":703,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["pr",{"_index":3992,"title":{},"body":{"contributing.html":{}}}],["pray",{"_index":4004,"title":{},"body":{"contributing.html":{}}}],["preced",{"_index":3124,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["preceed",{"_index":1896,"title":{},"body":{"classes/TsDateAdapter.html":{}}}],["precis",{"_index":3194,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{},"index.html":{}}}],["predic",{"_index":2167,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["prefix",{"_index":1256,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"contributing.html":{}}}],["prefixicon",{"_index":2453,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["present",{"_index":1262,"title":{},"body":{"components/TsCardComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsValidationMessagesComponent.html":{}}}],["preservewhitespac",{"_index":2157,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["prevent",{"_index":2068,"title":{},"body":{"injectables/TsDropProtectionService.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"contributing.html":{}}}],["prevent(",{"_index":2072,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["preventandstopeventpropagation(ev",{"_index":546,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["preview",{"_index":272,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["previou",{"_index":749,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["previouspageicon",{"_index":2957,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["previouspagetooltip",{"_index":2977,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["primari",{"_index":267,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsToggleComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["pristin",{"_index":810,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["pristineitem",{"_index":812,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["privat",{"_index":311,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDateAdapter.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{}}}],["problem",{"_index":3989,"title":{},"body":{"contributing.html":{}}}],["process",{"_index":1954,"title":{},"body":{"interfaces/TsDateRange.html":{},"classes/TsTableDataSource.html":{}}}],["programmat",{"_index":2570,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["progress",{"_index":30,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"index.html":{}}}],["progress(valu",{"_index":418,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["prohibit",{"_index":2501,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["project",{"_index":4012,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["promise.resolv",{"_index":2697,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["promise.resolve().then",{"_index":2703,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["promise.resolve(null).then",{"_index":2638,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["prompt",{"_index":274,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCopyComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["promptforfil",{"_index":513,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["properti",{"_index":11,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"classes/Version.html":{}}}],["propertynam",{"_index":3886,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["propog",{"_index":545,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["propos",{"_index":4005,"title":{},"body":{"contributing.html":{}}}],["protect",{"_index":298,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["protection.servic",{"_index":231,"title":{},"body":{"interfaces/ImageRatio.html":{},"modules/TsFileUploadModule.html":{}}}],["protection.service.t",{"_index":2066,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["protection.service.ts:18",{"_index":2071,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["protection.service.ts:30",{"_index":2075,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["protection.service.ts:46",{"_index":2073,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["protection.service.ts:7",{"_index":2070,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["provid",{"_index":259,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"contributing.html":{},"index.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["proxi",{"_index":2867,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["public",{"_index":172,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{}}}],["publicid",{"_index":317,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["publish",{"_index":4194,"title":{},"body":{"license.html":{}}}],["pull",{"_index":884,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["pure",{"_index":2498,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["purpos",{"_index":2199,"title":{},"body":{"components/TsIconButtonComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"license.html":{}}}],["push",{"_index":875,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["px",{"_index":3243,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"miscellaneous/variables.html":{}}}],["qa",{"_index":264,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["queri",{"_index":592,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsUser.html":{}}}],["query)=\"myquery($ev",{"_index":675,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["querylist",{"_index":786,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["queryminlength",{"_index":3271,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["querystr",{"_index":3241,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["querysubject",{"_index":679,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["question",{"_index":1904,"title":{},"body":{"classes/TsDateAdapter.html":{},"contributing.html":{}}}],["quick",{"_index":2002,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["quickli",{"_index":4001,"title":{},"body":{"contributing.html":{}}}],["r",{"_index":2144,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["r.heightratio",{"_index":2143,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["r.heightratio.tostr",{"_index":578,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["r.split('\\t",{"_index":1243,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["r.widthratio",{"_index":2142,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["r\\n",{"_index":1255,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["radar",{"_index":1571,"title":{},"body":{"components/TsChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["radio",{"_index":980,"title":{},"body":{"modules/TerminusUIModule.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["rail",{"_index":2936,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["rang",{"_index":97,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["range'},{'nam",{"_index":1372,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["range.compon",{"_index":2064,"title":{},"body":{"modules/TsDateRangeModule.html":{}}}],["range.component.html",{"_index":1998,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["range.component.scss",{"_index":1999,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["range.component.t",{"_index":1953,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["range.modul",{"_index":963,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["range.module.t",{"_index":2063,"title":{},"body":{"modules/TsDateRangeModule.html":{}}}],["range.selectnodecont",{"_index":1846,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["range.selectnodecontents(el",{"_index":1850,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["range/d",{"_index":962,"title":{},"body":{"modules/TerminusUIModule.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{}}}],["rangeendchange(ev",{"_index":2528,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["rangestartchange(ev",{"_index":2520,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["rare",{"_index":1624,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["rate",{"_index":3248,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{}}}],["ratio",{"_index":26,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCardComponent.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{},"miscellaneous/typealiases.html":{}}}],["ratioconstraint",{"_index":412,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["ratioconstraints(valu",{"_index":399,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["ratios.map((r",{"_index":570,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["re",{"_index":1533,"title":{},"body":{"components/TsChartComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{}}}],["reach",{"_index":3678,"title":{},"body":{"components/TsTableComponent.html":{}}}],["reactiv",{"_index":1616,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["reactiveformsmodul",{"_index":1029,"title":{},"body":{"modules/TsAutocompleteModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsInputModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSearchModule.html":{}}}],["read",{"_index":2134,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"contributing.html":{}}}],["readabl",{"_index":3640,"title":{},"body":{"components/TsTableComponent.html":{},"index.html":{}}}],["readm",{"_index":3,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"injectables/TsValidatorsService.html":{}}}],["readonli",{"_index":1114,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"classes/Version.html":{}}}],["real",{"_index":130,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["realiz",{"_index":2741,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["reason",{"_index":2460,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"contributing.html":{}}}],["rebas",{"_index":4055,"title":{},"body":{"contributing.html":{}}}],["receiv",{"_index":2042,"title":{},"body":{"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["recent",{"_index":3433,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["recommend",{"_index":3587,"title":{},"body":{"modules/TsSortModule.html":{},"modules/TsTableModule.html":{}}}],["record",{"_index":1121,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{}}}],["recordcounttoohighmessag",{"_index":2993,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordid",{"_index":1095,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["recordsform",{"_index":1137,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["recordsperpag",{"_index":2966,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordsperpagechang",{"_index":2999,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordsperpagechoic",{"_index":2994,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordsperpageupdated(select",{"_index":3035,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordsremain",{"_index":3048,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recordsselectlabel",{"_index":2996,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["recreat",{"_index":2519,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["redirect",{"_index":2391,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["refer",{"_index":154,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["refin",{"_index":2954,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["reflect",{"_index":126,"title":{},"body":{"interfaces/ImageRatio.html":{},"miscellaneous/variables.html":{}}}],["regard",{"_index":2943,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["regardless",{"_index":3636,"title":{},"body":{"components/TsTableComponent.html":{}}}],["regex",{"_index":2760,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"injectables/TsValidationMessageService.html":{}}}],["regexp",{"_index":2440,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["regexp(finalregex",{"_index":2768,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["regexp|str",{"_index":2550,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["regist",{"_index":534,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{}}}],["register(sort",{"_index":3450,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["registeronchang",{"_index":1649,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["registeronchange(fn",{"_index":1668,"title":{},"body":{"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["registeronchangefn(fn",{"_index":536,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["registerontouch",{"_index":1650,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["registerontouched(fn",{"_index":1672,"title":{},"body":{"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["regular",{"_index":3310,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["rel",{"_index":2355,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["relat",{"_index":4036,"title":{},"body":{"contributing.html":{}}}],["releas",{"_index":4053,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["reli",{"_index":1625,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"index.html":{}}}],["remain",{"_index":3044,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["rememb",{"_index":2365,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"index.html":{}}}],["rememberm",{"_index":2405,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["remot",{"_index":4063,"title":{},"body":{"contributing.html":{}}}],["remov",{"_index":162,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"injectables/TsDropProtectionService.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["removed(chip",{"_index":641,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["removefile(ev",{"_index":515,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["renam",{"_index":1499,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["render",{"_index":1263,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsValidationMessagesComponent.html":{}}}],["renderer.setelementstyle(elementref.nativeel",{"_index":1496,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["renderer2",{"_index":2532,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["report",{"_index":4016,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["repositori",{"_index":3997,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["repres",{"_index":301,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"components/TsCopyComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{}}}],["represent",{"_index":4278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reproduc",{"_index":4031,"title":{},"body":{"contributing.html":{}}}],["reproduct",{"_index":3998,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":3991,"title":{},"body":{"contributing.html":{}}}],["requestparam",{"_index":3693,"title":{},"body":{"components/TsTableComponent.html":{}}}],["requesturl",{"_index":3691,"title":{},"body":{"components/TsTableComponent.html":{}}}],["requir",{"_index":586,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"index.html":{}}}],["requiredattribut",{"_index":2601,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["requiredformcontrol",{"_index":2602,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["requiredspac",{"_index":880,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["reset",{"_index":614,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["resetform",{"_index":2375,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["resetselect",{"_index":1804,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["resiz",{"_index":847,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["resourc",{"_index":3012,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"index.html":{}}}],["respond",{"_index":1322,"title":{},"body":{"components/TsCardComponent.html":{}}}],["respons",{"_index":560,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{}}}],["response['item",{"_index":613,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["rest",{"_index":2240,"title":{},"body":{"components/TsIconComponent.html":{}}}],["restrict",{"_index":1102,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"license.html":{}}}],["result",{"_index":579,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.row",{"_index":1244,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["resultsarray",{"_index":1224,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["resultslength",{"_index":3660,"title":{},"body":{"components/TsTableComponent.html":{}}}],["retriev",{"_index":3130,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{}}}],["retrievevalue(opt",{"_index":3158,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["return",{"_index":160,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["revers",{"_index":3413,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["rgba(0",{"_index":3118,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["right",{"_index":1336,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTooltipComponent.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rightpoint",{"_index":4300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rippl",{"_index":1831,"title":{},"body":{"components/TsCopyComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["ripplecolor",{"_index":1802,"title":{},"body":{"components/TsCopyComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["roger",{"_index":2864,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["role",{"_index":1482,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["rotat",{"_index":4295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rotate(45deg",{"_index":4299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["round",{"_index":3072,"title":{},"body":{"modules/TsPipesModule.html":{},"index.html":{}}}],["roundnumb",{"_index":3196,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{}}}],["roundnumber(valu",{"_index":3197,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{}}}],["routerlink",{"_index":797,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["routermodul",{"_index":2306,"title":{},"body":{"modules/TsLinkModule.html":{},"modules/TsNavigationModule.html":{}}}],["row",{"_index":1093,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{}}}],["row${rowsthatdontfit",{"_index":1186,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["row'",{"_index":2162,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsTableComponent.html":{}}}],["row'},{'nam",{"_index":1375,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["row.get('column",{"_index":1191,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["row/column",{"_index":1122,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rowcount",{"_index":1158,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rowcount(valu",{"_index":1155,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rows.length).map((r",{"_index":1246,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rows.slice(0",{"_index":1245,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rowsthatdontfit",{"_index":1184,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["rule",{"_index":2165,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"contributing.html":{}}}],["run",{"_index":2694,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"contributing.html":{}}}],["rxj",{"_index":655,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsConfirmationModalComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":211,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{}}}],["rxjs/operators/catcherror",{"_index":3652,"title":{},"body":{"components/TsTableComponent.html":{}}}],["rxjs/operators/map",{"_index":3648,"title":{},"body":{"components/TsTableComponent.html":{}}}],["rxjs/operators/startwith",{"_index":3647,"title":{},"body":{"components/TsTableComponent.html":{}}}],["rxjs/operators/switchmap",{"_index":3650,"title":{},"body":{"components/TsTableComponent.html":{}}}],["s",{"_index":324,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["safe",{"_index":4060,"title":{},"body":{"contributing.html":{}}}],["same",{"_index":95,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{}}}],["sanit",{"_index":2444,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["sankey",{"_index":1573,"title":{},"body":{"components/TsChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["sat/sun",{"_index":2503,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["satisfi",{"_index":2748,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["saturday",{"_index":2507,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["save",{"_index":716,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChartComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["scenario",{"_index":131,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["screenread",{"_index":3574,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["screenshot",{"_index":4003,"title":{},"body":{"contributing.html":{}}}],["scrict",{"_index":1509,"title":{},"body":{"components/TsChartComponent.html":{}}}],["scroll",{"_index":1214,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"miscellaneous/typealiases.html":{}}}],["scrollabl",{"_index":3236,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollable(direct",{"_index":3237,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollar",{"_index":4130,"title":{},"body":{"index.html":{}}}],["scrollbar",{"_index":3200,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"dependencies.html":{},"index.html":{}}}],["scrollbar.css",{"_index":3227,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollbar/css/perfect",{"_index":3226,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollbars'},{'nam",{"_index":1398,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["scrollbars.compon",{"_index":3263,"title":{},"body":{"modules/TsScrollbarsModule.html":{}}}],["scrollbars.component.html",{"_index":3223,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollbars.component.scss",{"_index":3224,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollbars/scrollbars.modul",{"_index":983,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["scrolldown",{"_index":3206,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrolli",{"_index":3211,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollleft",{"_index":3207,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollright",{"_index":3208,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollspe",{"_index":3231,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollto(x",{"_index":3239,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrolltobottom(spe",{"_index":3249,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrolltoelement(querystr",{"_index":3245,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrolltoleft(spe",{"_index":3251,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrolltoright(spe",{"_index":3253,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrolltotop(spe",{"_index":3255,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollup",{"_index":3209,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scrollx",{"_index":3210,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["scss",{"_index":4096,"title":{},"body":{"index.html":{}}}],["search",{"_index":615,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsIconComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["search'},{'nam",{"_index":1400,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["search.compon",{"_index":3340,"title":{},"body":{"modules/TsSearchModule.html":{}}}],["search.component.html",{"_index":3266,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["search.component.scss",{"_index":3265,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["search/search.modul",{"_index":984,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["searchform",{"_index":3272,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["searchqueri",{"_index":680,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["second",{"_index":1111,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["secondari",{"_index":782,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["see",{"_index":446,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{}}}],["seed",{"_index":422,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{}}}],["seedfil",{"_index":437,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["seedfile(fil",{"_index":424,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["seedfile]=\"v.fil",{"_index":177,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["seem",{"_index":2007,"title":{},"body":{"interfaces/TsDateRange.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{}}}],["select",{"_index":33,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"index.html":{}}}],["select'},{'nam",{"_index":1402,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["select.compon",{"_index":3350,"title":{},"body":{"modules/TsSelectModule.html":{}}}],["select/select.modul",{"_index":985,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsPaginatorModule.html":{}}}],["selectablechip",{"_index":682,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selectal",{"_index":3715,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["selectedmultipl",{"_index":452,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["selectedmultiple(",{"_index":156,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["selectedopt",{"_index":683,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selection)=\"myselection($ev",{"_index":674,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selection.addrange(rang",{"_index":1852,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["selection.removeallrang",{"_index":1851,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["selectionscontrol",{"_index":720,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selectionscontrol(valu",{"_index":717,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selectionscontrol=\"myform.get('mycontrol",{"_index":669,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selectoption(ev",{"_index":757,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["selector",{"_index":280,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["selector'},{'nam",{"_index":1395,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["selecttext",{"_index":1805,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["selecttext(el",{"_index":1816,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["sell",{"_index":4197,"title":{},"body":{"license.html":{}}}],["semant",{"_index":4172,"title":{},"body":{"index.html":{}}}],["send",{"_index":3718,"title":{},"body":{"classes/TsTableDataSource.html":{},"contributing.html":{}}}],["sens",{"_index":4111,"title":{},"body":{"index.html":{}}}],["sent",{"_index":608,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["sentenc",{"_index":3075,"title":{},"body":{"modules/TsPipesModule.html":{},"index.html":{}}}],["separ",{"_index":872,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["seri",{"_index":1566,"title":{},"body":{"components/TsChartComponent.html":{}}}],["servic",{"_index":851,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsCopyComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{}}}],["set",{"_index":63,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsDateAdapter.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{}}}],["setaspectratio(valu",{"_index":1305,"title":{},"body":{"components/TsCardComponent.html":{}}}],["setbackground(valu",{"_index":2230,"title":{},"body":{"components/TsIconComponent.html":{}}}],["setborder(valu",{"_index":1308,"title":{},"body":{"components/TsCardComponent.html":{}}}],["setdata(data",{"_index":3724,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["setdirection(direct",{"_index":3500,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["setdisableclear(v",{"_index":3503,"title":{},"body":{"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{}}}],["setid(valu",{"_index":1311,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["setinterv",{"_index":142,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["setischecked(v",{"_index":1693,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["setischecked(valu",{"_index":3774,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["setitems(valu",{"_index":2920,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["setngmodel(v",{"_index":1694,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["setsvgicon(valu",{"_index":2233,"title":{},"body":{"components/TsIconComponent.html":{}}}],["setter",{"_index":369,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsValidationMessagesComponent.html":{}}}],["settheme(valu",{"_index":1314,"title":{},"body":{"components/TsCardComponent.html":{}}}],["settimeout",{"_index":2425,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["settl",{"_index":1176,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["settsautofocus(valu",{"_index":1053,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["settsloadingoverlay(valu",{"_index":2338,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["settsverticalspacing(valu",{"_index":3958,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["setup",{"_index":831,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["setupchart(chart",{"_index":1563,"title":{},"body":{"components/TsChartComponent.html":{}}}],["setupinitialarray",{"_index":2894,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["setupinitialarrays(item",{"_index":867,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["setupnewfile(fil",{"_index":539,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["setvalidateimmediately(valu",{"_index":3882,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["setvalidateonchange(valu",{"_index":3879,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["setvalidationmessages(fil",{"_index":558,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["setvalue(v",{"_index":3185,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["setvisualization(valu",{"_index":1544,"title":{},"body":{"components/TsChartComponent.html":{}}}],["sever",{"_index":43,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["shadow",{"_index":1288,"title":{},"body":{"components/TsCardComponent.html":{},"index.html":{}}}],["shall",{"_index":4201,"title":{},"body":{"license.html":{}}}],["shell",{"_index":4065,"title":{},"body":{"contributing.html":{}}}],["short",{"_index":1910,"title":{},"body":{"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["shortcut",{"_index":2552,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["shouldbedis",{"_index":2607,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["shouldfocu",{"_index":1045,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["shouldlabelfloat",{"_index":2611,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["shouldoverlaptrigg",{"_index":2828,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["shouldset",{"_index":2341,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["shouldshowrecordsmessage(messag",{"_index":3033,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["show",{"_index":29,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsDateRange.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{}}}],["show/hid",{"_index":2325,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["showcolumn",{"_index":2872,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["showform",{"_index":2374,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["showmask",{"_index":2438,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["shown",{"_index":270,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsTooltipComponent.html":{}}}],["showprogress",{"_index":628,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["showprogress]=\"inprogress",{"_index":670,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["showrecordsperpageselector",{"_index":2997,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["side",{"_index":1338,"title":{},"body":{"components/TsCardComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsTableDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["signatur",{"_index":620,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["signifi",{"_index":2297,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["similar",{"_index":2868,"title":{},"body":{"components/TsMenuComponent.html":{},"contributing.html":{}}}],["simpl",{"_index":2848,"title":{},"body":{"components/TsMenuComponent.html":{},"components/TsTableComponent.html":{}}}],["simplechang",{"_index":189,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsChartComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["simpli",{"_index":1333,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["singl",{"_index":87,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{}}}],["site",{"_index":2299,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["size",{"_index":23,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"components/TsIconComponent.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["skipself",{"_index":1463,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"miscellaneous/variables.html":{}}}],["small",{"_index":2463,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsTableComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["small(valu",{"_index":3152,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["smaller",{"_index":3844,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["softwar",{"_index":4185,"title":{},"body":{"license.html":{}}}],["solut",{"_index":4105,"title":{},"body":{"index.html":{}}}],["somehow",{"_index":732,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["someth",{"_index":738,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["sometim",{"_index":3632,"title":{},"body":{"components/TsTableComponent.html":{}}}],["sort",{"_index":1404,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sort(sort",{"_index":3458,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sort.direct",{"_index":3507,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{}}}],["sort/sort.modul",{"_index":986,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsTableModule.html":{}}}],["sort=${sort}&order=${order}&page=${pag",{"_index":3694,"title":{},"body":{"components/TsTableComponent.html":{}}}],["sort_animation_transit",{"_index":4261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sortabl",{"_index":3431,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortable.disableclear",{"_index":3466,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortable.id",{"_index":3451,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortable.start",{"_index":3461,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortbuttonlabel",{"_index":3568,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["sortchang",{"_index":3409,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{}}}],["sortdescriptionlabel",{"_index":3569,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["sortdirectioncycl",{"_index":3468,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortdirectioncycle.indexof(this.direct",{"_index":3471,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortdirectioncycle.length",{"_index":3472,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortdirectioncycle[nextdirectionindex",{"_index":3473,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortord",{"_index":3476,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortorder.push",{"_index":3478,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sortorder.revers",{"_index":3477,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["sourc",{"_index":4,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"index.html":{}}}],["source.t",{"_index":3698,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:19",{"_index":3711,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:24",{"_index":3713,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:30",{"_index":3712,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:38",{"_index":3714,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:43",{"_index":3725,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:46",{"_index":3723,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:48",{"_index":3708,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:65",{"_index":3716,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:80",{"_index":3719,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["source.ts:86",{"_index":3720,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["space",{"_index":814,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsIconComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["spacing.const",{"_index":3959,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["spacing.direct",{"_index":3595,"title":{},"body":{"modules/TsSpacingModule.html":{}}}],["spacing.directive.t",{"_index":3954,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["spacing.directive.ts:58",{"_index":3957,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["spacing.directive.ts:85",{"_index":3956,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["spacing/spacing.const",{"_index":217,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsConfirmationModalComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["spacing/spacing.modul",{"_index":987,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoginFormModule.html":{}}}],["span",{"_index":3783,"title":{},"body":{"components/TsTooltipComponent.html":{},"index.html":{}}}],["spawn",{"_index":1718,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["spec",{"_index":4070,"title":{},"body":{"contributing.html":{}}}],["specif",{"_index":497,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["specifi",{"_index":476,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsValidationMessagesComponent.html":{}}}],["speed",{"_index":3229,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["spellcheck",{"_index":2472,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["spend",{"_index":4018,"title":{},"body":{"contributing.html":{}}}],["spinner",{"_index":661,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsButtonModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"index.html":{}}}],["split",{"_index":864,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["split.length",{"_index":2801,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["split[1].length",{"_index":2802,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["splitarray",{"_index":873,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["stack",{"_index":4025,"title":{},"body":{"contributing.html":{}}}],["stackblitz",{"_index":3999,"title":{},"body":{"contributing.html":{}}}],["stand",{"_index":2448,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{}}}],["standard",{"_index":2300,"title":{},"body":{"components/TsLinkComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"injectables/TsValidationMessageService.html":{}}}],["start",{"_index":135,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"index.html":{}}}],["startblur(d",{"_index":2057,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startcontrol",{"_index":2029,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startcontrol.valu",{"_index":2034,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startdat",{"_index":1964,"title":{},"body":{"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["startdate1",{"_index":1985,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startdate2",{"_index":1986,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startdatecontrol",{"_index":2014,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startdateselected(d",{"_index":2044,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["starter",{"_index":4000,"title":{},"body":{"contributing.html":{}}}],["startingview",{"_index":2025,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startlabel",{"_index":2017,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startmaxd",{"_index":1983,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startmind",{"_index":1984,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startprogress",{"_index":138,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["startselect",{"_index":1978,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startvalu",{"_index":2033,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["startwith",{"_index":3646,"title":{},"body":{"components/TsTableComponent.html":{}}}],["startwith(nul",{"_index":605,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["state",{"_index":1623,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{}}}],["state('asc",{"_index":4285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state('desc",{"_index":4291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["static",{"_index":1097,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["staticmask",{"_index":2789,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["staticmask.length",{"_index":2793,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["statu",{"_index":2606,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsSelectedFile.html":{},"index.html":{}}}],["step",{"_index":1706,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"contributing.html":{},"index.html":{}}}],["stepper",{"_index":4128,"title":{},"body":{"index.html":{}}}],["still",{"_index":1115,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"contributing.html":{}}}],["stop",{"_index":544,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["store",{"_index":152,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"classes/TsImageDimensions.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"interfaces/TsUser.html":{}}}],["stream",{"_index":593,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsConfirmationModalComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"classes/TsTableDataSource.html":{}}}],["stricter",{"_index":3612,"title":{},"body":{"components/TsTableComponent.html":{}}}],["string",{"_index":47,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stringifi",{"_index":2814,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["stringifiedd",{"_index":2804,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["string|dat",{"_index":1943,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["structur",{"_index":88,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"classes/TsSelectedFile.html":{}}}],["stuck",{"_index":2708,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["style",{"_index":1293,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"contributing.html":{},"index.html":{}}}],["style({transform",{"_index":4286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["style.posit",{"_index":2319,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["stylesheet",{"_index":4143,"title":{},"body":{"index.html":{}}}],["styleurl",{"_index":284,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["sub",{"_index":3085,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["subject",{"_index":1783,"title":{},"body":{"components/TsConfirmationModalComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"license.html":{}}}],["sublicens",{"_index":4196,"title":{},"body":{"license.html":{}}}],["submiss",{"_index":2395,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"contributing.html":{}}}],["submit",{"_index":1960,"title":{},"body":{"interfaces/TsDateRange.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["subscrib",{"_index":487,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{}}}],["subscribe((data",{"_index":3735,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["subscribe((f",{"_index":433,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["subscribe((queri",{"_index":750,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["subscribe((v",{"_index":1178,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["subscribe((valu",{"_index":756,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["subscribe(data",{"_index":3680,"title":{},"body":{"components/TsTableComponent.html":{}}}],["subscript",{"_index":3709,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["subscriptanimationst",{"_index":2584,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["substanti",{"_index":4202,"title":{},"body":{"license.html":{}}}],["success",{"_index":1819,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["successfulli",{"_index":2388,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"contributing.html":{}}}],["such",{"_index":2163,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsTableDataSource.html":{}}}],["suffix",{"_index":2563,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["suggest",{"_index":4037,"title":{},"body":{"contributing.html":{}}}],["suit",{"_index":4048,"title":{},"body":{"contributing.html":{}}}],["sunday",{"_index":2508,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["super",{"_index":470,"title":{},"body":{"interfaces/ImageRatio.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["super(columndef",{"_index":1484,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["support",{"_index":146,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"injectables/TsValidationMessageService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["supportedimagedimens",{"_index":341,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["supportsinteract",{"_index":1276,"title":{},"body":{"components/TsCardComponent.html":{}}}],["sure",{"_index":4006,"title":{},"body":{"contributing.html":{}}}],["surfac",{"_index":2648,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["svg",{"_index":4216,"title":{},"body":{"modules.html":{}}}],["svgicon",{"_index":2215,"title":{},"body":{"components/TsIconComponent.html":{}}}],["svgicon(valu",{"_index":2255,"title":{},"body":{"components/TsIconComponent.html":{}}}],["switchmap",{"_index":3649,"title":{},"body":{"components/TsTableComponent.html":{}}}],["switchmap((term",{"_index":606,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["sync",{"_index":2745,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["system",{"_index":4030,"title":{},"body":{"contributing.html":{}}}],["t",{"_index":431,"title":{},"body":{"interfaces/ImageRatio.html":{},"classes/TsTableDataSource.html":{}}}],["tab",{"_index":2295,"title":{},"body":{"components/TsLinkComponent.html":{},"index.html":{}}}],["tabindex",{"_index":1058,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsLinkComponent.html":{}}}],["tabl",{"_index":18,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"index.html":{}}}],["table'",{"_index":3600,"title":{},"body":{"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{}}}],["table'},{'nam",{"_index":1407,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["table.compon",{"_index":3746,"title":{},"body":{"modules/TsTableModule.html":{}}}],["table.component.scss",{"_index":3599,"title":{},"body":{"components/TsTableComponent.html":{}}}],["table/table.modul",{"_index":988,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["tablecompon",{"_index":3627,"title":{},"body":{"components/TsTableComponent.html":{}}}],["tag",{"_index":4175,"title":{},"body":{"index.html":{}}}],["take",{"_index":743,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["talli",{"_index":858,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["target",{"_index":1854,"title":{},"body":{"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{}}}],["target.classnam",{"_index":1856,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.focu",{"_index":1868,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.remov",{"_index":1874,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.setselectionrange(0",{"_index":1869,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.style.height",{"_index":1865,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.style.left",{"_index":1860,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.style.posit",{"_index":1858,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.style.top",{"_index":1862,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.style.width",{"_index":1863,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.textcont",{"_index":1866,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["target.value.length",{"_index":1870,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["targetel",{"_index":1857,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["task",{"_index":3020,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["tasti",{"_index":2865,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["tbd",{"_index":4073,"title":{},"body":{"contributing.html":{}}}],["team",{"_index":2401,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"contributing.html":{},"index.html":{}}}],["technic",{"_index":2817,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["tel",{"_index":2547,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["tell",{"_index":2526,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["templat",{"_index":326,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["templatecontext",{"_index":2969,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["templateref",{"_index":1297,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["templateurl",{"_index":282,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["term",{"_index":609,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["terminu",{"_index":6,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"classes/TsImageDimensions.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"contributing.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["terminus/ngx",{"_index":202,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"modules/TsButtonModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"dependencies.html":{},"index.html":{}}}],["terminus/ui",{"_index":39,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsChartComponent.html":{},"components/TsTableComponent.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{}}}],["terminus/ui/helpers'contribut",{"_index":4147,"title":{},"body":{"index.html":{}}}],["terminus/ui/terminu",{"_index":4144,"title":{},"body":{"index.html":{}}}],["terminusuimodul",{"_index":907,"title":{"modules/TerminusUIModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules.html":{},"overview.html":{}}}],["ternari",{"_index":1592,"title":{},"body":{"components/TsChartComponent.html":{}}}],["test",{"_index":3936,"title":{},"body":{"injectables/TsValidatorsService.html":{},"contributing.html":{}}}],["text",{"_index":320,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["text/csv",{"_index":1258,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["textarea",{"_index":1056,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsCopyComponent.html":{}}}],["textcont",{"_index":1834,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["textmaskconfig",{"_index":2585,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["textmaskinputel",{"_index":2586,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["thank",{"_index":4059,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["that'",{"_index":3604,"title":{},"body":{"components/TsTableComponent.html":{},"contributing.html":{}}}],["that\\'",{"_index":2952,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["theme",{"_index":445,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"miscellaneous/typealiases.html":{}}}],["theme(valu",{"_index":1351,"title":{},"body":{"components/TsCardComponent.html":{}}}],["theme.typ",{"_index":228,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["theme.types.t",{"_index":4242,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["theme=\"primari",{"_index":671,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["themselv",{"_index":3049,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["thing",{"_index":3108,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._acceptedtyp",{"_index":366,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this._autocapit",{"_index":2623,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this._autocomplet",{"_index":2626,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this._background",{"_index":2254,"title":{},"body":{"components/TsIconComponent.html":{}}}],["this._bord",{"_index":1350,"title":{},"body":{"components/TsCardComponent.html":{}}}],["this._cdkcolumndef",{"_index":3536,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._cdkcolumndef.nam",{"_index":3537,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._columncount",{"_index":1151,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this._columnhead",{"_index":1161,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this._columnvalid",{"_index":1168,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this._currentpageindex",{"_index":2981,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this._data",{"_index":3729,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._data.next(data",{"_index":3727,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._data.valu",{"_index":3728,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._datefilt",{"_index":2630,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this._dateformgroup",{"_index":2019,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this._datepick",{"_index":2634,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this._debouncedelay",{"_index":694,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this._direct",{"_index":3440,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this._disableclear",{"_index":3445,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this._formatmodelvaluefn",{"_index":3139,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._formatuilabelfn",{"_index":3132,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._formatuisublabelfn",{"_index":3136,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._formcontrol",{"_index":377,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this._formcontrol.valu",{"_index":2639,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this._hidebutton",{"_index":387,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this._hiderequiredmark",{"_index":2642,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this._hint",{"_index":2645,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this._id",{"_index":392,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsValidationMessagesComponent.html":{}}}],["this._ischeck",{"_index":1635,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["this._isclear",{"_index":2650,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this._isdis",{"_index":2022,"title":{},"body":{"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._isfocus",{"_index":2654,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this._isrequir",{"_index":2658,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this._isvisu",{"_index":3144,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._iszerobas",{"_index":2973,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this._label",{"_index":2661,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this._maximumkilobytesperfil",{"_index":396,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this._maxrow",{"_index":1146,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this._minimumcharact",{"_index":708,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this._multipl",{"_index":416,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this._nam",{"_index":3147,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._opt",{"_index":3150,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._par",{"_index":1465,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["this._progress",{"_index":419,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this._ratioconstraint",{"_index":410,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this._renderchangessubscript",{"_index":3732,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._renderchangessubscription.unsubscrib",{"_index":3733,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._renderdata",{"_index":3737,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._renderdata.next(data",{"_index":3736,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._rowcount",{"_index":1156,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this._seedfil",{"_index":425,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this._selectionscontrol",{"_index":718,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this._sizeconstraint",{"_index":442,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this._smal",{"_index":3153,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this._sort.act",{"_index":3544,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._sort.deregister(thi",{"_index":3540,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._sort.direct",{"_index":3545,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._sort.dis",{"_index":3546,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._sort.register(thi",{"_index":3538,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._sort.sort(thi",{"_index":3541,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this._statechanges.complet",{"_index":3449,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this._statechanges.next",{"_index":3448,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this._them",{"_index":1352,"title":{},"body":{"components/TsCardComponent.html":{}}}],["this._totalrecord",{"_index":2989,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this._uid",{"_index":393,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this._updatechangesubscript",{"_index":3731,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["this._validateimmedi",{"_index":3896,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this._validateonchang",{"_index":3894,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this._valuechang",{"_index":2705,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this._valuechange.complet",{"_index":2706,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this._valuechange.emit(new",{"_index":2758,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this._valuechange.emit(v",{"_index":2620,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this._visu",{"_index":1579,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.acceptedtyp",{"_index":427,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.acceptedtypes.indexof('image/jpeg",{"_index":332,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.acceptedtypes.indexof('image/jpg",{"_index":333,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.acceptedtypes.indexof('image/png",{"_index":331,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.acceptedtypes.join",{"_index":565,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.acceptedtypes.slice().map((v",{"_index":327,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.acceptedtypes.tostr",{"_index":557,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.act",{"_index":3459,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.addcolumnstorows(this.row",{"_index":1196,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.addheaders(this.columncount",{"_index":1163,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.addrows(neededrow",{"_index":1199,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.addrows(this.rowcount",{"_index":1173,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.allerror",{"_index":1204,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.amchart",{"_index":1580,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.amcharts.charts.chorddiagram",{"_index":1600,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.amcharts.charts.piechart",{"_index":1595,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.amcharts.charts.radarchart",{"_index":1597,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.amcharts.charts.sankeydiagram",{"_index":1599,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.amcharts.charts.treemap",{"_index":1598,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.amcharts.charts.xychart",{"_index":1594,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.amcharts.core.create(this.chartdiv.nativeel",{"_index":1593,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.amcharts.maps.mapchart",{"_index":1596,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.amchartsservice.amchart",{"_index":1581,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.appref",{"_index":2347,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.aspectratiopad",{"_index":1347,"title":{},"body":{"components/TsCardComponent.html":{}}}],["this.auto",{"_index":603,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.autofil",{"_index":2600,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.autofillmonitor.monitor(this.elementref.nativeelement).subscribe((ev",{"_index":2669,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.autofillmonitor.stopmonitoring(this.elementref.nativeel",{"_index":2704,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.autosubmit",{"_index":3329,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.availablespac",{"_index":883,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.blobgenerated.emit(blob",{"_index":1180,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.bodyportalhost",{"_index":2345,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.bodyportalhost.attach(this.loadingoverlayport",{"_index":2342,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.bodyportalhost.detach",{"_index":2343,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.bodyportalhost.dispos",{"_index":2354,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.bord",{"_index":1353,"title":{},"body":{"components/TsCardComponent.html":{}}}],["this.breakwidths.length",{"_index":856,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.breakwidths.push(totalspac",{"_index":862,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.breakwidths[this.visibleitemslength",{"_index":881,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.cancelled.emit(tru",{"_index":1767,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.change.emit(this.daterang",{"_index":2049,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.changed.emit(this.currentqueri",{"_index":3325,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.changedetectorref.detectchang",{"_index":482,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["this.changedetectorref.markforcheck",{"_index":541,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.changepage(this.currentpageindex",{"_index":3019,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.chart",{"_index":1588,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.chart.dispos",{"_index":1589,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.chartinitialized.emit(chart",{"_index":1602,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.checkbox.check",{"_index":1637,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["this.checkpar",{"_index":1466,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["this.cleanvalue(stringifiedd",{"_index":2811,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.cleanvalue(valu",{"_index":2798,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.cleared.emit(tru",{"_index":517,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.clearheadercel",{"_index":1162,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.clearvalidationmessag",{"_index":516,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.collecterror",{"_index":1205,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.collectfilesfromevent(ev",{"_index":463,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.columncount",{"_index":1174,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.columnhead",{"_index":1164,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.comparatorfn",{"_index":713,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.componentfactoryresolv",{"_index":2346,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.cont",{"_index":1840,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.content.nativeel",{"_index":1841,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.content.nativeelement.innertext",{"_index":1842,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.control",{"_index":3884,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.control.error",{"_index":3885,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.control.errors[propertynam",{"_index":3891,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.control.touch",{"_index":3890,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.createcurrentpagelabel(this.currentpageindex",{"_index":3017,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.createfileinput",{"_index":472,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.createoverlay",{"_index":1746,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.createpagesarray(this.totalrecord",{"_index":3014,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.currentmask.mask",{"_index":2788,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.currentmask.unmaskregex",{"_index":2799,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.currentpagechanged(foundpag",{"_index":3030,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.currentpageindex",{"_index":3003,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.currentpagelabel",{"_index":3016,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.currentqueri",{"_index":3334,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.currentquery.length",{"_index":3331,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.datasource.data",{"_index":3681,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.dateadapter.samedate(oldd",{"_index":2619,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.dateformgroup",{"_index":2004,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.dateformgroup.get('endd",{"_index":2005,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.dateformgroup.get('startd",{"_index":2015,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.datepick",{"_index":2618,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.debouncedemit(thi",{"_index":3332,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.default_high_record_messag",{"_index":2971,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.default_max_prefered_record",{"_index":2985,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.default_per_pag",{"_index":2967,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.default_records_per_page_opt",{"_index":2995,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.defaultcolumncount",{"_index":1152,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.defaultmaxrow",{"_index":1147,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.defaultopen",{"_index":2884,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.defaultrowcount",{"_index":1157,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.deleterow(pastedrowid",{"_index":1198,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.destroychart",{"_index":1586,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.determineimagedimens",{"_index":2117,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.determineposition(posit",{"_index":2353,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.determinepostalmask",{"_index":2773,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.dimens",{"_index":2125,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.dimensionconstraint",{"_index":345,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.dimensionconstraints.slic",{"_index":346,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.direct",{"_index":3460,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.dis",{"_index":3547,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["this.disableclear",{"_index":3467,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.dismissoverlay",{"_index":1748,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.docu",{"_index":2667,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.document.body.appendchild(target",{"_index":1867,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.document.createelement('textarea",{"_index":1855,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.document.createrang",{"_index":1849,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.document.execcommand('copi",{"_index":1873,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.documentservice.docu",{"_index":1822,"title":{},"body":{"components/TsCopyComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.documentservice.document.createelement('input",{"_index":519,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.draginprogress",{"_index":322,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.dropprotectionservice.add",{"_index":484,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.dropprotectionservice.remov",{"_index":505,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.elementref",{"_index":1751,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.elementref.nativeel",{"_index":1063,"title":{},"body":{"directives/TsAutofocusDirective.html":{},"components/TsIconButtonComponent.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["this.elementref.nativeelement.blur",{"_index":510,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.empti",{"_index":2613,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.enddatecontrol",{"_index":2053,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.enddatecontrol.setvalue(d",{"_index":2054,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.enddatecontrol.valu",{"_index":2001,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endmind",{"_index":2037,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endmindate$.next(d",{"_index":2045,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endmindate$.next(startvalu",{"_index":2038,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endmindate$.next(this.endmind",{"_index":2050,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.endselected.emit(d",{"_index":2055,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.enter.emit(tru",{"_index":457,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.exampledatabas",{"_index":3662,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.exampledatabase.getrepoissu",{"_index":3668,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.exit.emit(tru",{"_index":460,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.fallbackenddatecontrol",{"_index":2006,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.fallbackstartdatecontrol",{"_index":2016,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.fil",{"_index":158,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.file.nam",{"_index":2116,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.file.typ",{"_index":2112,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.filereader.readasdataurl(this.fil",{"_index":2135,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.filereader.result",{"_index":2123,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.files.length",{"_index":166,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.firstpageindex",{"_index":3004,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.fixioscaretbug",{"_index":2675,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.focus",{"_index":2612,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.focusinput",{"_index":2655,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.forcetwodigits(date.getd",{"_index":1917,"title":{},"body":{"classes/TsDateAdapter.html":{}}}],["this.forcetwodigits(date.getmonth",{"_index":1918,"title":{},"body":{"classes/TsDateAdapter.html":{}}}],["this.formatmodelvaluefn",{"_index":3163,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.formbuilder.array",{"_index":1139,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.formbuilder.array([tru",{"_index":2873,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.formbuilder.group",{"_index":1138,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"injectables/TsValidatorsService.html":{}}}],["this.formbuilder.group(this.form_group",{"_index":2408,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["this.formcontrol",{"_index":485,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.formcontrol.dis",{"_index":2608,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.formcontrol.markasuntouch",{"_index":2726,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.formcontrol.registeronchange(fn",{"_index":537,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.formcontrol.setvalue(f.fil",{"_index":434,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.formcontrol.valuechang",{"_index":3156,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.formcontrol.valuechanges.pip",{"_index":486,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.formtwo.get('endd",{"_index":2522,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.formtwo.get('startd",{"_index":2529,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.generateblob(v",{"_index":1179,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.generatebreakwidth",{"_index":838,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.getnextsortdirection(sort",{"_index":3463,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.hasprotect",{"_index":2076,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.hasselect",{"_index":1853,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.headercel",{"_index":1197,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.headercells.controls[index",{"_index":1210,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.headercells.controls[index].valu",{"_index":1211,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.height",{"_index":2146,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.hiddenitems.getvalu",{"_index":890,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.hiddenitems.next(splitarrays.tru",{"_index":877,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.hiddenitems.next(updatedhiddenarray",{"_index":893,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.host.clickevent.emit(this.host.originalclickev",{"_index":1777,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.host.interceptclick",{"_index":1747,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.host.showprogress",{"_index":1773,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.http.get(`${github_api_endpoint}/search/users?q=${term",{"_index":611,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.http.get(`${requesturl}${requestparam",{"_index":3696,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.id",{"_index":318,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["this.init(this.visu",{"_index":1584,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.initi",{"_index":3007,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.initializeminandmax(this.dateformgroup",{"_index":2027,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.initialvalu",{"_index":3323,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.injector",{"_index":2348,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.innervalu",{"_index":2616,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{}}}],["this.inprogress",{"_index":610,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.input_debounce_tim",{"_index":3301,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.inputblur.emit(this.valu",{"_index":2724,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.inputel",{"_index":2595,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.inputelement.nativeel",{"_index":2597,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.inputelement.nativeelement.addeventlistener('keyup",{"_index":2717,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.inputelement.nativeelement.dispatchevent(ev",{"_index":2777,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.inputelement.nativeelement.focu",{"_index":2728,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.inputelement.nativeelement.valu",{"_index":2753,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.inputfocus.emit(this.valu",{"_index":2734,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.isbadinput",{"_index":2599,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.isdis",{"_index":2609,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.isinprogress",{"_index":629,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.isrequir",{"_index":2604,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.issame(r",{"_index":2147,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.isvaliddatestring(valu",{"_index":2805,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.iszerobas",{"_index":3001,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.lastvalu",{"_index":2755,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.loadingoverlayport",{"_index":2349,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.loginform",{"_index":2422,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["this.major",{"_index":3977,"title":{},"body":{"classes/Version.html":{}}}],["this.mask",{"_index":2677,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.masksanitizevalu",{"_index":2797,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.maximumkilobytesperfil",{"_index":428,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.maximumkilobytesperfile.tolocalestring()}kb",{"_index":338,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.maximumvalidationmessag",{"_index":1240,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.maxrow",{"_index":1183,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.mimetyp",{"_index":2111,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.minimumcharact",{"_index":747,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.minor",{"_index":3979,"title":{},"body":{"classes/Version.html":{}}}],["this.modalinst",{"_index":1770,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.modalinstance.confirm.subscribe((shouldproce",{"_index":1775,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.multipl",{"_index":553,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.mydatasourc",{"_index":3607,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.mydatasource.data",{"_index":3608,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.myfocusedflag",{"_index":2469,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.myform.get('daterange.startd",{"_index":1991,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.myprogress",{"_index":139,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.myvar);usag",{"_index":2478,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.nam",{"_index":2115,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.ngzone.runoutsideangular",{"_index":2702,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.onchangecallback",{"_index":2725,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{}}}],["this.onchangecallback(v",{"_index":2617,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{}}}],["this.ontouchedcallback",{"_index":2723,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{}}}],["this.onvirtualinputelementchange.bind(thi",{"_index":493,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.optionselected.emit(event.option.valu",{"_index":768,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.overlay.create(overlayconfig",{"_index":1761,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.overlay.position().connectedto",{"_index":1750,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.overlayref",{"_index":1760,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.overlayref._keydownevents.pip",{"_index":1764,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.overlayref.attach(userprofileportal).inst",{"_index":1771,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.overlayref.dispos",{"_index":1778,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["this.pagesarray",{"_index":3013,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.pagesarray.length",{"_index":3006,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.pageselect.emit(pag",{"_index":3023,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.paginator.currentpageindex",{"_index":3664,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.paginator.pageselect",{"_index":3666,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.paginator.recordsperpag",{"_index":3671,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.paginator.recordsperpagechang",{"_index":3667,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.parseratiostringtoobject(valu",{"_index":411,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.parseratiotostring(this._ratioconstraint",{"_index":413,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.patch",{"_index":3981,"title":{},"body":{"classes/Version.html":{}}}],["this.pick",{"_index":2679,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.picker._datepickerinput",{"_index":2680,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.picker._registerinput(thi",{"_index":2681,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.platform.io",{"_index":2674,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.posit",{"_index":2352,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["this.prev",{"_index":2078,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.preventandstopeventpropagation(ev",{"_index":456,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.pristineitem",{"_index":836,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.promptforfil",{"_index":466,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.query.next(queri",{"_index":751,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.querysubject.pip",{"_index":744,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.ratioconstraint",{"_index":339,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.ratioconstraints.join",{"_index":340,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.readonli",{"_index":2733,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.recordcounttoohighmessag",{"_index":3009,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.recordsform.get('head",{"_index":1143,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.recordsform.get('record",{"_index":1144,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.recordsform.setcontrol('head",{"_index":1250,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.recordsform.setcontrol('record",{"_index":1248,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.recordsform.valuechanges.pip",{"_index":1175,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.recordsperpag",{"_index":3015,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.recordsperpagechange.emit(select",{"_index":3036,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.registeronchangefn(this.updateinnervalu",{"_index":500,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.renderer.setproperty(this.inputel",{"_index":2738,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.resetform",{"_index":2420,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["this.resetsearch",{"_index":766,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.resultslength",{"_index":3674,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.retrievevalue(opt",{"_index":3162,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.rows.insert(indextoinjectat",{"_index":1187,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.rows.length",{"_index":1182,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.rows.push(createdrow",{"_index":1189,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.scrollbar",{"_index":3233,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.geometry('scrol",{"_index":3234,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.posit",{"_index":3235,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.scrollable(direct",{"_index":3238,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.scrollto(x",{"_index":3240,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.scrolltobottom(offset",{"_index":3250,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.scrolltoelement(querystr",{"_index":3247,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.scrolltoleft(offset",{"_index":3252,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.scrolltoright(offset",{"_index":3254,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.scrolltotop(offset",{"_index":3256,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbar.upd",{"_index":3257,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollbars.upd",{"_index":3205,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.scrollspe",{"_index":3246,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.searchform.patchvalu",{"_index":3324,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.searchform.valid",{"_index":3330,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.searchform.value.queri",{"_index":3321,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.searchform.value.query.trim",{"_index":3322,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.selected.emit(f",{"_index":435,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.selected.emit(this.valu",{"_index":2757,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.selectedmultiple.emit(filesarray",{"_index":531,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.selectedopt",{"_index":725,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selectedoptions.indexof(opt",{"_index":773,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selectedoptions.push(select",{"_index":765,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selection.emit(this.selectedopt",{"_index":769,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selectionscontrol",{"_index":721,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selectionscontrol.setvalu",{"_index":727,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selectionscontrol.setvalue(this.selectedopt",{"_index":728,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.selectionscontrol.valuechanges.pip",{"_index":755,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.setduplicateerror(this.selectionscontrol",{"_index":764,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.setupinitialarrays(this.pristineitem",{"_index":837,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.setupmask",{"_index":2678,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.setupnewfile(f",{"_index":436,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.setvalidationmessages(fil",{"_index":540,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.setvalue(this.valu",{"_index":2688,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.setvalue(trimmedvalu",{"_index":2756,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.shouldfocu",{"_index":1061,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["this.showform",{"_index":2421,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["this.siz",{"_index":2113,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.sort.act",{"_index":3669,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.sort.direct",{"_index":3670,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.sort.sortchange.subscrib",{"_index":3630,"title":{},"body":{"components/TsTableComponent.html":{}}}],["this.sortables.delete(sortable.id",{"_index":3457,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.sortables.has(sortable.id",{"_index":3452,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.sortables.set(sortable.id",{"_index":3454,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.sortchange.next({act",{"_index":3464,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.start",{"_index":3462,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["this.startdatecontrol",{"_index":2046,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startdatecontrol.setvalue(d",{"_index":2047,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startdatecontrol.valu",{"_index":2000,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startmaxd",{"_index":2039,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startmaxdate$.next(d",{"_index":2052,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startmaxdate$.next(endvalu",{"_index":2040,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startmaxdate$.next(this.startmaxd",{"_index":2056,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.startselected.emit(d",{"_index":2048,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["this.submitted.emit({queri",{"_index":3333,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["this.subscriptanimationst",{"_index":2676,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.supportedimagedimens",{"_index":336,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.supportedimagedimensions.length",{"_index":334,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.templatecontext.$implicit",{"_index":3008,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.textmaskinputel",{"_index":2690,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.textmaskinputelement.update(normalizedvalu",{"_index":2739,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.textmaskinputelement.update(this.inputelement.nativeelement.valu",{"_index":2691,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.textmaskinputelement.update(trimmedvalu",{"_index":2754,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.toomanyrowsmessag",{"_index":1185,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.totalrecord",{"_index":3018,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["this.trigg",{"_index":688,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.trigger.openmenu",{"_index":2885,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.trigger_icon_default",{"_index":2882,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.trigger_icon_util",{"_index":2883,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.triggericon",{"_index":2881,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.triggertyp",{"_index":2879,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["this.trimlastcharacter(valu",{"_index":2752,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.typeconstraint",{"_index":2118,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.typeconstraint.indexof(this.file.typ",{"_index":2119,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.uid",{"_index":2647,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsValidationMessagesComponent.html":{}}}],["this.uiformatfn",{"_index":700,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["this.updateallrowid",{"_index":1203,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.updatelist",{"_index":839,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.updatemaskmodelhack",{"_index":2687,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.updateoutlinegap",{"_index":2689,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.updatescrollcont",{"_index":3204,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["this.updatevirtualfileinputattrs(this.virtualfileinput",{"_index":494,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.us",{"_index":602,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.user.fullnam",{"_index":827,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.user.fullname.length",{"_index":826,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.validateimagedimensions(this.imagedimensionconstraint",{"_index":2129,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.validateimageratio(this.ratioconstraint",{"_index":2131,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.validateimmedi",{"_index":3888,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.validateonchang",{"_index":3889,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.validationmessageservice.getvalidatorerrormessage(propertynam",{"_index":3892,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["this.validations.filetyp",{"_index":2120,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.validations.imagedimens",{"_index":2128,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.validations.imageratio",{"_index":2130,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.validatorsservice.email",{"_index":2404,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"injectables/TsValidatorsService.html":{}}}],["this.validatorsservice.greaterthan(10",{"_index":3934,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["this.validatorsservice.maxdate(event.valu",{"_index":2530,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.validatorsservice.mindate(event.valu",{"_index":2525,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["this.validatorsservice.url",{"_index":1110,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["this.valu",{"_index":481,"title":{},"body":{"interfaces/ImageRatio.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["this.virtualfileinput",{"_index":471,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.virtualfileinput.addeventlistener('chang",{"_index":492,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.virtualfileinput.click",{"_index":514,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.virtualfileinput.removeattribute('multipl",{"_index":555,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.virtualfileinput.removeeventlistener('chang",{"_index":504,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.virtualfileinput.setattribute('accept",{"_index":556,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.virtualfileinput.setattribute('multipl",{"_index":554,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.virtualfileinput.valu",{"_index":543,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["this.visibleitems.getvalu",{"_index":886,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visibleitems.getvalue().length",{"_index":830,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visibleitems.next(splitarrays.fals",{"_index":876,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visibleitems.next(updatedvisiblearray",{"_index":902,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visibleitemslist.nativeelement.offsetwidth",{"_index":817,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visiblelinkelement.foreach((item",{"_index":857,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["this.visu",{"_index":1604,"title":{},"body":{"components/TsChartComponent.html":{}}}],["this.width",{"_index":2145,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["this.window.getselect",{"_index":1844,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.window.prompt('copi",{"_index":1877,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["this.windowservice.nativewindow",{"_index":1832,"title":{},"body":{"components/TsCopyComponent.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["this.windowservice.nativewindow.addeventlistener('dragov",{"_index":2077,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.windowservice.nativewindow.addeventlistener('drop",{"_index":2079,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.windowservice.nativewindow.removeeventlistener('dragov",{"_index":2080,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.windowservice.nativewindow.removeeventlistener('drop",{"_index":2081,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["this.writevalue(v",{"_index":3157,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["this.zone.runoutsideangular",{"_index":1587,"title":{},"body":{"components/TsChartComponent.html":{}}}],["though",{"_index":3327,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["thought",{"_index":4113,"title":{},"body":{"index.html":{}}}],["three",{"_index":1976,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["through",{"_index":624,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsIconButtonComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["throughout",{"_index":4068,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":406,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"directives/TsCardTitleDirective.html":{},"pipes/TsDatePipe.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["thrown",{"_index":4023,"title":{},"body":{"contributing.html":{}}}],["thursday",{"_index":1938,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["tie",{"_index":1977,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["time",{"_index":1099,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPipesModule.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"index.html":{}}}],["timeout",{"_index":2423,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["timestamp",{"_index":1942,"title":{},"body":{"pipes/TsDatePipe.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["titl",{"_index":1208,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsMenuComponent.html":{},"modules/TsPipesModule.html":{},"components/TsTableComponent.html":{},"index.html":{}}}],["title.direct",{"_index":1446,"title":{},"body":{"modules/TsCardModule.html":{}}}],["title.directive.t",{"_index":1448,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["title.directive.ts:21",{"_index":1462,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["title.directive.ts:27",{"_index":1453,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["title.directive.ts:42",{"_index":1461,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["title.directive.ts:50",{"_index":1459,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["todo",{"_index":381,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{}}}],["toggl",{"_index":627,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"index.html":{}}}],["toggle'},{'nam",{"_index":1409,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["toggle.compon",{"_index":3781,"title":{},"body":{"modules/TsToggleModule.html":{}}}],["toggle.component.html",{"_index":3400,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["toggle.component.scss",{"_index":3401,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["toggle/toggle.modul",{"_index":989,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["toggleinputfocu",{"_index":2468,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["token",{"_index":1011,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":203,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"modules/TsButtonModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsUser.html":{},"dependencies.html":{},"index.html":{}}}],["tools/coercion",{"_index":207,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tools/keycod",{"_index":209,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsConfirmationDirective.html":{}}}],["tooltip",{"_index":2975,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{},"components/TsTooltipComponent.html":{},"index.html":{}}}],["tooltip'},{'nam",{"_index":1411,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tooltip.compon",{"_index":3801,"title":{},"body":{"modules/TsTooltipModule.html":{}}}],["tooltip.component.html",{"_index":3785,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["tooltip.component.scss",{"_index":3784,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["tooltip/tooltip.modul",{"_index":990,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCopyModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsPaginatorModule.html":{}}}],["tooltipposit",{"_index":3787,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["tooltipvalu",{"_index":3788,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["toomanyrowsmessag",{"_index":1134,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["top",{"_index":1335,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"miscellaneous/typealiases.html":{}}}],["tort",{"_index":4215,"title":{},"body":{"license.html":{}}}],["total",{"_index":859,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{}}}],["total_count",{"_index":3684,"title":{},"body":{"components/TsTableComponent.html":{}}}],["totalrecord",{"_index":2991,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["totalrecords(record",{"_index":2988,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["totalspac",{"_index":855,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["touch",{"_index":1666,"title":{},"body":{"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["trace",{"_index":4026,"title":{},"body":{"contributing.html":{}}}],["track",{"_index":1825,"title":{},"body":{"components/TsCopyComponent.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["trackbi",{"_index":622,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["transform",{"_index":1927,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["transform(valu",{"_index":1928,"title":{},"body":{"pipes/TsDatePipe.html":{},"pipes/TsRoundNumberPipe.html":{},"pipes/TsSentenceCasePipe.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{}}}],["transition('asc",{"_index":4293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('desc",{"_index":4310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('void",{"_index":4305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatey",{"_index":4308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatey(0px",{"_index":4287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatey(10px",{"_index":4292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatey(25",{"_index":4307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":1260,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["treemap",{"_index":1572,"title":{},"body":{"components/TsChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tri",{"_index":1872,"title":{},"body":{"components/TsCopyComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"contributing.html":{}}}],["triag",{"_index":4035,"title":{},"body":{"contributing.html":{}}}],["trigger",{"_index":690,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsFileValidations.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["trigger('ind",{"_index":4284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('indicatortoggl",{"_index":4304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('leftpoint",{"_index":4297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('rightpoint",{"_index":4301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger_icon_default",{"_index":2829,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["trigger_icon_util",{"_index":2830,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["triggerformreset",{"_index":2381,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["triggericon",{"_index":2831,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["triggertyp",{"_index":2836,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["trim",{"_index":96,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["trimlastcharacter(valu",{"_index":2786,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["trimmedvalu",{"_index":2751,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["true",{"_index":143,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileValidations.html":{},"components/TsLinkComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"miscellaneous/variables.html":{}}}],["true;custom",{"_index":630,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["true});requir",{"_index":2455,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["truncat",{"_index":1238,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["truthi",{"_index":1042,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["ts",{"_index":281,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{}}}],["ts_accepted_mime_typ",{"_index":78,"title":{},"body":{"interfaces/ImageRatio.html":{},"miscellaneous/variables.html":{}}}],["ts_accepted_mime_types.slic",{"_index":367,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["ts_amcharts_token",{"_index":1015,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"miscellaneous/variables.html":{}}}],["ts_custom_icon",{"_index":2226,"title":{},"body":{"components/TsIconComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ts_custom_icons.indexof(valu",{"_index":2257,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ts_date_format",{"_index":1907,"title":{},"body":{"classes/TsDateAdapter.html":{},"modules/TsInputModule.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/variables.html":{}}}],["ts_sort_header_intl_provid",{"_index":3577,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"miscellaneous/variables.html":{}}}],["ts_sort_header_intl_provider_factori",{"_index":3579,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{},"miscellaneous/variables.html":{}}}],["ts_sort_header_intl_provider_factory(parentintl",{"_index":3575,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["ts_space",{"_index":216,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsConfirmationModalComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ts_spacing.large[0",{"_index":1786,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["ts_spacing.small[0",{"_index":309,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["ts_spacing[typ",{"_index":3965,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["ts_spacing[type].length",{"_index":3966,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["tsamchartsservic",{"_index":998,"title":{"injectables/TsAmChartsService.html":{}},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"overview.html":{}}}],["tsamchartstoken",{"_index":1002,"title":{"interfaces/TsAmChartsToken.html":{}},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{}}}],["tsaspectratiotyp",{"_index":1325,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tsautocomplet",{"_index":678,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["tsautocompletecomparatorfn",{"_index":619,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"miscellaneous/typealiases.html":{}}}],["tsautocompletecompon",{"_index":601,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsautocompleteformatterfn",{"_index":632,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"miscellaneous/typealiases.html":{}}}],["tsautocompletemodul",{"_index":916,"title":{"modules/TsAutocompleteModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules.html":{},"overview.html":{}}}],["tsautocompleteselectedev",{"_index":660,"title":{"classes/TsAutocompleteSelectedEvent.html":{}},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["tsautofocu",{"_index":1044,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["tsautofocus(valu",{"_index":1060,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["tsautofocus]'},{'nam",{"_index":1413,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsautofocusdirect",{"_index":1038,"title":{"directives/TsAutofocusDirective.html":{}},"body":{"directives/TsAutofocusDirective.html":{},"modules/TsAutofocusModule.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsautofocusmodul",{"_index":917,"title":{"modules/TsAutofocusModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutofocusModule.html":{},"modules.html":{},"overview.html":{}}}],["tsbutton",{"_index":1772,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["tsbuttonactiontyp",{"_index":2184,"title":{},"body":{"components/TsIconButtonComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"miscellaneous/typealiases.html":{}}}],["tsbuttoncompon",{"_index":1075,"title":{},"body":{"modules/TsButtonModule.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsbuttonformattyp",{"_index":2838,"title":{},"body":{"components/TsMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tsbuttonformattypesarray",{"_index":4265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tsbuttonfunctiontyp",{"_index":2186,"title":{},"body":{"components/TsIconButtonComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"miscellaneous/typealiases.html":{}}}],["tsbuttonmodul",{"_index":918,"title":{"modules/TsButtonModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMenuModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["tscard",{"_index":1266,"title":{},"body":{"components/TsCardComponent.html":{}}}],["tscardborderopt",{"_index":1282,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tscardcompon",{"_index":1259,"title":{"components/TsCardComponent.html":{}},"body":{"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tscardmodul",{"_index":920,"title":{"modules/TsCardModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCardModule.html":{},"modules.html":{},"overview.html":{}}}],["tscardtitl",{"_index":1332,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{}}}],["tscardtitle]'},{'nam",{"_index":1415,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tscardtitledirect",{"_index":1414,"title":{"directives/TsCardTitleDirective.html":{}},"body":{"components/TsCardComponent.html":{},"modules/TsCardModule.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tscelldef",{"_index":1474,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["tscelldef]'},{'nam",{"_index":1417,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tscelldefdirect",{"_index":1416,"title":{"directives/TsCellDefDirective.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tscelldirect",{"_index":1418,"title":{"directives/TsCellDirective.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tschart",{"_index":1512,"title":{},"body":{"components/TsChartComponent.html":{}}}],["tschartcompon",{"_index":1362,"title":{"components/TsChartComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tschartmodul",{"_index":921,"title":{"modules/TsChartModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsChartModule.html":{},"modules.html":{},"overview.html":{}}}],["tschartvisualizationopt",{"_index":1530,"title":{},"body":{"components/TsChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tscheckbox",{"_index":1631,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["tscheckboxchang",{"_index":1613,"title":{"classes/TsCheckboxChange.html":{}},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["tscheckboxcompon",{"_index":1364,"title":{"components/TsCheckboxComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"modules/TsCheckboxModule.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tscheckboxmodul",{"_index":922,"title":{"modules/TsCheckboxModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsLoginFormModule.html":{},"modules.html":{},"overview.html":{}}}],["tscolumndef",{"_index":1498,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["tscolumndef]'},{'nam",{"_index":1421,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tscolumndefdirect",{"_index":1420,"title":{"directives/TsColumnDefDirective.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsconfig.skiplibcheck",{"_index":1511,"title":{},"body":{"components/TsChartComponent.html":{}}}],["tsconfirm",{"_index":1707,"title":{},"body":{"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{}}}],["tsconfirmation]'},{'nam",{"_index":1423,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsconfirmationdirect",{"_index":1422,"title":{"directives/TsConfirmationDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsconfirmationmodalcompon",{"_index":1366,"title":{"components/TsConfirmationModalComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"modules/TsConfirmationModule.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsconfirmationmodul",{"_index":923,"title":{"modules/TsConfirmationModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsConfirmationModule.html":{},"modules.html":{},"overview.html":{}}}],["tscopi",{"_index":1798,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["tscopycompon",{"_index":1369,"title":{"components/TsCopyComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"modules/TsCopyModule.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tscopymodul",{"_index":924,"title":{"modules/TsCopyModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCopyModule.html":{},"modules.html":{},"overview.html":{}}}],["tscsventri",{"_index":1127,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["tscsventrycompon",{"_index":1085,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tscsventrymodul",{"_index":919,"title":{"modules/TsCSVEntryModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules.html":{},"overview.html":{}}}],["tscsventryrecord",{"_index":1091,"title":{"interfaces/TsCSVEntryRecord.html":{}},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["tscsvformcont",{"_index":1120,"title":{"interfaces/TsCSVFormContents.html":{}},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["tsdate",{"_index":1926,"title":{},"body":{"pipes/TsDatePipe.html":{},"index.html":{}}}],["tsdateadapt",{"_index":1885,"title":{"classes/TsDateAdapter.html":{}},"body":{"classes/TsDateAdapter.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["tsdatefilterfunct",{"_index":2546,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["tsdatepickercompon",{"_index":2043,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["tsdatepickerinputev",{"_index":1996,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["tsdatepip",{"_index":1924,"title":{"pipes/TsDatePipe.html":{}},"body":{"pipes/TsDatePipe.html":{},"modules/TsPipesModule.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsdaterang",{"_index":1951,"title":{"interfaces/TsDateRange.html":{}},"body":{"interfaces/TsDateRange.html":{}}}],["tsdaterangecompon",{"_index":1371,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsdaterangemodul",{"_index":925,"title":{"modules/TsDateRangeModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsDateRangeModule.html":{},"modules.html":{},"overview.html":{}}}],["tsdatetyp",{"_index":1929,"title":{},"body":{"pipes/TsDatePipe.html":{},"miscellaneous/typealiases.html":{}}}],["tsdocumentservic",{"_index":199,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCopyComponent.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["tsdropprotectionservic",{"_index":229,"title":{"injectables/TsDropProtectionService.html":{}},"body":{"interfaces/ImageRatio.html":{},"injectables/TsDropProtectionService.html":{},"modules/TsFileUploadModule.html":{},"overview.html":{}}}],["tsfileacceptedmimetyp",{"_index":65,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tsfileimagedimensionconstraint",{"_index":110,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/typealiases.html":{}}}],["tsfileimagedimensioncontraint",{"_index":89,"title":{"interfaces/TsFileImageDimensionContraint.html":{}},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"miscellaneous/typealiases.html":{}}}],["tsfileupload",{"_index":294,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["tsfileuploadcompon",{"_index":261,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"modules/TsFileUploadModule.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tsfileuploadmodul",{"_index":926,"title":{"modules/TsFileUploadModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsFileUploadModule.html":{},"modules.html":{},"overview.html":{}}}],["tsfilevalid",{"_index":59,"title":{"interfaces/TsFileValidations.html":{}},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["tsheadercelldef",{"_index":1481,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["tsheadercelldef]'},{'nam",{"_index":1425,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsheadercelldefdirect",{"_index":1424,"title":{"directives/TsHeaderCellDefDirective.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsheadercelldirect",{"_index":1426,"title":{"directives/TsHeaderCellDirective.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsheaderrow",{"_index":2156,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["tsheaderrowcompon",{"_index":1374,"title":{"components/TsHeaderRowComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsheaderrowdef",{"_index":2164,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["tsheaderrowdef]'},{'nam",{"_index":1428,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsheaderrowdefdirect",{"_index":1427,"title":{"directives/TsHeaderRowDefDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsicon",{"_index":2209,"title":{},"body":{"components/TsIconComponent.html":{}}}],["tsiconbutton",{"_index":2176,"title":{},"body":{"components/TsIconButtonComponent.html":{}}}],["tsiconbuttoncompon",{"_index":1376,"title":{"components/TsIconButtonComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsiconbuttonmodul",{"_index":927,"title":{"modules/TsIconButtonModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules.html":{},"overview.html":{}}}],["tsiconcompon",{"_index":1377,"title":{"components/TsIconComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"modules/TsIconModule.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsiconmodul",{"_index":928,"title":{"modules/TsIconModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsCopyModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsRadioGroupModule.html":{},"modules.html":{},"overview.html":{}}}],["tsimagedimens",{"_index":2098,"title":{"classes/TsImageDimensions.html":{}},"body":{"interfaces/TsFileValidations.html":{},"classes/TsImageDimensions.html":{},"classes/TsSelectedFile.html":{}}}],["tsimagedimensions(img.naturalwidth",{"_index":2126,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["tsinput",{"_index":2569,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["tsinputautocompletetyp",{"_index":2473,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tsinputcompon",{"_index":1379,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tsinputmodul",{"_index":929,"title":{"modules/TsInputModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsInputModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["tsinputtyp",{"_index":2470,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["tslink",{"_index":2285,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["tslinkcompon",{"_index":1381,"title":{"components/TsLinkComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"modules/TsLinkModule.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tslinkmodul",{"_index":930,"title":{"modules/TsLinkModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoginFormModule.html":{},"modules.html":{},"overview.html":{}}}],["tslint",{"_index":263,"title":{},"body":{"interfaces/ImageRatio.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["tslint:dis",{"_index":1500,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tslint:disable:no",{"_index":255,"title":{},"body":{"interfaces/ImageRatio.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["tslint:en",{"_index":1502,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tsloadingoverlay",{"_index":2311,"title":{},"body":{"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["tsloadingoverlay(valu",{"_index":2340,"title":{},"body":{"directives/TsLoadingOverlayDirective.html":{}}}],["tsloadingoverlay]'},{'nam",{"_index":1430,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsloadingoverlaycompon",{"_index":1383,"title":{"components/TsLoadingOverlayComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsloadingoverlaydirect",{"_index":1429,"title":{"directives/TsLoadingOverlayDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsloadingoverlaymodul",{"_index":931,"title":{"modules/TsLoadingOverlayModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules.html":{},"overview.html":{}}}],["tsloginform",{"_index":2367,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["tsloginformcompon",{"_index":1385,"title":{"components/TsLoginFormComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsloginformmodul",{"_index":932,"title":{"modules/TsLoginFormModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoginFormModule.html":{},"modules.html":{},"overview.html":{}}}],["tsloginformrespons",{"_index":2415,"title":{"interfaces/TsLoginFormResponse.html":{}},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["tsmask",{"_index":2433,"title":{"interfaces/TsMask.html":{}},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["tsmaskcollect",{"_index":2551,"title":{"interfaces/TsMaskCollection.html":{}},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["tsmaskfunct",{"_index":2441,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["tsmaskshortcutopt",{"_index":2553,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tsmenu",{"_index":2825,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["tsmenucompon",{"_index":1387,"title":{"components/TsMenuComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"modules/TsMenuModule.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsmenumodul",{"_index":933,"title":{"modules/TsMenuModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsMenuModule.html":{},"modules/TsPaginatorModule.html":{},"modules.html":{},"overview.html":{}}}],["tsmenupositiontypesi",{"_index":2844,"title":{},"body":{"components/TsMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tsmenupositiontypesx",{"_index":2842,"title":{},"body":{"components/TsMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tsmenutriggertyp",{"_index":2847,"title":{},"body":{"components/TsMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tsnavig",{"_index":809,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["tsnavigationactionitem",{"_index":798,"title":{"interfaces/TsNavigationActionItem.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["tsnavigationcompon",{"_index":778,"title":{"components/TsNavigationComponent.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"modules/TsNavigationModule.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsnavigationitem",{"_index":800,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["tsnavigationlinkitem",{"_index":792,"title":{"interfaces/TsNavigationLinkItem.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["tsnavigationmodul",{"_index":934,"title":{"modules/TsNavigationModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsNavigationModule.html":{},"modules.html":{},"overview.html":{}}}],["tsnavigationpayload",{"_index":802,"title":{"interfaces/TsNavigationPayload.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["tspagin",{"_index":2947,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["tspaginatorcompon",{"_index":1390,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"modules/TsPaginatorModule.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tspaginatormenuitem",{"_index":2929,"title":{"interfaces/TsPaginatorMenuItem.html":{}},"body":{"interfaces/TsPaginatorMenuItem.html":{},"components/TsTableComponent.html":{}}}],["tspaginatormodul",{"_index":935,"title":{"modules/TsPaginatorModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsTableModule.html":{},"modules.html":{},"overview.html":{}}}],["tspipesmodul",{"_index":978,"title":{"modules/TsPipesModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsPipesModule.html":{},"modules.html":{},"overview.html":{}}}],["tsradiochang",{"_index":3081,"title":{"classes/TsRadioChange.html":{}},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["tsradiocompon",{"_index":3110,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["tsradioformatfn",{"_index":3111,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"miscellaneous/typealiases.html":{}}}],["tsradiogroup",{"_index":3115,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["tsradiogroupcompon",{"_index":1392,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tsradiogroupmodul",{"_index":936,"title":{"modules/TsRadioGroupModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsRadioGroupModule.html":{},"modules.html":{},"overview.html":{}}}],["tsradioopt",{"_index":3105,"title":{"interfaces/TsRadioOption.html":{}},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["tsreactiveformbasecompon",{"_index":232,"title":{"components/TsReactiveFormBaseComponent.html":{}},"body":{"interfaces/ImageRatio.html":{},"modules/TerminusUIModule.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsreactiveformbasecomponent:26",{"_index":1682,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:31",{"_index":1686,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:36",{"_index":1689,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:42",{"_index":1663,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:61",{"_index":1665,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:69",{"_index":1669,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:77",{"_index":1673,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsreactiveformbasecomponent:85",{"_index":1676,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsToggleComponent.html":{}}}],["tsroundnumb",{"_index":3193,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{},"index.html":{}}}],["tsroundnumberpip",{"_index":3066,"title":{"pipes/TsRoundNumberPipe.html":{}},"body":{"modules/TsPipesModule.html":{},"pipes/TsRoundNumberPipe.html":{},"overview.html":{}}}],["tsrow",{"_index":2172,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["tsrowcompon",{"_index":1396,"title":{"components/TsRowComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsrowdef",{"_index":2169,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsTableComponent.html":{}}}],["tsrowdef]'},{'nam",{"_index":1432,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tsrowdefcolumn",{"_index":2170,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["tsrowdefdirect",{"_index":1431,"title":{"directives/TsRowDefDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsrowdefwhen",{"_index":2171,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["tsscrollbar",{"_index":3228,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["tsscrollbarposit",{"_index":3198,"title":{"classes/TsScrollbarPosition.html":{}},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["tsscrollbarscompon",{"_index":1397,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"modules/TsScrollbarsModule.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tsscrollbarsgeometri",{"_index":3222,"title":{"classes/TsScrollbarsGeometry.html":{}},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["tsscrollbarsmodul",{"_index":937,"title":{"modules/TsScrollbarsModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsScrollbarsModule.html":{},"modules.html":{},"overview.html":{}}}],["tsscrollbarsscrolldirect",{"_index":3220,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"miscellaneous/typealiases.html":{}}}],["tssearchcompon",{"_index":1399,"title":{"components/TsSearchComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"modules/TsSearchModule.html":{},"interfaces/TsSearchResponse.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tssearchmodul",{"_index":938,"title":{"modules/TsSearchModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["tssearchrespons",{"_index":3320,"title":{"interfaces/TsSearchResponse.html":{}},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["tsselectcompon",{"_index":1401,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"modules/TsSelectModule.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tsselectedfil",{"_index":22,"title":{"classes/TsSelectedFile.html":{}},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["tsselectformatfn",{"_index":4238,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tsselectmodul",{"_index":939,"title":{"modules/TsSelectModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsSelectModule.html":{},"modules.html":{},"overview.html":{}}}],["tssentencecas",{"_index":3391,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{},"index.html":{}}}],["tssentencecasepip",{"_index":3067,"title":{"pipes/TsSentenceCasePipe.html":{}},"body":{"modules/TsPipesModule.html":{},"pipes/TsSentenceCasePipe.html":{},"overview.html":{}}}],["tsslidetogglechang",{"_index":3395,"title":{"classes/TsSlideToggleChange.html":{}},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["tssort",{"_index":3408,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tssort]'},{'nam",{"_index":1434,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["tssortabl",{"_index":3430,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortable'",{"_index":3435,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortableitem",{"_index":3424,"title":{"interfaces/TsSortableItem.html":{}},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortact",{"_index":3481,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["tssortanim",{"_index":3510,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["tssortanimations.ind",{"_index":3521,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortanimations.indicatortoggl",{"_index":3524,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortanimations.leftpoint",{"_index":3522,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortanimations.rightpoint",{"_index":3523,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortbas",{"_index":3404,"title":{"classes/TsSortBase.html":{}},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortchang",{"_index":3482,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["tssortdirect",{"_index":1433,"title":{"directives/TsSortDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tssortdis",{"_index":3417,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortdisableclear",{"_index":3415,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssorthead",{"_index":3516,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortheaderbas",{"_index":3504,"title":{"classes/TsSortHeaderBase.html":{}},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["tssortheadercompon",{"_index":1403,"title":{"components/TsSortHeaderComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSortModule.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tssortheaderintl",{"_index":3418,"title":{"injectables/TsSortHeaderIntl.html":{}},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"miscellaneous/variables.html":{}}}],["tssortmodul",{"_index":940,"title":{"modules/TsSortModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsSortModule.html":{},"modules/TsTableModule.html":{},"modules.html":{},"overview.html":{}}}],["tssortstart",{"_index":3414,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tssortstat",{"_index":3425,"title":{"interfaces/TsSortState.html":{}},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["tsspacingmodul",{"_index":941,"title":{"modules/TsSpacingModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsSpacingModule.html":{},"modules.html":{},"overview.html":{}}}],["tsstylethemetyp",{"_index":226,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tsstylethemetypesarray",{"_index":4266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tstabl",{"_index":3598,"title":{},"body":{"components/TsTableComponent.html":{}}}],["tstablecompon",{"_index":1406,"title":{"components/TsTableComponent.html":{}},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"modules/TsTableModule.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{}}}],["tstabledatasourc",{"_index":3606,"title":{"classes/TsTableDataSource.html":{}},"body":{"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{}}}],["tstabledatasource();simpli",{"_index":3617,"title":{},"body":{"components/TsTableComponent.html":{}}}],["tstabledatasource(initial_data)4",{"_index":3614,"title":{},"body":{"components/TsTableComponent.html":{}}}],["tstabledatasource(initial_data);an",{"_index":3611,"title":{},"body":{"components/TsTableComponent.html":{}}}],["tstablemodul",{"_index":942,"title":{"modules/TsTableModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsTableModule.html":{},"modules.html":{},"overview.html":{}}}],["tstimeago",{"_index":3749,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{},"index.html":{}}}],["tstimeagopip",{"_index":3068,"title":{"pipes/TsTimeAgoPipe.html":{}},"body":{"modules/TsPipesModule.html":{},"pipes/TsTimeAgoPipe.html":{},"overview.html":{}}}],["tstitlecas",{"_index":3759,"title":{},"body":{"pipes/TsTitleCasePipe.html":{},"index.html":{}}}],["tstitlecasepip",{"_index":3069,"title":{"pipes/TsTitleCasePipe.html":{}},"body":{"modules/TsPipesModule.html":{},"pipes/TsTitleCasePipe.html":{},"overview.html":{}}}],["tstogglecompon",{"_index":1408,"title":{"components/TsToggleComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"classes/TsSlideToggleChange.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"modules/TsToggleModule.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tstogglemodul",{"_index":943,"title":{"modules/TsToggleModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsToggleModule.html":{},"modules.html":{},"overview.html":{}}}],["tstooltipcompon",{"_index":1410,"title":{"components/TsTooltipComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"modules/TsTooltipModule.html":{},"components/TsValidationMessagesComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tstooltipmodul",{"_index":944,"title":{"modules/TsTooltipModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCopyModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsTooltipModule.html":{},"modules.html":{},"overview.html":{}}}],["tstooltippositiontyp",{"_index":3792,"title":{},"body":{"components/TsTooltipComponent.html":{},"miscellaneous/typealiases.html":{}}}],["tsuser",{"_index":789,"title":{"interfaces/TsUser.html":{}},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["tsvalidationmessag",{"_index":3856,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["tsvalidationmessagescompon",{"_index":1412,"title":{"components/TsValidationMessagesComponent.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["tsvalidationmessageservic",{"_index":3802,"title":{"injectables/TsValidationMessageService.html":{}},"body":{"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}],["tsvalidationmessagesmodul",{"_index":945,"title":{"modules/TsValidationMessagesModule.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsInputModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsSelectModule.html":{},"modules/TsValidationMessagesModule.html":{},"modules.html":{},"overview.html":{}}}],["tsvalidatorsservic",{"_index":946,"title":{"injectables/TsValidatorsService.html":{}},"body":{"modules/TerminusUIModule.html":{},"modules/TsInputModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{},"injectables/TsValidatorsService.html":{},"overview.html":{}}}],["tsvalidatorsservicemock",{"_index":3937,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["tsverticalspac",{"_index":1436,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["tsverticalspacing(valu",{"_index":3960,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["tsverticalspacingdirect",{"_index":1435,"title":{"directives/TsVerticalSpacingDirective.html":{}},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"modules/TsSpacingModule.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["tsverticalspacingtyp",{"_index":3955,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["tswindowservic",{"_index":1079,"title":{},"body":{"modules/TsButtonModule.html":{},"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["two",{"_index":645,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsDateAdapter.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"interfaces/TsUser.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"classes/TsImageDimensions.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"classes/Version.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":4222,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeconstraint",{"_index":2103,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["typeisinvalid",{"_index":3964,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["typeof",{"_index":746,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"pipes/TsTimeAgoPipe.html":{}}}],["types.t",{"_index":4232,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":1508,"title":{},"body":{"components/TsChartComponent.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"index.html":{}}}],["typographi",{"_index":4136,"title":{},"body":{"index.html":{}}}],["ui",{"_index":127,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"modules/TerminusUIModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDateAdapter.html":{},"interfaces/TsDateRange.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"index.html":{}}}],["ui.css'scss",{"_index":4145,"title":{},"body":{"index.html":{}}}],["ui/.../amcharts.service.t",{"_index":4263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../autocomplete.component.t",{"_index":4226,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../button.component.t",{"_index":4227,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/.../card.component.t",{"_index":4225,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/.../chart.component.t",{"_index":4228,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../checkbox.component.t",{"_index":4257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../csv",{"_index":4260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../csv.t",{"_index":4256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../dat",{"_index":4264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../date.pipe.t",{"_index":4230,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../fil",{"_index":4258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../icon.component.t",{"_index":4224,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/.../imag",{"_index":4233,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../input.component.t",{"_index":4229,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/.../menu.component.t",{"_index":4234,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../mim",{"_index":4231,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/.../navigation.component.t",{"_index":4235,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../radio",{"_index":4236,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/.../scrollbars.component.t",{"_index":4237,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/.../select",{"_index":4254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../select.component.t",{"_index":4239,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/.../sort",{"_index":4252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../sort.directive.t",{"_index":4240,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/.../spacing.constant.t",{"_index":4253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../styl",{"_index":4241,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/.../toggle.component.t",{"_index":4259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../tooltip.component.t",{"_index":4243,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/.../valid",{"_index":4255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../version.t",{"_index":4267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/.../vert",{"_index":4244,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ui/issues/403",{"_index":3818,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["ui/src/autocomplete/autocomplete.component.t",{"_index":581,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/autocomplete/autocomplete.component.ts:39",{"_index":582,"title":{},"body":{"interfaces/KeyboardEvent.html":{}}}],["ui/src/autocomplete/autocomplete.component.ts:43",{"_index":774,"title":{},"body":{"interfaces/MouseEvent.html":{}}}],["ui/src/autocomplete/autocomplete.module.t",{"_index":1025,"title":{},"body":{"modules/TsAutocompleteModule.html":{}}}],["ui/src/autofocus/autofocus.directive.t",{"_index":1039,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["ui/src/autofocus/autofocus.directive.ts:29",{"_index":1052,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["ui/src/autofocus/autofocus.directive.ts:35",{"_index":1049,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["ui/src/autofocus/autofocus.directive.ts:37",{"_index":1048,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["ui/src/autofocus/autofocus.directive.ts:48",{"_index":1050,"title":{},"body":{"directives/TsAutofocusDirective.html":{}}}],["ui/src/autofocus/autofocus.module.t",{"_index":1069,"title":{},"body":{"modules/TsAutofocusModule.html":{}}}],["ui/src/button/button.component.t",{"_index":4245,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/src/button/button.module.t",{"_index":1076,"title":{},"body":{"modules/TsButtonModule.html":{}}}],["ui/src/card/card",{"_index":1447,"title":{},"body":{"directives/TsCardTitleDirective.html":{}}}],["ui/src/card/card.component.t",{"_index":1261,"title":{},"body":{"components/TsCardComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/src/card/card.component.ts:104",{"_index":1283,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:111",{"_index":1307,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:114",{"_index":1299,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:120",{"_index":1286,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:126",{"_index":1287,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:132",{"_index":1289,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:138",{"_index":1290,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:141",{"_index":1310,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:144",{"_index":1300,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:152",{"_index":1294,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:158",{"_index":1295,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:165",{"_index":1313,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:168",{"_index":1301,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:174",{"_index":1298,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:179",{"_index":1317,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:181",{"_index":1278,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:79",{"_index":1302,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:84",{"_index":1303,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.component.ts:92",{"_index":1281,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ui/src/card/card.module.t",{"_index":1442,"title":{},"body":{"modules/TsCardModule.html":{}}}],["ui/src/chart/amcharts.service.t",{"_index":999,"title":{},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"miscellaneous/variables.html":{}}}],["ui/src/chart/amcharts.service.ts:25",{"_index":1003,"title":{},"body":{"injectables/TsAmChartsService.html":{}}}],["ui/src/chart/amcharts.service.ts:28",{"_index":1006,"title":{},"body":{"injectables/TsAmChartsService.html":{}}}],["ui/src/chart/chart.component.t",{"_index":1506,"title":{},"body":{"components/TsChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/chart/chart.component.ts:102",{"_index":1524,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.component.ts:116",{"_index":1535,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.component.ts:135",{"_index":1532,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.component.ts:147",{"_index":1534,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.component.ts:155",{"_index":1528,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.component.ts:168",{"_index":1531,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.component.ts:67",{"_index":1540,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.component.ts:72",{"_index":1538,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.component.ts:78",{"_index":1541,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.component.ts:86",{"_index":1527,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.component.ts:93",{"_index":1543,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.component.ts:96",{"_index":1537,"title":{},"body":{"components/TsChartComponent.html":{}}}],["ui/src/chart/chart.module.t",{"_index":1609,"title":{},"body":{"modules/TsChartModule.html":{}}}],["ui/src/checkbox/checkbox.component.t",{"_index":1614,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"miscellaneous/variables.html":{}}}],["ui/src/checkbox/checkbox.component.ts:101",{"_index":1678,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:107",{"_index":1655,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:113",{"_index":1692,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:116",{"_index":1679,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:122",{"_index":1656,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:128",{"_index":1657,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:134",{"_index":1658,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:140",{"_index":1659,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:148",{"_index":1660,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:154",{"_index":1661,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:160",{"_index":1664,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:166",{"_index":1653,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:83",{"_index":1680,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:89",{"_index":1681,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:95",{"_index":1654,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.component.ts:98",{"_index":1690,"title":{},"body":{"components/TsCheckboxComponent.html":{}}}],["ui/src/checkbox/checkbox.module.t",{"_index":1699,"title":{},"body":{"modules/TsCheckboxModule.html":{}}}],["ui/src/confirmation/confirm",{"_index":1779,"title":{},"body":{"components/TsConfirmationModalComponent.html":{}}}],["ui/src/confirmation/confirmation.directive.t",{"_index":1705,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:155",{"_index":1720,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:46",{"_index":1727,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:51",{"_index":1729,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:57",{"_index":1714,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:74",{"_index":1717,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:82",{"_index":1725,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:90",{"_index":1722,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.directive.ts:99",{"_index":1719,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["ui/src/confirmation/confirmation.module.t",{"_index":1792,"title":{},"body":{"modules/TsConfirmationModule.html":{}}}],["ui/src/copy/copy.component.t",{"_index":1796,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:109",{"_index":1836,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:129",{"_index":1817,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:154",{"_index":1815,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:164",{"_index":1814,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:47",{"_index":1823,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:52",{"_index":1824,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:57",{"_index":1827,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:63",{"_index":1829,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:68",{"_index":1833,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:74",{"_index":1820,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:80",{"_index":1811,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:86",{"_index":1812,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.component.ts:92",{"_index":1810,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["ui/src/copy/copy.module.t",{"_index":1883,"title":{},"body":{"modules/TsCopyModule.html":{}}}],["ui/src/csv",{"_index":1086,"title":{},"body":{"modules/TsCSVEntryModule.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"miscellaneous/variables.html":{}}}],["ui/src/dat",{"_index":1952,"title":{},"body":{"interfaces/TsDateRange.html":{},"modules/TsDateRangeModule.html":{}}}],["ui/src/fil",{"_index":7,"title":{},"body":{"interfaces/ImageRatio.html":{},"injectables/TsDropProtectionService.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"classes/TsImageDimensions.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/src/icon",{"_index":2173,"title":{},"body":{"components/TsIconButtonComponent.html":{},"modules/TsIconButtonModule.html":{}}}],["ui/src/icon/custom",{"_index":4280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/src/icon/icon.component.t",{"_index":2206,"title":{},"body":{"components/TsIconComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/src/icon/icon.component.ts:100",{"_index":2227,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:106",{"_index":2219,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:69",{"_index":2221,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:72",{"_index":2229,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:75",{"_index":2225,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:81",{"_index":2223,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:87",{"_index":2224,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.component.ts:97",{"_index":2232,"title":{},"body":{"components/TsIconComponent.html":{}}}],["ui/src/icon/icon.module.t",{"_index":2261,"title":{},"body":{"modules/TsIconModule.html":{}}}],["ui/src/input/d",{"_index":1886,"title":{},"body":{"classes/TsDateAdapter.html":{},"miscellaneous/variables.html":{}}}],["ui/src/input/input.component.t",{"_index":2434,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/src/input/input.component.ts:116",{"_index":2823,"title":{},"body":{"interfaces/TsMaskCollection.html":{}}}],["ui/src/input/input.module.t",{"_index":2276,"title":{},"body":{"modules/TsInputModule.html":{}}}],["ui/src/link/link.component.t",{"_index":2284,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["ui/src/link/link.component.ts:47",{"_index":2294,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["ui/src/link/link.component.ts:53",{"_index":2291,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["ui/src/link/link.component.ts:59",{"_index":2292,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["ui/src/link/link.component.ts:65",{"_index":2293,"title":{},"body":{"components/TsLinkComponent.html":{}}}],["ui/src/link/link.module.t",{"_index":2305,"title":{},"body":{"modules/TsLinkModule.html":{}}}],["ui/src/load",{"_index":2309,"title":{},"body":{"components/TsLoadingOverlayComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"modules/TsLoadingOverlayModule.html":{}}}],["ui/src/login",{"_index":2361,"title":{},"body":{"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["ui/src/menu/menu.component.t",{"_index":2824,"title":{},"body":{"components/TsMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/menu/menu.component.ts:103",{"_index":2860,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:109",{"_index":2855,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:115",{"_index":2837,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:121",{"_index":2840,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:127",{"_index":2841,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:133",{"_index":2843,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:139",{"_index":2845,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:145",{"_index":2846,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:151",{"_index":2839,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:160",{"_index":2850,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:166",{"_index":2852,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:175",{"_index":2851,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:81",{"_index":2857,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:86",{"_index":2859,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:91",{"_index":2863,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.component.ts:98",{"_index":2853,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["ui/src/menu/menu.module.t",{"_index":2890,"title":{},"body":{"modules/TsMenuModule.html":{}}}],["ui/src/module.t",{"_index":948,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["ui/src/navigation/navigation.component.t",{"_index":776,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/navigation/navigation.component.ts:149",{"_index":2910,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:156",{"_index":2915,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:165",{"_index":2908,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:170",{"_index":2909,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:177",{"_index":2917,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:187",{"_index":2911,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:194",{"_index":2919,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:202",{"_index":2897,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:218",{"_index":2898,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:224",{"_index":2899,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:230",{"_index":2912,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:236",{"_index":2913,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:242",{"_index":2900,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:248",{"_index":2901,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:250",{"_index":2896,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:264",{"_index":2905,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:272",{"_index":2904,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:282",{"_index":2902,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:302",{"_index":2906,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:319",{"_index":2907,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.component.ts:368",{"_index":2903,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["ui/src/navigation/navigation.module.t",{"_index":2927,"title":{},"body":{"modules/TsNavigationModule.html":{}}}],["ui/src/paginator/paginator.component.t",{"_index":2930,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["ui/src/paginator/paginator.module.t",{"_index":3061,"title":{},"body":{"modules/TsPaginatorModule.html":{}}}],["ui/src/pipes/date/date.pipe.t",{"_index":1925,"title":{},"body":{"pipes/TsDatePipe.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/pipes/date/date.pipe.ts:31",{"_index":1930,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["ui/src/pipes/pipes.module.t",{"_index":3070,"title":{},"body":{"modules/TsPipesModule.html":{}}}],["ui/src/pipes/round",{"_index":3191,"title":{},"body":{"pipes/TsRoundNumberPipe.html":{}}}],["ui/src/pipes/sent",{"_index":3389,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{}}}],["ui/src/pipes/tim",{"_index":3747,"title":{},"body":{"pipes/TsTimeAgoPipe.html":{}}}],["ui/src/pipes/titl",{"_index":3758,"title":{},"body":{"pipes/TsTitleCasePipe.html":{}}}],["ui/src/radio",{"_index":3082,"title":{},"body":{"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/src/scrollbars/scrollbars.component.t",{"_index":3199,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/src/scrollbars/scrollbars.module.t",{"_index":3261,"title":{},"body":{"modules/TsScrollbarsModule.html":{}}}],["ui/src/search/search.component.t",{"_index":3264,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["ui/src/search/search.component.ts:101",{"_index":3303,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:106",{"_index":3309,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:111",{"_index":3313,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:116",{"_index":3316,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:129",{"_index":3312,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:135",{"_index":3283,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:141",{"_index":3284,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:147",{"_index":3286,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:153",{"_index":3287,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:159",{"_index":3288,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:165",{"_index":3289,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:171",{"_index":3290,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:177",{"_index":3291,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:183",{"_index":3292,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:189",{"_index":3294,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:195",{"_index":3293,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:201",{"_index":3281,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:215",{"_index":3297,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:228",{"_index":3296,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:244",{"_index":3295,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:74",{"_index":3304,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:79",{"_index":3298,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:84",{"_index":3299,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:89",{"_index":3319,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.component.ts:96",{"_index":3302,"title":{},"body":{"components/TsSearchComponent.html":{}}}],["ui/src/search/search.module.t",{"_index":3339,"title":{},"body":{"modules/TsSearchModule.html":{}}}],["ui/src/select/select.component.t",{"_index":4250,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/src/select/select.module.t",{"_index":3347,"title":{},"body":{"modules/TsSelectModule.html":{}}}],["ui/src/sort/sort",{"_index":3505,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"miscellaneous/variables.html":{}}}],["ui/src/sort/sort.directive.t",{"_index":3405,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/src/sort/sort.directive.ts:106",{"_index":3486,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:112",{"_index":3484,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:118",{"_index":3499,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:121",{"_index":3494,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:129",{"_index":3485,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:132",{"_index":3502,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:135",{"_index":3495,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:141",{"_index":3487,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:147",{"_index":3490,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:155",{"_index":3491,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:164",{"_index":3492,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:181",{"_index":3488,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:189",{"_index":3493,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:204",{"_index":3489,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:87",{"_index":3497,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:92",{"_index":3496,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.directive.ts:98",{"_index":3483,"title":{},"body":{"directives/TsSortDirective.html":{}}}],["ui/src/sort/sort.module.t",{"_index":3583,"title":{},"body":{"modules/TsSortModule.html":{}}}],["ui/src/spacing/spacing.constant.t",{"_index":4268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui/src/spacing/spacing.module.t",{"_index":3593,"title":{},"body":{"modules/TsSpacingModule.html":{}}}],["ui/src/spacing/vert",{"_index":3953,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/table/cell.t",{"_index":1469,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{}}}],["ui/src/table/cell.ts:116",{"_index":1704,"title":{},"body":{"directives/TsColumnDefDirective.html":{}}}],["ui/src/table/cell.ts:123",{"_index":1703,"title":{},"body":{"directives/TsColumnDefDirective.html":{}}}],["ui/src/table/cell.ts:129",{"_index":1702,"title":{},"body":{"directives/TsColumnDefDirective.html":{}}}],["ui/src/table/cell.ts:54",{"_index":2152,"title":{},"body":{"directives/TsHeaderCellDirective.html":{}}}],["ui/src/table/cell.ts:72",{"_index":1504,"title":{},"body":{"directives/TsCellDirective.html":{}}}],["ui/src/table/cell.ts:76",{"_index":1505,"title":{},"body":{"directives/TsCellDirective.html":{}}}],["ui/src/table/row.t",{"_index":2153,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["ui/src/table/t",{"_index":3697,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["ui/src/table/table.component.t",{"_index":3596,"title":{},"body":{"components/TsTableComponent.html":{}}}],["ui/src/table/table.module.t",{"_index":3743,"title":{},"body":{"modules/TsTableModule.html":{}}}],["ui/src/toggle/toggle.component.t",{"_index":3396,"title":{},"body":{"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"miscellaneous/variables.html":{}}}],["ui/src/toggle/toggle.component.ts:104",{"_index":3768,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:110",{"_index":3769,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:116",{"_index":3770,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:122",{"_index":3771,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:73",{"_index":3764,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:79",{"_index":3765,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:83",{"_index":3773,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:86",{"_index":3772,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:92",{"_index":3766,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.component.ts:98",{"_index":3767,"title":{},"body":{"components/TsToggleComponent.html":{}}}],["ui/src/toggle/toggle.module.t",{"_index":3779,"title":{},"body":{"modules/TsToggleModule.html":{}}}],["ui/src/tooltip/tooltip.component.t",{"_index":3782,"title":{},"body":{"components/TsTooltipComponent.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/tooltip/tooltip.component.ts:53",{"_index":3793,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["ui/src/tooltip/tooltip.component.ts:59",{"_index":3794,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["ui/src/tooltip/tooltip.component.ts:65",{"_index":3791,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["ui/src/tooltip/tooltip.module.t",{"_index":3798,"title":{},"body":{"modules/TsTooltipModule.html":{}}}],["ui/src/utilities/react",{"_index":3173,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["ui/src/utilities/types/styl",{"_index":4251,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui/src/utilities/version/version.t",{"_index":3967,"title":{},"body":{"classes/Version.html":{},"miscellaneous/variables.html":{}}}],["ui/src/utilities/version/version.ts:5",{"_index":3974,"title":{},"body":{"classes/Version.html":{}}}],["ui/src/utilities/version/version.ts:6",{"_index":3975,"title":{},"body":{"classes/Version.html":{}}}],["ui/src/utilities/version/version.ts:7",{"_index":3972,"title":{},"body":{"classes/Version.html":{}}}],["ui/src/utilities/version/version.ts:9",{"_index":3973,"title":{},"body":{"classes/Version.html":{}}}],["ui/src/valid",{"_index":3803,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"miscellaneous/variables.html":{}}}],["ui/src/validators/validators.service.t",{"_index":3903,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:24",{"_index":3905,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:25",{"_index":3907,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:26",{"_index":3909,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:27",{"_index":3911,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:28",{"_index":3913,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:29",{"_index":3915,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:30",{"_index":3917,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:31",{"_index":3921,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:32",{"_index":3923,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:33",{"_index":3927,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:34",{"_index":3931,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:35",{"_index":3919,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:36",{"_index":3929,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui/src/validators/validators.service.ts:37",{"_index":3925,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["ui:mast",{"_index":4058,"title":{},"body":{"contributing.html":{}}}],["uid",{"_index":2587,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsValidationMessagesComponent.html":{}}}],["uiformatfn",{"_index":684,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["uiformatt",{"_index":3094,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["uisubformatt",{"_index":3099,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["unambigu",{"_index":4033,"title":{},"body":{"contributing.html":{}}}],["undefin",{"_index":304,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"components/TsChartComponent.html":{},"directives/TsColumnDefDirective.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsIconComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"pipes/TsRoundNumberPipe.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["under",{"_index":337,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["underli",{"_index":252,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"miscellaneous/variables.html":{}}}],["underlin",{"_index":3790,"title":{},"body":{"components/TsTooltipComponent.html":{}}}],["underscor",{"_index":2237,"title":{},"body":{"components/TsIconComponent.html":{}}}],["unifi",{"_index":4101,"title":{},"body":{"index.html":{}}}],["union",{"_index":2008,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["uniqu",{"_index":245,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"components/TsValidationMessagesComponent.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":4071,"title":{},"body":{"contributing.html":{}}}],["unmask",{"_index":2762,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["unmaskregex",{"_index":2439,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["unreach",{"_index":533,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["unregist",{"_index":3455,"title":{},"body":{"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{}}}],["unsanit",{"_index":2781,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["unsubscrib",{"_index":3539,"title":{},"body":{"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["unsupport",{"_index":2256,"title":{},"body":{"components/TsIconComponent.html":{}}}],["unsur",{"_index":2166,"title":{},"body":{"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{}}}],["untest",{"_index":3190,"title":{},"body":{"components/TsReactiveFormBaseComponent.html":{}}}],["until",{"_index":1843,"title":{},"body":{"components/TsCopyComponent.html":{},"components/TsTableComponent.html":{}}}],["untilcomponentdestroy",{"_index":200,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["untilcomponentdestroyed(thi",{"_index":432,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"directives/TsConfirmationDirective.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{}}}],["unus",{"_index":2749,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["up",{"_index":538,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"components/TsChartComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["updat",{"_index":477,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["updateallrowid",{"_index":1193,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["updatedhiddenarray",{"_index":889,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["updatedhiddenarray.unshift(itemtomov",{"_index":892,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["updatedvisiblearray",{"_index":899,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["updatedvisiblearray.push(itemtomov",{"_index":900,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["updateerror",{"_index":1207,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["updateinnervalu",{"_index":480,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["updatelist",{"_index":879,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["updatevirtualfileinputattrs(input",{"_index":550,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["upload",{"_index":17,"title":{},"body":{"interfaces/ImageRatio.html":{},"index.html":{}}}],["upload'},{'nam",{"_index":1373,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["upload.compon",{"_index":2095,"title":{},"body":{"modules/TsFileUploadModule.html":{}}}],["upload.component.html",{"_index":283,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["upload.component.scss",{"_index":285,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["upload.component.t",{"_index":9,"title":{},"body":{"interfaces/ImageRatio.html":{},"miscellaneous/variables.html":{}}}],["upload.modul",{"_index":964,"title":{},"body":{"modules/TerminusUIModule.html":{},"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["upload.module.t",{"_index":2093,"title":{},"body":{"modules/TsFileUploadModule.html":{}}}],["upload/drop",{"_index":2065,"title":{},"body":{"injectables/TsDropProtectionService.html":{}}}],["upload/fil",{"_index":8,"title":{},"body":{"interfaces/ImageRatio.html":{},"modules/TerminusUIModule.html":{},"modules/TsFileUploadModule.html":{},"miscellaneous/variables.html":{}}}],["upload/imag",{"_index":2083,"title":{},"body":{"interfaces/TsFileImageDimensionContraint.html":{},"classes/TsImageDimensions.html":{},"miscellaneous/typealiases.html":{}}}],["upload/mim",{"_index":4248,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["upload/select",{"_index":2096,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/variables.html":{}}}],["upon",{"_index":799,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["uppercas",{"_index":3842,"title":{},"body":{"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{}}}],["uppercasevalid",{"_index":3928,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["upstream",{"_index":4062,"title":{},"body":{"contributing.html":{}}}],["url",{"_index":1106,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"injectables/TsValidationMessageService.html":{},"injectables/TsValidatorsService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["urlvalid",{"_index":3930,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["us",{"_index":256,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsConfirmationModalComponent.html":{},"classes/TsDateAdapter.html":{},"interfaces/TsDateRange.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"contributing.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["usabl",{"_index":4114,"title":{},"body":{"index.html":{}}}],["usag",{"_index":21,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"interfaces/TsDateRange.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"injectables/TsValidatorsService.html":{},"index.html":{}}}],["useclass",{"_index":2568,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["useexist",{"_index":260,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"miscellaneous/variables.html":{}}}],["usefactori",{"_index":1560,"title":{},"body":{"components/TsChartComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":100,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsChartComponent.html":{},"modules/TsChartModule.html":{},"directives/TsConfirmationDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{}}}],["user'",{"_index":448,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"components/TsCopyComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["usercanclear",{"_index":3280,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["userexist",{"_index":824,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["usernam",{"_index":2549,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsTableComponent.html":{},"miscellaneous/typealiases.html":{}}}],["userprofileport",{"_index":1768,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["usersfullnam",{"_index":822,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["usevalu",{"_index":1612,"title":{},"body":{"modules/TsChartModule.html":{},"modules/TsInputModule.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["usual",{"_index":1962,"title":{},"body":{"interfaces/TsDateRange.html":{}}}],["util",{"_index":1296,"title":{},"body":{"components/TsCardComponent.html":{},"interfaces/TsFileValidations.html":{},"components/TsMenuComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSelectedFile.html":{},"miscellaneous/typealiases.html":{}}}],["utilities/input",{"_index":213,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsChartComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["utilities/react",{"_index":233,"title":{},"body":{"interfaces/ImageRatio.html":{},"modules/TerminusUIModule.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["utilities/typ",{"_index":219,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["utilities/types/styl",{"_index":227,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsCardComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{}}}],["utilitymenutempl",{"_index":1277,"title":{},"body":{"components/TsCardComponent.html":{}}}],["ux/product",{"_index":383,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["v",{"_index":400,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsSelectedFile.html":{},"directives/TsSortDirective.html":{},"components/TsSortHeaderComponent.html":{}}}],["v.bar",{"_index":3095,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["v.bing",{"_index":3100,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["v.columns.join('\\t')).join('\\r\\n",{"_index":1254,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["v.foo",{"_index":3097,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["v.foo;ev",{"_index":3101,"title":{},"body":{"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["v.id",{"_index":174,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["v.length",{"_index":402,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["v.login",{"_index":633,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["v.name",{"_index":664,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["v.split('/')[1",{"_index":328,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["v4",{"_index":1507,"title":{},"body":{"components/TsChartComponent.html":{}}}],["valid",{"_index":72,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"classes/TsDateAdapter.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"modules/TsFileUploadModule.html":{},"interfaces/TsFileValidations.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"modules/TsInputModule.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"classes/TsRadioChange.html":{},"modules/TsRadioGroupModule.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"modules/TsSelectModule.html":{},"classes/TsSelectedFile.html":{},"classes/TsSlideToggleChange.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"pipes/TsTimeAgoPipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"modules/TsValidationMessagesModule.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["validateimagedimens",{"_index":3353,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["validateimagedimensions(constraint",{"_index":2137,"title":{},"body":{"interfaces/TsFileValidations.html":{},"classes/TsSelectedFile.html":{}}}],["validateimageratio",{"_index":3354,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["validateimageratio(constraint",{"_index":3371,"title":{},"body":{"classes/TsSelectedFile.html":{}}}],["validateimmedi",{"_index":3861,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["validateimmediately(valu",{"_index":3895,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["validateonchang",{"_index":3862,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["validateonchange(valu",{"_index":3893,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["validationerror",{"_index":195,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["validationmessag",{"_index":1140,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsValidationMessagesComponent.html":{}}}],["validationmessageservic",{"_index":3865,"title":{},"body":{"components/TsValidationMessagesComponent.html":{}}}],["validationmessagesservic",{"_index":1225,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["validatorfn",{"_index":1119,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["validatornam",{"_index":3810,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validators.minlength(this.queryminlength",{"_index":3314,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["validators.pattern(this.inputpatternregex",{"_index":3315,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["validators.requir",{"_index":1974,"title":{},"body":{"interfaces/TsDateRange.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{}}}],["validators.required);requir",{"_index":2457,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["validators/creditcard/creditcard",{"_index":3939,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/email/email",{"_index":3940,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/equaltocontrol/equaltocontrol",{"_index":3941,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/greaterthan/greaterthan",{"_index":3943,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/greaterthanorequal/greaterthanorequ",{"_index":3942,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/lessthan/lessthan",{"_index":3945,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/lessthanorequal/lessthanorequ",{"_index":3944,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/lowercase/lowercas",{"_index":3946,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/maxdate/maxd",{"_index":3948,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/mindate/mind",{"_index":3949,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/numbers/numb",{"_index":3947,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/password/password",{"_index":3950,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/uppercase/uppercas",{"_index":3952,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/url/url",{"_index":3951,"title":{},"body":{"injectables/TsValidatorsService.html":{}}}],["validators/validators.servic",{"_index":997,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsInputModule.html":{},"components/TsLoginFormComponent.html":{},"modules/TsLoginFormModule.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["validatorsservic",{"_index":2383,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"injectables/TsValidatorsService.html":{}}}],["validatorvalu",{"_index":3808,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.actu",{"_index":3824,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.actual.width}x${validatorvalue.actual.height",{"_index":3852,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.comparevalu",{"_index":3839,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.greaterthan",{"_index":3826,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.greaterthanorequ",{"_index":3829,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.lessthan",{"_index":3833,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.lessthanorequ",{"_index":3835,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.lowercas",{"_index":3841,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.max}kb",{"_index":3845,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.numb",{"_index":3830,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.requiredlength",{"_index":3819,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validatorvalue.uppercas",{"_index":3843,"title":{},"body":{"injectables/TsValidationMessageService.html":{}}}],["validdecimalchang",{"_index":2685,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["validformat",{"_index":1944,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["validformats.indexof(format",{"_index":1950,"title":{},"body":{"pipes/TsDatePipe.html":{}}}],["validmaskchang",{"_index":2682,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["validsanitizechang",{"_index":2683,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["valu",{"_index":132,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"pipes/TsDatePipe.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"pipes/TsRoundNumberPipe.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"pipes/TsSentenceCasePipe.html":{},"classes/TsSlideToggleChange.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"injectables/TsSortHeaderIntl.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"pipes/TsTimeAgoPipe.html":{},"pipes/TsTitleCasePipe.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"injectables/TsValidationMessageService.html":{},"components/TsValidationMessagesComponent.html":{},"injectables/TsValidatorsService.html":{},"directives/TsVerticalSpacingDirective.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value(v",{"_index":2614,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{}}}],["value.charat(0).touppercas",{"_index":3393,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{}}}],["value.filter((item",{"_index":834,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["value.length",{"_index":2776,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["value.replace(new",{"_index":2767,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["value.slice(1).tolowercas",{"_index":3394,"title":{},"body":{"pipes/TsSentenceCasePipe.html":{}}}],["value.split",{"_index":401,"title":{},"body":{"interfaces/ImageRatio.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["value.tolowercase().split",{"_index":3760,"title":{},"body":{"pipes/TsTitleCasePipe.html":{}}}],["valueisnon",{"_index":3963,"title":{},"body":{"directives/TsVerticalSpacingDirective.html":{}}}],["var",{"_index":1356,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"components/TsHeaderRowComponent.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"components/TsMenuComponent.html":{},"components/TsNavigationComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsRowComponent.html":{},"components/TsSearchComponent.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"components/TsValidationMessagesComponent.html":{}}}],["variabl",{"_index":2474,"title":{"miscellaneous/variables.html":{}},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsPaginatorMenuItem.html":{},"miscellaneous/variables.html":{}}}],["variat",{"_index":2548,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/typealiases.html":{}}}],["veri",{"_index":2459,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"index.html":{}}}],["verifi",{"_index":1454,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"directives/TsVerticalSpacingDirective.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["verifyisdateobject(d",{"_index":2815,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["version",{"_index":1013,"title":{"classes/Version.html":{}},"body":{"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"injectables/TsValidatorsService.html":{},"classes/Version.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["version('0.0.0",{"_index":3983,"title":{},"body":{"classes/Version.html":{},"miscellaneous/variables.html":{}}}],["vertic",{"_index":3594,"title":{},"body":{"modules/TsSpacingModule.html":{},"directives/TsVerticalSpacingDirective.html":{}}}],["via",{"_index":36,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"injectables/TsAmChartsService.html":{},"interfaces/TsAmChartsToken.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsIconComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"classes/TsSlideToggleChange.html":{},"components/TsToggleComponent.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["view",{"_index":853,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsDateRange.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"interfaces/TsUser.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["viewchild",{"_index":190,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsCopyComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{}}}],["viewchild('auto",{"_index":599,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["viewchild('autocomplet",{"_index":685,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["viewchild('autocompletetrigg",{"_index":686,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["viewchild('chartdiv",{"_index":1577,"title":{},"body":{"components/TsChartComponent.html":{}}}],["viewchild('cont",{"_index":1838,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["viewchild('containerel",{"_index":2588,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["viewchild('input",{"_index":692,"title":{},"body":{"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"classes/TsAutocompleteSelectedEvent.html":{}}}],["viewchild('inputel",{"_index":2593,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["viewchild('labelel",{"_index":2591,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["viewchild('pick",{"_index":2590,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["viewchild('preview",{"_index":319,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["viewchild('visibleitemslist",{"_index":843,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["viewchild(forwardref",{"_index":3232,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["viewchild(matcheckbox",{"_index":1633,"title":{},"body":{"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{}}}],["viewchild(matmenutrigg",{"_index":2880,"title":{},"body":{"components/TsMenuComponent.html":{}}}],["viewchild(tscheckboxcompon",{"_index":2418,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["viewchild(tsinputcompon",{"_index":2475,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["viewchild(tspaginatorcompon",{"_index":3661,"title":{},"body":{"components/TsTableComponent.html":{}}}],["viewchild(tsscrollbarscompon",{"_index":3202,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["viewchild(tssortdirect",{"_index":3628,"title":{},"body":{"components/TsTableComponent.html":{}}}],["viewchildren",{"_index":787,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["viewchildren('visiblelinkel",{"_index":845,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["viewchildren(tsinputcompon",{"_index":2417,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["viewencapsul",{"_index":191,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["viewencapsulation.non",{"_index":292,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"components/TsChartComponent.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"components/TsConfirmationModalComponent.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"components/TsHeaderRowComponent.html":{},"directives/TsHeaderRowDefDirective.html":{},"components/TsIconButtonComponent.html":{},"components/TsIconComponent.html":{},"components/TsLinkComponent.html":{},"components/TsLoadingOverlayComponent.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsRowComponent.html":{},"directives/TsRowDefDirective.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSlideToggleChange.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"components/TsTableComponent.html":{},"components/TsToggleComponent.html":{},"components/TsTooltipComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{}}}],["viewport",{"_index":3633,"title":{},"body":{"components/TsTableComponent.html":{}}}],["virtual",{"_index":488,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["virtualfileinput",{"_index":312,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["visibl",{"_index":380,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"injectables/TsSortHeaderIntl.html":{},"interfaces/TsUser.html":{}}}],["visible/hidden",{"_index":865,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["visibleitem",{"_index":828,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["visibleitemslength",{"_index":829,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["visibleitemslist",{"_index":844,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["visiblelinkel",{"_index":846,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["visual",{"_index":1519,"title":{},"body":{"components/TsChartComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["visualization(valu",{"_index":1578,"title":{},"body":{"components/TsChartComponent.html":{}}}],["void",{"_index":165,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/KeyboardEvent.html":{},"interfaces/MouseEvent.html":{},"interfaces/NavigationItemBase.html":{},"classes/TsAutocompleteSelectedEvent.html":{},"directives/TsAutofocusDirective.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsCardComponent.html":{},"directives/TsCardTitleDirective.html":{},"components/TsChartComponent.html":{},"components/TsCheckboxComponent.html":{},"directives/TsConfirmationDirective.html":{},"components/TsCopyComponent.html":{},"interfaces/TsDateRange.html":{},"injectables/TsDropProtectionService.html":{},"components/TsIconComponent.html":{},"directives/TsLoadingOverlayDirective.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsRadioChange.html":{},"interfaces/TsRadioOption.html":{},"components/TsReactiveFormBaseComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"components/TsToggleComponent.html":{},"interfaces/TsUser.html":{},"components/TsValidationMessagesComponent.html":{},"directives/TsVerticalSpacingDirective.html":{},"miscellaneous/variables.html":{}}}],["vs",{"_index":371,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["vscode",{"_index":4178,"title":{},"body":{"index.html":{}}}],["wait",{"_index":3305,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["want",{"_index":385,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTableComponent.html":{},"classes/TsTableDataSource.html":{},"contributing.html":{},"index.html":{}}}],["warn",{"_index":2252,"title":{},"body":{"components/TsIconComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["warranti",{"_index":4203,"title":{},"body":{"license.html":{}}}],["wasn't",{"_index":1583,"title":{},"body":{"components/TsChartComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["watch",{"_index":3734,"title":{},"body":{"classes/TsTableDataSource.html":{}}}],["way",{"_index":149,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"injectables/TsValidationMessageService.html":{},"contributing.html":{},"index.html":{}}}],["we'll",{"_index":151,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["web",{"_index":4064,"title":{},"body":{"contributing.html":{}}}],["weekend",{"_index":2502,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["welcom",{"_index":841,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"index.html":{}}}],["welcomemessag",{"_index":842,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["well",{"_index":1473,"title":{},"body":{"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"index.html":{}}}],["wendy&#x1f41b",{"_index":4160,"title":{},"body":{"index.html":{}}}],["wheel",{"_index":1216,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["wheelev",{"_index":1218,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{}}}],["whenev",{"_index":3571,"title":{},"body":{"injectables/TsSortHeaderIntl.html":{}}}],["whether",{"_index":1905,"title":{},"body":{"classes/TsDateAdapter.html":{},"interfaces/TsFileValidations.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTooltipComponent.html":{},"license.html":{}}}],["white_check_mark",{"_index":4117,"title":{},"body":{"index.html":{}}}],["whose",{"_index":1818,"title":{},"body":{"components/TsCopyComponent.html":{}}}],["width",{"_index":93,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"directives/TsColumnDefDirective.html":{},"interfaces/TsFileImageDimensionContraint.html":{},"interfaces/TsFileValidations.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"classes/TsImageDimensions.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"classes/TsSelectedFile.html":{},"components/TsTableComponent.html":{},"interfaces/TsUser.html":{},"miscellaneous/variables.html":{}}}],["widthratio",{"_index":13,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["width}x${height",{"_index":364,"title":{},"body":{"interfaces/ImageRatio.html":{}}}],["window",{"_index":511,"title":{},"body":{"interfaces/ImageRatio.html":{},"interfaces/NavigationItemBase.html":{},"components/TsCopyComponent.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{}}}],["window:res",{"_index":2895,"title":{},"body":{"components/TsNavigationComponent.html":{}}}],["windowservic",{"_index":1809,"title":{},"body":{"components/TsCopyComponent.html":{},"injectables/TsDropProtectionService.html":{},"directives/TsLoadingOverlayDirective.html":{}}}],["wire",{"_index":1762,"title":{},"body":{"directives/TsConfirmationDirective.html":{}}}],["within",{"_index":1456,"title":{},"body":{"directives/TsCardTitleDirective.html":{},"components/TsIconComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"interfaces/TsPaginatorMenuItem.html":{},"classes/TsSortBase.html":{},"directives/TsSortDirective.html":{},"classes/TsSortHeaderBase.html":{},"components/TsSortHeaderComponent.html":{},"interfaces/TsSortState.html":{},"interfaces/TsSortableItem.html":{},"components/TsTooltipComponent.html":{}}}],["without",{"_index":1971,"title":{},"body":{"interfaces/TsDateRange.html":{},"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{},"license.html":{}}}],["wizard",{"_index":4129,"title":{},"body":{"index.html":{}}}],["won't",{"_index":2400,"title":{},"body":{"components/TsLoginFormComponent.html":{},"interfaces/TsLoginFormResponse.html":{}}}],["wonder",{"_index":4149,"title":{},"body":{"index.html":{}}}],["word",{"_index":2236,"title":{},"body":{"components/TsIconComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["word.charat(0).touppercas",{"_index":3762,"title":{},"body":{"pipes/TsTitleCasePipe.html":{}}}],["word.slice(1",{"_index":3763,"title":{},"body":{"pipes/TsTitleCasePipe.html":{}}}],["work",{"_index":868,"title":{},"body":{"interfaces/NavigationItemBase.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"interfaces/TsNavigationActionItem.html":{},"components/TsNavigationComponent.html":{},"interfaces/TsNavigationLinkItem.html":{},"interfaces/TsNavigationPayload.html":{},"interfaces/TsUser.html":{},"contributing.html":{}}}],["workflow",{"_index":3993,"title":{},"body":{"contributing.html":{}}}],["wrap",{"_index":1318,"title":{},"body":{"components/TsCardComponent.html":{},"directives/TsCellDefDirective.html":{},"directives/TsCellDirective.html":{},"classes/TsCheckboxChange.html":{},"components/TsCheckboxComponent.html":{},"directives/TsColumnDefDirective.html":{},"directives/TsHeaderCellDefDirective.html":{},"directives/TsHeaderCellDirective.html":{},"components/TsLinkComponent.html":{},"components/TsTableComponent.html":{}}}],["wrapper",{"_index":1821,"title":{},"body":{"components/TsCopyComponent.html":{},"components/TsMenuComponent.html":{},"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{},"components/TsTableComponent.html":{}}}],["write",{"_index":1677,"title":{},"body":{"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["writevalu",{"_index":1651,"title":{},"body":{"components/TsCheckboxComponent.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["writevalue(valu",{"_index":1675,"title":{},"body":{"components/TsCheckboxComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsReactiveFormBaseComponent.html":{},"components/TsToggleComponent.html":{}}}],["wrong",{"_index":2709,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["x",{"_index":119,"title":{},"body":{"interfaces/ImageRatio.html":{},"components/TsCardComponent.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"components/TsMenuComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"miscellaneous/typealiases.html":{}}}],["x1f3a8",{"_index":4155,"title":{},"body":{"index.html":{}}}],["x1f440",{"_index":4157,"title":{},"body":{"index.html":{}}}],["x1f4bb",{"_index":4161,"title":{},"body":{"index.html":{}}}],["x1f4d6",{"_index":4154,"title":{},"body":{"index.html":{}}}],["x1f527",{"_index":4158,"title":{},"body":{"index.html":{}}}],["x1f914",{"_index":4156,"title":{},"body":{"index.html":{}}}],["xreachend",{"_index":3212,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["xreachstart",{"_index":3213,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["xy",{"_index":1536,"title":{},"body":{"components/TsChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["y",{"_index":1345,"title":{},"body":{"components/TsCardComponent.html":{},"components/TsMenuComponent.html":{},"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{},"miscellaneous/typealiases.html":{}}}],["yarn",{"_index":4138,"title":{},"body":{"index.html":{}}}],["ye",{"_index":1901,"title":{},"body":{"classes/TsDateAdapter.html":{},"classes/TsSelectedFile.html":{},"injectables/TsValidationMessageService.html":{}}}],["year",{"_index":1911,"title":{},"body":{"classes/TsDateAdapter.html":{},"interfaces/TsDateRange.html":{},"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{},"miscellaneous/variables.html":{}}}],["yeoman",{"_index":996,"title":{},"body":{"modules/TerminusUIModule.html":{}}}],["yourself",{"_index":4039,"title":{},"body":{"contributing.html":{}}}],["yreachend",{"_index":3214,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["yreachstart",{"_index":3215,"title":{},"body":{"classes/TsScrollbarPosition.html":{},"classes/TsScrollbarsGeometry.html":{}}}],["yyyi",{"_index":2809,"title":{},"body":{"interfaces/TsMask.html":{},"interfaces/TsMaskCollection.html":{}}}],["z",{"_index":4137,"title":{},"body":{"index.html":{}}}],["z0",{"_index":3307,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["za",{"_index":3306,"title":{},"body":{"components/TsSearchComponent.html":{},"interfaces/TsSearchResponse.html":{}}}],["zero",{"_index":1229,"title":{},"body":{"interfaces/TsCSVEntryRecord.html":{},"interfaces/TsCSVFormContents.html":{},"interfaces/TsPaginatorMenuItem.html":{}}}],["zerobas",{"_index":3010,"title":{},"body":{"interfaces/TsPaginatorMenuItem.html":{}}}],["zone",{"_index":1525,"title":{},"body":{"components/TsChartComponent.html":{}}}],["zoom",{"_index":947,"title":{},"body":{"modules/TerminusUIModule.html":{},"modules/TsAutocompleteModule.html":{},"modules/TsAutofocusModule.html":{},"modules/TsButtonModule.html":{},"modules/TsCSVEntryModule.html":{},"modules/TsCardModule.html":{},"modules/TsChartModule.html":{},"modules/TsCheckboxModule.html":{},"modules/TsConfirmationModule.html":{},"modules/TsCopyModule.html":{},"modules/TsDateRangeModule.html":{},"modules/TsFileUploadModule.html":{},"modules/TsIconButtonModule.html":{},"modules/TsIconModule.html":{},"modules/TsInputModule.html":{},"modules/TsLinkModule.html":{},"modules/TsLoadingOverlayModule.html":{},"modules/TsLoginFormModule.html":{},"modules/TsMenuModule.html":{},"modules/TsNavigationModule.html":{},"modules/TsPaginatorModule.html":{},"modules/TsPipesModule.html":{},"modules/TsRadioGroupModule.html":{},"modules/TsScrollbarsModule.html":{},"modules/TsSearchModule.html":{},"modules/TsSelectModule.html":{},"modules/TsSortModule.html":{},"modules/TsSpacingModule.html":{},"modules/TsTableModule.html":{},"modules/TsToggleModule.html":{},"modules/TsTooltipModule.html":{},"modules/TsValidationMessagesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ImageRatio.html":{"url":"interfaces/ImageRatio.html","title":"interface - ImageRatio","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageRatio\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/file-upload/file-upload.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        heightRatio\n                                \n                                \n                                        widthRatio\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        heightRatio\n                                    \n                                \n                                \n                                    \n                                        heightRatio:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        widthRatio\n                                    \n                                \n                                \n                                    \n                                        widthRatio:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        File Upload\n\n\n\n\nTable of Contents\n\nBasic usage\nTsSelectedFile\n\n\nFile types\nFile size\nImage dimensions\nImage ratio constraints\nClearing a file\nShowing upload progress\nEnable multiple file selection\nHandle multiple files\n\n\nBasic usage\nCollect the selected file via the selected event:\n\n@import { TsSelectedFile } from '@terminus/ui';\n\n...\n\n  handleFile(e: TsSelectedFile) {\n    // e.fileContents is the selected file\n  }TsSelectedFile\nThe TsSelectedFile instance will have several items available:\nfile.fileContents // string\nfile.height       // number (will be 0 for CSVs)\nfile.isCSV        // boolean\nfile.isImage      // boolean\nfile.isValid      // boolean\nfile.mimeType     // string\nfile.name         // string\nfile.size         // number\nfile.validations  // TsFileValidations\nfile.width        // number (will be 0 for CSVs)File types\nAccepted file types can be set by the accept input:\n@import { TsFileAcceptedMimeTypes } from '@terminus/ui';\n\n...\n\n  myMimeTypes: TsFileAcceptedMimeTypes = ['image/png', 'image/jpg'];\nIf a file is loaded with the incorrect MIME/type, a validation message will appear below the file input.\nThe default types can be found by importing TS_ACCEPTED_MIME_TYPES;\nFile size\nSet a maximum size for files in kilobytes:\n\nIf a file is loaded that exceeds the size limit, a validation message will appear below the file input.\nImage dimensions\nImage dimension validation is controlled by an array of constraints passed to the component.\nA single constraint has this structure:\ninterface TsFileImageDimensionContraint {\n  height: {\n    min: number;\n    max: number;\n  };\n  width: {\n    min: number;\n    max: number;\n  };\n}For fixed image dimensions set the min and max to the same number. The component will trim ranges before exposing to the user:\n// Example:\n{\n  height: {\n    min: 100;\n    max: 100;\n  };\n  width: {\n    min: 300;\n    max: 300;\n  };\n}\n// Will be displayed as: `300x100`\n\n{\n  height: {\n    min: 50;\n    max: 100;\n  };\n  width: {\n    min: 200;\n    max: 300;\n  };\n}\n// Will be displayed as: `200-300x50-100`Example:\n@import { TsFileImageDimensionConstraints } from '@terminus/ui';\n\n...\n\n  myDimensionConstraints: TsFileImageDimensionConstraints = [\n    {\n      height: {\n        min: 72,\n        max: 72,\n      },\n      width: {\n        min: 72,\n        max: 72,\n      },\n    },\n    {\n      height: {\n        min: 400,\n        max: 500,\n      },\n      width: {\n        min: 700,\n        max: 800,\n      },\n    },\n  ];\nIf an image is selected that does not meet the dimension constraints, a validation message will appear below the file input.\nImage ratio constraints\nImage ratio validation is controlled by an array of constraints passed to the component.\n\nIf a file is loaded that do not meet any ratio constraints, a validation message will appear below the file input.\nClearing a file\nThe user can clear the selected file by clicking the X button next to the filename. An event will be emitted when this occurs:\n...\n\n  fileWasCleared() {\n    ...\n  }\nShowing upload progress\nThe progress of an upload can be reflected in the UI by passing a number between 0 and 100 to the progress input:\n...\n  myProgress = 0;\n\n  // For example only. In a real scenario the progress value would be coming from the API.\n  // Start a counter to fake the upload progress value\n  startProgress() {\n    this.myProgress = 0;\n    const counting = setInterval(() => {\n      if (this.myProgress \nEnable multiple file selection\nSet multiple to true:\n\nHandle multiple files\nCurrently this component does not natively handle multiple file uploads (this support is planned for the future). There are ways to 'fake'\nthat functionality in a way.\nAn example:\n...\n\n  // We'll store the selected files here for reference:\n  files: {id: number; file: File}[] = [];\n\n  // Collect the selected files from the event and store them for reference:\n  selectedMultiple(e: File[]) {\n    let index = -1;\n\n    this.files = e.map((f) => {\n      index = index + 1;\n      return {\n        id: index,\n        file: f,\n      };\n    });\n  }\n\n  // Remove the correct file when the user clicks the clear button\n  clearFile(id: number): void {\n    if (!this.files || this.files.length  {\n      return obj.id !== id;\n    });\n  }\n\n  // Helper function to determine when to hide one of the file upload components:\n  public fileExists(id: number): boolean {\n    if (!this.files || this.files.length  {\n      return v.id === id;\n    });\n\n    return found ? true : false;\n  }\n\n\n\n\n  \n    *ngIf=\"fileExists(v.id)\"\n    \n    [seedFile]=\"v.file\"\n  >\n\n    \n\n    \n        import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n  isDevMode,\n  forwardRef,\n} from '@angular/core';\nimport {\n  ValidationErrors,\n  NG_VALUE_ACCESSOR,\n  FormControl,\n} from '@angular/forms';\nimport {\n  TsDocumentService,\n  untilComponentDestroyed,\n  isNumber,\n} from '@terminus/ngx-tools';\nimport {\n  coerceArray,\n  coerceBooleanProperty,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport { ENTER } from '@terminus/ngx-tools/keycodes';\nimport { filter } from 'rxjs/operators';\n\nimport { inputHasChanged } from './../utilities/input-has-changed/input-has-changed';\nimport { TS_SPACING } from './../spacing/spacing.constant';\nimport { isDragEvent } from './../utilities/type-coercion/is-drag-event';\nimport { isHTMLInputElement } from './../utilities/type-coercion/is-html-input-element';\nimport { TsSelectedFile } from './selected-file';\nimport { TsFileAcceptedMimeTypes, TS_ACCEPTED_MIME_TYPES } from './mime-types';\nimport { TsFileImageDimensionConstraints } from './image-dimension-constraints';\nimport { TsStyleThemeTypes } from '../utilities/types/style-theme.types';\nimport { TsDropProtectionService } from './drop-protection.service';\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\n\nexport interface ImageRatio {\n  widthRatio: number;\n  heightRatio: number;\n}\n\n/**\n * The maximum file size in bytes\n *\n * NOTE: Currently nginx has a hard limit of 10mb\n */\nconst MAXIMUM_KILOBYTES_PER_FILE = 10 * 1024;\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n/**\n * Custom control value accessor for our component.\n * This allows our custom components to access the underlying form validation via our base class\n */\n/* tslint:disable:no-use-before-declare */\nconst CUSTOM_FILE_UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsFileUploadComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n/**\n * This is the file-upload UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-file-upload`: Placed on the primary container\n * - `qa-file-upload-empty`: Placed on the container shown when no file exists\n * - `qa-file-upload-preview`: The file preview container\n * - `qa-file-upload-name`: The filename container\n * - `qa-file-upload-remove`: The button to remove a loaded file\n * - `qa-file-upload-prompt`: The button to open the native file picker\n * - `qa-file-upload-validation-messages`: The container for validation messages\n * - `qa-file-upload-hints`: The container for input hints\n * - `qa-file-upload-progress`: The upload progress bar\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.scss'],\n  host: {\n    class: 'ts-file-upload',\n    '(keydown)': 'handleKeydown($event)',\n  },\n  providers: [CUSTOM_FILE_UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsFileUpload',\n})\nexport class TsFileUploadComponent extends TsReactiveFormBaseComponent implements OnInit , OnChanges, OnDestroy, AfterContentInit {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-file-upload-${nextUniqueId++}`;\n\n  /**\n   * A flag that represents an in-progress drag movement\n   */\n  public dragInProgress: boolean = false;\n\n  /**\n   * Store the selected file\n   */\n  public file: TsSelectedFile | undefined;\n\n  /**\n   * Define the flexbox layout gap\n   */\n  public layoutGap: string = TS_SPACING.small[0];\n\n  /**\n   * Store reference to the generated file input\n   */\n  private virtualFileInput: HTMLInputElement;\n\n  /**\n   * Reflect the ID back to the DOM\n   */\n  @HostBinding('attr.id')\n  public publicID: string = this.id;\n\n  /**\n   * Provide access to the file preview element\n   */\n  @ViewChild('preview')\n  public preview!: ElementRef;\n\n  /**\n   * Get the file select button text\n   */\n  public get buttonMessage(): string {\n    if (this.dragInProgress) {\n      return `Drop File${this.multiple ? 's' : ''}`;\n    } else {\n      return `Select File${this.multiple ? 's' : ''}`;\n    }\n  }\n\n  /**\n   * Compose and expose all hints to the template\n   *\n   * @return An array of hints\n   */\n  public get hints(): string[] {\n    const hints: string[] = [];\n    const types: string = this.acceptedTypes.slice().map((v) => {\n      return v.split('/')[1];\n    }).join(', ');\n    const allowsImage =\n      (this.acceptedTypes.indexOf('image/png') >= 0) ||\n      (this.acceptedTypes.indexOf('image/jpeg') >= 0) ||\n      (this.acceptedTypes.indexOf('image/jpg') >= 0);\n\n    if (allowsImage && this.supportedImageDimensions.length > 0) {\n      hints.push(`Must be a valid dimension: ${this.supportedImageDimensions}`);\n    }\n\n    hints.push(`Must be ${types}`);\n    hints.push(`Must be under ${this.maximumKilobytesPerFile.toLocaleString()}kb`);\n    if (this.ratioConstraints) {\n      hints.push(`Must have valid image ratio of ${this.ratioConstraints.join(' or ')} `);\n    }\n\n    return hints;\n  }\n\n  /**\n   * Compose supported image dimensions as a string\n   *\n   * @return A string containing all allowed image dimensions\n   */\n  private get supportedImageDimensions(): string {\n    let myString = '';\n\n    // istanbul ignore else\n    if (this.dimensionConstraints) {\n      const constraints = this.dimensionConstraints.slice();\n\n      for (const c of constraints) {\n        // If not the first item, add a comma between the last item and the new\n        if (myString.length > 0) {\n          myString += ', ';\n        }\n\n        // If a fixed size\n        if ((c.height.min === c.height.max) && (c.width.min === c.width.max)) {\n          myString += `${c.width.min.toLocaleString()}x${c.height.min.toLocaleString()}`;\n        } else {\n          // Dealing with a size range\n          const height = (c.height.min === c.height.max)\n            ? c.height.min.toLocaleString()\n            : `${c.height.min.toLocaleString()}-${c.height.max.toLocaleString()}`;\n          const width = (c.width.min === c.width.max)\n            ? c.width.min.toLocaleString()\n            : `${c.width.min.toLocaleString()}-${c.width.max.toLocaleString()}`;\n          const range = `${width}x${height}`;\n          myString += range;\n        }\n      }\n    }\n\n    return myString;\n  }\n\n  /**\n   * Define the accepted mime types\n   */\n  @Input()\n  public set accept(value: TsFileAcceptedMimeTypes | TsFileAcceptedMimeTypes[] | undefined) {\n    if (!value) {\n      this._acceptedTypes = TS_ACCEPTED_MIME_TYPES.slice();\n    } else {\n      this._acceptedTypes = coerceArray(value);\n    }\n  }\n  // NOTE: Setter name is different to allow different types passed in vs returned\n  public get acceptedTypes(): TsFileAcceptedMimeTypes[] {\n    return this._acceptedTypes;\n  }\n  private _acceptedTypes: TsFileAcceptedMimeTypes[] = TS_ACCEPTED_MIME_TYPES.slice();\n\n  /**\n   * Create a form control to manage validation messages\n   */\n  @Input()\n  public set formControl(ctrl: FormControl) {\n    this._formControl = ctrl ? ctrl : new FormControl();\n  }\n  public get formControl(): FormControl {\n    return this._formControl;\n  }\n  private _formControl: FormControl = new FormControl();\n\n  /**\n   * Define if the 'select files' button should be visible. DO NOT USE.\n   *\n   * TODO: This should be removed once UX/Product decide if they want the button.\n   */\n  @Input()\n  public set hideButton(value: boolean) {\n    this._hideButton = coerceBooleanProperty(value);\n  }\n  public get hideButton(): boolean {\n    return this._hideButton;\n  }\n  private _hideButton: boolean = false;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id!: string;\n\n  /**\n   * Define the maximum file size in kilobytes\n   */\n  @Input()\n  public set maximumKilobytesPerFile(value: number) {\n    if (!value) {\n      return;\n    }\n\n    this._maximumKilobytesPerFile = value;\n  }\n  public get maximumKilobytesPerFile(): number {\n    return this._maximumKilobytesPerFile;\n  }\n  private _maximumKilobytesPerFile: number = MAXIMUM_KILOBYTES_PER_FILE;\n\n  /**\n   * Define supported ratio for images\n   */\n\n  @Input()\n  public set ratioConstraints(values: Array | undefined) {\n    if (values) {\n      for (const value of values) {\n        const v = value.split(':');\n        if ((v.length !== 2) || (!isNumber(v[0]) && !isNumber(v[1]))) {\n          throw new Error('An array of image ratio should be as [\"1:2\", \"3:4\"]');\n        }\n      }\n    }\n    this._ratioConstraints = this.parseRatioStringToObject(values);\n  }\n  public get ratioConstraints(): Array | undefined {\n    return this.parseRatioToString(this._ratioConstraints);\n  }\n  private _ratioConstraints: Array | undefined;\n\n\n  /**\n   * Define if multiple files may be uploaded\n   */\n  @Input()\n  public set multiple(value: boolean) {\n    this._multiple = coerceBooleanProperty(value);\n  }\n  public get multiple(): boolean {\n    return this._multiple;\n  }\n  private _multiple: boolean = false;\n\n  /**\n   * Define the upload progress\n   */\n  @Input()\n  public set progress(value: number) {\n    this._progress = coerceNumberProperty(value);\n  }\n  public get progress(): number {\n    return this._progress;\n  }\n  private _progress: number = 0;\n\n  /**\n   * Seed an existing file (used for multiple upload hack)\n   */\n  @Input()\n  public set seedFile(file: File | undefined) {\n    this._seedFile = file;\n\n    if (file) {\n      const newFile = new TsSelectedFile(\n        file,\n        this.dimensionConstraints,\n        this.acceptedTypes,\n        this.maximumKilobytesPerFile,\n        this._ratioConstraints,\n      );\n\n      newFile.fileLoaded$.pipe(\n        filter((t: TsSelectedFile | undefined): t is TsSelectedFile => t !== undefined),\n        untilComponentDestroyed(this),\n      ).subscribe((f) => {\n        this.formControl.setValue(f.file);\n        this.selected.emit(f);\n        this.setUpNewFile(f);\n      });\n    }\n\n  }\n  public get seedFile(): File | undefined {\n    return this._seedFile;\n  }\n  private _seedFile: File | undefined;\n\n  /**\n   * Define maximum and minimum pixel dimensions for images\n   */\n  @Input()\n  public set dimensionConstraints(value: TsFileImageDimensionConstraints | undefined) {\n    this._sizeConstraints = value;\n  }\n  public get dimensionConstraints(): TsFileImageDimensionConstraints | undefined {\n    return this._sizeConstraints;\n  }\n  private _sizeConstraints: TsFileImageDimensionConstraints | undefined;\n\n  /**\n   * Define the theme. See {@link TsStyleThemeTypes}.\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Event emitted when the user's cursor enters the field while dragging a file\n   */\n  @Output()\n  public enter: EventEmitter = new EventEmitter();\n\n  /**\n   * Event emitted when the user's cursor exits the field while dragging a file\n   */\n  @Output()\n  public exit: EventEmitter = new EventEmitter();\n\n  /**\n   * Event emitted when the user drops or selects a file\n   */\n  @Output()\n  public selected: EventEmitter = new EventEmitter();\n\n  /**\n   * Event emitted when the user drops or selects multiple files\n   */\n  @Output()\n  public selectedMultiple: EventEmitter = new EventEmitter();\n\n  /**\n   * Event emitted when the user clears a loaded file\n   */\n  @Output()\n  public cleared: EventEmitter = new EventEmitter();\n\n  /**\n   * HostListeners\n   */\n  @HostListener('dragover', ['$event'])\n  public handleDragover(event: DragEvent) {\n    this.preventAndStopEventPropagation(event);\n    this.enter.emit(true);\n    this.dragInProgress = true;\n  }\n\n  @HostListener('dragleave', ['$event'])\n  public handleDragleave(event: DragEvent) {\n    this.preventAndStopEventPropagation(event);\n    this.exit.emit(true);\n    this.dragInProgress = false;\n  }\n\n  @HostListener('drop', ['$event'])\n  public handleDrop(event: DragEvent) {\n    this.preventAndStopEventPropagation(event);\n    this.dragInProgress = false;\n    this.collectFilesFromEvent(event);\n  }\n\n  @HostListener('click')\n  public handleClick() {\n    this.promptForFiles();\n  }\n\n\n  constructor(\n    private documentService: TsDocumentService,\n    private elementRef: ElementRef,\n    private changeDetectorRef: ChangeDetectorRef,\n    private dropProtectionService: TsDropProtectionService,\n  ) {\n    super();\n    this.virtualFileInput = this.createFileInput();\n\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n  /**\n   * Update the inner value when the formControl value is updated\n   *\n   * @param value - The value to set\n   */\n  public updateInnerValue = (value: string): void => {\n    this.value = value;\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Enable drop protection\n   */\n  public ngOnInit(): void {\n    this.dropProtectionService.add();\n    if (this.formControl) {\n      this.formControl.valueChanges.pipe(\n        untilComponentDestroyed(this),\n      ).subscribe(() => {\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n  }\n\n\n  /**\n   * Update the virtual file imput when the change event is fired\n   */\n  public ngAfterContentInit(): void {\n    this.virtualFileInput.addEventListener('change', this.onVirtualInputElementChange.bind(this));\n    this.updateVirtualFileInputAttrs(this.virtualFileInput);\n  }\n\n\n  /**\n   * Update the virtual file input's attrs when specific inputs change\n   *\n   * @param changes - The changed inputs\n   */\n  public ngOnChanges(changes: SimpleChanges): void {\n    // istanbul ignore else\n    if (inputHasChanged(changes, 'multiple') || inputHasChanged(changes, 'accept')) {\n      this.updateVirtualFileInputAttrs(this.virtualFileInput);\n      this.registerOnChangeFn(this.updateInnerValue);\n    }\n  }\n\n\n  /**\n   * Remove event listener when the component is destroyed\n   */\n  public ngOnDestroy(): void {\n    // istanbul ignore else\n    if (this.virtualFileInput) {\n      this.virtualFileInput.removeEventListener('change', this.onVirtualInputElementChange.bind(this));\n    }\n    this.dropProtectionService.remove();\n  }\n\n\n  /**\n   * Handle the 'enter' keydown event\n   *\n   * @param event - The keyboard event\n   */\n  public handleKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === ENTER) {\n      this.promptForFiles();\n      this.elementRef.nativeElement.blur();\n    }\n  }\n\n\n  /**\n   * Open the file selection window when the user interacts\n   */\n  public promptForFiles(): void {\n    this.virtualFileInput.click();\n  }\n\n\n  /**\n   * Remove a loaded file, clear validation and emit event\n   *\n   * @param event - The event\n   */\n  public removeFile(event?: Event): void {\n    if (event) {\n      this.preventAndStopEventPropagation(event);\n    }\n    this.file = undefined;\n    this.clearValidationMessages();\n    this.cleared.emit(true);\n  }\n\n\n  /**\n   * Create a virtual file input\n   *\n   * @return The HTMLInputElement for file collection\n   */\n  private createFileInput(): HTMLInputElement {\n    const input: HTMLInputElement = this.documentService.document.createElement('input');\n    input.setAttribute('type', 'file');\n    input.style.display = 'none';\n    return input;\n  }\n\n\n  /**\n   * Get all selected files from an event\n   *\n   * @param event - The event\n   */\n  private collectFilesFromEvent(event: DragEvent | Event): void {\n    let files: FileList | undefined;\n\n    if (isDragEvent(event)) {\n      files = event.dataTransfer.files;\n    }\n\n    if (event.target && isHTMLInputElement(event.target)) {\n      files = event.target.files ? event.target.files : undefined;\n    }\n\n    if ((!files || files.length  1) {\n      this.selectedMultiple.emit(filesArray);\n      return;\n    }\n\n    const file = filesArray[0] ? filesArray[0] /* istanbul ignore next - Unreachable */ : undefined;\n\n    // istanbul ignore else\n    if (file) {\n      const newFile = new TsSelectedFile(\n        file,\n        this.dimensionConstraints,\n        this.acceptedTypes,\n        this.maximumKilobytesPerFile,\n        this._ratioConstraints);\n\n      newFile.fileLoaded$.pipe(\n        filter((t: TsSelectedFile | undefined): t is TsSelectedFile => !!t),\n        untilComponentDestroyed(this),\n      ).subscribe((f) => {\n        this.formControl.setValue(f.file);\n        this.selected.emit(f);\n        this.setUpNewFile(f);\n      });\n    }\n  }\n\n  /**\n   * Register our custom onChange function\n   *\n   * @param fn - The onChange function\n   */\n  private registerOnChangeFn(fn: Function): void {\n    // istanbul ignore else\n    if (this.formControl) {\n      this.formControl.registerOnChange(fn);\n    }\n  }\n\n\n  /**\n   * Set file and set up preview and validations\n   *\n   * @param file - The file\n   */\n  private setUpNewFile(file: TsSelectedFile): void {\n    if (!file) {\n      return;\n    }\n    this.file = file;\n    this.setValidationMessages(file);\n    this.changeDetectorRef.markForCheck();\n  }\n\n\n  /**\n   * Listen for changes to the virtual input\n   *\n   * @param event - The event\n   */\n  private onVirtualInputElementChange(event: Event): void {\n    this.collectFilesFromEvent(event);\n    this.virtualFileInput.value = '';\n  }\n\n\n  /*\n   * Stops event propogation\n   */\n  private preventAndStopEventPropagation(event: Event): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n\n  /**\n   * Update the attributes of the virtual file input based on @Inputs\n   *\n   * @param input - The HTML input element\n   */\n  private updateVirtualFileInputAttrs(input: HTMLInputElement): void {\n    const hasMultipleSetting: boolean = input.hasAttribute('multiple');\n\n    // Should set multiple\n    // istanbul ignore else\n    if (this.multiple && !hasMultipleSetting) {\n      this.virtualFileInput.setAttribute('multiple', 'true');\n    }\n\n    // Should remove multiple\n    // istanbul ignore else\n    if (!this.multiple && hasMultipleSetting) {\n      this.virtualFileInput.removeAttribute('multiple');\n    }\n\n    // Should set accept\n    // istanbul ignore else\n    if (this.acceptedTypes) {\n      this.virtualFileInput.setAttribute('accept', this.acceptedTypes.toString());\n    }\n  }\n\n\n  /**\n   * Set validation messages\n   *\n   * @param file - The file\n   */\n  private setValidationMessages(file: TsSelectedFile | undefined): void {\n    if (!file) {\n      return;\n    }\n\n    const errors: ValidationErrors = {};\n    const responses: {[key: string]: ValidationErrors} = {\n      fileSize: {\n        valid: false,\n        actual: file.size,\n        max: this.maximumKilobytesPerFile,\n      },\n      fileType: {\n        valid: false,\n        actual: file.mimeType,\n        accepted: this.acceptedTypes.join(', '),\n      },\n      imageDimensions: {\n        valid: false,\n        actual: file.dimensions,\n      },\n      imageRatio: {\n        valid: false,\n        actual: file.width / file.height,\n      },\n    };\n\n    const validations = Object.keys(file.validations);\n\n    for (let i = 0; i  | undefined): Array | undefined {\n    if (!ratios) {\n      return;\n    }\n    const parsedImageRatio: Array = [];\n    ratios.map((r) => parsedImageRatio.push({\n      widthRatio: Number(r.split(':')[0]),\n      heightRatio: Number(r.split(':')[1]),\n    }));\n    return parsedImageRatio;\n  }\n\n  /**\n   * Parse ratio from Array of ImageRatio to Array of string\n   * @param ratios - Array of ImageRatio\n   * @return - Array of string\n   */\n\n  private parseRatioToString(ratios: Array | undefined): Array | undefined {\n    if (!ratios) {\n      return;\n    }\n    const parsedRatio: Array = [];\n    ratios.map((r) => parsedRatio.push(r.widthRatio.toString() + ':' + r.heightRatio.toString()));\n    return parsedRatio;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/KeyboardEvent.html":{"url":"interfaces/KeyboardEvent.html","title":"interface - KeyboardEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  KeyboardEvent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/autocomplete/autocomplete.component.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/autocomplete/autocomplete.component.ts:39\n                            \n                        \n            \n        \n\n\n    \n\n    \n        Autocomplete\n\n\n\n\nTable of Contents\n\nBasic usage with a FormControl\nAllow multiple selections\nSeed selected values\nShow the progress indicator\nCustomize how the selected value is displayed\nEvent driven\nShow a 'no results' validation error\nMinimum required character count\n\n\nBasic usage with a FormControl\na) Pass an array of available options in. These are the options displayed to the user in the\n   dropdown.\nb) Create a local reference to the autocomplete component.\n\nc) Subscribe to the query events coming from the autocomplete. This is a stream of query strings\nentered by the user. This stream is debounced and de-duped by default.\ninterface OptionType {\n  id: string;\n  login: string;\n  [key: string]: any;\n}\n\n// Create a reference to the autocomplete and pass in a typing for the options\n@ViewChild('auto')\npublic auto: TsAutocompleteComponent;\n\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      // Only hit the API if a query was sent in\n      if (term) {\n        // Start the progress indicator\n        this.inProgress = true;\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              // Stop the progress indicator\n              this.inProgress = false;\n              return response['items'];\n            }),\n          )\n      } else {\n        // If no query was passed in, reset the search results and stop the progress indicator\n        this.inProgress = false;\n        return of([]);\n      }\n    }),\n  )\n;\nChange the debounce delay by setting debounceDelay.\n\nAllow multiple selections\nTo allow multiple selections, pass in a comparator function. This function should match the type {@link TsAutocompleteComparatorFn} which has the basic signature of (v: any) => string.\nThis comparator function will be used by the autocomplete to determine if a selection is a\nduplicate. It is also used as the trackBy function when looping through options.\nSeed selected values\nTo seed initial values, pass the array of selections to initialSelections:\nShow the progress indicator\nShow a progress indicator by toggling the showProgress value:\nthis.isInProgress = true;Customize how the selected value is displayed\nThe UI display of selected options can be changed by passing in a custom displayWith function.\nThis function should match {@link TsAutocompleteFormatterFn} which has the signature of (v) =>\nstring;\n\n v.login\"\n>Event driven\nIf a FormControl isn't needed, you can subscribe to events directly:\nadded(chip) {\n  console.log('Selection made!', chip);\n}\n\nremoved(chip) {\n  console.log('Selection removed!', chip);\n}\n\nchange(selections) {\n  console.log('Selection was changed!', selections);\n}Show a 'no results' validation error\nIf no results are found, set a validation error on the FormControl:\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      if (term) {\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              const items = response['items'];\n\n              // If no results are found, notify the user via a validation message\n              if (items.length Minimum required character count\nBy default, two characters must be entered before a query is emitted. This value can be overridden:\n\n    \n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  isDevMode,\n  OnDestroy,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormControl,\n  ValidationErrors,\n} from '@angular/forms';\nimport {\n  MatAutocomplete,\n  MatAutocompleteSelectedEvent,\n  MatAutocompleteTrigger,\n} from '@angular/material/autocomplete';\nimport { debounceTime, distinctUntilChanged, filter } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n  coerceArray,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport {\n  arrayContainsObject,\n  isFunction,\n  untilComponentDestroyed,\n} from '@terminus/ngx-tools';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\nexport interface KeyboardEvent {\n  [key: string]: any;\n}\n\nexport interface MouseEvent {\n  [key: string]: any;\n}\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} formatter function\n */\nexport type TsAutocompleteFormatterFn = (value: any) => string;\n\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} comparator function\n */\nexport type TsAutocompleteComparatorFn = (value: any) => string;\n\n\nexport class TsAutocompleteSelectedEvent extends MatAutocompleteSelectedEvent {}\n\n\n/**\n * The autocomplete UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-autocomplete`: The primary container\n * - `qa-autocomplete-input`: The input element\n * - `qa-autocomplete-spinner`: The progress indicator\n * - `qa-autocomplete-chip`: An individual selection 'chip'\n * - `qa-autocomplete-options`: The container for the list of options\n * - `qa-autocomplete-option`: An individual option from the list\n * - `qa-autocomplete-hint`: The input hint\n * - `qa-autocomplete-validation-messages`: The container for validation messages\n *\n * @example\n *  v.name\"\n *              hint=\"Begin typing to search..\"\n *              label=\"Select options:\"\n *              multiple=\"(v) => v.id\"\n *              name=\"product selections\"\n *              options=\"[{}, {}, ...]\"\n *              selectionsControl=\"myForm.get('myControl')\"\n *              [showProgress]=\"inProgress\"\n *              theme=\"primary\"\n *              initialSelections=\"[{}]\"\n *              (optionSelected)=\"mySelected($event)\"\n *              (optionRemoved)=\"myRemoved($event)\"\n *              (selection)=\"mySelection($event)\"\n *              (query)=\"myQuery($event)\"\n * >\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss'],\n  host: {\n    class: 'ts-autocomplete',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsAutocomplete',\n})\nexport class TsAutocompleteComponent implements AfterViewInit, OnDestroy {\n  /**\n   * Management of the query string\n   */\n  public querySubject: BehaviorSubject = new BehaviorSubject('');\n\n  /**\n   * Store the search query\n   */\n  public searchQuery!: string;\n\n  /**\n   * Define if the chips/selections should be selectable\n   */\n  public selectableChips: boolean = false;\n\n  /**\n   * Store the selected options\n   */\n  public selectedOptions: OptionType[] = [];\n\n  /**\n   * Store the formatter function for the UI display\n   */\n  private uiFormatFn!: (value: OptionType) => string;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocomplete')\n  public autocomplete!: MatAutocomplete;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocompleteTrigger')\n  set autocompleteTrigger(value: MatAutocompleteTrigger) {\n    this.trigger = value;\n  }\n  get autocompleteTrigger(): MatAutocompleteTrigger {\n    return this.trigger;\n  }\n  private trigger!: MatAutocompleteTrigger;\n\n  /**\n   * Provide direct access to the input\n   */\n  @ViewChild('input')\n  public input!: ElementRef;\n\n  /**\n   * Define a debounce delay for the query\n   */\n  @Input()\n  public set debounceDelay(value: number) {\n    this._debounceDelay = coerceNumberProperty(value);\n  }\n  public get debounceDelay(): number {\n    return this._debounceDelay;\n  }\n  private _debounceDelay: number = 200;\n\n  /**\n   * A function to output the UI text from the selected item\n   *\n   * When undefined the full selection object will be used as the display value\n   */\n  @Input()\n  public set displayWith(value: TsAutocompleteFormatterFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this.uiFormatFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'displayWith' must be passed a function.`);\n      }\n    }\n  }\n  public get displayWith(): TsAutocompleteFormatterFn {\n    return this.uiFormatFn;\n  }\n\n  /**\n   * Define a hint for the input\n   */\n  // FIXME: Fix potential overlap of hint and error messages\n  @Input()\n  public hint: string | undefined;\n\n  /**\n   * Define the placeholder/label\n   */\n  @Input()\n  public label: string | undefined;\n\n  /**\n   * Define a minimum character count for queries\n   */\n  @Input()\n  public set minimumCharacters(value: number) {\n    this._minimumCharacters = coerceNumberProperty(value);\n  }\n  public get minimumCharacters(): number {\n    return this._minimumCharacters;\n  }\n  private _minimumCharacters: number = 2;\n\n  /**\n   * Define if multiple selections are allowed by passing in a comparator function\n   */\n  @Input()\n  public set multiple(v: TsAutocompleteComparatorFn) {\n    if (!v) {\n      return;\n    }\n\n    if (isFunction(v)) {\n      this.comparatorFn = v;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'multiple' must be passed a 'TsAutocompleteComparatorFn' function.`);\n      }\n    }\n  }\n  public get multiple(): TsAutocompleteComparatorFn {\n    return this.comparatorFn;\n  }\n  private comparatorFn!: TsAutocompleteComparatorFn;\n\n  /**\n   * Define the name attribute value\n   */\n  @Input()\n  public name: string | undefined;\n\n  /**\n   * The list of options to display in the drop down\n   */\n  @Input()\n  public options!: OptionType[];\n\n  /**\n   * Define the form control to save selections to\n   */\n  @Input()\n  public set selectionsControl(value: FormControl) {\n    if (!value) {\n      return;\n    }\n\n    this._selectionsControl = value;\n    /*\n     *console.log('set selectionsControl: ', this.selectionsControl);\n     */\n  }\n  public get selectionsControl(): FormControl {\n    return this._selectionsControl;\n  }\n  private _selectionsControl: FormControl = new FormControl();\n\n  /**\n   * Define if the progress spinner should be active\n   */\n  @Input()\n  public showProgress: boolean = false;\n\n  /**\n   * Define the component theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define items that should be selected when the component loads\n   */\n  @Input()\n  public set initialSelections(selections: OptionType[]) {\n    // istanbul ignore else\n    if (selections) {\n      // Seed the array\n      this.selectedOptions = coerceArray(selections.slice());\n\n      // istanbul ignore else\n      if (this.selectionsControl && this.selectionsControl.setValue) {\n        // Seed the formControl\n        this.selectionsControl.setValue(this.selectedOptions);\n      }\n    }\n  }\n\n  /**\n   * Emit the selected chip\n   */\n  @Output()\n  public optionSelected: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the removed chip\n   */\n  @Output()\n  public optionRemoved: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the current selection\n   */\n  @Output()\n  public selection: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the query string\n   */\n  @Output()\n  public query: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Subscribe to the querySubject and pass values to the query emitter\n   *\n   * NOTE: When an option is selected, the full selected value is piped through this stream\n   * somehow. Have not figured out why. Best guess is it's something due to the `matAutocomplete`\n   * directive. For now, we are filtering out anything that is not a string.\n   */\n  public ngAfterViewInit(): void {\n    // Take a stream of query changes\n    this.querySubject.pipe(\n      untilComponentDestroyed(this),\n      filter((v) => (typeof v === 'string') && v.length >= this.minimumCharacters),\n      // Debounce the query changes\n      debounceTime(this.debounceDelay),\n      // Only allow a query through if it is different from the previous query\n      distinctUntilChanged(),\n    ).subscribe((query: string) => {\n      this.query.next(query);\n    });\n\n    // Trigger a change detection cycle if the formControl value was changed dynamically\n    // istanbul ignore else\n    if (this.selectionsControl) {\n      this.selectionsControl.valueChanges.pipe(\n        untilComponentDestroyed(this),\n      ).subscribe((value: OptionType[]) => {\n        this.selectedOptions = value;\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n  }\n\n\n  /**\n   * Needed for untilComponentDestroyed\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Select an option\n   *\n   * @param event - The selection event from the underlying MatAutocomplete\n   */\n  public selectOption(event: TsAutocompleteSelectedEvent): void {\n    // The selected option\n    const selection: OptionType = event.option.value;\n\n    // Stop the flow if the selection already exists in the array\n    if (arrayContainsObject(selection, this.selectedOptions, this.comparatorFn)) {\n      // Set an error on the control to let the user know they chose a duplicate option\n      // istanbul ignore else\n      if (this.selectionsControl) {\n        this.setDuplicateError(this.selectionsControl, selection, this.uiFormatFn);\n      }\n\n      return;\n    }\n\n\n    // Add to the displayed selection chips\n    this.selectedOptions.push(selection);\n\n    // If supporting multiple selections, reset the input text value\n    if (this.multiple) {\n      this.resetSearch();\n    }\n\n    // Update the form control\n    // istanbul ignore else\n    if (this.selectionsControl && this.selectionsControl.setValue) {\n      this.selectionsControl.setValue(this.selectedOptions);\n    }\n\n    // Notify consumers about changes\n    this.optionSelected.emit(event.option.value);\n    this.selection.emit(this.selectedOptions);\n  }\n\n\n  /**\n   * Deselect an option\n   *\n   * @param option - The option to deselect\n   */\n  public deselectOption(option: OptionType): void {\n    // Find the key of the selection in the selectedOptions array\n    const index = this.selectedOptions.indexOf(option);\n\n    // If not found\n    if (index \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MouseEvent.html":{"url":"interfaces/MouseEvent.html","title":"interface - MouseEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MouseEvent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/autocomplete/autocomplete.component.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/autocomplete/autocomplete.component.ts:43\n                            \n                        \n            \n        \n\n\n    \n\n    \n        Autocomplete\n\n\n\n\nTable of Contents\n\nBasic usage with a FormControl\nAllow multiple selections\nSeed selected values\nShow the progress indicator\nCustomize how the selected value is displayed\nEvent driven\nShow a 'no results' validation error\nMinimum required character count\n\n\nBasic usage with a FormControl\na) Pass an array of available options in. These are the options displayed to the user in the\n   dropdown.\nb) Create a local reference to the autocomplete component.\n\nc) Subscribe to the query events coming from the autocomplete. This is a stream of query strings\nentered by the user. This stream is debounced and de-duped by default.\ninterface OptionType {\n  id: string;\n  login: string;\n  [key: string]: any;\n}\n\n// Create a reference to the autocomplete and pass in a typing for the options\n@ViewChild('auto')\npublic auto: TsAutocompleteComponent;\n\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      // Only hit the API if a query was sent in\n      if (term) {\n        // Start the progress indicator\n        this.inProgress = true;\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              // Stop the progress indicator\n              this.inProgress = false;\n              return response['items'];\n            }),\n          )\n      } else {\n        // If no query was passed in, reset the search results and stop the progress indicator\n        this.inProgress = false;\n        return of([]);\n      }\n    }),\n  )\n;\nChange the debounce delay by setting debounceDelay.\n\nAllow multiple selections\nTo allow multiple selections, pass in a comparator function. This function should match the type {@link TsAutocompleteComparatorFn} which has the basic signature of (v: any) => string.\nThis comparator function will be used by the autocomplete to determine if a selection is a\nduplicate. It is also used as the trackBy function when looping through options.\nSeed selected values\nTo seed initial values, pass the array of selections to initialSelections:\nShow the progress indicator\nShow a progress indicator by toggling the showProgress value:\nthis.isInProgress = true;Customize how the selected value is displayed\nThe UI display of selected options can be changed by passing in a custom displayWith function.\nThis function should match {@link TsAutocompleteFormatterFn} which has the signature of (v) =>\nstring;\n\n v.login\"\n>Event driven\nIf a FormControl isn't needed, you can subscribe to events directly:\nadded(chip) {\n  console.log('Selection made!', chip);\n}\n\nremoved(chip) {\n  console.log('Selection removed!', chip);\n}\n\nchange(selections) {\n  console.log('Selection was changed!', selections);\n}Show a 'no results' validation error\nIf no results are found, set a validation error on the FormControl:\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      if (term) {\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              const items = response['items'];\n\n              // If no results are found, notify the user via a validation message\n              if (items.length Minimum required character count\nBy default, two characters must be entered before a query is emitted. This value can be overridden:\n\n    \n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  isDevMode,\n  OnDestroy,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormControl,\n  ValidationErrors,\n} from '@angular/forms';\nimport {\n  MatAutocomplete,\n  MatAutocompleteSelectedEvent,\n  MatAutocompleteTrigger,\n} from '@angular/material/autocomplete';\nimport { debounceTime, distinctUntilChanged, filter } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n  coerceArray,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport {\n  arrayContainsObject,\n  isFunction,\n  untilComponentDestroyed,\n} from '@terminus/ngx-tools';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\nexport interface KeyboardEvent {\n  [key: string]: any;\n}\n\nexport interface MouseEvent {\n  [key: string]: any;\n}\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} formatter function\n */\nexport type TsAutocompleteFormatterFn = (value: any) => string;\n\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} comparator function\n */\nexport type TsAutocompleteComparatorFn = (value: any) => string;\n\n\nexport class TsAutocompleteSelectedEvent extends MatAutocompleteSelectedEvent {}\n\n\n/**\n * The autocomplete UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-autocomplete`: The primary container\n * - `qa-autocomplete-input`: The input element\n * - `qa-autocomplete-spinner`: The progress indicator\n * - `qa-autocomplete-chip`: An individual selection 'chip'\n * - `qa-autocomplete-options`: The container for the list of options\n * - `qa-autocomplete-option`: An individual option from the list\n * - `qa-autocomplete-hint`: The input hint\n * - `qa-autocomplete-validation-messages`: The container for validation messages\n *\n * @example\n *  v.name\"\n *              hint=\"Begin typing to search..\"\n *              label=\"Select options:\"\n *              multiple=\"(v) => v.id\"\n *              name=\"product selections\"\n *              options=\"[{}, {}, ...]\"\n *              selectionsControl=\"myForm.get('myControl')\"\n *              [showProgress]=\"inProgress\"\n *              theme=\"primary\"\n *              initialSelections=\"[{}]\"\n *              (optionSelected)=\"mySelected($event)\"\n *              (optionRemoved)=\"myRemoved($event)\"\n *              (selection)=\"mySelection($event)\"\n *              (query)=\"myQuery($event)\"\n * >\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss'],\n  host: {\n    class: 'ts-autocomplete',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsAutocomplete',\n})\nexport class TsAutocompleteComponent implements AfterViewInit, OnDestroy {\n  /**\n   * Management of the query string\n   */\n  public querySubject: BehaviorSubject = new BehaviorSubject('');\n\n  /**\n   * Store the search query\n   */\n  public searchQuery!: string;\n\n  /**\n   * Define if the chips/selections should be selectable\n   */\n  public selectableChips: boolean = false;\n\n  /**\n   * Store the selected options\n   */\n  public selectedOptions: OptionType[] = [];\n\n  /**\n   * Store the formatter function for the UI display\n   */\n  private uiFormatFn!: (value: OptionType) => string;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocomplete')\n  public autocomplete!: MatAutocomplete;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocompleteTrigger')\n  set autocompleteTrigger(value: MatAutocompleteTrigger) {\n    this.trigger = value;\n  }\n  get autocompleteTrigger(): MatAutocompleteTrigger {\n    return this.trigger;\n  }\n  private trigger!: MatAutocompleteTrigger;\n\n  /**\n   * Provide direct access to the input\n   */\n  @ViewChild('input')\n  public input!: ElementRef;\n\n  /**\n   * Define a debounce delay for the query\n   */\n  @Input()\n  public set debounceDelay(value: number) {\n    this._debounceDelay = coerceNumberProperty(value);\n  }\n  public get debounceDelay(): number {\n    return this._debounceDelay;\n  }\n  private _debounceDelay: number = 200;\n\n  /**\n   * A function to output the UI text from the selected item\n   *\n   * When undefined the full selection object will be used as the display value\n   */\n  @Input()\n  public set displayWith(value: TsAutocompleteFormatterFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this.uiFormatFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'displayWith' must be passed a function.`);\n      }\n    }\n  }\n  public get displayWith(): TsAutocompleteFormatterFn {\n    return this.uiFormatFn;\n  }\n\n  /**\n   * Define a hint for the input\n   */\n  // FIXME: Fix potential overlap of hint and error messages\n  @Input()\n  public hint: string | undefined;\n\n  /**\n   * Define the placeholder/label\n   */\n  @Input()\n  public label: string | undefined;\n\n  /**\n   * Define a minimum character count for queries\n   */\n  @Input()\n  public set minimumCharacters(value: number) {\n    this._minimumCharacters = coerceNumberProperty(value);\n  }\n  public get minimumCharacters(): number {\n    return this._minimumCharacters;\n  }\n  private _minimumCharacters: number = 2;\n\n  /**\n   * Define if multiple selections are allowed by passing in a comparator function\n   */\n  @Input()\n  public set multiple(v: TsAutocompleteComparatorFn) {\n    if (!v) {\n      return;\n    }\n\n    if (isFunction(v)) {\n      this.comparatorFn = v;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'multiple' must be passed a 'TsAutocompleteComparatorFn' function.`);\n      }\n    }\n  }\n  public get multiple(): TsAutocompleteComparatorFn {\n    return this.comparatorFn;\n  }\n  private comparatorFn!: TsAutocompleteComparatorFn;\n\n  /**\n   * Define the name attribute value\n   */\n  @Input()\n  public name: string | undefined;\n\n  /**\n   * The list of options to display in the drop down\n   */\n  @Input()\n  public options!: OptionType[];\n\n  /**\n   * Define the form control to save selections to\n   */\n  @Input()\n  public set selectionsControl(value: FormControl) {\n    if (!value) {\n      return;\n    }\n\n    this._selectionsControl = value;\n    /*\n     *console.log('set selectionsControl: ', this.selectionsControl);\n     */\n  }\n  public get selectionsControl(): FormControl {\n    return this._selectionsControl;\n  }\n  private _selectionsControl: FormControl = new FormControl();\n\n  /**\n   * Define if the progress spinner should be active\n   */\n  @Input()\n  public showProgress: boolean = false;\n\n  /**\n   * Define the component theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define items that should be selected when the component loads\n   */\n  @Input()\n  public set initialSelections(selections: OptionType[]) {\n    // istanbul ignore else\n    if (selections) {\n      // Seed the array\n      this.selectedOptions = coerceArray(selections.slice());\n\n      // istanbul ignore else\n      if (this.selectionsControl && this.selectionsControl.setValue) {\n        // Seed the formControl\n        this.selectionsControl.setValue(this.selectedOptions);\n      }\n    }\n  }\n\n  /**\n   * Emit the selected chip\n   */\n  @Output()\n  public optionSelected: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the removed chip\n   */\n  @Output()\n  public optionRemoved: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the current selection\n   */\n  @Output()\n  public selection: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the query string\n   */\n  @Output()\n  public query: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Subscribe to the querySubject and pass values to the query emitter\n   *\n   * NOTE: When an option is selected, the full selected value is piped through this stream\n   * somehow. Have not figured out why. Best guess is it's something due to the `matAutocomplete`\n   * directive. For now, we are filtering out anything that is not a string.\n   */\n  public ngAfterViewInit(): void {\n    // Take a stream of query changes\n    this.querySubject.pipe(\n      untilComponentDestroyed(this),\n      filter((v) => (typeof v === 'string') && v.length >= this.minimumCharacters),\n      // Debounce the query changes\n      debounceTime(this.debounceDelay),\n      // Only allow a query through if it is different from the previous query\n      distinctUntilChanged(),\n    ).subscribe((query: string) => {\n      this.query.next(query);\n    });\n\n    // Trigger a change detection cycle if the formControl value was changed dynamically\n    // istanbul ignore else\n    if (this.selectionsControl) {\n      this.selectionsControl.valueChanges.pipe(\n        untilComponentDestroyed(this),\n      ).subscribe((value: OptionType[]) => {\n        this.selectedOptions = value;\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n  }\n\n\n  /**\n   * Needed for untilComponentDestroyed\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Select an option\n   *\n   * @param event - The selection event from the underlying MatAutocomplete\n   */\n  public selectOption(event: TsAutocompleteSelectedEvent): void {\n    // The selected option\n    const selection: OptionType = event.option.value;\n\n    // Stop the flow if the selection already exists in the array\n    if (arrayContainsObject(selection, this.selectedOptions, this.comparatorFn)) {\n      // Set an error on the control to let the user know they chose a duplicate option\n      // istanbul ignore else\n      if (this.selectionsControl) {\n        this.setDuplicateError(this.selectionsControl, selection, this.uiFormatFn);\n      }\n\n      return;\n    }\n\n\n    // Add to the displayed selection chips\n    this.selectedOptions.push(selection);\n\n    // If supporting multiple selections, reset the input text value\n    if (this.multiple) {\n      this.resetSearch();\n    }\n\n    // Update the form control\n    // istanbul ignore else\n    if (this.selectionsControl && this.selectionsControl.setValue) {\n      this.selectionsControl.setValue(this.selectedOptions);\n    }\n\n    // Notify consumers about changes\n    this.optionSelected.emit(event.option.value);\n    this.selection.emit(this.selectedOptions);\n  }\n\n\n  /**\n   * Deselect an option\n   *\n   * @param option - The option to deselect\n   */\n  public deselectOption(option: OptionType): void {\n    // Find the key of the selection in the selectedOptions array\n    const index = this.selectedOptions.indexOf(option);\n\n    // If not found\n    if (index \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NavigationItemBase.html":{"url":"interfaces/NavigationItemBase.html","title":"interface - NavigationItemBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NavigationItemBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.component.ts\n        \n\n            \n                Description\n            \n            \n                Base allowed keys for an item passed to the TsNavigationComponent\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        alwaysHidden\n                                \n                                \n                                            Optional\n                                        isDisabled\n                                \n                                \n                                            Optional\n                                        isForAdmin\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysHidden\n                                    \n                                \n                                \n                                    \n                                        alwaysHidden:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Define if the item should only be allowed in the secondary navigation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDisabled\n                                    \n                                \n                                \n                                    \n                                        isDisabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define if the item is disabled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isForAdmin\n                                    \n                                \n                                \n                                    \n                                        isForAdmin:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define if the item is for admin functionality only\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value to use as the item text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'tsNavigation',\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TerminusUIModule.html":{"url":"modules/TerminusUIModule.html","title":"module - TerminusUIModule","body":"\n                   \n\n\n\n\n  Modules\n  TerminusUIModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TerminusUIModule\n\n\n\ncluster_TerminusUIModule_declarations\n\n\n\ncluster_TerminusUIModule_imports\n\n\n\ncluster_TerminusUIModule_exports\n\n\n\ncluster_TerminusUIModule_providers\n\n\n\n\nTsReactiveFormBaseComponent\n\nTsReactiveFormBaseComponent\n\n\n\nTerminusUIModule\n\nTerminusUIModule\n\nTerminusUIModule -->\n\nTsReactiveFormBaseComponent->TerminusUIModule\n\n\n\n\n\nTsAutocompleteModule \n\nTsAutocompleteModule \n\nTsAutocompleteModule  -->\n\nTerminusUIModule->TsAutocompleteModule \n\n\n\n\n\nTsAutofocusModule \n\nTsAutofocusModule \n\nTsAutofocusModule  -->\n\nTerminusUIModule->TsAutofocusModule \n\n\n\n\n\nTsButtonModule \n\nTsButtonModule \n\nTsButtonModule  -->\n\nTerminusUIModule->TsButtonModule \n\n\n\n\n\nTsCSVEntryModule \n\nTsCSVEntryModule \n\nTsCSVEntryModule  -->\n\nTerminusUIModule->TsCSVEntryModule \n\n\n\n\n\nTsCardModule \n\nTsCardModule \n\nTsCardModule  -->\n\nTerminusUIModule->TsCardModule \n\n\n\n\n\nTsChartModule \n\nTsChartModule \n\nTsChartModule  -->\n\nTerminusUIModule->TsChartModule \n\n\n\n\n\nTsCheckboxModule \n\nTsCheckboxModule \n\nTsCheckboxModule  -->\n\nTerminusUIModule->TsCheckboxModule \n\n\n\n\n\nTsConfirmationModule \n\nTsConfirmationModule \n\nTsConfirmationModule  -->\n\nTerminusUIModule->TsConfirmationModule \n\n\n\n\n\nTsCopyModule \n\nTsCopyModule \n\nTsCopyModule  -->\n\nTerminusUIModule->TsCopyModule \n\n\n\n\n\nTsDateRangeModule \n\nTsDateRangeModule \n\nTsDateRangeModule  -->\n\nTerminusUIModule->TsDateRangeModule \n\n\n\n\n\nTsFileUploadModule \n\nTsFileUploadModule \n\nTsFileUploadModule  -->\n\nTerminusUIModule->TsFileUploadModule \n\n\n\n\n\nTsIconButtonModule \n\nTsIconButtonModule \n\nTsIconButtonModule  -->\n\nTerminusUIModule->TsIconButtonModule \n\n\n\n\n\nTsIconModule \n\nTsIconModule \n\nTsIconModule  -->\n\nTerminusUIModule->TsIconModule \n\n\n\n\n\nTsInputModule \n\nTsInputModule \n\nTsInputModule  -->\n\nTerminusUIModule->TsInputModule \n\n\n\n\n\nTsLinkModule \n\nTsLinkModule \n\nTsLinkModule  -->\n\nTerminusUIModule->TsLinkModule \n\n\n\n\n\nTsLoadingOverlayModule \n\nTsLoadingOverlayModule \n\nTsLoadingOverlayModule  -->\n\nTerminusUIModule->TsLoadingOverlayModule \n\n\n\n\n\nTsLoginFormModule \n\nTsLoginFormModule \n\nTsLoginFormModule  -->\n\nTerminusUIModule->TsLoginFormModule \n\n\n\n\n\nTsMenuModule \n\nTsMenuModule \n\nTsMenuModule  -->\n\nTerminusUIModule->TsMenuModule \n\n\n\n\n\nTsNavigationModule \n\nTsNavigationModule \n\nTsNavigationModule  -->\n\nTerminusUIModule->TsNavigationModule \n\n\n\n\n\nTsPaginatorModule \n\nTsPaginatorModule \n\nTsPaginatorModule  -->\n\nTerminusUIModule->TsPaginatorModule \n\n\n\n\n\nTsRadioGroupModule \n\nTsRadioGroupModule \n\nTsRadioGroupModule  -->\n\nTerminusUIModule->TsRadioGroupModule \n\n\n\n\n\nTsScrollbarsModule \n\nTsScrollbarsModule \n\nTsScrollbarsModule  -->\n\nTerminusUIModule->TsScrollbarsModule \n\n\n\n\n\nTsSearchModule \n\nTsSearchModule \n\nTsSearchModule  -->\n\nTerminusUIModule->TsSearchModule \n\n\n\n\n\nTsSelectModule \n\nTsSelectModule \n\nTsSelectModule  -->\n\nTerminusUIModule->TsSelectModule \n\n\n\n\n\nTsSortModule \n\nTsSortModule \n\nTsSortModule  -->\n\nTerminusUIModule->TsSortModule \n\n\n\n\n\nTsSpacingModule \n\nTsSpacingModule \n\nTsSpacingModule  -->\n\nTerminusUIModule->TsSpacingModule \n\n\n\n\n\nTsTableModule \n\nTsTableModule \n\nTsTableModule  -->\n\nTerminusUIModule->TsTableModule \n\n\n\n\n\nTsToggleModule \n\nTsToggleModule \n\nTsToggleModule  -->\n\nTerminusUIModule->TsToggleModule \n\n\n\n\n\nTsTooltipModule \n\nTsTooltipModule \n\nTsTooltipModule  -->\n\nTerminusUIModule->TsTooltipModule \n\n\n\n\n\nTsValidationMessagesModule \n\nTsValidationMessagesModule \n\nTsValidationMessagesModule  -->\n\nTerminusUIModule->TsValidationMessagesModule \n\n\n\n\n\nTsAutocompleteModule\n\nTsAutocompleteModule\n\nTerminusUIModule -->\n\nTsAutocompleteModule->TerminusUIModule\n\n\n\n\n\nTsAutofocusModule\n\nTsAutofocusModule\n\nTerminusUIModule -->\n\nTsAutofocusModule->TerminusUIModule\n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTerminusUIModule -->\n\nTsButtonModule->TerminusUIModule\n\n\n\n\n\nTsCSVEntryModule\n\nTsCSVEntryModule\n\nTerminusUIModule -->\n\nTsCSVEntryModule->TerminusUIModule\n\n\n\n\n\nTsCardModule\n\nTsCardModule\n\nTerminusUIModule -->\n\nTsCardModule->TerminusUIModule\n\n\n\n\n\nTsChartModule\n\nTsChartModule\n\nTerminusUIModule -->\n\nTsChartModule->TerminusUIModule\n\n\n\n\n\nTsCheckboxModule\n\nTsCheckboxModule\n\nTerminusUIModule -->\n\nTsCheckboxModule->TerminusUIModule\n\n\n\n\n\nTsConfirmationModule\n\nTsConfirmationModule\n\nTerminusUIModule -->\n\nTsConfirmationModule->TerminusUIModule\n\n\n\n\n\nTsCopyModule\n\nTsCopyModule\n\nTerminusUIModule -->\n\nTsCopyModule->TerminusUIModule\n\n\n\n\n\nTsDateRangeModule\n\nTsDateRangeModule\n\nTerminusUIModule -->\n\nTsDateRangeModule->TerminusUIModule\n\n\n\n\n\nTsFileUploadModule\n\nTsFileUploadModule\n\nTerminusUIModule -->\n\nTsFileUploadModule->TerminusUIModule\n\n\n\n\n\nTsIconButtonModule\n\nTsIconButtonModule\n\nTerminusUIModule -->\n\nTsIconButtonModule->TerminusUIModule\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTerminusUIModule -->\n\nTsIconModule->TerminusUIModule\n\n\n\n\n\nTsInputModule\n\nTsInputModule\n\nTerminusUIModule -->\n\nTsInputModule->TerminusUIModule\n\n\n\n\n\nTsLinkModule\n\nTsLinkModule\n\nTerminusUIModule -->\n\nTsLinkModule->TerminusUIModule\n\n\n\n\n\nTsLoadingOverlayModule\n\nTsLoadingOverlayModule\n\nTerminusUIModule -->\n\nTsLoadingOverlayModule->TerminusUIModule\n\n\n\n\n\nTsLoginFormModule\n\nTsLoginFormModule\n\nTerminusUIModule -->\n\nTsLoginFormModule->TerminusUIModule\n\n\n\n\n\nTsMenuModule\n\nTsMenuModule\n\nTerminusUIModule -->\n\nTsMenuModule->TerminusUIModule\n\n\n\n\n\nTsNavigationModule\n\nTsNavigationModule\n\nTerminusUIModule -->\n\nTsNavigationModule->TerminusUIModule\n\n\n\n\n\nTsPaginatorModule\n\nTsPaginatorModule\n\nTerminusUIModule -->\n\nTsPaginatorModule->TerminusUIModule\n\n\n\n\n\nTsRadioGroupModule\n\nTsRadioGroupModule\n\nTerminusUIModule -->\n\nTsRadioGroupModule->TerminusUIModule\n\n\n\n\n\nTsScrollbarsModule\n\nTsScrollbarsModule\n\nTerminusUIModule -->\n\nTsScrollbarsModule->TerminusUIModule\n\n\n\n\n\nTsSearchModule\n\nTsSearchModule\n\nTerminusUIModule -->\n\nTsSearchModule->TerminusUIModule\n\n\n\n\n\nTsSelectModule\n\nTsSelectModule\n\nTerminusUIModule -->\n\nTsSelectModule->TerminusUIModule\n\n\n\n\n\nTsSortModule\n\nTsSortModule\n\nTerminusUIModule -->\n\nTsSortModule->TerminusUIModule\n\n\n\n\n\nTsSpacingModule\n\nTsSpacingModule\n\nTerminusUIModule -->\n\nTsSpacingModule->TerminusUIModule\n\n\n\n\n\nTsTableModule\n\nTsTableModule\n\nTerminusUIModule -->\n\nTsTableModule->TerminusUIModule\n\n\n\n\n\nTsToggleModule\n\nTsToggleModule\n\nTerminusUIModule -->\n\nTsToggleModule->TerminusUIModule\n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTerminusUIModule -->\n\nTsTooltipModule->TerminusUIModule\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTerminusUIModule -->\n\nTsValidationMessagesModule->TerminusUIModule\n\n\n\n\n\nTsValidatorsService\n\nTsValidatorsService\n\nTerminusUIModule -->\n\nTsValidatorsService->TerminusUIModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsReactiveFormBaseComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsValidatorsService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsAutocompleteModule\n                            \n                            \n                                    TsAutofocusModule\n                            \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsCSVEntryModule\n                            \n                            \n                                    TsCardModule\n                            \n                            \n                                    TsChartModule\n                            \n                            \n                                    TsCheckboxModule\n                            \n                            \n                                    TsConfirmationModule\n                            \n                            \n                                    TsCopyModule\n                            \n                            \n                                    TsDateRangeModule\n                            \n                            \n                                    TsFileUploadModule\n                            \n                            \n                                    TsIconButtonModule\n                            \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsInputModule\n                            \n                            \n                                    TsLinkModule\n                            \n                            \n                                    TsLoadingOverlayModule\n                            \n                            \n                                    TsLoginFormModule\n                            \n                            \n                                    TsMenuModule\n                            \n                            \n                                    TsNavigationModule\n                            \n                            \n                                    TsPaginatorModule\n                            \n                            \n                                    TsRadioGroupModule\n                            \n                            \n                                    TsScrollbarsModule\n                            \n                            \n                                    TsSearchModule\n                            \n                            \n                                    TsSelectModule\n                            \n                            \n                                    TsSortModule\n                            \n                            \n                                    TsSpacingModule\n                            \n                            \n                                    TsTableModule\n                            \n                            \n                                    TsToggleModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsAutocompleteModule\n                            \n                            \n                                    TsAutofocusModule\n                            \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsCSVEntryModule\n                            \n                            \n                                    TsCardModule\n                            \n                            \n                                    TsChartModule\n                            \n                            \n                                    TsCheckboxModule\n                            \n                            \n                                    TsConfirmationModule\n                            \n                            \n                                    TsCopyModule\n                            \n                            \n                                    TsDateRangeModule\n                            \n                            \n                                    TsFileUploadModule\n                            \n                            \n                                    TsIconButtonModule\n                            \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsInputModule\n                            \n                            \n                                    TsLinkModule\n                            \n                            \n                                    TsLoadingOverlayModule\n                            \n                            \n                                    TsLoginFormModule\n                            \n                            \n                                    TsMenuModule\n                            \n                            \n                                    TsNavigationModule\n                            \n                            \n                                    TsPaginatorModule\n                            \n                            \n                                    TsRadioGroupModule\n                            \n                            \n                                    TsScrollbarsModule\n                            \n                            \n                                    TsSearchModule\n                            \n                            \n                                    TsSelectModule\n                            \n                            \n                                    TsSortModule\n                            \n                            \n                                    TsSpacingModule\n                            \n                            \n                                    TsTableModule\n                            \n                            \n                                    TsToggleModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // Angular imports\nimport { NgModule } from '@angular/core';\n\n// Components\nimport { TsAutocompleteModule } from './autocomplete/autocomplete.module';\nimport { TsAutofocusModule } from './autofocus/autofocus.module';\nimport { TsButtonModule } from './button/button.module';\nimport { TsCardModule } from './card/card.module';\nimport { TsChartModule } from './chart/chart.module';\nimport { TsCheckboxModule } from './checkbox/checkbox.module';\nimport { TsConfirmationModule } from './confirmation/confirmation.module';\nimport { TsCopyModule } from './copy/copy.module';\nimport { TsCSVEntryModule } from './csv-entry/csv-entry.module';\nimport { TsDateRangeModule } from './date-range/date-range.module';\nimport { TsFileUploadModule } from './file-upload/file-upload.module';\nimport { TsIconButtonModule } from './icon-button/icon-button.module';\nimport { TsIconModule } from './icon/icon.module';\nimport { TsInputModule } from './input/input.module';\nimport { TsLinkModule } from './link/link.module';\nimport { TsLoadingOverlayModule } from './loading-overlay/loading-overlay.module';\nimport { TsLoginFormModule } from './login-form/login-form.module';\nimport { TsMenuModule } from './menu/menu.module';\nimport { TsNavigationModule } from './navigation/navigation.module';\nimport { TsPaginatorModule } from './paginator/paginator.module';\nimport { TsPipesModule } from './pipes/pipes.module';\nimport { TsRadioGroupModule } from './radio-group/radio-group.module';\nimport { TsScrollbarsModule } from './scrollbars/scrollbars.module';\nimport { TsSearchModule } from './search/search.module';\nimport { TsSelectModule } from './select/select.module';\nimport { TsSortModule } from './sort/sort.module';\nimport { TsSpacingModule } from './spacing/spacing.module';\nimport { TsTableModule } from './table/table.module';\nimport { TsToggleModule } from './toggle/toggle.module';\nimport { TsTooltipModule } from './tooltip/tooltip.module';\nimport { TsValidationMessagesModule } from './validation-messages/validation-messages.module';\n// INJECT: UI component to UI module\n// NB! The above line is required for our yeoman generator and should not be changed.\n\nimport { TsValidatorsService } from './validators/validators.service';\nimport { TsReactiveFormBaseComponent } from './utilities/reactive-form-base.component';\n\n@NgModule({\n  imports: [\n    TsAutocompleteModule,\n    TsAutofocusModule,\n    TsButtonModule,\n    TsCardModule,\n    TsChartModule,\n    TsCheckboxModule,\n    TsConfirmationModule,\n    TsCopyModule,\n    TsCSVEntryModule,\n    TsDateRangeModule,\n    TsFileUploadModule,\n    TsIconButtonModule,\n    TsIconModule,\n    TsInputModule,\n    TsLinkModule,\n    TsLoadingOverlayModule,\n    TsLoginFormModule,\n    TsMenuModule,\n    TsNavigationModule,\n    TsPaginatorModule,\n    TsPipesModule,\n    TsRadioGroupModule,\n    TsScrollbarsModule,\n    TsSearchModule,\n    TsSelectModule,\n    TsSortModule,\n    TsSpacingModule,\n    TsTableModule,\n    TsToggleModule,\n    TsTooltipModule,\n    TsValidationMessagesModule,\n    // INJECT: Add UI component module to imports\n    // NB! The above line is required for our yeoman generator and should not be changed.\n  ],\n  declarations: [\n    TsReactiveFormBaseComponent,\n  ],\n  providers: [\n    TsValidatorsService,\n  ],\n  exports: [\n    TsAutocompleteModule,\n    TsAutofocusModule,\n    TsButtonModule,\n    TsCardModule,\n    TsChartModule,\n    TsCheckboxModule,\n    TsConfirmationModule,\n    TsCopyModule,\n    TsCSVEntryModule,\n    TsDateRangeModule,\n    TsFileUploadModule,\n    TsIconButtonModule,\n    TsIconModule,\n    TsInputModule,\n    TsLinkModule,\n    TsLoadingOverlayModule,\n    TsLoginFormModule,\n    TsMenuModule,\n    TsNavigationModule,\n    TsPaginatorModule,\n    TsPipesModule,\n    TsRadioGroupModule,\n    TsScrollbarsModule,\n    TsSearchModule,\n    TsSelectModule,\n    TsSortModule,\n    TsSpacingModule,\n    TsTableModule,\n    TsToggleModule,\n    TsTooltipModule,\n    TsValidationMessagesModule,\n    // INJECT: Add UI component to module exports\n    // NB! The above line is required for our yeoman generator and should not be changed.\n  ],\n})\nexport class TerminusUIModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TsAmChartsService.html":{"url":"injectables/TsAmChartsService.html","title":"injectable - TsAmChartsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TsAmChartsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/amcharts.service.ts\n        \n\n            \n                Description\n            \n            \n                Expose amCharts via a service\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                amCharts\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(amCharts: TsAmChartsToken)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/chart/amcharts.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amCharts\n                                                  \n                                                        \n                                                                    TsAmChartsToken\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            amCharts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        amCharts:     TsAmChartsToken\n\n                    \n                \n                    \n                        \n                            Type :     TsAmChartsToken\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart/amcharts.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InjectionToken,\n} from '@angular/core';\n\n\nexport interface TsAmChartsToken {\n  core: any;\n  charts: any;\n  maps?: any;\n  themes?: any[];\n}\n\n/**\n * Create an injection token that the consumer can override with their version of Highcharts\n */\nexport const TS_AMCHARTS_TOKEN: InjectionToken = new InjectionToken('amCharts');\n\n\n/**\n * Expose amCharts via a service\n */\n@Injectable()\nexport class TsAmChartsService {\n\n  constructor(\n    @Inject(TS_AMCHARTS_TOKEN) public amCharts: TsAmChartsToken,\n  ) {\n    // istanbul ignore else\n    if (amCharts && amCharts.themes && amCharts.themes.length > 0) {\n      for (const theme of amCharts.themes) {\n        // istanbul ignore else\n        if (theme) {\n          amCharts.core.useTheme(theme);\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsAmChartsToken.html":{"url":"interfaces/TsAmChartsToken.html","title":"interface - TsAmChartsToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsAmChartsToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/chart/amcharts.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        charts\n                                \n                                \n                                        core\n                                \n                                \n                                            Optional\n                                        maps\n                                \n                                \n                                            Optional\n                                        themes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        charts\n                                    \n                                \n                                \n                                    \n                                        charts:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        core\n                                    \n                                \n                                \n                                    \n                                        core:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maps\n                                    \n                                \n                                \n                                    \n                                        maps:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        themes\n                                    \n                                \n                                \n                                    \n                                        themes:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InjectionToken,\n} from '@angular/core';\n\n\nexport interface TsAmChartsToken {\n  core: any;\n  charts: any;\n  maps?: any;\n  themes?: any[];\n}\n\n/**\n * Create an injection token that the consumer can override with their version of Highcharts\n */\nexport const TS_AMCHARTS_TOKEN: InjectionToken = new InjectionToken('amCharts');\n\n\n/**\n * Expose amCharts via a service\n */\n@Injectable()\nexport class TsAmChartsService {\n\n  constructor(\n    @Inject(TS_AMCHARTS_TOKEN) public amCharts: TsAmChartsToken,\n  ) {\n    // istanbul ignore else\n    if (amCharts && amCharts.themes && amCharts.themes.length > 0) {\n      for (const theme of amCharts.themes) {\n        // istanbul ignore else\n        if (theme) {\n          amCharts.core.useTheme(theme);\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsAutocompleteModule.html":{"url":"modules/TsAutocompleteModule.html","title":"module - TsAutocompleteModule","body":"\n                   \n\n\n\n\n  Modules\n  TsAutocompleteModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsAutocompleteModule\n\n\n\ncluster_TsAutocompleteModule_declarations\n\n\n\ncluster_TsAutocompleteModule_imports\n\n\n\ncluster_TsAutocompleteModule_exports\n\n\n\n\nTsAutocompleteComponent\n\nTsAutocompleteComponent\n\n\n\nTsAutocompleteModule\n\nTsAutocompleteModule\n\nTsAutocompleteModule -->\n\nTsAutocompleteComponent->TsAutocompleteModule\n\n\n\n\n\nTsAutocompleteComponent \n\nTsAutocompleteComponent \n\nTsAutocompleteComponent  -->\n\nTsAutocompleteModule->TsAutocompleteComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsAutocompleteModule -->\n\nTsIconModule->TsAutocompleteModule\n\n\n\n\n\nTsInputModule\n\nTsInputModule\n\nTsAutocompleteModule -->\n\nTsInputModule->TsAutocompleteModule\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsAutocompleteModule -->\n\nTsValidationMessagesModule->TsAutocompleteModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/autocomplete/autocomplete.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsAutocompleteComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsInputModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsAutocompleteComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { TsValidationMessagesModule } from './../validation-messages/validation-messages.module';\nimport { TsInputModule } from './../input/input.module';\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsAutocompleteComponent } from './autocomplete.component';\n\nexport * from './autocomplete.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatChipsModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    TsIconModule,\n    TsValidationMessagesModule,\n    TsInputModule,\n  ],\n  declarations: [\n    TsAutocompleteComponent,\n  ],\n  exports: [\n    TsAutocompleteComponent,\n  ],\n})\nexport class TsAutocompleteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsAutocompleteSelectedEvent.html":{"url":"classes/TsAutocompleteSelectedEvent.html","title":"class - TsAutocompleteSelectedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsAutocompleteSelectedEvent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/autocomplete/autocomplete.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    MatAutocompleteSelectedEvent\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        Autocomplete\n\n\n\n\nTable of Contents\n\nBasic usage with a FormControl\nAllow multiple selections\nSeed selected values\nShow the progress indicator\nCustomize how the selected value is displayed\nEvent driven\nShow a 'no results' validation error\nMinimum required character count\n\n\nBasic usage with a FormControl\na) Pass an array of available options in. These are the options displayed to the user in the\n   dropdown.\nb) Create a local reference to the autocomplete component.\n\nc) Subscribe to the query events coming from the autocomplete. This is a stream of query strings\nentered by the user. This stream is debounced and de-duped by default.\ninterface OptionType {\n  id: string;\n  login: string;\n  [key: string]: any;\n}\n\n// Create a reference to the autocomplete and pass in a typing for the options\n@ViewChild('auto')\npublic auto: TsAutocompleteComponent;\n\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      // Only hit the API if a query was sent in\n      if (term) {\n        // Start the progress indicator\n        this.inProgress = true;\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              // Stop the progress indicator\n              this.inProgress = false;\n              return response['items'];\n            }),\n          )\n      } else {\n        // If no query was passed in, reset the search results and stop the progress indicator\n        this.inProgress = false;\n        return of([]);\n      }\n    }),\n  )\n;\nChange the debounce delay by setting debounceDelay.\n\nAllow multiple selections\nTo allow multiple selections, pass in a comparator function. This function should match the type {@link TsAutocompleteComparatorFn} which has the basic signature of (v: any) => string.\nThis comparator function will be used by the autocomplete to determine if a selection is a\nduplicate. It is also used as the trackBy function when looping through options.\nSeed selected values\nTo seed initial values, pass the array of selections to initialSelections:\nShow the progress indicator\nShow a progress indicator by toggling the showProgress value:\nthis.isInProgress = true;Customize how the selected value is displayed\nThe UI display of selected options can be changed by passing in a custom displayWith function.\nThis function should match {@link TsAutocompleteFormatterFn} which has the signature of (v) =>\nstring;\n\n v.login\"\n>Event driven\nIf a FormControl isn't needed, you can subscribe to events directly:\nadded(chip) {\n  console.log('Selection made!', chip);\n}\n\nremoved(chip) {\n  console.log('Selection removed!', chip);\n}\n\nchange(selections) {\n  console.log('Selection was changed!', selections);\n}Show a 'no results' validation error\nIf no results are found, set a validation error on the FormControl:\nthis.users$ = this.auto\n  .query\n  .pipe(\n    startWith(null),\n    switchMap((term) => {\n      if (term) {\n        // Hit the API with the query\n        return this.http.get(`${GITHUB_API_ENDPOINT}/search/users?q=${term}`)\n          .pipe(\n            map((response: Response) => {\n              const items = response['items'];\n\n              // If no results are found, notify the user via a validation message\n              if (items.length Minimum required character count\nBy default, two characters must be entered before a query is emitted. This value can be overridden:\n\n    \n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  isDevMode,\n  OnDestroy,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormControl,\n  ValidationErrors,\n} from '@angular/forms';\nimport {\n  MatAutocomplete,\n  MatAutocompleteSelectedEvent,\n  MatAutocompleteTrigger,\n} from '@angular/material/autocomplete';\nimport { debounceTime, distinctUntilChanged, filter } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n  coerceArray,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport {\n  arrayContainsObject,\n  isFunction,\n  untilComponentDestroyed,\n} from '@terminus/ngx-tools';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\nexport interface KeyboardEvent {\n  [key: string]: any;\n}\n\nexport interface MouseEvent {\n  [key: string]: any;\n}\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} formatter function\n */\nexport type TsAutocompleteFormatterFn = (value: any) => string;\n\n\n/**\n * Define a type for allowed {@link TsAutocompleteComponent} comparator function\n */\nexport type TsAutocompleteComparatorFn = (value: any) => string;\n\n\nexport class TsAutocompleteSelectedEvent extends MatAutocompleteSelectedEvent {}\n\n\n/**\n * The autocomplete UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-autocomplete`: The primary container\n * - `qa-autocomplete-input`: The input element\n * - `qa-autocomplete-spinner`: The progress indicator\n * - `qa-autocomplete-chip`: An individual selection 'chip'\n * - `qa-autocomplete-options`: The container for the list of options\n * - `qa-autocomplete-option`: An individual option from the list\n * - `qa-autocomplete-hint`: The input hint\n * - `qa-autocomplete-validation-messages`: The container for validation messages\n *\n * @example\n *  v.name\"\n *              hint=\"Begin typing to search..\"\n *              label=\"Select options:\"\n *              multiple=\"(v) => v.id\"\n *              name=\"product selections\"\n *              options=\"[{}, {}, ...]\"\n *              selectionsControl=\"myForm.get('myControl')\"\n *              [showProgress]=\"inProgress\"\n *              theme=\"primary\"\n *              initialSelections=\"[{}]\"\n *              (optionSelected)=\"mySelected($event)\"\n *              (optionRemoved)=\"myRemoved($event)\"\n *              (selection)=\"mySelection($event)\"\n *              (query)=\"myQuery($event)\"\n * >\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss'],\n  host: {\n    class: 'ts-autocomplete',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsAutocomplete',\n})\nexport class TsAutocompleteComponent implements AfterViewInit, OnDestroy {\n  /**\n   * Management of the query string\n   */\n  public querySubject: BehaviorSubject = new BehaviorSubject('');\n\n  /**\n   * Store the search query\n   */\n  public searchQuery!: string;\n\n  /**\n   * Define if the chips/selections should be selectable\n   */\n  public selectableChips: boolean = false;\n\n  /**\n   * Store the selected options\n   */\n  public selectedOptions: OptionType[] = [];\n\n  /**\n   * Store the formatter function for the UI display\n   */\n  private uiFormatFn!: (value: OptionType) => string;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocomplete')\n  public autocomplete!: MatAutocomplete;\n\n  /**\n   * Provide access to the input element\n   */\n  @ViewChild('autocompleteTrigger')\n  set autocompleteTrigger(value: MatAutocompleteTrigger) {\n    this.trigger = value;\n  }\n  get autocompleteTrigger(): MatAutocompleteTrigger {\n    return this.trigger;\n  }\n  private trigger!: MatAutocompleteTrigger;\n\n  /**\n   * Provide direct access to the input\n   */\n  @ViewChild('input')\n  public input!: ElementRef;\n\n  /**\n   * Define a debounce delay for the query\n   */\n  @Input()\n  public set debounceDelay(value: number) {\n    this._debounceDelay = coerceNumberProperty(value);\n  }\n  public get debounceDelay(): number {\n    return this._debounceDelay;\n  }\n  private _debounceDelay: number = 200;\n\n  /**\n   * A function to output the UI text from the selected item\n   *\n   * When undefined the full selection object will be used as the display value\n   */\n  @Input()\n  public set displayWith(value: TsAutocompleteFormatterFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this.uiFormatFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'displayWith' must be passed a function.`);\n      }\n    }\n  }\n  public get displayWith(): TsAutocompleteFormatterFn {\n    return this.uiFormatFn;\n  }\n\n  /**\n   * Define a hint for the input\n   */\n  // FIXME: Fix potential overlap of hint and error messages\n  @Input()\n  public hint: string | undefined;\n\n  /**\n   * Define the placeholder/label\n   */\n  @Input()\n  public label: string | undefined;\n\n  /**\n   * Define a minimum character count for queries\n   */\n  @Input()\n  public set minimumCharacters(value: number) {\n    this._minimumCharacters = coerceNumberProperty(value);\n  }\n  public get minimumCharacters(): number {\n    return this._minimumCharacters;\n  }\n  private _minimumCharacters: number = 2;\n\n  /**\n   * Define if multiple selections are allowed by passing in a comparator function\n   */\n  @Input()\n  public set multiple(v: TsAutocompleteComparatorFn) {\n    if (!v) {\n      return;\n    }\n\n    if (isFunction(v)) {\n      this.comparatorFn = v;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsAutocompleteComponent: 'multiple' must be passed a 'TsAutocompleteComparatorFn' function.`);\n      }\n    }\n  }\n  public get multiple(): TsAutocompleteComparatorFn {\n    return this.comparatorFn;\n  }\n  private comparatorFn!: TsAutocompleteComparatorFn;\n\n  /**\n   * Define the name attribute value\n   */\n  @Input()\n  public name: string | undefined;\n\n  /**\n   * The list of options to display in the drop down\n   */\n  @Input()\n  public options!: OptionType[];\n\n  /**\n   * Define the form control to save selections to\n   */\n  @Input()\n  public set selectionsControl(value: FormControl) {\n    if (!value) {\n      return;\n    }\n\n    this._selectionsControl = value;\n    /*\n     *console.log('set selectionsControl: ', this.selectionsControl);\n     */\n  }\n  public get selectionsControl(): FormControl {\n    return this._selectionsControl;\n  }\n  private _selectionsControl: FormControl = new FormControl();\n\n  /**\n   * Define if the progress spinner should be active\n   */\n  @Input()\n  public showProgress: boolean = false;\n\n  /**\n   * Define the component theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define items that should be selected when the component loads\n   */\n  @Input()\n  public set initialSelections(selections: OptionType[]) {\n    // istanbul ignore else\n    if (selections) {\n      // Seed the array\n      this.selectedOptions = coerceArray(selections.slice());\n\n      // istanbul ignore else\n      if (this.selectionsControl && this.selectionsControl.setValue) {\n        // Seed the formControl\n        this.selectionsControl.setValue(this.selectedOptions);\n      }\n    }\n  }\n\n  /**\n   * Emit the selected chip\n   */\n  @Output()\n  public optionSelected: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the removed chip\n   */\n  @Output()\n  public optionRemoved: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the current selection\n   */\n  @Output()\n  public selection: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit the query string\n   */\n  @Output()\n  public query: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Subscribe to the querySubject and pass values to the query emitter\n   *\n   * NOTE: When an option is selected, the full selected value is piped through this stream\n   * somehow. Have not figured out why. Best guess is it's something due to the `matAutocomplete`\n   * directive. For now, we are filtering out anything that is not a string.\n   */\n  public ngAfterViewInit(): void {\n    // Take a stream of query changes\n    this.querySubject.pipe(\n      untilComponentDestroyed(this),\n      filter((v) => (typeof v === 'string') && v.length >= this.minimumCharacters),\n      // Debounce the query changes\n      debounceTime(this.debounceDelay),\n      // Only allow a query through if it is different from the previous query\n      distinctUntilChanged(),\n    ).subscribe((query: string) => {\n      this.query.next(query);\n    });\n\n    // Trigger a change detection cycle if the formControl value was changed dynamically\n    // istanbul ignore else\n    if (this.selectionsControl) {\n      this.selectionsControl.valueChanges.pipe(\n        untilComponentDestroyed(this),\n      ).subscribe((value: OptionType[]) => {\n        this.selectedOptions = value;\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n  }\n\n\n  /**\n   * Needed for untilComponentDestroyed\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Select an option\n   *\n   * @param event - The selection event from the underlying MatAutocomplete\n   */\n  public selectOption(event: TsAutocompleteSelectedEvent): void {\n    // The selected option\n    const selection: OptionType = event.option.value;\n\n    // Stop the flow if the selection already exists in the array\n    if (arrayContainsObject(selection, this.selectedOptions, this.comparatorFn)) {\n      // Set an error on the control to let the user know they chose a duplicate option\n      // istanbul ignore else\n      if (this.selectionsControl) {\n        this.setDuplicateError(this.selectionsControl, selection, this.uiFormatFn);\n      }\n\n      return;\n    }\n\n\n    // Add to the displayed selection chips\n    this.selectedOptions.push(selection);\n\n    // If supporting multiple selections, reset the input text value\n    if (this.multiple) {\n      this.resetSearch();\n    }\n\n    // Update the form control\n    // istanbul ignore else\n    if (this.selectionsControl && this.selectionsControl.setValue) {\n      this.selectionsControl.setValue(this.selectedOptions);\n    }\n\n    // Notify consumers about changes\n    this.optionSelected.emit(event.option.value);\n    this.selection.emit(this.selectedOptions);\n  }\n\n\n  /**\n   * Deselect an option\n   *\n   * @param option - The option to deselect\n   */\n  public deselectOption(option: OptionType): void {\n    // Find the key of the selection in the selectedOptions array\n    const index = this.selectedOptions.indexOf(option);\n\n    // If not found\n    if (index \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsAutofocusDirective.html":{"url":"directives/TsAutofocusDirective.html","title":"directive - TsAutofocusDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsAutofocusDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/autofocus/autofocus.directive.ts\n        \n\n            \n                Description\n            \n            \n                Autofocus any focusable element on-load.\nPassing any truthy value OR an empty string will enable the autofocus.\n\n            \n\n            \n                Implements\n            \n            \n                        AfterViewInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \nClick Me\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsAutofocus]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                shouldFocus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tsAutofocus\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/autofocus/autofocus.directive.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        tsAutofocus\n                    \n                    \n                        Define if the element should be focused after initialization\n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/autofocus/autofocus.directive.ts:35\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/autofocus/autofocus.directive.ts:48\n                            \n                        \n\n\n                \n                    \n                            Focus the input after the view has initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            shouldFocus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shouldFocus:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/autofocus/autofocus.directive.ts:29\n                            \n                        \n\n                \n                    \n                        Store the shouldFocus value\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tsAutofocus\n                    \n                \n\n\n                \n                    \n                        settsAutofocus(value: any)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/autofocus/autofocus.directive.ts:35\n                                \n                            \n                    \n                        \n                                Define if the element should be focused after initialization\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n    \n        \n\nTable of Contents\n\nBasic usage\nBinding\n\n\nBasic usage\nThe tsAutofocus directive can be used on any element that has a .focus() method. This includes\ninputs, select menus, textarea, buttons, links, iframes and any element with a defined tabindex\nabove -1.\nAdd the directive to a focusable element:\nBinding\nPassing in any value except false, 'false', null, or undefined will enable the directive.\n\n\n\n\n\n\n\n\n    \n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  AfterViewInit,\n  isDevMode,\n  ChangeDetectorRef,\n} from '@angular/core';\n\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\n\n/**\n * Autofocus any focusable element on-load.\n *\n * Passing any truthy value OR an empty string will enable the autofocus.\n *\n * @example\n * \n * Click Me\n */\n@Directive({\n  selector: '[tsAutofocus]',\n})\nexport class TsAutofocusDirective implements AfterViewInit {\n  /**\n   * Store the shouldFocus value\n   */\n  private shouldFocus!: boolean;\n\n  /**\n   * Define if the element should be focused after initialization\n   */\n  @Input()\n  public set tsAutofocus(value: any) {\n    this.shouldFocus = coerceBooleanProperty(value);\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Focus the input after the view has initialized\n   */\n  public ngAfterViewInit(): void {\n    if (this.shouldFocus) {\n      const el = this.elementRef.nativeElement;\n\n      if (el.focus) {\n        el.focus();\n        this.changeDetectorRef.detectChanges();\n      } else {\n        // istanbul ignore else\n        if (isDevMode()) {\n          throw Error(`TsAutofocusDirective must be used on an element that has a .focus() method.`);\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsAutofocusModule.html":{"url":"modules/TsAutofocusModule.html","title":"module - TsAutofocusModule","body":"\n                   \n\n\n\n\n  Modules\n  TsAutofocusModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsAutofocusModule\n\n\n\ncluster_TsAutofocusModule_declarations\n\n\n\ncluster_TsAutofocusModule_exports\n\n\n\n\nTsAutofocusDirective\n\nTsAutofocusDirective\n\n\n\nTsAutofocusModule\n\nTsAutofocusModule\n\nTsAutofocusModule -->\n\nTsAutofocusDirective->TsAutofocusModule\n\n\n\n\n\nTsAutofocusDirective \n\nTsAutofocusDirective \n\nTsAutofocusDirective  -->\n\nTsAutofocusModule->TsAutofocusDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/autofocus/autofocus.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsAutofocusDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsAutofocusDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsAutofocusDirective } from './autofocus.directive';\n\nexport * from './autofocus.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TsAutofocusDirective,\n  ],\n  exports: [\n    TsAutofocusDirective,\n  ],\n})\nexport class TsAutofocusModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsButtonModule.html":{"url":"modules/TsButtonModule.html","title":"module - TsButtonModule","body":"\n                   \n\n\n\n\n  Modules\n  TsButtonModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsButtonModule\n\n\n\ncluster_TsButtonModule_declarations\n\n\n\ncluster_TsButtonModule_imports\n\n\n\ncluster_TsButtonModule_exports\n\n\n\n\nTsButtonComponent\n\nTsButtonComponent\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsButtonModule -->\n\nTsButtonComponent->TsButtonModule\n\n\n\n\n\nTsButtonComponent \n\nTsButtonComponent \n\nTsButtonComponent  -->\n\nTsButtonModule->TsButtonComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsButtonModule -->\n\nTsIconModule->TsButtonModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/button/button.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsButtonComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsButtonComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { TsWindowService } from '@terminus/ngx-tools';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsButtonComponent } from './button.component';\n\nexport * from './button.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    TsIconModule,\n  ],\n  providers: [\n    TsWindowService,\n  ],\n  exports: [\n    TsButtonComponent,\n  ],\n  declarations: [\n    TsButtonComponent,\n  ],\n})\nexport class TsButtonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsCSVEntryModule.html":{"url":"modules/TsCSVEntryModule.html","title":"module - TsCSVEntryModule","body":"\n                   \n\n\n\n\n  Modules\n  TsCSVEntryModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsCSVEntryModule\n\n\n\ncluster_TsCSVEntryModule_declarations\n\n\n\ncluster_TsCSVEntryModule_imports\n\n\n\ncluster_TsCSVEntryModule_exports\n\n\n\n\nTsCSVEntryComponent\n\nTsCSVEntryComponent\n\n\n\nTsCSVEntryModule\n\nTsCSVEntryModule\n\nTsCSVEntryModule -->\n\nTsCSVEntryComponent->TsCSVEntryModule\n\n\n\n\n\nTsCSVEntryComponent \n\nTsCSVEntryComponent \n\nTsCSVEntryComponent  -->\n\nTsCSVEntryModule->TsCSVEntryComponent \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsCSVEntryModule -->\n\nTsButtonModule->TsCSVEntryModule\n\n\n\n\n\nTsIconButtonModule\n\nTsIconButtonModule\n\nTsCSVEntryModule -->\n\nTsIconButtonModule->TsCSVEntryModule\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsCSVEntryModule -->\n\nTsIconModule->TsCSVEntryModule\n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTsCSVEntryModule -->\n\nTsTooltipModule->TsCSVEntryModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/csv-entry/csv-entry.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsCSVEntryComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsIconButtonModule\n                            \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsCSVEntryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { TsButtonModule } from './../button/button.module';\nimport { TsCSVEntryComponent } from './csv-entry.component';\nimport { TsIconButtonModule } from './../icon-button/icon-button.module';\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsTooltipModule } from './../tooltip/tooltip.module';\n\nexport * from './csv-entry.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    TsButtonModule,\n    TsIconButtonModule,\n    TsIconModule,\n    TsTooltipModule,\n  ],\n  declarations: [\n    TsCSVEntryComponent,\n  ],\n  exports: [\n    TsCSVEntryComponent,\n  ],\n})\nexport class TsCSVEntryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsCSVEntryRecord.html":{"url":"interfaces/TsCSVEntryRecord.html","title":"interface - TsCSVEntryRecord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsCSVEntryRecord\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/csv-entry/csv-entry.component.ts\n        \n\n            \n                Description\n            \n            \n                The structure for an individual row\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        columns\n                                \n                                \n                                        recordId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                    \n                                \n                                \n                                    \n                                        columns:     (string | null)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (string | null)[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recordId\n                                    \n                                \n                                \n                                    \n                                        recordId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        csv-entry\n\n\n\n\nTable of Contents\n\nBasic usage\nColumn Count\nRow count\nMax rows\n\n\nColumn validation\nStatic Column Headers\n\n\nBasic usage\nThe most basic implementation only needs the HTML and a single method. Each time the CSV table is updated, a new File Blob is generated and\nemitted.\n\nmyFunc(blob: Blob) {\n  ...\n}Column Count\nControl the default column count via an Input:\n\n  \n\nNOTE: Column count does not restrict what is pasted into the table.\n\nRow count\nControl the default number of rows via an Input:\n\n  \n\nNOTE: Row count does not restrict what is pasted into the table.\n\nMax rows\nControl the maximum number of rows a table will allow\n\nIf the user attempts to paste or manually add more rows than are allowed, a validation message will appear below the table.\nColumn validation\n\nNOTE: Currently, custom validation messaging is only supported for the URL validator. More will be added as needs arise.\n\nPass in an array of validators matching the column count.\nmyValidators = [null, this.validatorsService.url(), null, null];\nThis example would add the URL validation to the second column only.\nStatic Column Headers\nIf there are certain headers that must be available, these can be set via an input:\n\nSetting static column headers will set the header cells to readonly. This will still allow keyboard navigation but will not allow the user\nto change the contents of the set header cells.\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  coerceBooleanProperty,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport {\n  untilComponentDestroyed,\n  TsDocumentService,\n} from '@terminus/ngx-tools';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n} from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { TS_SPACING } from './../spacing/spacing.constant';\n\n\n\n/**\n * The structure for an individual row\n */\nexport interface TsCSVEntryRecord {\n  recordId: number;\n  columns: (string | null)[];\n}\n\n/**\n * The structure for the form\n */\nexport interface TsCSVFormContents {\n  headers: string[];\n  records: TsCSVEntryRecord[];\n}\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * This is the csv-entry UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-csv-entry`: The primary container\n * - `qa-csv-entry-info`: Container for row/column count\n * - `qa-csv-entry-row`: A row\n * - `qa-csv-entry-cell`: A body cell\n * - `qa-csv-entry-header-cell`: A header cell\n * - `qa-csv-entry-header-row`: Container for a header row\n * - `qa-csv-entry-delete`: A delete button\n * - `qa-csv-entry`: Placed on the primary container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-csv-entry',\n  templateUrl: './csv-entry.component.html',\n  styleUrls: ['./csv-entry.component.scss'],\n  host: {\n    class: 'ts-csv-entry',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsCSVEntry',\n})\nexport class TsCSVEntryComponent implements OnInit, OnDestroy {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-csv-entry-${nextUniqueId++}`;\n\n  /**\n   * Define the default number of rows\n   */\n  public defaultRowCount = 4;\n\n  /**\n   * Define the default number of columns\n   */\n  public defaultColumnCount = 2;\n\n  /**\n   * Define the default for the maximum allowed rows\n   */\n  public defaultMaxRows = 2000;\n\n  /**\n   * Expose the flexbox layout gap\n   */\n  public layoutGap: string = TS_SPACING.small[0];\n\n  /**\n   * Expose a validation message if too many rows are added\n   */\n  public tooManyRowsMessage: string | null = null;\n\n  /**\n   * Define the number of validation messages that can be shown at once\n   */\n  public maximumValidationMessages = 6;\n\n  /**\n   * Store records (rows)\n   */\n  public records: TsCSVEntryRecord[] = [];\n\n  /**\n   * Initialize the records form with an empty array\n   */\n  public recordsForm: FormGroup = this.formBuilder.group({\n    headers: this.formBuilder.array([]),\n    records: this.formBuilder.array([]),\n  });\n\n  /*\n   *public validationMessages: string[] | undefined;\n   */\n  public allErrors: {[key: string]: any}[] | null = null;\n\n  /**\n   * Get header cells as a form array\n   */\n  public get headerCells(): FormArray {\n    return this.recordsForm.get('headers') as FormArray;\n  }\n\n  /**\n   * Get rows as a form array\n   */\n  public get rows(): FormArray {\n    return this.recordsForm.get('records') as FormArray;\n  }\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  public set id(value: string) {\n    this._id = value || this._uid;\n  }\n  public get id(): string {\n    return this._id;\n  }\n  protected _id!: string;\n\n  /**\n   * Set the maximum number of allowed rows\n   */\n  @Input()\n  public set maxRows(value: number) {\n    this._maxRows = coerceNumberProperty(value, this.defaultMaxRows);\n  }\n  public get maxRows(): number {\n    return this._maxRows;\n  }\n  private _maxRows: number = this.defaultMaxRows;\n\n  /**\n   * Set the number of columns\n   */\n  @Input()\n  public set columnCount(value: number) {\n    this._columnCount = coerceNumberProperty(value, this.defaultColumnCount);\n  }\n  public get columnCount(): number {\n    return this._columnCount;\n  }\n  private _columnCount: number = this.defaultColumnCount;\n\n  /**\n   * Define the number of rows\n   */\n  @Input()\n  public set rowCount(value: number) {\n    this._rowCount = coerceNumberProperty(value, this.defaultRowCount);\n  }\n  public get rowCount(): number {\n    return this._rowCount;\n  }\n  private _rowCount: number = this.defaultRowCount;\n\n  /**\n   * Allow static headers to be set\n   */\n  @Input()\n  public set columnHeaders(value: string[] | undefined) {\n    this._columnHeaders = value;\n    this.clearHeaderCells();\n    this.addHeaders(this.columnCount, this.columnHeaders);\n  }\n  public get columnHeaders(): string[] | undefined {\n    return this._columnHeaders;\n  }\n  private _columnHeaders: string[] | undefined;\n\n  /**\n   * Define any column validators\n   */\n  @Input()\n  public set columnValidators(value: ValidatorFn | null[]) {\n    if (!value) {\n      return;\n    }\n\n    this._columnValidators = value;\n  }\n  public get columnValidators(): ValidatorFn | null[] {\n    return this._columnValidators;\n  }\n  private _columnValidators: ValidatorFn | null[] = [];\n\n  /**\n   * Emit the built file blob\n   */\n  @Output()\n  public blobGenerated: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private changeDetectorRef: ChangeDetectorRef,\n    private documentService: TsDocumentService,\n  ) {\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Initialize empty rows\n   */\n  public ngOnInit(): void {\n    this.addRows(this.rowCount, this.columnCount);\n    this.addHeaders(this.columnCount, this.columnHeaders);\n\n    this.recordsForm.valueChanges.pipe(\n      // Let the form values 'settle' before we emit anything\n      debounceTime(1),\n      untilComponentDestroyed(this),\n    ).subscribe((v) => {\n      const blob = this.generateBlob(v);\n      this.blobGenerated.emit(blob);\n    });\n  }\n\n\n  /**\n   * Needed for `untilComponentDestroyed`\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Add rows to the form\n   *\n   * @param rowCount - The number of rows to add\n   * @param columnCount - The number of columns each row should have\n   * @param content - The column content\n   */\n  public addRows(rowCount = 1, columnCount: number = this.columnCount, content?: string[][], index?: number): void {\n    if ((this.rows.length + rowCount) > this.maxRows) {\n      const rowsThatDontFit = (rowCount === 1 ? 2 : rowCount) - ((this.rows.length + rowCount) - this.maxRows);\n      this.tooManyRowsMessage =\n        `Adding ${rowsThatDontFit} row${rowsThatDontFit > 1 ? 's' : ''} would exceed the maximum rows allowed (${this.maxRows}).`;\n      return;\n    }\n\n    if (this.tooManyRowsMessage) {\n      this.tooManyRowsMessage = null;\n    }\n\n    for (let i = 0; i = 0)) {\n        this.rows.insert(indexToInjectAt, createdRow);\n      } else {\n        this.rows.push(createdRow);\n      }\n    }\n  }\n\n\n  /**\n   * Get the columns of a row\n   *\n   * @param row - The row\n   * @return The array of columns\n   */\n  public getColumns(row: FormGroup): FormArray {\n    return row.get('columns') as FormArray;\n  }\n\n\n  /**\n   * Update the form control for recordId on each row according to index.\n   */\n  public updateAllRowIds(): void {\n    for (let i = 0; i  this.columnCount) {\n        const numberOfMissingColumns = pastedColumnCount - this.columnCount;\n        this.addColumnsToRows(this.rows, this.headerCells, numberOfMissingColumns);\n        this.columnCount = pastedColumnCount;\n      }\n      this.deleteRow(pastedRowId);\n      this.addRows(neededRows, content.rows.length, content.rows, pastedRowId);\n    }\n\n    this.updateAllRowIds();\n    this.allErrors = this.collectErrors();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Expose ability to trigger error updates from the DOM\n   */\n  public updateErrors(): void {\n    this.allErrors = this.collectErrors();\n  }\n\n\n  /**\n   * Helper to get the name (content) of a header cell for the title attribute\n   *\n   * @param index - The column index\n   * @return The header cell content\n   */\n  public getHeaderCellName(index: number): string {\n    if (!this.headerCells || !this.headerCells.controls[index]) {\n      return '';\n    }\n    return this.headerCells.controls[index].value;\n  }\n\n\n  /**\n   * Stop accidental page navigation when scrolling to the edges of the CSV form\n   *\n   * @param event - The scroll wheel event\n   */\n  public onScroll(event: WheelEvent): void {\n    if (!event) {\n      return;\n    }\n    const dir: string = (event.deltaX  {\n          return {\n            control: key,\n            // De-duplicate the errors array\n            [key]: errors[key].filter((el, i, arr) => arr.indexOf(el) === i),\n          };\n        });\n\n        return resultsArray;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n\n  /**\n   * Get all validation messages\n   *\n   * NOTE: Currently this only supports a custom error message for URL validation. Other messages can be added when the need arises.\n   * FIXME: Find a way to use the existing ValidationMessagesService\n   *\n   * @return The array of validation messages\n   */\n  public get validationMessages(): string[] | undefined {\n    if (!this.allErrors) {\n      return;\n    }\n    const messages: string[] = [];\n\n    for (const errorObj of this.allErrors) {\n      const name: string = errorObj.control;\n\n      for (const error of errorObj[name]) {\n        let message = '';\n        // The ID is zero-based\n        message += `Row ${error.rowId + 1}: `;\n        // istanbul ignore else\n        if (name === 'url') {\n          const maxItemLength = 20;\n          const errorItem = (error.actual.length > maxItemLength) ? error.actual.slice(0, maxItemLength) + '...' : error.actual;\n          message += `\"${errorItem}\" is not a valid URL.`;\n        }\n        // istanbul ignore else\n        if (name === 'required') {\n          message += `Content is required.`;\n        }\n        messages.push(message);\n      }\n    }\n\n    // If more messages than allowed exist, truncate the list with a message\n    if (messages.length > this.maximumValidationMessages) {\n      const count = messages.length - this.maximumValidationMessages;\n      messages.length = this.maximumValidationMessages;\n      messages.push(`and ${count} more errors...`);\n    }\n\n    return messages.length > 0 ? messages : undefined;\n  }\n\n\n  /**\n   * Delete a row\n   *\n   * @param index - The index of the row to delete\n   */\n  public deleteRow(index: number): void {\n    if (index === undefined || index === null || index  r.split('\\t'));\n    } else {\n      result.rows = rows.slice(0, rows.length).map((r) => r.split('\\t'));\n    }\n\n    return result;\n  }\n\n\n  /**\n   * Clear all rows\n   */\n  private clearAllRows(): void {\n    this.recordsForm.setControl('records', this.formBuilder.array([]));\n  }\n\n\n  /**\n   * Clear header cells\n   */\n  private clearHeaderCells(): void {\n    this.recordsForm.setControl('headers', this.formBuilder.array([]));\n  }\n\n\n  /**\n   * Add header content to the form\n   *\n   * @param headerCount - The number of header cells\n   * @param content - The cell's content\n   */\n  private addHeaders(headerCount: number, content?: string[]): void {\n    for (let i = 0; i  v.columns.join('\\t')).join('\\r\\n') + '\\r\\n';\n    const joined: string = prefix + headers + rows;\n    return new Blob([joined], {type: 'text/csv'});\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsCSVFormContents.html":{"url":"interfaces/TsCSVFormContents.html","title":"interface - TsCSVFormContents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsCSVFormContents\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/csv-entry/csv-entry.component.ts\n        \n\n            \n                Description\n            \n            \n                The structure for the form\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        headers\n                                \n                                \n                                        records\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        records\n                                    \n                                \n                                \n                                    \n                                        records:     TsCSVEntryRecord[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsCSVEntryRecord[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        csv-entry\n\n\n\n\nTable of Contents\n\nBasic usage\nColumn Count\nRow count\nMax rows\n\n\nColumn validation\nStatic Column Headers\n\n\nBasic usage\nThe most basic implementation only needs the HTML and a single method. Each time the CSV table is updated, a new File Blob is generated and\nemitted.\n\nmyFunc(blob: Blob) {\n  ...\n}Column Count\nControl the default column count via an Input:\n\n  \n\nNOTE: Column count does not restrict what is pasted into the table.\n\nRow count\nControl the default number of rows via an Input:\n\n  \n\nNOTE: Row count does not restrict what is pasted into the table.\n\nMax rows\nControl the maximum number of rows a table will allow\n\nIf the user attempts to paste or manually add more rows than are allowed, a validation message will appear below the table.\nColumn validation\n\nNOTE: Currently, custom validation messaging is only supported for the URL validator. More will be added as needs arise.\n\nPass in an array of validators matching the column count.\nmyValidators = [null, this.validatorsService.url(), null, null];\nThis example would add the URL validation to the second column only.\nStatic Column Headers\nIf there are certain headers that must be available, these can be set via an input:\n\nSetting static column headers will set the header cells to readonly. This will still allow keyboard navigation but will not allow the user\nto change the contents of the set header cells.\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  coerceBooleanProperty,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport {\n  untilComponentDestroyed,\n  TsDocumentService,\n} from '@terminus/ngx-tools';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n} from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { TS_SPACING } from './../spacing/spacing.constant';\n\n\n\n/**\n * The structure for an individual row\n */\nexport interface TsCSVEntryRecord {\n  recordId: number;\n  columns: (string | null)[];\n}\n\n/**\n * The structure for the form\n */\nexport interface TsCSVFormContents {\n  headers: string[];\n  records: TsCSVEntryRecord[];\n}\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * This is the csv-entry UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-csv-entry`: The primary container\n * - `qa-csv-entry-info`: Container for row/column count\n * - `qa-csv-entry-row`: A row\n * - `qa-csv-entry-cell`: A body cell\n * - `qa-csv-entry-header-cell`: A header cell\n * - `qa-csv-entry-header-row`: Container for a header row\n * - `qa-csv-entry-delete`: A delete button\n * - `qa-csv-entry`: Placed on the primary container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-csv-entry',\n  templateUrl: './csv-entry.component.html',\n  styleUrls: ['./csv-entry.component.scss'],\n  host: {\n    class: 'ts-csv-entry',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsCSVEntry',\n})\nexport class TsCSVEntryComponent implements OnInit, OnDestroy {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-csv-entry-${nextUniqueId++}`;\n\n  /**\n   * Define the default number of rows\n   */\n  public defaultRowCount = 4;\n\n  /**\n   * Define the default number of columns\n   */\n  public defaultColumnCount = 2;\n\n  /**\n   * Define the default for the maximum allowed rows\n   */\n  public defaultMaxRows = 2000;\n\n  /**\n   * Expose the flexbox layout gap\n   */\n  public layoutGap: string = TS_SPACING.small[0];\n\n  /**\n   * Expose a validation message if too many rows are added\n   */\n  public tooManyRowsMessage: string | null = null;\n\n  /**\n   * Define the number of validation messages that can be shown at once\n   */\n  public maximumValidationMessages = 6;\n\n  /**\n   * Store records (rows)\n   */\n  public records: TsCSVEntryRecord[] = [];\n\n  /**\n   * Initialize the records form with an empty array\n   */\n  public recordsForm: FormGroup = this.formBuilder.group({\n    headers: this.formBuilder.array([]),\n    records: this.formBuilder.array([]),\n  });\n\n  /*\n   *public validationMessages: string[] | undefined;\n   */\n  public allErrors: {[key: string]: any}[] | null = null;\n\n  /**\n   * Get header cells as a form array\n   */\n  public get headerCells(): FormArray {\n    return this.recordsForm.get('headers') as FormArray;\n  }\n\n  /**\n   * Get rows as a form array\n   */\n  public get rows(): FormArray {\n    return this.recordsForm.get('records') as FormArray;\n  }\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  public set id(value: string) {\n    this._id = value || this._uid;\n  }\n  public get id(): string {\n    return this._id;\n  }\n  protected _id!: string;\n\n  /**\n   * Set the maximum number of allowed rows\n   */\n  @Input()\n  public set maxRows(value: number) {\n    this._maxRows = coerceNumberProperty(value, this.defaultMaxRows);\n  }\n  public get maxRows(): number {\n    return this._maxRows;\n  }\n  private _maxRows: number = this.defaultMaxRows;\n\n  /**\n   * Set the number of columns\n   */\n  @Input()\n  public set columnCount(value: number) {\n    this._columnCount = coerceNumberProperty(value, this.defaultColumnCount);\n  }\n  public get columnCount(): number {\n    return this._columnCount;\n  }\n  private _columnCount: number = this.defaultColumnCount;\n\n  /**\n   * Define the number of rows\n   */\n  @Input()\n  public set rowCount(value: number) {\n    this._rowCount = coerceNumberProperty(value, this.defaultRowCount);\n  }\n  public get rowCount(): number {\n    return this._rowCount;\n  }\n  private _rowCount: number = this.defaultRowCount;\n\n  /**\n   * Allow static headers to be set\n   */\n  @Input()\n  public set columnHeaders(value: string[] | undefined) {\n    this._columnHeaders = value;\n    this.clearHeaderCells();\n    this.addHeaders(this.columnCount, this.columnHeaders);\n  }\n  public get columnHeaders(): string[] | undefined {\n    return this._columnHeaders;\n  }\n  private _columnHeaders: string[] | undefined;\n\n  /**\n   * Define any column validators\n   */\n  @Input()\n  public set columnValidators(value: ValidatorFn | null[]) {\n    if (!value) {\n      return;\n    }\n\n    this._columnValidators = value;\n  }\n  public get columnValidators(): ValidatorFn | null[] {\n    return this._columnValidators;\n  }\n  private _columnValidators: ValidatorFn | null[] = [];\n\n  /**\n   * Emit the built file blob\n   */\n  @Output()\n  public blobGenerated: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private changeDetectorRef: ChangeDetectorRef,\n    private documentService: TsDocumentService,\n  ) {\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Initialize empty rows\n   */\n  public ngOnInit(): void {\n    this.addRows(this.rowCount, this.columnCount);\n    this.addHeaders(this.columnCount, this.columnHeaders);\n\n    this.recordsForm.valueChanges.pipe(\n      // Let the form values 'settle' before we emit anything\n      debounceTime(1),\n      untilComponentDestroyed(this),\n    ).subscribe((v) => {\n      const blob = this.generateBlob(v);\n      this.blobGenerated.emit(blob);\n    });\n  }\n\n\n  /**\n   * Needed for `untilComponentDestroyed`\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Add rows to the form\n   *\n   * @param rowCount - The number of rows to add\n   * @param columnCount - The number of columns each row should have\n   * @param content - The column content\n   */\n  public addRows(rowCount = 1, columnCount: number = this.columnCount, content?: string[][], index?: number): void {\n    if ((this.rows.length + rowCount) > this.maxRows) {\n      const rowsThatDontFit = (rowCount === 1 ? 2 : rowCount) - ((this.rows.length + rowCount) - this.maxRows);\n      this.tooManyRowsMessage =\n        `Adding ${rowsThatDontFit} row${rowsThatDontFit > 1 ? 's' : ''} would exceed the maximum rows allowed (${this.maxRows}).`;\n      return;\n    }\n\n    if (this.tooManyRowsMessage) {\n      this.tooManyRowsMessage = null;\n    }\n\n    for (let i = 0; i = 0)) {\n        this.rows.insert(indexToInjectAt, createdRow);\n      } else {\n        this.rows.push(createdRow);\n      }\n    }\n  }\n\n\n  /**\n   * Get the columns of a row\n   *\n   * @param row - The row\n   * @return The array of columns\n   */\n  public getColumns(row: FormGroup): FormArray {\n    return row.get('columns') as FormArray;\n  }\n\n\n  /**\n   * Update the form control for recordId on each row according to index.\n   */\n  public updateAllRowIds(): void {\n    for (let i = 0; i  this.columnCount) {\n        const numberOfMissingColumns = pastedColumnCount - this.columnCount;\n        this.addColumnsToRows(this.rows, this.headerCells, numberOfMissingColumns);\n        this.columnCount = pastedColumnCount;\n      }\n      this.deleteRow(pastedRowId);\n      this.addRows(neededRows, content.rows.length, content.rows, pastedRowId);\n    }\n\n    this.updateAllRowIds();\n    this.allErrors = this.collectErrors();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Expose ability to trigger error updates from the DOM\n   */\n  public updateErrors(): void {\n    this.allErrors = this.collectErrors();\n  }\n\n\n  /**\n   * Helper to get the name (content) of a header cell for the title attribute\n   *\n   * @param index - The column index\n   * @return The header cell content\n   */\n  public getHeaderCellName(index: number): string {\n    if (!this.headerCells || !this.headerCells.controls[index]) {\n      return '';\n    }\n    return this.headerCells.controls[index].value;\n  }\n\n\n  /**\n   * Stop accidental page navigation when scrolling to the edges of the CSV form\n   *\n   * @param event - The scroll wheel event\n   */\n  public onScroll(event: WheelEvent): void {\n    if (!event) {\n      return;\n    }\n    const dir: string = (event.deltaX  {\n          return {\n            control: key,\n            // De-duplicate the errors array\n            [key]: errors[key].filter((el, i, arr) => arr.indexOf(el) === i),\n          };\n        });\n\n        return resultsArray;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n\n  /**\n   * Get all validation messages\n   *\n   * NOTE: Currently this only supports a custom error message for URL validation. Other messages can be added when the need arises.\n   * FIXME: Find a way to use the existing ValidationMessagesService\n   *\n   * @return The array of validation messages\n   */\n  public get validationMessages(): string[] | undefined {\n    if (!this.allErrors) {\n      return;\n    }\n    const messages: string[] = [];\n\n    for (const errorObj of this.allErrors) {\n      const name: string = errorObj.control;\n\n      for (const error of errorObj[name]) {\n        let message = '';\n        // The ID is zero-based\n        message += `Row ${error.rowId + 1}: `;\n        // istanbul ignore else\n        if (name === 'url') {\n          const maxItemLength = 20;\n          const errorItem = (error.actual.length > maxItemLength) ? error.actual.slice(0, maxItemLength) + '...' : error.actual;\n          message += `\"${errorItem}\" is not a valid URL.`;\n        }\n        // istanbul ignore else\n        if (name === 'required') {\n          message += `Content is required.`;\n        }\n        messages.push(message);\n      }\n    }\n\n    // If more messages than allowed exist, truncate the list with a message\n    if (messages.length > this.maximumValidationMessages) {\n      const count = messages.length - this.maximumValidationMessages;\n      messages.length = this.maximumValidationMessages;\n      messages.push(`and ${count} more errors...`);\n    }\n\n    return messages.length > 0 ? messages : undefined;\n  }\n\n\n  /**\n   * Delete a row\n   *\n   * @param index - The index of the row to delete\n   */\n  public deleteRow(index: number): void {\n    if (index === undefined || index === null || index  r.split('\\t'));\n    } else {\n      result.rows = rows.slice(0, rows.length).map((r) => r.split('\\t'));\n    }\n\n    return result;\n  }\n\n\n  /**\n   * Clear all rows\n   */\n  private clearAllRows(): void {\n    this.recordsForm.setControl('records', this.formBuilder.array([]));\n  }\n\n\n  /**\n   * Clear header cells\n   */\n  private clearHeaderCells(): void {\n    this.recordsForm.setControl('headers', this.formBuilder.array([]));\n  }\n\n\n  /**\n   * Add header content to the form\n   *\n   * @param headerCount - The number of header cells\n   * @param content - The cell's content\n   */\n  private addHeaders(headerCount: number, content?: string[]): void {\n    for (let i = 0; i  v.columns.join('\\t')).join('\\r\\n') + '\\r\\n';\n    const joined: string = prefix + headers + rows;\n    return new Blob([joined], {type: 'text/csv'});\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsCardComponent.html":{"url":"components/TsCardComponent.html","title":"component - TsCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsCardComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/card/card.component.ts\n\n\n    \n        Description\n    \n    \n        A presentational component to render a card\nQA CSS CLASSES\n\nqa-card: Placed on the primary element\nqa-card-lock: Placed on the lock icon for disabled cards\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    Here is my card!\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsCard\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-card\n            \n\n            \n                styleUrls\n                card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _border\n                            \n                            \n                                    Protected\n                                _id\n                            \n                            \n                                    Private\n                                _theme\n                            \n                            \n                                    Protected\n                                _uid\n                            \n                            \n                                    Public\n                                aspectRatioPadding\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                aspectRatio\n                            \n                            \n                                border\n                            \n                            \n                                centeredContent\n                            \n                            \n                                disabled\n                            \n                            \n                                flat\n                            \n                            \n                                id\n                            \n                            \n                                supportsInteraction\n                            \n                            \n                                theme\n                            \n                            \n                                utilityMenuTemplate\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/card/card.component.ts:181\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        aspectRatio\n                    \n                    \n                        Define if the card should conform to a fixed aspect ratio\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:92\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        border\n                    \n                    \n                        Define if a border should be present on the card. TsCardBorderOptions\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:104\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        centeredContent\n                    \n                    \n                        Define if the card should center child content\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:120\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                    \n                        Define if the card is disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:126\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        flat\n                    \n                    \n                        Define if the card should not have a drop shadow\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:132\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                    \n                        Define an ID for the component\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:138\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        supportsInteraction\n                    \n                    \n                        Define if the card should support interaction (via hover)\nNOTE: This only alters style; not functionality\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:152\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the card theme\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:158\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        utilityMenuTemplate\n                    \n                    \n                        Allow a custom utility menu to be added\n\n                            \n                            Type:    TemplateRef | undefined\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:174\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _border\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _border:     TsCardBorderOptions\n\n                    \n                \n                    \n                        \n                            Type :     TsCardBorderOptions\n\n                        \n                    \n                    \n                        \n                            Default value : 'none'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:114\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : this._uid\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:144\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _theme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _theme:     TsStyleThemeTypes\n\n                    \n                \n                    \n                        \n                            Type :     TsStyleThemeTypes\n\n                        \n                    \n                    \n                        \n                            Default value : 'primary'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:168\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _uid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _uid:     \n\n                    \n                \n                    \n                        \n                            Default value : `ts-card-${nextUniqueId++}`\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:79\n                            \n                        \n\n                \n                    \n                        Define the default component ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            aspectRatioPadding\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        aspectRatioPadding:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card.component.ts:84\n                            \n                        \n\n                \n                    \n                        Expose the aspect ratio as a percentage\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        aspectRatio\n                    \n                \n\n\n                \n                    \n                        setaspectRatio(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:92\n                                \n                            \n                    \n                        \n                                Define if the card should conform to a fixed aspect ratio\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                            \n                                                                    \nThe aspect ratio. See {\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        border\n                    \n                \n\n                \n                    \n                        getborder()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:111\n                                \n                            \n\n                \n                    \n                        setborder(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:104\n                                \n                            \n                    \n                        \n                                Define if a border should be present on the card. TsCardBorderOptions\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:141\n                                \n                            \n\n                \n                    \n                        setid(value: string)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:138\n                                \n                            \n                    \n                        \n                                Define an ID for the component\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n\n                \n                    \n                        gettheme()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:165\n                                \n                            \n\n                \n                    \n                        settheme(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:158\n                                \n                            \n                    \n                        \n                                Define the card theme\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        borderClass\n                    \n                \n\n                \n                    \n                        getborderClass()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/card/card.component.ts:179\n                                \n                            \n                    \n                        \n                                Getter to return a border class if the border is set\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n    \n        \n\nTable of Contents\n\nBasic usage\nInteractivity\nCentered content\nAspect ratio\nUtility menu\nCard with a Title\nDisabled Card\n\n\nBasic usage\nWrap the card component around your content:\n\n  Here is my content!\nInteractivity\nTo make the card feel interactive, pass true to the supportsInteraction input.\n\n  Now my card responds to hover and click!\nCentered content\nTo center the content, pass true to the centeredContent input.\n\n  Now my content is centered!\nAspect ratio\nPass your desired aspect ratio in the format 3:4 to the aspectRatio input.\n\n  Here is a card with a fixed aspect ratio!\n\nType: TsAspectRatioTypes.\nAllowed ratios: 16:9, 4:3, 3:2, 5:4, 1:1,\n\nUtility menu\nTo include a utility menu, pass a template which includes the menu trigger and the menu contents.\n\n\n  Here is a card with a utility menu!\n\n\n\n  \n  \n  \n\n\n  \n  \n    \n      My link\n    \n  \nCard with a Title\nAttach the tsCardTitle directive to your title element. This directive simply adds a class to the\nelement which provides the needed styles.\n\n  My Title\nDisabled Card\nThis will push the opacity of the card contents back and add a lock icon in the top right corner.\n\n  My card\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  TemplateRef,\n  ElementRef,\n} from '@angular/core';\nimport { TsStyleThemeTypes } from '../utilities/types/style-theme.types';\n\n\n/**\n * Define the allowed aspect ratios. Used in {@link TsCardComponent}\n */\nexport type TsAspectRatioTypes\n  = '16:9'\n  | '4:3'\n  | '3:2'\n  | '5:4'\n  | '1:1'\n;\n\n\n/**\n * Define allowed border sides. Used in {@link TsCardComponent}. Border color determined by the theme.\n */\nexport type TsCardBorderOptions\n  = 'none'\n  | 'left'\n  | 'right'\n  | 'top'\n  | 'bottom'\n;\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * A presentational component to render a card\n *\n * #### QA CSS CLASSES\n * - `qa-card`: Placed on the primary element\n * - `qa-card-lock`: Placed on the lock icon for disabled cards\n *\n * @example\n * Here is my card!\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n  host: {\n    class: 'ts-card',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsCard',\n})\nexport class TsCardComponent {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-card-${nextUniqueId++}`;\n\n  /**\n   * Expose the aspect ratio as a percentage\n   */\n  public aspectRatioPadding!: string;\n\n  /**\n   * Define if the card should conform to a fixed aspect ratio\n   *\n   * @param value - The aspect ratio. See {@link TsAspectRatioTypes} for possible values.\n   */\n  @Input()\n  public set aspectRatio(value: TsAspectRatioTypes) {\n    const x: number = parseInt(value.split(':')[0], 10);\n    const y: number = parseInt(value.split(':')[1], 10);\n    const percentage: number = ((y / x) * 100);\n\n    this.aspectRatioPadding = `${percentage.toFixed(2)}%`;\n  }\n\n  /**\n   * Define if a border should be present on the card. {@link TsCardBorderOptions}\n   */\n  @Input()\n  public set border(value: TsCardBorderOptions) {\n    if (!value) {\n      return;\n    }\n\n    this._border = value;\n  }\n  public get border(): TsCardBorderOptions {\n    return this._border;\n  }\n  private _border: TsCardBorderOptions = 'none';\n\n  /**\n   * Define if the card should center child content\n   */\n  @Input()\n  public centeredContent: boolean = false;\n\n  /**\n   * Define if the card is disabled\n   */\n  @Input()\n  public disabled: boolean = false;\n\n  /**\n   * Define if the card should not have a drop shadow\n   */\n  @Input()\n  public flat: boolean = false;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Define if the card should support interaction (via hover)\n   *\n   * NOTE: This only alters style; not functionality\n   */\n  @Input()\n  public supportsInteraction: boolean = false;\n\n  /**\n   * Define the card theme\n   */\n  @Input()\n  public set theme(value: TsStyleThemeTypes) {\n    if (!value) {\n      return;\n    }\n\n    this._theme = value;\n  }\n  public get theme(): TsStyleThemeTypes {\n    return this._theme;\n  }\n  private _theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Allow a custom utility menu to be added\n   */\n  @Input()\n  public utilityMenuTemplate: TemplateRef | undefined;\n\n  /**\n   * Getter to return a border class if the border is set\n   */\n  public get borderClass(): string {\n    return (!this.border || this.border === 'none') ? '' : `c-card--border-${this.border}` ;\n  }\n\n\n  constructor() {\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n\n  lock_outline\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            lock_outline'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsCardModule.html":{"url":"modules/TsCardModule.html","title":"module - TsCardModule","body":"\n                   \n\n\n\n\n  Modules\n  TsCardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsCardModule\n\n\n\ncluster_TsCardModule_declarations\n\n\n\ncluster_TsCardModule_imports\n\n\n\ncluster_TsCardModule_exports\n\n\n\n\nTsCardComponent\n\nTsCardComponent\n\n\n\nTsCardModule\n\nTsCardModule\n\nTsCardModule -->\n\nTsCardComponent->TsCardModule\n\n\n\n\n\nTsCardTitleDirective\n\nTsCardTitleDirective\n\nTsCardModule -->\n\nTsCardTitleDirective->TsCardModule\n\n\n\n\n\nTsCardComponent \n\nTsCardComponent \n\nTsCardComponent  -->\n\nTsCardModule->TsCardComponent \n\n\n\n\n\nTsCardTitleDirective \n\nTsCardTitleDirective \n\nTsCardTitleDirective  -->\n\nTsCardModule->TsCardTitleDirective \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsCardModule -->\n\nTsIconModule->TsCardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/card/card.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsCardComponent\n                            \n                            \n                                TsCardTitleDirective\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsCardComponent\n                            \n                            \n                                    TsCardTitleDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsCardComponent } from './card.component';\nimport { TsCardTitleDirective } from './card-title.directive';\n\nexport * from './card.component';\nexport * from './card-title.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatRippleModule,\n    TsIconModule,\n  ],\n  declarations: [\n    TsCardComponent,\n    TsCardTitleDirective,\n  ],\n  exports: [\n    TsCardComponent,\n    TsCardTitleDirective,\n  ],\n})\nexport class TsCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsCardTitleDirective.html":{"url":"directives/TsCardTitleDirective.html","title":"directive - TsCardTitleDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsCardTitleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/card/card-title.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsCardTitle]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _parent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkParent\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: TsCardComponent)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/card/card-title.directive.ts:27\n                            \n                        \n\n                \n                    \n                            Verify the directive is nested within a TsCardComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    TsCardComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class:     \n\n                    \n                \n                    \n                        \n                            Default value : 'c-card__title'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card-title.directive.ts:27\n                            \n                        \n\n                \n                    \n                        Set the card title class\n\n                    \n                \n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkParent\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckParent()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/card/card-title.directive.ts:50\n                            \n                        \n\n\n                \n                    \n                            Verify the directive is nested inside of a TsCardComponent\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/card/card-title.directive.ts:42\n                            \n                        \n\n\n                \n                    \n                            Verify correct nesting on all changes\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _parent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _parent:     TsCardComponent\n\n                    \n                \n                    \n                        \n                            Type :     TsCardComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/card/card-title.directive.ts:21\n                            \n                        \n\n                \n                    \n                        Store a reference to the parent component\n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  HostBinding,\n  Optional,\n  Host,\n  SkipSelf,\n  OnChanges,\n  isDevMode,\n} from '@angular/core';\n\nimport { TsCardComponent } from './card.component';\n\n\n@Directive({\n  selector: '[tsCardTitle]',\n})\nexport class TsCardTitleDirective implements OnChanges {\n  /**\n   * Store a reference to the parent component\n   */\n  private _parent: TsCardComponent;\n\n  /**\n   * Set the card title class\n   */\n  @HostBinding('class')\n  tsCardTitle = 'c-card__title';\n\n  /**\n   * Verify the directive is nested within a {@link TsCardComponent}\n   */\n  constructor(\n    @Optional() @Host() @SkipSelf() parent: TsCardComponent,\n  ) {\n    this._parent = parent;\n  }\n\n\n  /**\n   * Verify correct nesting on all changes\n   */\n  ngOnChanges() {\n    this.checkParent();\n  }\n\n\n  /**\n   * Verify the directive is nested inside of a {@link TsCardComponent}\n   */\n  checkParent() {\n    // istanbul ignore else\n    if (!(this._parent instanceof TsCardComponent) && isDevMode()) {\n      throw Error(`The 'tsCardTitle' directive must be inside a  component.`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsCellDefDirective.html":{"url":"directives/TsCellDefDirective.html","title":"directive - TsCellDefDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsCellDefDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/cell.ts\n        \n\n            \n                Description\n            \n            \n                Cell definition for the TsTableComponent.\nCaptures the template of a column's data row cell as well as cell-specific properties.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , :  }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [tsCellDef]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer,\n} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: TsCellDefDirective}],\n})\nexport class TsCellDefDirective extends CdkCellDef {}\n\n\n/**\n * Header cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: TsHeaderCellDefDirective}],\n})\nexport class TsHeaderCellDefDirective extends CdkHeaderCellDef {}\n\n\n\n/**\n * Header cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-header-cell',\n  host: {\n    class: 'ts-header-cell',\n    role: 'columnheader',\n  },\n})\nexport class TsHeaderCellDirective extends CdkHeaderCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n\n/**\n * Cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-cell',\n  host: {\n    class: 'ts-cell',\n    role: 'gridcell',\n  },\n})\nexport class TsCellDirective extends CdkCell {\n  constructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    public renderer: Renderer,\n  ) {\n    super(columnDef, elementRef);\n\n    // NOTE(B$): We are adding `noWrap` to the column in `TsColumnDefDirective` which doesn't exist\n    // in the `CdkColumnDef` so we cast it to 'any'.\n    const column: any = columnDef;\n\n    // Set a custom class for each column\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n\n    // Set the no-wrap class if needed\n    if (column.noWrap) {\n      elementRef.nativeElement.classList.add(`ts-column-no-wrap`);\n    }\n\n    // Set inline style for min-width if passed in\n    if (column.minWidth) {\n      renderer.setElementStyle(elementRef.nativeElement, 'minWidth', column.minWidth);\n    }\n  }\n}\n\n\n/**\n * Column definition for the {@link TsTableComponent}.\n *\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[tsColumnDef]',\n  providers: [{provide: CdkColumnDef, useExisting: TsColumnDefDirective}],\n})\nexport class TsColumnDefDirective extends CdkColumnDef {\n  // NOTE(B$): We must rename here so that the property matches the extended CdkColumnDef class\n  // tslint:disable: no-input-rename\n  /**\n   * Define a unique name for this column\n   */\n  @Input('tsColumnDef')\n  name!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define if a column's contents should wrap when long\n   */\n  @Input()\n  public noWrap: boolean = false;\n\n  /**\n   * Define a minimum width for the column\n   */\n  @Input()\n  public minWidth: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsCellDirective.html":{"url":"directives/TsCellDirective.html","title":"directive - TsCellDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsCellDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/cell.ts\n        \n\n            \n                Description\n            \n            \n                Cell template container that adds the right classes and role.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ts-cell\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                renderer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(columnDef: CdkColumnDef, elementRef: ElementRef, renderer: Renderer)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/table/cell.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        columnDef\n                                                  \n                                                        \n                                                                    CdkColumnDef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            renderer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        renderer:     Renderer\n\n                    \n                \n                    \n                        \n                            Type :     Renderer\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/table/cell.ts:76\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer,\n} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: TsCellDefDirective}],\n})\nexport class TsCellDefDirective extends CdkCellDef {}\n\n\n/**\n * Header cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: TsHeaderCellDefDirective}],\n})\nexport class TsHeaderCellDefDirective extends CdkHeaderCellDef {}\n\n\n\n/**\n * Header cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-header-cell',\n  host: {\n    class: 'ts-header-cell',\n    role: 'columnheader',\n  },\n})\nexport class TsHeaderCellDirective extends CdkHeaderCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n\n/**\n * Cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-cell',\n  host: {\n    class: 'ts-cell',\n    role: 'gridcell',\n  },\n})\nexport class TsCellDirective extends CdkCell {\n  constructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    public renderer: Renderer,\n  ) {\n    super(columnDef, elementRef);\n\n    // NOTE(B$): We are adding `noWrap` to the column in `TsColumnDefDirective` which doesn't exist\n    // in the `CdkColumnDef` so we cast it to 'any'.\n    const column: any = columnDef;\n\n    // Set a custom class for each column\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n\n    // Set the no-wrap class if needed\n    if (column.noWrap) {\n      elementRef.nativeElement.classList.add(`ts-column-no-wrap`);\n    }\n\n    // Set inline style for min-width if passed in\n    if (column.minWidth) {\n      renderer.setElementStyle(elementRef.nativeElement, 'minWidth', column.minWidth);\n    }\n  }\n}\n\n\n/**\n * Column definition for the {@link TsTableComponent}.\n *\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[tsColumnDef]',\n  providers: [{provide: CdkColumnDef, useExisting: TsColumnDefDirective}],\n})\nexport class TsColumnDefDirective extends CdkColumnDef {\n  // NOTE(B$): We must rename here so that the property matches the extended CdkColumnDef class\n  // tslint:disable: no-input-rename\n  /**\n   * Define a unique name for this column\n   */\n  @Input('tsColumnDef')\n  name!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define if a column's contents should wrap when long\n   */\n  @Input()\n  public noWrap: boolean = false;\n\n  /**\n   * Define a minimum width for the column\n   */\n  @Input()\n  public minWidth: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsChartComponent.html":{"url":"components/TsChartComponent.html","title":"component - TsChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsChartComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/chart/chart.component.ts\n\n\n    \n        Description\n    \n    \n        This is the chart UI Component\nFIXME: Once amCharts v4 is TypeScript scrict complient, we should set the tsconfig.skipLibCheck to true.\nQA CSS CLASSES\n\nqa-chart: Placed on the primary container\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                OnDestroy\n    \n\n    \n        Example\n    \n    \n                \n                    \n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsChart\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-chart\n            \n\n            \n                styleUrls\n                chart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chart.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _visualization\n                            \n                            \n                                    Private\n                                amCharts\n                            \n                            \n                                    Public\n                                chart\n                            \n                            \n                                    Private\n                                chartDiv\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroyChart\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                visualization\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                chartInitialized\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(zone: NgZone, amChartsService: TsAmChartsService)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/chart/chart.component.ts:102\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        amChartsService\n                                                  \n                                                        \n                                                                    TsAmChartsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        visualization\n                    \n                    \n                        Define the chart visualization format (bar, line, etc)\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.component.ts:86\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        chartInitialized\n                    \n                    \n                        Emit an event containing the chart each time it is initialized\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.component.ts:102\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroyChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        destroyChart()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.component.ts:155\n                            \n                        \n\n\n                \n                    \n                            Destroy the chart\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init(type: TsChartVisualizationOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.component.ts:168\n                            \n                        \n\n\n                \n                    \n                            Initialize a chart\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    TsChartVisualizationOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.component.ts:135\n                            \n                        \n\n\n                \n                    \n                            Re-initialize the chart if the visualization type has changed\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.component.ts:147\n                            \n                        \n\n\n                \n                    \n                            Destroy the chart when the component is destroyed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.component.ts:116\n                            \n                        \n\n\n                \n                    \n                            Initialize the chart if amCharts exists\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _visualization\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _visualization:     TsChartVisualizationOptions\n\n                    \n                \n                    \n                        \n                            Type :     TsChartVisualizationOptions\n\n                        \n                    \n                    \n                        \n                            Default value : 'xy'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.component.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            amCharts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        amCharts:     TsAmChartsToken\n\n                    \n                \n                    \n                        \n                            Type :     TsAmChartsToken\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.component.ts:72\n                            \n                        \n\n                \n                    \n                        Save a reference to the underlying amCharts library\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.component.ts:67\n                            \n                        \n\n                \n                    \n                        Store the initialized chart\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            chartDiv\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chartDiv:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/chart/chart.component.ts:78\n                            \n                        \n\n                \n                    \n                        Get access to the chart container\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        visualization\n                    \n                \n\n                \n                    \n                        getvisualization()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/chart/chart.component.ts:93\n                                \n                            \n\n                \n                    \n                        setvisualization(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/chart/chart.component.ts:86\n                                \n                            \n                    \n                        \n                                Define the chart visualization format (bar, line, etc)\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                            \n                                                                    \nThe visualization type. {\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        TsChart\n\n\n\n\nTable of Contents\n\nBasic usage\nInject the needed libraries\nSet up the chart\n\n\nSupported chart types\nAmCharts documentation\n\n\nBasic usage\nInject the needed libraries\n\nNote:  Since the end-user of this library is the one with the actual license to use AmCharts, we let the consumer pass in the library.\n\nCreate a factory function to inject the needed libraries:\nimport { TS_AMCHARTS_TOKEN, TsAmChartsToken } from '@terminus/ui';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport * as am4maps from '@amcharts/amcharts4/maps';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\nimport am4themes_material from '@amcharts/amcharts4/themes/animated';\n\n// `core` and `charts` are always required.\n// `maps` is required if using any map visualizations.\nexport function amChartsFactory(): TsAmChartsToken {\n  return {\n    core: am4core,\n    charts: am4charts,\n    maps: am4maps,\n    themes: [am4themes_animated, am4themes_material],\n  };\n}\n\n@NgModule({\n  ...\n  providers: [\n    // Use the factory function to overwrite the `TS_AMCHARTS_TOKEN` injectable:\n    {\n      provide: TS_AMCHARTS_TOKEN,\n      useFactory: amChartsFactory,\n    },\n  ],\n  ...\nNOTE: Themes will be applied in the order they are provided.\n\nSet up the chart\nAdd the component and set up access to the generated chart:\n\nsetUpChart(chart: am4charts.Chart) {\n  // Add axis' and series' etc...\n}\nSee the demo app for concrete examples of the supported chart types.\n\nSupported chart types\n\nxy\npie\nmap\nradar\ntreemap\nsankey\nchord\n\n\nSee TsChartVisualizationOptions for all supported types.\n\nAmCharts documentation\nSee https://www.amcharts.com/docs/v4/ for full documentation.\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  isDevMode,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { inputHasChanged } from './../utilities/input-has-changed/input-has-changed';\n\nimport { TsAmChartsService, TsAmChartsToken } from './amcharts.service';\n\n\n/**\n * Define the supported chart visualizations\n */\nexport type TsChartVisualizationOptions\n  = 'pie'\n  | 'xy'\n  | 'map'\n  | 'radar'\n  | 'treemap'\n  | 'sankey'\n  | 'chord'\n;\n\n\n/**\n * This is the chart UI Component\n *\n * FIXME: Once amCharts v4 is TypeScript scrict complient, we should set the `tsconfig.skipLibCheck` to true.\n *\n * #### QA CSS CLASSES\n * - `qa-chart`: Placed on the primary container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.scss'],\n  host: {\n    class: 'ts-chart',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsChart',\n})\nexport class TsChartComponent implements OnInit, OnChanges, OnDestroy {\n  /**\n   * Store the initialized chart\n   */\n  public chart: any;\n\n  /**\n   * Save a reference to the underlying amCharts library\n   */\n  private amCharts: TsAmChartsToken;\n\n  /**\n   * Get access to the chart container\n   */\n  @ViewChild('chartDiv')\n  private chartDiv!: ElementRef;\n\n  /**\n   * Define the chart visualization format (bar, line, etc)\n   *\n   * @param value - The visualization type. {@link TsChartVisualizationOptions}\n   */\n  @Input()\n  public set visualization(value: TsChartVisualizationOptions) {\n    if (!value) {\n      return;\n    }\n\n    this._visualization = value;\n  }\n  public get visualization(): TsChartVisualizationOptions {\n    return this._visualization;\n  }\n  private _visualization: TsChartVisualizationOptions = 'xy';\n\n  /**\n   * Emit an event containing the chart each time it is initialized\n   */\n  @Output()\n  public chartInitialized: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private zone: NgZone,\n    private amChartsService: TsAmChartsService,\n  ) {\n    this.amCharts = this.amChartsService.amCharts;\n  }\n\n\n  /**\n   * Initialize the chart if amCharts exists\n   */\n  public ngOnInit(): void {\n    // Don't initialize a chart if the Highcharts library wasn't passed in.\n    if (this.amCharts) {\n      this.init(this.visualization);\n      // istanbul ignore else\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        console.error(\n          'TsChartComponent: The amCharts library was not provided via injection token!',\n        );\n      }\n    }\n  }\n\n\n  /**\n   * Re-initialize the chart if the visualization type has changed\n   */\n  public ngOnChanges(changes: SimpleChanges): void {\n    // istanbul ignore else\n    if (inputHasChanged(changes, 'visualization')) {\n      this.destroyChart();\n      this.init(this.visualization);\n    }\n  }\n\n\n  /**\n   * Destroy the chart when the component is destroyed\n   */\n  public ngOnDestroy(): void {\n    this.destroyChart();\n  }\n\n\n  /**\n   * Destroy the chart\n   */\n  private destroyChart(): void {\n    this.zone.runOutsideAngular(() => {\n      // istanbul ignore else\n      if (this.chart) {\n        this.chart.dispose();\n      }\n    });\n  }\n\n\n  /**\n   * Initialize a chart\n   */\n  private init(type: TsChartVisualizationOptions): void {\n    this.zone.runOutsideAngular(() => {\n      // Create the appropriate chart using a chained ternary\n      const chart: any =\n        type === 'xy'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.XYChart)\n        : type === 'pie'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.PieChart)\n        : type === 'map'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.maps.MapChart)\n        : type === 'radar'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.RadarChart)\n        : type === 'treemap'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.TreeMap)\n        : type === 'sankey'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.SankeyDiagram)\n        : type === 'chord'\n        ? this.amCharts.core.create(this.chartDiv.nativeElement, this.amCharts.charts.ChordDiagram)\n        : undefined\n      ;\n\n      if (chart) {\n        chart.responsive.enabled = true;\n        this.chart = chart;\n        this.chartInitialized.emit(chart);\n      } else {\n        console.error(`TsChartComponent: ${this.visualization} is not a supported chart type. See TsChartVisualizationOptions.`);\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsChartModule.html":{"url":"modules/TsChartModule.html","title":"module - TsChartModule","body":"\n                   \n\n\n\n\n  Modules\n  TsChartModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsChartModule\n\n\n\ncluster_TsChartModule_declarations\n\n\n\ncluster_TsChartModule_exports\n\n\n\ncluster_TsChartModule_providers\n\n\n\n\nTsChartComponent\n\nTsChartComponent\n\n\n\nTsChartModule\n\nTsChartModule\n\nTsChartModule -->\n\nTsChartComponent->TsChartModule\n\n\n\n\n\nTsChartComponent \n\nTsChartComponent \n\nTsChartComponent  -->\n\nTsChartModule->TsChartComponent \n\n\n\n\n\nTsAmChartsService\n\nTsAmChartsService\n\nTsChartModule -->\n\nTsAmChartsService->TsChartModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/chart/chart.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsChartComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsAmChartsService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsChartComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsChartComponent } from './chart.component';\nimport { TsAmChartsService, TS_AMCHARTS_TOKEN } from './amcharts.service';\n\nexport * from './chart.component';\nexport { TsAmChartsToken } from './amcharts.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    TsAmChartsService,\n    {\n      // This injection token will be overriden by the user.\n      // It will provide the amCharts core library and chart library\n      provide: TS_AMCHARTS_TOKEN,\n      useValue: null,\n    },\n  ],\n  declarations: [\n    TsChartComponent,\n  ],\n  exports: [\n    TsChartComponent,\n  ],\n})\nexport class TsChartModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsCheckboxChange.html":{"url":"classes/TsCheckboxChange.html","title":"class - TsCheckboxChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsCheckboxChange\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/checkbox/checkbox.component.ts\n        \n\n            \n                Description\n            \n            \n                Expose the MatCheckboxChange event as TsCheckboxChange. Used by TsCheckboxComponent\n\n            \n\n            \n                Extends\n            \n            \n                    MatCheckboxChange\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n\nTable of Contents\n\nBasic usage\nReactive Forms\nngModel\nisChecked\n\n\nBasic usage\nWrap your label text inside the component:\n\n  My checkbox label\nReactive Forms\nTo use the checkbox with a reactive form, pass the formControl to the checkbox:\n\n  I will be checked if `myControl.value` is true.\nngModel\nTo use the checkbox with Angular's ngModel, just attach the directive to the checkbox:\n\n  I will be checked if `myValue` is true.\nisChecked\nTo seed the initial checked state use the isChecked property:\n\n  I will be checked by default!\n\nNOTE: This should rarely be used (if ever). We should be relying on a Reactive Form or ngModel.\n\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  forwardRef,\n} from '@angular/core';\nimport {\n  MatCheckbox,\n  MatCheckboxChange,\n} from '@angular/material/checkbox';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\n\n\n/**\n * Expose the MatCheckboxChange event as TsCheckboxChange. Used by {@link TsCheckboxComponent}\n */\nexport class TsCheckboxChange extends MatCheckboxChange {}\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via the base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsCheckboxComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * This is the checkbox UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-checkbox`: The checkbox input element\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  host: {\n    class: 'ts-checkbox',\n  },\n  providers: [CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsCheckbox',\n})\nexport class TsCheckboxComponent extends TsReactiveFormBaseComponent {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-checkbox-${nextUniqueId++}`;\n\n  /**\n   * Provide access to the MatCheckboxComponent\n   */\n  @ViewChild(MatCheckbox)\n  checkbox!: MatCheckbox;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Toggle the underlying checkbox if the isChecked property changes\n   */\n  @Input()\n  public set isChecked(v: boolean) {\n    this._isChecked = coerceBooleanProperty(v);\n    this.value = this._isChecked;\n    this.checkbox.checked = this._isChecked;\n    this.changeDetectorRef.detectChanges();\n  }\n  public get isChecked(): boolean {\n    return this._isChecked;\n  }\n  private _isChecked: boolean = false;\n\n  /**\n   * Define if the checkbox is disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the checkbox should be indeterminate\n   */\n  @Input()\n  public isIndeterminate: boolean = false;\n\n  /**\n   * Define if the checkbox is required\n   */\n  @Input()\n  public isRequired: boolean = false;\n\n  /**\n   * Toggle the underlying checkbox if the ngModel changes\n   */\n  @Input()\n  public set ngModel(v: boolean) {\n    this._isChecked = v;\n  }\n\n  /**\n   * Define the tabindex\n   */\n  @Input()\n  public tabIndex: number = 0;\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit an event on input change\n   */\n  @Output()\n  public inputChange: EventEmitter = new EventEmitter;\n\n  /**\n   * Emit a change when moving from the indeterminate state\n   */\n  @Output()\n  public indeterminateChange: EventEmitter = new EventEmitter;\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {\n    super();\n\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsCheckboxComponent.html":{"url":"components/TsCheckboxComponent.html","title":"component - TsCheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsCheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/checkbox/checkbox.component.ts\n\n\n    \n        Description\n    \n    \n        This is the checkbox UI Component\nQA CSS CLASSES\n\nqa-checkbox: The checkbox input element\n\n\n    \n\n    \n        Extends\n    \n    \n            TsReactiveFormBaseComponent\n    \n\n\n    \n        Example\n    \n    \n                \n                    \n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsCheckbox\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n            \n                providers\n                \n                            CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                ts-checkbox\n            \n\n            \n                styleUrls\n                checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _id\n                            \n                            \n                                    Private\n                                _isChecked\n                            \n                            \n                                    Protected\n                                _uid\n                            \n                            \n                                checkbox\n                            \n                            \n                                    Protected\n                                innerValue\n                            \n                            \n                                    Protected\n                                onChangeCallback\n                            \n                            \n                                    Protected\n                                onTouchedCallback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onBlur\n                            \n                            \n                                    Protected\n                                registerOnChange\n                            \n                            \n                                    Protected\n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                isChecked\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isIndeterminate\n                            \n                            \n                                isRequired\n                            \n                            \n                                ngModel\n                            \n                            \n                                tabIndex\n                            \n                            \n                                theme\n                            \n                            \n                                formControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                indeterminateChange\n                            \n                            \n                                inputChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/checkbox/checkbox.component.ts:166\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                    \n                        Define an ID for the component\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:95\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isChecked\n                    \n                    \n                        Toggle the underlying checkbox if the isChecked property changes\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:107\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                    \n                        Define if the checkbox is disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:122\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isIndeterminate\n                    \n                    \n                        Define if the checkbox should be indeterminate\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:128\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRequired\n                    \n                    \n                        Define if the checkbox is required\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:134\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ngModel\n                    \n                    \n                        Toggle the underlying checkbox if the ngModel changes\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:140\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabIndex\n                    \n                    \n                        Define the tabindex\n\n                            \n                            Type:    number\n\n                            \n                        \n                            Default value: 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:148\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the theme\n\n                            \n                            Type:    TsStyleThemeTypes\n\n                            \n                        \n                            Default value: 'primary'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:154\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        Define the form control to get access to validators\n\n                            \n                            Type:    FormControl\n\n                            \n                        \n                            Default value: new FormControl()\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:42\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        indeterminateChange\n                    \n                    \n                        Emit a change when moving from the indeterminate state\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:166\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputChange\n                    \n                    \n                        Emit an event on input change\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:160\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onBlur\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onBlur()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:61\n                            \n                        \n\n\n                \n                    \n                            Set touched on blur\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:69\n                            \n                        \n\n\n                \n                    \n                            Register onChange callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:77\n                            \n                        \n\n\n                \n                    \n                            Register onTouched callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:85\n                            \n                        \n\n\n                \n                    \n                            Write value to inner value (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : this._uid\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _isChecked\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _isChecked:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:116\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _uid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _uid:     \n\n                    \n                \n                    \n                        \n                            Default value : `ts-checkbox-${nextUniqueId++}`\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:83\n                            \n                        \n\n                \n                    \n                        Define the default component ID\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkbox\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        checkbox:     MatCheckbox\n\n                    \n                \n                    \n                        \n                            Type :     MatCheckbox\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:89\n                            \n                        \n\n                \n                    \n                        Provide access to the MatCheckboxComponent\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            innerValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        innerValue:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:26\n                            \n                        \n\n                \n                    \n                        Define the internal data model\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onChangeCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onChangeCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:31\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onTouchedCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onTouchedCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:36\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:98\n                                \n                            \n\n                \n                    \n                        setid(value: string)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:95\n                                \n                            \n                    \n                        \n                                Define an ID for the component\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isChecked\n                    \n                \n\n                \n                    \n                        getisChecked()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:113\n                                \n                            \n\n                \n                    \n                        setisChecked(v: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:107\n                                \n                            \n                    \n                        \n                                Toggle the underlying checkbox if the isChecked property changes\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        ngModel\n                    \n                \n\n\n                \n                    \n                        setngModel(v: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/checkbox/checkbox.component.ts:140\n                                \n                            \n                    \n                        \n                                Toggle the underlying checkbox if the ngModel changes\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        \n\nTable of Contents\n\nBasic usage\nReactive Forms\nngModel\nisChecked\n\n\nBasic usage\nWrap your label text inside the component:\n\n  My checkbox label\nReactive Forms\nTo use the checkbox with a reactive form, pass the formControl to the checkbox:\n\n  I will be checked if `myControl.value` is true.\nngModel\nTo use the checkbox with Angular's ngModel, just attach the directive to the checkbox:\n\n  I will be checked if `myValue` is true.\nisChecked\nTo seed the initial checked state use the isChecked property:\n\n  I will be checked by default!\n\nNOTE: This should rarely be used (if ever). We should be relying on a Reactive Form or ngModel.\n\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  forwardRef,\n} from '@angular/core';\nimport {\n  MatCheckbox,\n  MatCheckboxChange,\n} from '@angular/material/checkbox';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\n\n\n/**\n * Expose the MatCheckboxChange event as TsCheckboxChange. Used by {@link TsCheckboxComponent}\n */\nexport class TsCheckboxChange extends MatCheckboxChange {}\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via the base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsCheckboxComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * This is the checkbox UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-checkbox`: The checkbox input element\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  host: {\n    class: 'ts-checkbox',\n  },\n  providers: [CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsCheckbox',\n})\nexport class TsCheckboxComponent extends TsReactiveFormBaseComponent {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-checkbox-${nextUniqueId++}`;\n\n  /**\n   * Provide access to the MatCheckboxComponent\n   */\n  @ViewChild(MatCheckbox)\n  checkbox!: MatCheckbox;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Toggle the underlying checkbox if the isChecked property changes\n   */\n  @Input()\n  public set isChecked(v: boolean) {\n    this._isChecked = coerceBooleanProperty(v);\n    this.value = this._isChecked;\n    this.checkbox.checked = this._isChecked;\n    this.changeDetectorRef.detectChanges();\n  }\n  public get isChecked(): boolean {\n    return this._isChecked;\n  }\n  private _isChecked: boolean = false;\n\n  /**\n   * Define if the checkbox is disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the checkbox should be indeterminate\n   */\n  @Input()\n  public isIndeterminate: boolean = false;\n\n  /**\n   * Define if the checkbox is required\n   */\n  @Input()\n  public isRequired: boolean = false;\n\n  /**\n   * Toggle the underlying checkbox if the ngModel changes\n   */\n  @Input()\n  public set ngModel(v: boolean) {\n    this._isChecked = v;\n  }\n\n  /**\n   * Define the tabindex\n   */\n  @Input()\n  public tabIndex: number = 0;\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit an event on input change\n   */\n  @Output()\n  public inputChange: EventEmitter = new EventEmitter;\n\n  /**\n   * Emit a change when moving from the indeterminate state\n   */\n  @Output()\n  public indeterminateChange: EventEmitter = new EventEmitter;\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {\n    super();\n\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsCheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsCheckboxModule.html":{"url":"modules/TsCheckboxModule.html","title":"module - TsCheckboxModule","body":"\n                   \n\n\n\n\n  Modules\n  TsCheckboxModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsCheckboxModule\n\n\n\ncluster_TsCheckboxModule_declarations\n\n\n\ncluster_TsCheckboxModule_TsCheckboxComponent_providers\n\n\n\ncluster_TsCheckboxModule_exports\n\n\n\n\nTsCheckboxComponent\n\nTsCheckboxComponent\n\n\n\nTsCheckboxModule\n\nTsCheckboxModule\n\nTsCheckboxModule -->\n\nTsCheckboxComponent->TsCheckboxModule\n\n\n\n\n\nTsCheckboxComponent \n\nTsCheckboxComponent \n\nTsCheckboxComponent  -->\n\nTsCheckboxModule->TsCheckboxComponent \n\n\n\n\n\nCUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR\n\nTsCheckboxComponent -->\n\nCUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR->TsCheckboxComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/checkbox/checkbox.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsCheckboxComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsCheckboxComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { TsCheckboxComponent } from './checkbox.component';\n\nexport * from './checkbox.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatCheckboxModule,\n  ],\n  exports: [\n    TsCheckboxComponent,\n  ],\n  declarations: [\n    TsCheckboxComponent,\n  ],\n})\nexport class TsCheckboxModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsColumnDefDirective.html":{"url":"directives/TsColumnDefDirective.html","title":"directive - TsColumnDefDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsColumnDefDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/cell.ts\n        \n\n            \n                Description\n            \n            \n                Column definition for the TsTableComponent.\nDefines a set of cells available for a table column.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , :  }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [tsColumnDef]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                minWidth\n                            \n                            \n                                noWrap\n                            \n                            \n                                tsColumnDef\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        minWidth\n                    \n                    \n                        Define a minimum width for the column\n\n                            \n                            Type:    string | undefined\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/table/cell.ts:129\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        noWrap\n                    \n                    \n                        Define if a column's contents should wrap when long\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/table/cell.ts:123\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tsColumnDef\n                    \n                    \n                        Define a unique name for this column\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/table/cell.ts:116\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer,\n} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: TsCellDefDirective}],\n})\nexport class TsCellDefDirective extends CdkCellDef {}\n\n\n/**\n * Header cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: TsHeaderCellDefDirective}],\n})\nexport class TsHeaderCellDefDirective extends CdkHeaderCellDef {}\n\n\n\n/**\n * Header cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-header-cell',\n  host: {\n    class: 'ts-header-cell',\n    role: 'columnheader',\n  },\n})\nexport class TsHeaderCellDirective extends CdkHeaderCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n\n/**\n * Cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-cell',\n  host: {\n    class: 'ts-cell',\n    role: 'gridcell',\n  },\n})\nexport class TsCellDirective extends CdkCell {\n  constructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    public renderer: Renderer,\n  ) {\n    super(columnDef, elementRef);\n\n    // NOTE(B$): We are adding `noWrap` to the column in `TsColumnDefDirective` which doesn't exist\n    // in the `CdkColumnDef` so we cast it to 'any'.\n    const column: any = columnDef;\n\n    // Set a custom class for each column\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n\n    // Set the no-wrap class if needed\n    if (column.noWrap) {\n      elementRef.nativeElement.classList.add(`ts-column-no-wrap`);\n    }\n\n    // Set inline style for min-width if passed in\n    if (column.minWidth) {\n      renderer.setElementStyle(elementRef.nativeElement, 'minWidth', column.minWidth);\n    }\n  }\n}\n\n\n/**\n * Column definition for the {@link TsTableComponent}.\n *\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[tsColumnDef]',\n  providers: [{provide: CdkColumnDef, useExisting: TsColumnDefDirective}],\n})\nexport class TsColumnDefDirective extends CdkColumnDef {\n  // NOTE(B$): We must rename here so that the property matches the extended CdkColumnDef class\n  // tslint:disable: no-input-rename\n  /**\n   * Define a unique name for this column\n   */\n  @Input('tsColumnDef')\n  name!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define if a column's contents should wrap when long\n   */\n  @Input()\n  public noWrap: boolean = false;\n\n  /**\n   * Define a minimum width for the column\n   */\n  @Input()\n  public minWidth: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsConfirmationDirective.html":{"url":"directives/TsConfirmationDirective.html","title":"directive - TsConfirmationDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsConfirmationDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/confirmation/confirmation.directive.ts\n        \n\n            \n                Description\n            \n            \n                A directive to inject a confirmation step into any button\n\n            \n\n            \n                Implements\n            \n            \n                        OnDestroy\n                        OnInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \nClick me!\n\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsConfirmation]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                modalInstance\n                            \n                            \n                                    Private\n                                overlayRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createOverlay\n                            \n                            \n                                    Private\n                                dismissOverlay\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelled\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, overlay: Overlay, host: TsButtonComponent, changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/confirmation/confirmation.directive.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    TsButtonComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancelled\n                    \n                    \n                        An event emitted when the confirmation is cancelled\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:57\n                            \n                        \n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nclick(event: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:74\n                            \n                        \n\n\n                \n                    \n                            Spawn the confirmation overlay on click\n\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createOverlay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createOverlay()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:99\n                            \n                        \n\n\n                \n                    \n                            Create and attach the confirmation overlay\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dismissOverlay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        dismissOverlay()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:155\n                            \n                        \n\n\n                \n                    \n                            Dismiss the overlay\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:90\n                            \n                        \n\n\n                \n                    \n                            Dismiss the overlay and clean up observables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:82\n                            \n                        \n\n\n                \n                    \n                            Set a flag in the TsButtonComponent to intercept the click\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            modalInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalInstance:     TsConfirmationModalComponent\n\n                    \n                \n                    \n                        \n                            Type :     TsConfirmationModalComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:46\n                            \n                        \n\n                \n                    \n                        Store a reference to the created confirmation modal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            overlayRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        overlayRef:     OverlayRef | null\n\n                    \n                \n                    \n                        \n                            Type :     OverlayRef | null\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation.directive.ts:51\n                            \n                        \n\n                \n                    \n                        Store a reference to the modal overlay\n\n                    \n                \n\n            \n        \n\n\n\n    \n\n    \n        Confirmation\n\nThis directive can be attached to any  to enable a confirmation step before triggering\nthe button's action.\nBasic flow:\n\nThe user clicks the button\nA pop-up appears asking user to cancel or confirm\nIf the user clicks 'confirm', the original ts-button click event is emitted\nIf the user clicks 'cancel' the pop-up is closed\n\n\n\nTable of Contents\n\nBasic usage\nCancelled event\n\n\nBasic usage\nAdd the directive to any ts-button:\n\n  Click me!\nCancelled event\nThis directive exposes a new event that can be used to determine when a user has chosen 'cancel'\nfrom the confirmation pop-up.\n\n  Click me!\n\n    \n\n    \n        import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  ConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n} from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ESCAPE } from '@terminus/ngx-tools/keycodes';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { untilComponentDestroyed } from '@terminus/ngx-tools';\nimport { filter, merge } from 'rxjs/operators';\n\nimport { TsConfirmationModalComponent } from './confirmation-modal.component';\nimport { TsButtonComponent } from './../button/button.component';\n\n\n/**\n * A directive to inject a confirmation step into any button\n *\n * @example\n *         \n *           Click me!\n *         \n */\n@Directive({\n  selector: '[tsConfirmation]',\n  host: {\n    class: 'ts-confirmation',\n  },\n  exportAs: 'tsConfirmation',\n})\nexport class TsConfirmationDirective implements OnDestroy, OnInit {\n  /**\n   * Store a reference to the created confirmation modal\n   */\n  private modalInstance!: TsConfirmationModalComponent;\n\n  /**\n   * Store a reference to the modal overlay\n   */\n  private overlayRef!: OverlayRef | null;\n\n  /**\n   * An event emitted when the confirmation is cancelled\n   */\n  @Output()\n  public cancelled: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private elementRef: ElementRef,\n    private overlay: Overlay,\n    private host: TsButtonComponent,\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Spawn the confirmation overlay on click\n   *\n   * @param event - The MouseEvent\n   */\n  @HostListener('click', ['$event'])\n  public onClick(event: Event): void {\n    this.createOverlay();\n  }\n\n\n  /**\n   * Set a flag in the {@link TsButtonComponent} to intercept the click\n   */\n  public ngOnInit(): void {\n    this.host.interceptClick = true;\n  }\n\n\n  /**\n   * Dismiss the overlay and clean up observables\n   */\n  public ngOnDestroy(): void {\n    this.dismissOverlay();\n    this.host.interceptClick = false;\n  }\n\n\n  /**\n   * Create and attach the confirmation overlay\n   */\n  private createOverlay(): void {\n    const positionStrategy: ConnectedPositionStrategy = this.overlay.position().connectedTo(\n      this.elementRef,\n      {\n        originX: 'center',\n        originY: 'bottom',\n      },\n      {\n        overlayX: 'center',\n        overlayY: 'top',\n      },\n    );\n\n    const overlayConfig: OverlayConfig = new OverlayConfig({\n      positionStrategy,\n      hasBackdrop: true,\n      backdropClass: 'ts-confirmation-overlay',\n      panelClass: ['qa-confirmation', 'ts-confirmation-overlay__panel'],\n    });\n\n    // Create the overlay\n    this.overlayRef = this.overlay.create(overlayConfig);\n\n    // Wire up listeners for overlay clicks and ESC key\n    this.overlayRef._keydownEvents.pipe(\n      filter((event) => event.keyCode === ESCAPE),\n      merge(this.overlayRef.backdropClick()),\n      untilComponentDestroyed(this),\n    ).subscribe(() => {\n      this.dismissOverlay();\n      this.cancelled.emit(true);\n    });\n\n    // Create and attach the modal\n    const userProfilePortal = new ComponentPortal(TsConfirmationModalComponent);\n    this.modalInstance = this.overlayRef.attach(userProfilePortal).instance;\n\n    // Start the progress indicator of the TsButton\n    this.host.showProgress = true;\n\n    // Subscribe to the continue event\n    this.modalInstance.confirm.subscribe((shouldProceed: boolean) => {\n      if (coerceBooleanProperty(shouldProceed)) {\n        this.host.clickEvent.emit(this.host.originalClickEvent);\n        this.dismissOverlay();\n      } else {\n        this.dismissOverlay();\n        this.cancelled.emit(true);\n      }\n    });\n  }\n\n\n  /**\n   * Dismiss the overlay\n   */\n  private dismissOverlay(): void {\n    // istanbul ignore else\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n    }\n    // Stop the progress indicator of the TsButton\n    this.host.showProgress = false;\n    this.changeDetectorRef.markForCheck();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsConfirmationModalComponent.html":{"url":"components/TsConfirmationModalComponent.html","title":"component - TsConfirmationModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsConfirmationModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/confirmation/confirmation-modal.component.ts\n\n\n    \n        Description\n    \n    \n        The confirmation modal used by TsConfirmationDirective\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsConfirmation\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-confirmation-modal\n            \n\n            \n                styleUrls\n                confirmation-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirmation-modal.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                confirm\n                            \n                            \n                                    Public\n                                gap\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confirm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirm:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation-modal.component.ts:29\n                            \n                        \n\n                \n                    \n                        Stream confirmation choices\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gap:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : TS_SPACING.large[0]\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/confirmation/confirmation-modal.component.ts:34\n                            \n                        \n\n                \n                    \n                        Define the space between the buttons\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { TS_SPACING } from './../spacing/spacing.constant';\n\n\n/**\n * The confirmation modal used by {@link TsConfirmationDirective}\n */\n@Component({\n  selector: 'ts-confirmation-modal',\n  styleUrls: ['./confirmation-modal.component.scss'],\n  templateUrl: './confirmation-modal.component.html',\n  host: {\n    class: 'ts-confirmation',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsConfirmation',\n})\nexport class TsConfirmationModalComponent {\n  /**\n   * Stream confirmation choices\n   */\n  public confirm: Subject = new Subject();\n\n  /**\n   * Define the space between the buttons\n   */\n  public gap: string = TS_SPACING.large[0];\n}\n\n    \n\n    \n        \n  \n    Cancel\n  \n\n  \n    Confirm\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Cancel        Confirm  '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsConfirmationModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsConfirmationModule.html":{"url":"modules/TsConfirmationModule.html","title":"module - TsConfirmationModule","body":"\n                   \n\n\n\n\n  Modules\n  TsConfirmationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsConfirmationModule\n\n\n\ncluster_TsConfirmationModule_declarations\n\n\n\ncluster_TsConfirmationModule_imports\n\n\n\ncluster_TsConfirmationModule_exports\n\n\n\n\nTsConfirmationDirective\n\nTsConfirmationDirective\n\n\n\nTsConfirmationModule\n\nTsConfirmationModule\n\nTsConfirmationModule -->\n\nTsConfirmationDirective->TsConfirmationModule\n\n\n\n\n\nTsConfirmationModalComponent\n\nTsConfirmationModalComponent\n\nTsConfirmationModule -->\n\nTsConfirmationModalComponent->TsConfirmationModule\n\n\n\n\n\nTsConfirmationDirective \n\nTsConfirmationDirective \n\nTsConfirmationDirective  -->\n\nTsConfirmationModule->TsConfirmationDirective \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsConfirmationModule -->\n\nTsButtonModule->TsConfirmationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/confirmation/confirmation.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsConfirmationDirective\n                            \n                            \n                                TsConfirmationModalComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TsConfirmationModalComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsConfirmationDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { TsButtonModule } from './../button/button.module';\nimport { TsConfirmationDirective } from './confirmation.directive';\nimport { TsConfirmationModalComponent } from './confirmation-modal.component';\n\nexport * from './confirmation.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    TsButtonModule,\n    FlexLayoutModule,\n  ],\n  declarations: [\n    TsConfirmationDirective,\n    TsConfirmationModalComponent,\n  ],\n  exports: [\n    TsConfirmationDirective,\n  ],\n  entryComponents: [\n    TsConfirmationModalComponent,\n  ],\n})\nexport class TsConfirmationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsCopyComponent.html":{"url":"components/TsCopyComponent.html","title":"component - TsCopyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsCopyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/copy/copy.component.ts\n\n\n    \n        Description\n    \n    \n        This is the TsCopyComponent UI Component\nQA CSS CLASSES\nqa-copy: Placed on the div element which contains this component\nqa-copy-content: Placed on a div element which contains the content which will be copied\nqa-copy-icon: Placed on the icon which copies the content to the clipboard when clicked\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    My text to copy!\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsCopy\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-copy\n            \n\n            \n                styleUrls\n                copy.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./copy.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                content\n                            \n                            \n                                    Private\n                                document\n                            \n                            \n                                    Public\n                                hasSelected\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                rippleColor\n                            \n                            \n                                    Private\n                                window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                copyToClipboard\n                            \n                            \n                                    Public\n                                resetSelection\n                            \n                            \n                                    Public\n                                selectText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disableInitialSelection\n                            \n                            \n                                enableQuickCopy\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(documentService: TsDocumentService, windowService: TsWindowService)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/copy/copy.component.ts:92\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        documentService\n                                                  \n                                                        \n                                                                    TsDocumentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        windowService\n                                                  \n                                                        \n                                                                    TsWindowService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disableInitialSelection\n                    \n                    \n                        Define if the initial click should select the contents\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:80\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableQuickCopy\n                    \n                    \n                        Define if the copy to clipboard functionality is enabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:86\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the component theme\n\n                            \n                            Type:    TsStyleThemeTypes\n\n                            \n                        \n                            Default value: 'primary'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:92\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            copyToClipboard\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        copyToClipboard(text: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:164\n                            \n                        \n\n\n                \n                    \n                            Copy text to the user's clipboard\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe text to copy\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resetSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resetSelection()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:154\n                            \n                        \n\n\n                \n                    \n                            Reset the text selection\nNOTE: The containing div must have a tabindex set or no blur event will be fired\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectText(element: ElementRef, hasSelected: boolean, disabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            Select the text content of the passed in element\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    ElementRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe element whose text should be selected\n\n\n                                                        \n                                                \n                                                \n                                                        hasSelected\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe flag defining if the selection has already been made\n\n\n                                                        \n                                                \n                                                \n                                                        disabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe flag defining if the selection functionality should be disabled\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    The value representing if the copy was successful\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            content\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        content:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:74\n                            \n                        \n\n                \n                    \n                        Define access to the wrapper around the content to be copied\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            document\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        document:     Document\n\n                    \n                \n                    \n                        \n                            Type :     Document\n\n                        \n                    \n                    \n                        \n                            Default value : this.documentService.document\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:47\n                            \n                        \n\n                \n                    \n                        Store a reference to the document object\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasSelected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:52\n                            \n                        \n\n                \n                    \n                        Internal flag to track if the contents have been selected\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'content_copy'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:57\n                            \n                        \n\n                \n                    \n                        Define the copy icon\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rippleColor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rippleColor:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '#1a237e'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:63\n                            \n                        \n\n                \n                    \n                        Define the color of the material ripple\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            window\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        window:     Window\n\n                    \n                \n                    \n                        \n                            Type :     Window\n\n                        \n                    \n                    \n                        \n                            Default value : this.windowService.nativeWindow\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/copy/copy.component.ts:68\n                            \n                        \n\n                \n                    \n                        Store a reference to the window object\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        textContent\n                    \n                \n\n                \n                    \n                        gettextContent()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/copy/copy.component.ts:109\n                                \n                            \n                    \n                        \n                                Return the inner text content\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  TsWindowService,\n  TsDocumentService,\n} from '@terminus/ngx-tools';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * This is the TsCopyComponent UI Component\n *\n * #### QA CSS CLASSES\n * `qa-copy`: Placed on the div element which contains this component\n * `qa-copy-content`: Placed on a div element which contains the content which will be copied\n * `qa-copy-icon`: Placed on the icon which copies the content to the clipboard when clicked\n *\n * @example\n * My text to copy!\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-copy',\n  templateUrl: './copy.component.html',\n  styleUrls: ['./copy.component.scss'],\n  host: {\n    class: 'ts-copy',\n  },\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsCopy',\n})\nexport class TsCopyComponent {\n  /**\n   * Store a reference to the document object\n   */\n  private document: Document = this.documentService.document;\n\n  /**\n   * Internal flag to track if the contents have been selected\n   */\n  public hasSelected: boolean = false;\n\n  /**\n   * Define the copy icon\n   */\n  public icon: string = 'content_copy';\n\n  /**\n   * Define the color of the material ripple\n   */\n  // FIXME: This color should be coming from a config\n  public rippleColor: string = '#1a237e';\n\n  /**\n   * Store a reference to the window object\n   */\n  private window: Window = this.windowService.nativeWindow;\n\n  /**\n   * Define access to the wrapper around the content to be copied\n   */\n  @ViewChild('content')\n  public content!: ElementRef;\n\n  /**\n   * Define if the initial click should select the contents\n   */\n  @Input()\n  public disableInitialSelection: boolean = false;\n\n  /**\n   * Define if the copy to clipboard functionality is enabled\n   */\n  @Input()\n  public enableQuickCopy: boolean = false;\n\n  /**\n   * Define the component theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private documentService: TsDocumentService,\n    private windowService: TsWindowService,\n  ) {}\n\n\n  /**\n   * Return the inner text content\n   *\n   * @return The text content of the inner \n   */\n  public get textContent(): string {\n    const hasInnerText =\n      this.content && this.content.nativeElement && this.content.nativeElement.innerText;\n\n    if (hasInnerText) {\n      return this.content.nativeElement.innerText;\n    } else {\n      return '';\n    }\n  }\n\n\n  /**\n   * Select the text content of the passed in element\n   *\n   * @param element - The element whose text should be selected\n   * @param hasSelected - The flag defining if the selection has already been made\n   * @param disabled - The flag defining if the selection functionality should be disabled\n   * @return The value representing if the copy was successful\n   */\n  public selectText(element: ElementRef, hasSelected: boolean, disabled: boolean): boolean {\n    // If this functionality is disabled OR the text has already been selected,\n    // do not intercept any more clicks until the focus is reset\n    if (disabled || hasSelected) {\n      return false;\n    }\n\n    const selection = this.window.getSelection();\n    // NOTE: Adding the type of 'Range' to this causes an error with `range.selectNodeContents`\n    // `Argument of type ElementRef is not assignable to type 'Node'`\n    const range = this.document.createRange();\n\n    range.selectNodeContents(element as any);\n    selection.removeAllRanges();\n    selection.addRange(range);\n\n    this.hasSelected = true;\n    return true;\n  }\n\n\n  /**\n   * Reset the text selection\n   * NOTE: The containing div must have a `tabindex` set or no blur event will be fired\n   */\n  public resetSelection(): void {\n    this.hasSelected = false;\n  }\n\n\n  /**\n   * Copy text to the user's clipboard\n   *\n   * @param text - The text to copy\n   */\n  public copyToClipboard(text: string): void {\n    // Create a hidden textarea to seed with text content\n    const target = this.document.createElement('textarea');\n    target.className = 'targetElement';\n    target.style.position = 'absolute';\n    target.style.left = '101%';\n    target.style.top = '0';\n    target.style.width = '1px';\n    target.style.height = '1px';\n    target.textContent = text;\n\n    // Add the textarea, focus and select the text\n    this.document.body.appendChild(target);\n    target.focus();\n    target.setSelectionRange(0, target.value.length);\n\n    // Copy the selection or fall back to prompt\n    try {\n      this.document.execCommand('copy');\n      target.remove();\n    } catch (error) {\n      // Fall back to the native alert\n      this.window.prompt('Copy to clipboard: Ctrl+C, Enter', text);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      \n        {{ icon }}\n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ icon }}            '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsCopyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsCopyModule.html":{"url":"modules/TsCopyModule.html","title":"module - TsCopyModule","body":"\n                   \n\n\n\n\n  Modules\n  TsCopyModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsCopyModule\n\n\n\ncluster_TsCopyModule_declarations\n\n\n\ncluster_TsCopyModule_imports\n\n\n\ncluster_TsCopyModule_exports\n\n\n\n\nTsCopyComponent\n\nTsCopyComponent\n\n\n\nTsCopyModule\n\nTsCopyModule\n\nTsCopyModule -->\n\nTsCopyComponent->TsCopyModule\n\n\n\n\n\nTsCopyComponent \n\nTsCopyComponent \n\nTsCopyComponent  -->\n\nTsCopyModule->TsCopyComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsCopyModule -->\n\nTsIconModule->TsCopyModule\n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTsCopyModule -->\n\nTsTooltipModule->TsCopyModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/copy/copy.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsCopyComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsCopyComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { TsTooltipModule } from './../tooltip/tooltip.module';\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsCopyComponent } from './copy.component';\n\nexport * from './copy.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    TsIconModule,\n    MatRippleModule,\n    TsTooltipModule,\n  ],\n  exports: [\n    TsCopyComponent,\n  ],\n  declarations: [\n    TsCopyComponent,\n  ],\n})\nexport class TsCopyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsDateAdapter.html":{"url":"classes/TsDateAdapter.html","title":"class - TsDateAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsDateAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/input/date-adapter.ts\n        \n\n            \n                Description\n            \n            \n                Custom date adapter for the Material Datepicker\n\n            \n\n            \n                Extends\n            \n            \n                    NativeDateAdapter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                forceTwoDigits\n                            \n                            \n                                format\n                            \n                            \n                                isValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            forceTwoDigits\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forceTwoDigits(n: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/input/date-adapter.ts:58\n                            \n                        \n\n\n                \n                    \n                            Force a two digit string with a preceeding 0 if needed\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        n\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe number\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The two digit number\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            format\n                            \n                            \n                        \n                    \n                \n                \n                    \nformat(date: Date, displayFormat?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/input/date-adapter.ts:43\n                            \n                        \n\n\n                \n                    \n                            Format the date when setting the UI\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe date chosen\n\n\n                                                        \n                                                \n                                                \n                                                        displayFormat\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The date string\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isValid\n                            \n                            \n                        \n                    \n                \n                \n                    \nisValid(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/input/date-adapter.ts:69\n                            \n                        \n\n\n                \n                    \n                            Check if a date is valid\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe date in question\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether it is valid\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { NativeDateAdapter } from '@angular/material/core';\nimport { isValid as isValidDate } from 'date-fns';\n\n\nexport const TS_DATE_FORMATS = {\n  parse: {\n    dateInput: {\n      month: 'short',\n      year: 'numeric',\n      day: 'numeric',\n    },\n  },\n  display: {\n    dateInput: 'input',\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'short',\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n    },\n  },\n};\n\n\n/**\n * Custom date adapter for the Material Datepicker\n */\nexport class TsDateAdapter extends NativeDateAdapter {\n  /**\n   * Format the date when setting the UI\n   *\n   * @param date - The date chosen\n   * @param date - The desired format (not currently using, but must match API)\n   * @return The date string\n   */\n  format(date: Date, displayFormat?: any): string {\n    const day = this.forceTwoDigits(date.getDate());\n    const month = this.forceTwoDigits(date.getMonth() + 1);\n    const year = date.getFullYear();\n\n    return `${month}-${day}-${year}`;\n  }\n\n\n  /**\n   * Force a two digit string with a preceeding `0` if needed\n   *\n   * @param n - The number\n   * @return The two digit number\n   */\n  private forceTwoDigits(n: number): string {\n    return ('00' + n).slice(-2);\n  }\n\n\n  /**\n   * Check if a date is valid\n   *\n   * @param date - The date in question\n   * @return Whether it is valid\n   */\n  isValid(date: Date): boolean {\n    return isValidDate(date) && !isNaN(date.getTime());\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TsDatePipe.html":{"url":"pipes/TsDatePipe.html","title":"pipe - TsDatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  TsDatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/date/date.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        tsDate\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string | Date, format: TsDateTypes)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/pipes/date/date.pipe.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string | Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        format\n                                                        \n                                                                    TsDateTypes\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                'short'\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Pipe,\n  PipeTransform,\n  isDevMode,\n} from '@angular/core';\nimport {\n  isValid,\n  format as formatDate,\n} from 'date-fns';\n\n\n/**\n * Define the allowed date formats for the {@link TsDatePipe}.\n */\nexport type TsDateTypes =\n  // 02/08/2018\n  'short'\n  // February 8th, 2018\n  | 'medium'\n  // Thursday, February 8th, 2018, 12:00:00am\n  | 'extended'\n  // 2018-02-08T05:00:00.000Z\n  | 'timestamp'\n;\n\n\n@Pipe({\n  name: 'tsDate',\n})\nexport class TsDatePipe implements PipeTransform {\n  transform(value: string|Date, format: TsDateTypes = 'short'): string | undefined {\n    const validFormats: TsDateTypes[] = [\n      'short',\n      'medium',\n      'extended',\n      'timestamp',\n    ];\n\n    // Check for null values to avoid issues during data-binding\n    if (!value) {\n      return;\n    }\n\n    // Check for date validity\n    if (!isValid(value) && isDevMode()) {\n      throw Error(`'${value}' is not a valid date.`);\n    }\n\n    // Check for format validity\n    if ((validFormats.indexOf(format) \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsDateRange.html":{"url":"interfaces/TsDateRange.html","title":"interface - TsDateRange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsDateRange\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/date-range/date-range.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the structure of the date range object used by TsDateRangeComponent\nTODO: In the process of deprecating the null portion of this interface. It should be using\nundefined instead.\nDeprecation target: 10.0.0\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        end\n                                \n                                \n                                        start\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                    \n                                \n                                \n                                    \n                                        end:     Date | undefined | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | undefined | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The end date of the range\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                    \n                                \n                                \n                                    \n                                        start:     Date | undefined | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | undefined | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The start date of the range\n\n                                \n                            \n                        \n                    \n            \n    \n\n    \n        Date Range\n\n\n\nTable of Contents\n\nBasic usage\nEvent driven\nDate range boundaries\nDisabling\nDisable a control\nDisable the component\n\n\n\n\nBasic usage\nPass in the form control:\n\n  \n\n  Submit\nmyForm: FormGroup = this.formBuilder.group({\n  // Showing a nested example since usually a date range would be nested in a group\n  dateRange: this.formBuilder.group({\n    startDate: [ // This control MUST be named `startDate`\n      new Date(2017, 4, 6),\n    ],\n    endDate: [ // This MUST be named `endDate`\n      new Date(2017, 4, 8),\n    ],\n  }),\n});NOTE: The keys inside the formGroup passed to the dateFormGroup input must be named\nstartDate and endDate. (see example directly above)\nNOTE: If using a form with nested form groups, each group must be created with\nformBuilder.group for the form get control to work:\n// Notice the nested `dateRange` object without using `.group`\nmyForm: FormGroup = this.formBuilder.group({\n  dateRange: {\n    startDate: [\n      new Date(2017, 4, 6),\n    ],\n    endDate: [\n      new Date(2017, 4, 8),\n    ],\n  },\n});\n\n// THIS WILL FAIL!\nconst range = myForm.get('dateRange');\n\n//////////////////////////////////////////////////\n\n// Notice the nested `dateRange` object IS using `.group`\nmyForm: FormGroup = this.formBuilder.group({\n  dateRange: this.formBuilder.group({\n    startDate: [\n      new Date(2017, 4, 6),\n      [\n        Validators.required,\n      ],\n    ],\n    endDate: [\n      new Date(2017, 4, 8),\n      [\n        Validators.required,\n      ],\n    ],\n  }),\n});\n\n// Now there is a group for us to 'get'\nconst range = myForm.get('dateRange');Event driven\nThere are three selection events that you can tie into:\n\nstartSelected is fired when a start date is selected.\nendSelected is fired when an end date is selected.\nchange is fired when the date range changes.\n\nDate range boundaries\nTo define bounds for date selection, pass in a valid Date to each of these @Inputs:\n\nendMaxDate\nendMinDate\nstartMaxDate\nstartMinDate\n\nstartDate1 = new Date(2017, 1, 1);\nstartDate2 = new Date(2017, 8, 1);\nendDate1 = new Date(2017, 1, 2);\nendDate2 = new Date(2017, 8, 2;Disabling\nDisable a control\nControls can be enabled or disabled via the associated form control:\nmyForm: FormGroup = this.formBuilder.group({\n  dateRange: this.formBuilder.group({\n    startDate: [\n      {\n        value: new Date(2017, 4, 6),\n        disabled: true,\n      },\n    ],\n    endDate: [\n      new Date(2017, 4, 8),\n    ],\n  }),\n});\n\n// Enable it at any time:\nconst ctrl = this.myForm.get('dateRange.startDate')\nif (ctr) {\n  ctrl.enable();\n}Disable the component\nThe entire component can be disabled:\n\n    \n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n} from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n/*\n *import { TsDatepickerInputEvent } from './../input/input.component';\n */\n\n\n/**\n * Define the structure of the date range object used by {@link TsDateRangeComponent}\n *\n * TODO: In the process of deprecating the `null` portion of this interface. It should be using\n * `undefined` instead.\n *\n * Deprecation target: 10.0.0\n */\nexport interface TsDateRange {\n  /**\n   * The start date of the range\n   */\n  start: Date | undefined | null;\n\n  /**\n   * The end date of the range\n   */\n  end: Date | undefined | null;\n}\n\n\n/**\n * This is the date-range UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-date-range`: The primary component container\n * - `qa-date-range-start-datepicker`: The start date {@link TsInputComponent}\n * - `qa-date-range-end-datepicker`: The end date {@link TsInputComponent}\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-date-range',\n  templateUrl: './date-range.component.html',\n  styleUrls: ['./date-range.component.scss'],\n  host: {\n    class: 'ts-date-range',\n  },\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsDateRange',\n})\nexport class TsDateRangeComponent implements OnInit {\n  /**\n   * Getter to return the date range as an object\n   *\n   * @return The current date range\n   */\n  private get dateRange(): TsDateRange {\n    return {\n      start: this.startDateControl.value,\n      end: this.endDateControl.value,\n    };\n  }\n\n  /**\n   * Provide quick access to the endDate form control\n   */\n  public get endDateControl(): AbstractControl {\n    const ctrl: AbstractControl | null = this.dateFormGroup ? this.dateFormGroup.get('endDate') : null;\n\n    return ctrl ? ctrl : this.fallbackEndDateControl;\n  }\n\n  /**\n   * Expose the minimum date for the endDate\n   *\n   * NOTE: `any` is used since we cannot seem to use union types in a BehaviorSubject\n   */\n  public endMinDate$: BehaviorSubject = new BehaviorSubject(undefined);\n\n  /**\n   * Define the end date label\n   */\n  public endLabel: string = 'End date';\n\n  /**\n   * Define a fallback control in case one is not passed in\n   */\n  private fallbackEndDateControl: FormControl = new FormControl();\n\n  /**\n   * Define a fallback control in case one is not passed in\n   */\n  private fallbackStartDateControl: FormControl = new FormControl();\n\n  /**\n   * Define the separator between the two date inputs\n   */\n  public separator: string = '-';\n\n  /**\n   * Provide quick access to the startDate form control\n   */\n  public get startDateControl(): AbstractControl {\n    const ctrl: AbstractControl | null = this.dateFormGroup ? this.dateFormGroup.get('startDate') : null;\n\n    return ctrl ? ctrl : this.fallbackStartDateControl;\n  }\n\n  /**\n   * Expose the maximum date for the startDate\n   *\n   * NOTE: `any` is used since we cannot seem to use union types in a BehaviorSubject\n   */\n  public startMaxDate$: BehaviorSubject = new BehaviorSubject(undefined);\n\n  /**\n   * Define the start date label\n   */\n  public startLabel: string = 'Start date';\n\n  /**\n   * Define the form group to attach the date range to\n   */\n  @Input()\n  public set dateFormGroup(value: FormGroup | AbstractControl | undefined) {\n    this._dateFormGroup = value;\n  }\n  public get dateFormGroup(): FormGroup | AbstractControl | undefined {\n    return this._dateFormGroup;\n  }\n  private _dateFormGroup: FormGroup | AbstractControl | undefined;\n\n  /**\n   * Define the max date for the end date\n   */\n  @Input()\n  public endMaxDate: Date | undefined;\n\n  /**\n   * Define the min date for the end date\n   */\n  @Input()\n  public endMinDate: Date | undefined;\n\n  /**\n   * Define if the range should be disabled\n   */\n  @Input()\n  public set isDisabled(value: boolean) {\n    this._isDisabled = coerceBooleanProperty(value);\n  }\n  public get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n  private _isDisabled: boolean = false;\n\n  /**\n   * Define the starting view for both datepickers\n   */\n  @Input()\n  public startingView: 'month' | 'year' = 'month';\n\n  /**\n   * Define the max date for the starting date\n   */\n  @Input()\n  public startMaxDate: Date | undefined;\n\n  /**\n   * Define the min date for the starting date\n   */\n  @Input()\n  public startMinDate: Date | undefined;\n\n  /**\n   * Define the component theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Event emitted anytime the range is changed\n   */\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n\n  /**\n   * Output the end date when selected\n   */\n  @Output()\n  public endSelected: EventEmitter = new EventEmitter();\n\n  /**\n   * Output the start date when selected\n   */\n  @Output()\n  public startSelected: EventEmitter = new EventEmitter();\n\n\n  /**\n   * Seed initial date range values\n   */\n  public ngOnInit(): void {\n    // Seed values from a passed in form group\n    if (this.dateFormGroup) {\n      this.initializeMinAndMax(this.dateFormGroup);\n    }\n  }\n\n\n  /**\n   * Set up initial min and max dates\n   *\n   * @param formGroup - The date form group\n   */\n  private initializeMinAndMax(formGroup: FormGroup | AbstractControl): void {\n    if (!formGroup) {\n      return;\n    }\n    const startControl: AbstractControl | null = formGroup.get('startDate');\n    const endControl: AbstractControl | null = formGroup.get('endDate');\n    const startValue: Date | undefined = startControl ? startControl.value /* istanbul ignore next - Unreachable */ : undefined;\n    const endValue: Date | undefined = endControl ? endControl.value /* istanbul ignore next - Unreachable */ : undefined;\n\n    // istanbul ignore else\n    if (startValue || this.endMinDate) {\n      this.endMinDate$.next(startValue || this.endMinDate);\n    }\n\n    // istanbul ignore else\n    if (endValue || this.startMaxDate) {\n      this.startMaxDate$.next(endValue || this.startMaxDate);\n    }\n  }\n\n\n  /**\n   * Emit the selected start date and date range\n   *\n   * @param datepickerEvent - The event received from the range start event\n   * {@link TsDatepickerComponent}\n   */\n  public startDateSelected(date: Date): void {\n    if (date) {\n      this.endMinDate$.next(date);\n\n      // Update the form value if a formGroup was passed in\n      // istanbul ignore else\n      if (this.dateFormGroup && this.startDateControl) {\n        this.startDateControl.setValue(date);\n      }\n\n      this.startSelected.emit(date);\n      this.change.emit(this.dateRange);\n    } else {\n      // If no startDate was selected, reset to the original endMinDate\n      this.endMinDate$.next(this.endMinDate);\n    }\n  }\n\n\n  /**\n   * Emit the selected end date and date range\n   *\n   * @param datepickerEvent - The event received from the range end event\n   * {@link TsDatepickerComponent}\n   */\n  public endDateSelected(date: Date): void {\n    if (date) {\n      this.startMaxDate$.next(date);\n\n      // Update the form value if a formGroup was passed in\n      // istanbul ignore else\n      if (this.dateFormGroup && this.endDateControl) {\n        this.endDateControl.setValue(date);\n      }\n\n      this.endSelected.emit(date);\n      this.change.emit(this.dateRange);\n    } else {\n      // If no endDate was selected, reset to the original startMaxDate\n      this.startMaxDate$.next(this.startMaxDate);\n    }\n  }\n\n\n  /**\n   * Update dates when the start date input receives a blur event\n   *\n   * @param date - The date entered\n   */\n  public startBlur(date: Date | undefined): void {\n    this.endMinDate$.next(date);\n  }\n\n\n  /**\n   * Update dates when the end date input receives a blur event\n   *\n   * @param date - The date entered\n   */\n  public endBlur(date: Date | undefined): void {\n    this.startMaxDate$.next(date);\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsDateRangeModule.html":{"url":"modules/TsDateRangeModule.html","title":"module - TsDateRangeModule","body":"\n                   \n\n\n\n\n  Modules\n  TsDateRangeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsDateRangeModule\n\n\n\ncluster_TsDateRangeModule_declarations\n\n\n\ncluster_TsDateRangeModule_imports\n\n\n\ncluster_TsDateRangeModule_exports\n\n\n\n\nTsDateRangeComponent\n\nTsDateRangeComponent\n\n\n\nTsDateRangeModule\n\nTsDateRangeModule\n\nTsDateRangeModule -->\n\nTsDateRangeComponent->TsDateRangeModule\n\n\n\n\n\nTsDateRangeComponent \n\nTsDateRangeComponent \n\nTsDateRangeComponent  -->\n\nTsDateRangeModule->TsDateRangeComponent \n\n\n\n\n\nTsInputModule\n\nTsInputModule\n\nTsDateRangeModule -->\n\nTsInputModule->TsDateRangeModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/date-range/date-range.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsDateRangeComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsInputModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsDateRangeComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { TsInputModule } from './../input/input.module';\nimport { TsDateRangeComponent } from './date-range.component';\n\nexport * from './date-range.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    TsInputModule,\n  ],\n  exports: [\n    TsDateRangeComponent,\n  ],\n  declarations: [\n    TsDateRangeComponent,\n  ],\n})\nexport class TsDateRangeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TsDropProtectionService.html":{"url":"injectables/TsDropProtectionService.html","title":"injectable - TsDropProtectionService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TsDropProtectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/file-upload/drop-protection.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hasProtection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                prevent\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(windowService: TsWindowService)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/file-upload/drop-protection.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        windowService\n                                                  \n                                                        \n                                                                    TsWindowService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/drop-protection.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            Add drop protection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prevent\n                            \n                            \n                        \n                    \n                \n                \n                    \nprevent(e: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/drop-protection.service.ts:46\n                            \n                        \n\n\n                \n                    \n                            Prevent default\nNOTE: In order to remove an event listener we need a reference to a method that does not change.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/drop-protection.service.ts:30\n                            \n                        \n\n\n                \n                    \n                            Remove drop protection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hasProtection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasProtection:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/drop-protection.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TsWindowService } from '@terminus/ngx-tools';\n\n\n@Injectable()\nexport class TsDropProtectionService {\n  private hasProtection = false;\n\n\n  constructor(\n    private windowService: TsWindowService,\n  ) { }\n\n\n  /**\n   * Add drop protection\n   */\n  add(): void {\n    if (!this.hasProtection) {\n      this.windowService.nativeWindow.addEventListener('dragover', this.prevent, false);\n      this.windowService.nativeWindow.addEventListener('drop', this.prevent, false);\n      this.hasProtection = true;\n    }\n  }\n\n\n  /**\n   * Remove drop protection\n   */\n  remove(): void {\n    if (this.hasProtection) {\n      this.windowService.nativeWindow.removeEventListener('dragover', this.prevent, false);\n      this.windowService.nativeWindow.removeEventListener('drop', this.prevent, false);\n      this.hasProtection = false;\n    }\n  }\n\n\n  /**\n   * Prevent default\n   *\n   * NOTE: In order to remove an event listener we need a reference to a method that does not change.\n   *\n   * @param event - The event\n   */\n  prevent(e: Event): void {\n    e.preventDefault();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsFileImageDimensionContraint.html":{"url":"interfaces/TsFileImageDimensionContraint.html","title":"interface - TsFileImageDimensionContraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsFileImageDimensionContraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/file-upload/image-dimension-constraints.ts\n        \n\n            \n                Description\n            \n            \n                An indiviual size constraint\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        height\n                                \n                                \n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TsFileImageDimensionContraint {\n  height: {\n    min: number;\n    max: number;\n  };\n  width: {\n    min: number;\n    max: number;\n  };\n}\n\n/**\n * An array of file size constraints\n */\nexport type TsFileImageDimensionConstraints = TsFileImageDimensionContraint[];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsFileUploadModule.html":{"url":"modules/TsFileUploadModule.html","title":"module - TsFileUploadModule","body":"\n                   \n\n\n\n\n  Modules\n  TsFileUploadModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsFileUploadModule\n\n\n\ncluster_TsFileUploadModule_declarations\n\n\n\ncluster_TsFileUploadModule_TsFileUploadComponent_providers\n\n\n\ncluster_TsFileUploadModule_imports\n\n\n\ncluster_TsFileUploadModule_exports\n\n\n\ncluster_TsFileUploadModule_providers\n\n\n\n\nTsFileUploadComponent\n\nTsFileUploadComponent\n\n\n\nTsFileUploadModule\n\nTsFileUploadModule\n\nTsFileUploadModule -->\n\nTsFileUploadComponent->TsFileUploadModule\n\n\n\n\n\nTsFileUploadComponent \n\nTsFileUploadComponent \n\nTsFileUploadComponent  -->\n\nTsFileUploadModule->TsFileUploadComponent \n\n\n\n\n\nCUSTOM_FILE_UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_FILE_UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR\n\nTsFileUploadComponent -->\n\nCUSTOM_FILE_UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR->TsFileUploadComponent\n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsFileUploadModule -->\n\nTsButtonModule->TsFileUploadModule\n\n\n\n\n\nTsIconButtonModule\n\nTsIconButtonModule\n\nTsFileUploadModule -->\n\nTsIconButtonModule->TsFileUploadModule\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsFileUploadModule -->\n\nTsIconModule->TsFileUploadModule\n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTsFileUploadModule -->\n\nTsTooltipModule->TsFileUploadModule\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsFileUploadModule -->\n\nTsValidationMessagesModule->TsFileUploadModule\n\n\n\n\n\nTsDropProtectionService\n\nTsDropProtectionService\n\nTsFileUploadModule -->\n\nTsDropProtectionService->TsFileUploadModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/file-upload/file-upload.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsFileUploadComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsDropProtectionService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsIconButtonModule\n                            \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsFileUploadComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { TsDocumentService } from '@terminus/ngx-tools';\n\nimport { TsButtonModule } from './../button/button.module';\nimport { TsFileUploadComponent } from './file-upload.component';\nimport { TsIconButtonModule } from './../icon-button/icon-button.module';\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsTooltipModule } from './../tooltip/tooltip.module';\nimport { TsValidationMessagesModule } from './../validation-messages/validation-messages.module';\nimport { TsDropProtectionService } from './drop-protection.service';\n\nexport * from './file-upload.component';\nexport * from './image-dimension-constraints';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    FormsModule,\n    MatProgressBarModule,\n    TsButtonModule,\n    TsIconButtonModule,\n    TsIconModule,\n    TsTooltipModule,\n    TsValidationMessagesModule,\n  ],\n  declarations: [\n    TsFileUploadComponent,\n  ],\n  providers: [\n    TsDropProtectionService,\n    TsDocumentService,\n  ],\n  exports: [\n    TsFileUploadComponent,\n  ],\n})\nexport class TsFileUploadModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsFileValidations.html":{"url":"interfaces/TsFileValidations.html","title":"interface - TsFileValidations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsFileValidations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/file-upload/selected-file.ts\n        \n\n            \n                Description\n            \n            \n                The structure of the object to track file validations internally\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fileSize\n                                \n                                \n                                        fileType\n                                \n                                \n                                        imageDimensions\n                                \n                                \n                                        imageRatio\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileSize\n                                    \n                                \n                                \n                                    \n                                        fileSize:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileType\n                                    \n                                \n                                \n                                    \n                                        fileType:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageDimensions\n                                    \n                                \n                                \n                                    \n                                        imageDimensions:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageRatio\n                                    \n                                \n                                \n                                    \n                                        imageRatio:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BehaviorSubject } from 'rxjs';\n\nimport { TsFileImageDimensionConstraints } from './image-dimension-constraints';\nimport { TsImageDimensions } from './image-dimensions';\nimport { TsFileAcceptedMimeTypes } from './mime-types';\nimport { ImageRatio } from './file-upload.module';\n\n\n/**\n * The structure of the object to track file validations internally\n */\nexport interface TsFileValidations {\n  fileType: boolean;\n  fileSize: boolean;\n  imageDimensions: boolean;\n  imageRatio: boolean;\n}\n\n\n/**\n * The number of bytes per kilobyte (for calculations)\n */\nconst BYTES_PER_KB = 1024;\n\n\n/**\n * Manage a single selected file\n *\n * @param file - The selected file\n * @param imageDimensionConstraints - An array of image dimension constraints {@link TsFileImageDimensionConstraints}\n * @param typeConstraint - An array of allowed MIME types {@link TsFileAcceptedMimeTypes}\n * @param maxSize - The maximum size in kilobytes\n * @param ratioConstraint - An array of allowed image ratios in form of ImageRatio\n */\nexport class TsSelectedFile {\n  public name: string | undefined;\n  public mimeType: string;\n  public dimensions: TsImageDimensions | undefined;\n  public ratio: number | undefined;\n  public size: number;\n  public validations: TsFileValidations = {\n    fileType: false,\n    fileSize: false,\n    imageDimensions: false,\n    imageRatio: false,\n  };\n  private fileReader: FileReader = new FileReader();\n\n  /**\n   * Only needed to appease TypeScript when defining `fileLoaded$`\n   */\n  private fileReference?: TsSelectedFile;\n\n  /**\n   * BehaviorSubject to alert consumers when all calculations are complete\n   */\n  public fileLoaded$: BehaviorSubject = new BehaviorSubject(this.fileReference);\n\n\n  constructor(\n    public file: File,\n    private imageDimensionConstraints: TsFileImageDimensionConstraints | undefined,\n    private typeConstraint: TsFileAcceptedMimeTypes[] | undefined,\n    private maxSize: number,\n    private ratioConstraint: Array | undefined,\n  ) {\n    this.mimeType = this.file.type;\n    this.size = Math.ceil(this.file.size / BYTES_PER_KB);\n    this.name = this.file.name;\n\n    // Begin the validation chain by validating image dimensions\n    this.determineImageDimensions(() => {\n      // Validate mime-type\n      // istanbul ignore else\n      if (this.typeConstraint && this.typeConstraint.indexOf(this.file.type as TsFileAcceptedMimeTypes) >= 0) {\n        this.validations.fileType = true;\n      }\n\n      // Validate file size\n      // istanbul ignore else\n      if (this.size  {\n        // istanbul ignore else\n        if (img) {\n          img.src = this.fileReader.result;\n        }\n      };\n      img.onload = (v: Event) => {\n        // istanbul ignore else\n        if (img) {\n          this.dimensions = new TsImageDimensions(img.naturalWidth, img.naturalHeight);\n        }\n\n        // Validate dimensions and ratio\n        this.validations.imageDimensions = this.validateImageDimensions(this.imageDimensionConstraints);\n        this.validations.imageRatio = this.validateImageRatio(this.ratioConstraint);\n        // Call the callback if one exists\n        // istanbul ignore else\n        if (callback) {\n          callback();\n        }\n      };\n    } else {\n      // We are not dealing with an image:\n      // istanbul ignore else\n      if (callback) {\n        callback();\n      }\n\n      // Since this is not an image, set dimension/ratio validation to `true` to 'bypass'\n      this.validations.imageDimensions = true;\n      this.validations.imageRatio = true;\n    }\n\n    // Read the file (this triggers the FileReader load event)\n    this.fileReader.readAsDataURL(this.file);\n  }\n\n\n  /**\n   * Validate the image dimensions\n   *\n   * @param constraints - The constraints this the image dimensions must fit\n   * @return The validation result\n   */\n  private validateImageDimensions(constraints: TsFileImageDimensionConstraints | undefined): boolean {\n    if (!constraints || constraints.length = constraint.height.min && height = constraint.width.min && width  | undefined): boolean {\n    if (!constraints) {\n      return true;\n    }\n\n    const ratios = constraints.map((r) => r.widthRatio / r.heightRatio);\n    for (const r of ratios) {\n      const ratio = this.width / this.height;\n      if (this.isSame(r, ratio)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * A utility function to determine whether two numbers are the same\n   * @param number1 - one number\n   * @param number2 - another number\n   * @return Whether these two numbers are the same\n   */\n\n  private isSame(number1: number, number2: number) {\n    if (Math.abs((number1 - number2) / number1) \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsHeaderCellDefDirective.html":{"url":"directives/TsHeaderCellDefDirective.html","title":"directive - TsHeaderCellDefDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsHeaderCellDefDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/cell.ts\n        \n\n            \n                Description\n            \n            \n                Header cell definition for the TsTableComponent.\nCaptures the template of a column's header cell and as well as cell-specific properties.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , :  }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [tsHeaderCellDef]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer,\n} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: TsCellDefDirective}],\n})\nexport class TsCellDefDirective extends CdkCellDef {}\n\n\n/**\n * Header cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: TsHeaderCellDefDirective}],\n})\nexport class TsHeaderCellDefDirective extends CdkHeaderCellDef {}\n\n\n\n/**\n * Header cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-header-cell',\n  host: {\n    class: 'ts-header-cell',\n    role: 'columnheader',\n  },\n})\nexport class TsHeaderCellDirective extends CdkHeaderCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n\n/**\n * Cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-cell',\n  host: {\n    class: 'ts-cell',\n    role: 'gridcell',\n  },\n})\nexport class TsCellDirective extends CdkCell {\n  constructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    public renderer: Renderer,\n  ) {\n    super(columnDef, elementRef);\n\n    // NOTE(B$): We are adding `noWrap` to the column in `TsColumnDefDirective` which doesn't exist\n    // in the `CdkColumnDef` so we cast it to 'any'.\n    const column: any = columnDef;\n\n    // Set a custom class for each column\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n\n    // Set the no-wrap class if needed\n    if (column.noWrap) {\n      elementRef.nativeElement.classList.add(`ts-column-no-wrap`);\n    }\n\n    // Set inline style for min-width if passed in\n    if (column.minWidth) {\n      renderer.setElementStyle(elementRef.nativeElement, 'minWidth', column.minWidth);\n    }\n  }\n}\n\n\n/**\n * Column definition for the {@link TsTableComponent}.\n *\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[tsColumnDef]',\n  providers: [{provide: CdkColumnDef, useExisting: TsColumnDefDirective}],\n})\nexport class TsColumnDefDirective extends CdkColumnDef {\n  // NOTE(B$): We must rename here so that the property matches the extended CdkColumnDef class\n  // tslint:disable: no-input-rename\n  /**\n   * Define a unique name for this column\n   */\n  @Input('tsColumnDef')\n  name!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define if a column's contents should wrap when long\n   */\n  @Input()\n  public noWrap: boolean = false;\n\n  /**\n   * Define a minimum width for the column\n   */\n  @Input()\n  public minWidth: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsHeaderCellDirective.html":{"url":"directives/TsHeaderCellDirective.html","title":"directive - TsHeaderCellDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsHeaderCellDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/cell.ts\n        \n\n            \n                Description\n            \n            \n                Header cell template container that adds the right classes and role.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ts-header-cell\n                    \n\n                \n            \n        \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(columnDef: CdkColumnDef, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/table/cell.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        columnDef\n                                                  \n                                                        \n                                                                    CdkColumnDef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer,\n} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: TsCellDefDirective}],\n})\nexport class TsCellDefDirective extends CdkCellDef {}\n\n\n/**\n * Header cell definition for the {@link TsTableComponent}.\n *\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[tsHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: TsHeaderCellDefDirective}],\n})\nexport class TsHeaderCellDefDirective extends CdkHeaderCellDef {}\n\n\n\n/**\n * Header cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-header-cell',\n  host: {\n    class: 'ts-header-cell',\n    role: 'columnheader',\n  },\n})\nexport class TsHeaderCellDirective extends CdkHeaderCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n  }\n}\n\n\n/**\n * Cell template container that adds the right classes and role.\n */\n@Directive({\n  selector: 'ts-cell',\n  host: {\n    class: 'ts-cell',\n    role: 'gridcell',\n  },\n})\nexport class TsCellDirective extends CdkCell {\n  constructor(\n    columnDef: CdkColumnDef,\n    elementRef: ElementRef,\n    public renderer: Renderer,\n  ) {\n    super(columnDef, elementRef);\n\n    // NOTE(B$): We are adding `noWrap` to the column in `TsColumnDefDirective` which doesn't exist\n    // in the `CdkColumnDef` so we cast it to 'any'.\n    const column: any = columnDef;\n\n    // Set a custom class for each column\n    elementRef.nativeElement.classList.add(`ts-column-${columnDef.cssClassFriendlyName}`);\n\n    // Set the no-wrap class if needed\n    if (column.noWrap) {\n      elementRef.nativeElement.classList.add(`ts-column-no-wrap`);\n    }\n\n    // Set inline style for min-width if passed in\n    if (column.minWidth) {\n      renderer.setElementStyle(elementRef.nativeElement, 'minWidth', column.minWidth);\n    }\n  }\n}\n\n\n/**\n * Column definition for the {@link TsTableComponent}.\n *\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[tsColumnDef]',\n  providers: [{provide: CdkColumnDef, useExisting: TsColumnDefDirective}],\n})\nexport class TsColumnDefDirective extends CdkColumnDef {\n  // NOTE(B$): We must rename here so that the property matches the extended CdkColumnDef class\n  // tslint:disable: no-input-rename\n  /**\n   * Define a unique name for this column\n   */\n  @Input('tsColumnDef')\n  name!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define if a column's contents should wrap when long\n   */\n  @Input()\n  public noWrap: boolean = false;\n\n  /**\n   * Define a minimum width for the column\n   */\n  @Input()\n  public minWidth: string | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsHeaderRowComponent.html":{"url":"components/TsHeaderRowComponent.html","title":"component - TsHeaderRowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsHeaderRowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/table/row.ts\n\n\n    \n        Description\n    \n    \n        Header template container that contains the cell outlet. Adds the right class and role.\n\n    \n\n    \n        Extends\n    \n    \n            CdkHeaderRow\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsHeaderRow\n            \n\n            \n                host\n                {}\n            \n\n\n\n            \n                preserveWhitespaces\n                false\n            \n\n\n\n            \n                selector\n                ts-header-row\n            \n\n\n\n            \n                template\n                CDK_ROW_TEMPLATE\n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CDK_ROW_TEMPLATE,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  CdkRow,\n  CdkRowDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Header row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other header properties such as the columns to display.\n */\n@Directive({\n  selector: '[tsHeaderRowDef]',\n  providers: [{provide: CdkHeaderRowDef, useExisting: TsHeaderRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why this type of input was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsHeaderRowDef'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsHeaderRowDefDirective extends CdkHeaderRowDef {}\n\n\n/**\n * Data row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n@Directive({\n  selector: '[tsRowDef]',\n  providers: [{provide: CdkRowDef, useExisting: TsRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why it was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsRowDefColumns', 'when: tsRowDefWhen'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsRowDefDirective extends CdkRowDef {}\n\n\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-header-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-header-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsHeaderRow',\n  preserveWhitespaces: false,\n})\nexport class TsHeaderRowComponent extends CdkHeaderRow {}\n\n\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRow',\n  preserveWhitespaces: false,\n})\nexport class TsRowComponent extends CdkRow {}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'CDK_ROW_TEMPLATE'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsHeaderRowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsHeaderRowDefDirective.html":{"url":"directives/TsHeaderRowDefDirective.html","title":"directive - TsHeaderRowDefDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsHeaderRowDefDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/row.ts\n        \n\n            \n                Description\n            \n            \n                Header row definition for the TsTableComponent.\nCaptures the header row's template and other header properties such as the columns to display.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , :  }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [tsHeaderRowDef]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CDK_ROW_TEMPLATE,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  CdkRow,\n  CdkRowDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Header row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other header properties such as the columns to display.\n */\n@Directive({\n  selector: '[tsHeaderRowDef]',\n  providers: [{provide: CdkHeaderRowDef, useExisting: TsHeaderRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why this type of input was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsHeaderRowDef'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsHeaderRowDefDirective extends CdkHeaderRowDef {}\n\n\n/**\n * Data row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n@Directive({\n  selector: '[tsRowDef]',\n  providers: [{provide: CdkRowDef, useExisting: TsRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why it was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsRowDefColumns', 'when: tsRowDefWhen'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsRowDefDirective extends CdkRowDef {}\n\n\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-header-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-header-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsHeaderRow',\n  preserveWhitespaces: false,\n})\nexport class TsHeaderRowComponent extends CdkHeaderRow {}\n\n\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRow',\n  preserveWhitespaces: false,\n})\nexport class TsRowComponent extends CdkRow {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsIconButtonComponent.html":{"url":"components/TsIconButtonComponent.html","title":"component - TsIconButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsIconButtonComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/icon-button/icon-button.component.ts\n\n\n    \n        Description\n    \n    \n        This is the icon-button UI Component\nQA CSS CLASSES\n\nqa-icon-button: Placed on the primary container\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    delete_forever\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsIconButton\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-icon-button\n            \n\n            \n                styleUrls\n                icon-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./icon-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionName\n                            \n                            \n                                buttonType\n                            \n                            \n                                isDisabled\n                            \n                            \n                                tabIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/icon-button/icon-button.component.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionName\n                    \n                    \n                        Define the action for the aria-label. TsButtonActionTypes\n\n                            \n                            Type:    TsButtonActionTypes\n\n                            \n                        \n                            Default value: 'Button'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonType\n                    \n                    \n                        Define the button type. TsButtonFunctionTypes\n\n                            \n                            Type:    TsButtonFunctionTypes\n\n                            \n                        \n                            Default value: 'button'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                    \n                        Define if the button is disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabIndex\n                    \n                    \n                        Define the tabindex for the button\n\n                            \n                            Type:    number\n\n                            \n                        \n                            Default value: 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:68\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clickEvent\n                    \n                    \n                        Pass the click event through to the parent\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:74\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hostElement\n                    \n                \n\n                \n                    \n                        gethostElement()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/icon-button/icon-button.component.ts:80\n                                \n                            \n                    \n                        \n                                Getter to return the native elemetn\n\n\n                                \n                                    Returns :     ElementRef\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n    \n        \n\nTable of Contents\n\nBasic usage\nTheme (color)\nAccessibility\n\n\nBasic usage\nPass a valid Material icon name as the content of the button:\ndelete_foreverTheme (color)\nUse the theme parameter to change the color.\n\nforum\n\n\nforum\n\n\nforum\nBy default the icon will use color(pure, dark)\n\nAccessibility\nFor accessibility purposes we should set the actionName and buttonType.\n\nactionName can be one of the TsButtonActionTypes and will be used for the aria-label.\nbuttonType can be one of the TsButtonFunctionTypes and will be used for the type attribute.\n\nbookmark\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  EventEmitter,\n  ElementRef,\n} from '@angular/core';\n\nimport {\n  TsButtonActionTypes,\n  TsButtonFunctionTypes,\n} from './../button/button.module';\n\n\n/**\n * This is the icon-button UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-icon-button`: Placed on the primary container\n *\n * @example\n * delete_forever\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-icon-button',\n  templateUrl: './icon-button.component.html',\n  styleUrls: ['./icon-button.component.scss'],\n  host: {\n    class: 'ts-icon-button',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsIconButton',\n})\nexport class TsIconButtonComponent {\n  /**\n   * Define the action for the aria-label. {@link TsButtonActionTypes}\n   */\n  @Input()\n  public actionName: TsButtonActionTypes = 'Button';\n\n  /**\n   * Define the button type. {@link TsButtonFunctionTypes}\n   */\n  @Input()\n  public buttonType: TsButtonFunctionTypes = 'button';\n\n  /**\n   * Define if the button is disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define the tabindex for the button\n   */\n  @Input()\n  public tabIndex: number = 0;\n\n  /**\n   * Pass the click event through to the parent\n   */\n  @Output()\n  public clickEvent: EventEmitter = new EventEmitter;\n\n\n  /**\n   * Getter to return the native elemetn\n   */\n  public get hostElement(): ElementRef {\n    return this.elementRef.nativeElement;\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n  ) {}\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsIconButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsIconButtonModule.html":{"url":"modules/TsIconButtonModule.html","title":"module - TsIconButtonModule","body":"\n                   \n\n\n\n\n  Modules\n  TsIconButtonModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsIconButtonModule\n\n\n\ncluster_TsIconButtonModule_declarations\n\n\n\ncluster_TsIconButtonModule_imports\n\n\n\ncluster_TsIconButtonModule_exports\n\n\n\n\nTsIconButtonComponent\n\nTsIconButtonComponent\n\n\n\nTsIconButtonModule\n\nTsIconButtonModule\n\nTsIconButtonModule -->\n\nTsIconButtonComponent->TsIconButtonModule\n\n\n\n\n\nTsIconButtonComponent \n\nTsIconButtonComponent \n\nTsIconButtonComponent  -->\n\nTsIconButtonModule->TsIconButtonComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsIconButtonModule -->\n\nTsIconModule->TsIconButtonModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/icon-button/icon-button.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsIconButtonComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsIconButtonComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsIconButtonComponent } from './icon-button.component';\n\nexport * from './icon-button.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatRippleModule,\n    TsIconModule,\n  ],\n  declarations: [\n    TsIconButtonComponent,\n  ],\n  exports: [\n    TsIconButtonComponent,\n  ],\n})\nexport class TsIconButtonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsIconComponent.html":{"url":"components/TsIconComponent.html","title":"component - TsIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsIconComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/icon/icon.component.ts\n\n\n    \n        Description\n    \n    \n        This is the icon UI Component\nQA CSS CLASSES\n\nqa-icon: Placed on the primary container\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    home\nhelp\n\n\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsIcon\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-icon\n            \n\n            \n                styleUrls\n                icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _background\n                            \n                            \n                                    Private\n                                _svgIcon\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                background\n                            \n                            \n                                inline\n                            \n                            \n                                svgIcon\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/icon/icon.component.ts:106\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matIconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        background\n                    \n                    \n                        Define if the icon should have a colored background.\nNOTE: This will affect layout and style.\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:69\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inline\n                    \n                    \n                        Define if the icon should be aligned inline with text\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:81\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgIcon\n                    \n                    \n                        Name of the custom icon\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:87\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the icon theme\n\n                            \n                            Type:    TsStyleThemeTypes | undefined\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:106\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _background\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _background:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _svgIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _svgIcon:     TS_CUSTOM_ICON | undefined\n\n                    \n                \n                    \n                        \n                            Type :     TS_CUSTOM_ICON | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/icon/icon.component.ts:100\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n\n                \n                    \n                        getbackground()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/icon/icon.component.ts:72\n                                \n                            \n\n                \n                    \n                        setbackground(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/icon/icon.component.ts:69\n                                \n                            \n                    \n                        \n                                Define if the icon should have a colored background.\nNOTE: This will affect layout and style.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        svgIcon\n                    \n                \n\n                \n                    \n                        getsvgIcon()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/icon/icon.component.ts:97\n                                \n                            \n\n                \n                    \n                        setsvgIcon(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/icon/icon.component.ts:87\n                                \n                            \n                    \n                        \n                                Name of the custom icon\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Icons\n\n\n\n\nTable of Contents\n\nBasic usage\nTheming\nStyle with CSS\nUsage inline with text\nCustom Icons\nAvailable\n\n\n\n\nBasic usage\nInclude any valid Material icon name inside the component:\nhomeIf the icon name consists of multiple words, use underscores between the words:\nopen_in_new\nSee all valid icon possibilities: https://material.io/icons\n\nTheming\nIcons support the same themes as the rest of the components:\nSearch for TsStyleThemeTypes to see all allowed types.\nStyle with CSS\nTo style with CSS, simply target the fill inside the ts-icon class:\n.myClass {\n  .ts-icon {\n    fill: color(accent);\n  }\n}Usage inline with text\nTo size and space the icons correctly for use within a block of text:\nCustom Icons\nCustom icons are accessed via a ts-icon @Input:\n\nhome\n\n\nAvailable\n\n\n\nName\nDescription\n\n\n\n\ncsv\nA file with the text 'CSV'\n\n\n\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n  isDevMode,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { CSV_ICON } from './custom-icons/csv';\n\n\n/**\n * Currently supported custom icons\n */\nexport type TS_CUSTOM_ICON\n  = 'csv'\n;\n\n\n/**\n * An array of supported custom icons.\n */\nexport const TS_CUSTOM_ICONS: TS_CUSTOM_ICON[] = [\n  'csv',\n];\n\n\n/**\n * This is the icon UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-icon`: Placed on the primary container\n *\n * @example\n * home\n * help\n *\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss'],\n  host: {\n    class: 'ts-icon',\n    '[class.ts-icon--inline]': 'inline',\n    '[class.ts-icon--primary]': 'theme === \"primary\"',\n    '[class.ts-icon--accent]': 'theme === \"accent\"',\n    '[class.ts-icon--warn]': 'theme === \"warn\"',\n    '[class.ts-icon--background]': 'background',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsIcon',\n})\nexport class TsIconComponent {\n  /**\n   * Define if the icon should have a colored background.\n   *\n   * NOTE: This will affect layout and style.\n   */\n  @Input()\n  public set background(value: boolean) {\n    this._background = coerceBooleanProperty(value);\n  }\n  public get background(): boolean {\n    return this._background;\n  }\n  private _background: boolean = false;\n\n  /**\n   * Define if the icon should be aligned inline with text\n   */\n  @Input()\n  public inline: boolean = false;\n\n  /**\n   * Name of the custom icon\n   */\n  @Input()\n  public set svgIcon(value: TS_CUSTOM_ICON | undefined) {\n    // If an unsupported value is passed in\n    if (value && TS_CUSTOM_ICONS.indexOf(value) \n    \n\n    \n        \n  \n\n\n\n\n  \n\n\n\n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsIconModule.html":{"url":"modules/TsIconModule.html","title":"module - TsIconModule","body":"\n                   \n\n\n\n\n  Modules\n  TsIconModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsIconModule\n\n\n\ncluster_TsIconModule_declarations\n\n\n\ncluster_TsIconModule_exports\n\n\n\n\nTsIconComponent\n\nTsIconComponent\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsIconModule -->\n\nTsIconComponent->TsIconModule\n\n\n\n\n\nTsIconComponent \n\nTsIconComponent \n\nTsIconComponent  -->\n\nTsIconModule->TsIconComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/icon/icon.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsIconComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsIconComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TsIconComponent } from './icon.component';\n\nexport * from './icon.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n  ],\n  declarations: [\n    TsIconComponent,\n  ],\n  exports: [\n    TsIconComponent,\n  ],\n})\nexport class TsIconModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsImageDimensions.html":{"url":"classes/TsImageDimensions.html","title":"class - TsImageDimensions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsImageDimensions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/file-upload/image-dimensions.ts\n        \n\n            \n                Description\n            \n            \n                A class to store dimensions for an image\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                height\n                            \n                            \n                                    Public\n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(width: number, height: number)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/file-upload/image-dimensions.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        width\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        height\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            height\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        height:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/image-dimensions.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        width:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/image-dimensions.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TsImageDimensions {\n  constructor(\n    public width: number,\n    public height: number,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsInputModule.html":{"url":"modules/TsInputModule.html","title":"module - TsInputModule","body":"\n                   \n\n\n\n\n  Modules\n  TsInputModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsInputModule\n\n\n\ncluster_TsInputModule_declarations\n\n\n\ncluster_TsInputModule_TsInputComponent_providers\n\n\n\ncluster_TsInputModule_imports\n\n\n\ncluster_TsInputModule_exports\n\n\n\ncluster_TsInputModule_providers\n\n\n\n\nTsInputComponent\n\nTsInputComponent\n\n\n\nTsInputModule\n\nTsInputModule\n\nTsInputModule -->\n\nTsInputComponent->TsInputModule\n\n\n\n\n\nTsInputComponent \n\nTsInputComponent \n\nTsInputComponent  -->\n\nTsInputModule->TsInputComponent \n\n\n\n\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR\n\nTsInputComponent -->\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR->TsInputComponent\n\n\n\n\n\n{\n    : , : ,\n}\n\n{\n    : , : ,\n}\n\nTsInputComponent -->\n\n{\n    : , : ,\n}->TsInputComponent\n\n\n\nTsInputComponent -->\n\n{\n    : , : ,\n}->TsInputComponent\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsInputModule -->\n\nTsIconModule->TsInputModule\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsInputModule -->\n\nTsValidationMessagesModule->TsInputModule\n\n\n\n\n\nTsValidatorsService\n\nTsValidatorsService\n\nTsInputModule -->\n\nTsValidatorsService->TsInputModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/input/input.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsInputComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsValidatorsService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsInputComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport {\n  MAT_DATE_FORMATS,\n  NativeDateModule,\n} from '@angular/material/core';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsValidationMessagesModule } from './../validation-messages/validation-messages.module';\nimport { TsValidatorsService } from './../validators/validators.service';\nimport { TsInputComponent } from './input.component';\nimport { TS_DATE_FORMATS } from './date-adapter';\n\nexport * from './input.component';\n\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    CommonModule,\n    FormsModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    NativeDateModule,\n    MatDatepickerModule,\n    TsValidationMessagesModule,\n    TsIconModule,\n  ],\n  providers: [\n    TsValidatorsService,\n    {\n      provide: MAT_DATE_FORMATS,\n      useValue: TS_DATE_FORMATS,\n    },\n  ],\n  exports: [\n    TsInputComponent,\n  ],\n  declarations: [\n    TsInputComponent,\n  ],\n})\nexport class TsInputModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsLinkComponent.html":{"url":"components/TsLinkComponent.html","title":"component - TsLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsLinkComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/link/link.component.ts\n\n\n    \n        Description\n    \n    \n        This is the link UI Component\nQA CSS CLASSES\n\nqa-link: Placed on the link element\nqa-link-internal: Placed on the link element if the link is internal\nqa-link-external: Placed on the link element if the link is external\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    My link\n\nMy link\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsLink\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-link\n            \n\n            \n                styleUrls\n                link.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./link.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                externalIcon\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                destination\n                            \n                            \n                                isExternal\n                            \n                            \n                                tabIndex\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        destination\n                    \n                    \n                        Define the link's destination\n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/link/link.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isExternal\n                    \n                    \n                        Define if the link is to an external page\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/link/link.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tabIndex\n                    \n                    \n                        Define the tabindex\n\n                            \n                            Type:    number\n\n                            \n                        \n                            Default value: 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/link/link.component.ts:65\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            externalIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        externalIcon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : `open_in_new`\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/link/link.component.ts:47\n                            \n                        \n\n                \n                    \n                        Define the icon for external links\n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Link\n\n\n\n\nTable of Contents\n\nBasic usage\nExternal links\nTab index\n\n\nBasic usage\nWrap your link text and define a destination:\nMy linkExternal links\nTo signify a link will leave the current app or site, set external to true:\nMy link\nNOTE: When external is set to true, the link should be a standard link in string form.\n\nTab index\nA custom tabindex can also be set:\nMy link\n    \n\n    \n        import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\n\n\n/**\n * This is the link UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-link`: Placed on the link element\n * - `qa-link-internal`: Placed on the link element if the link is internal\n * - `qa-link-external`: Placed on the link element if the link is external\n *\n * @example\n * My link\n *\n * My link\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-link',\n  templateUrl: './link.component.html',\n  styleUrls: ['./link.component.scss'],\n  host: {\n    class: 'ts-link',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsLink',\n})\nexport class TsLinkComponent {\n  /**\n   * Define the icon for external links\n   */\n  public externalIcon: string = `open_in_new`;\n\n  /**\n   * Define the link's destination\n   */\n  @Input()\n  public destination: any;\n\n  /**\n   * Define if the link is to an external page\n   */\n  @Input()\n  public isExternal: boolean = false;\n\n  /**\n   * Define the tabindex\n   */\n  @Input()\n  public tabIndex: number = 0;\n\n}\n\n    \n\n    \n        \n  \n\n\n\n  \n\n  \n    open_in_new\n  \n\n\n\n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          open_in_new    '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsLinkModule.html":{"url":"modules/TsLinkModule.html","title":"module - TsLinkModule","body":"\n                   \n\n\n\n\n  Modules\n  TsLinkModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsLinkModule\n\n\n\ncluster_TsLinkModule_declarations\n\n\n\ncluster_TsLinkModule_imports\n\n\n\ncluster_TsLinkModule_exports\n\n\n\n\nTsLinkComponent\n\nTsLinkComponent\n\n\n\nTsLinkModule\n\nTsLinkModule\n\nTsLinkModule -->\n\nTsLinkComponent->TsLinkModule\n\n\n\n\n\nTsLinkComponent \n\nTsLinkComponent \n\nTsLinkComponent  -->\n\nTsLinkModule->TsLinkComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsLinkModule -->\n\nTsIconModule->TsLinkModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/link/link.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsLinkComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsLinkComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsLinkComponent } from './link.component';\n\nexport * from './link.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    TsIconModule,\n  ],\n  exports: [\n    TsLinkComponent,\n  ],\n  declarations: [\n    TsLinkComponent,\n  ],\n})\nexport class TsLinkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsLoadingOverlayComponent.html":{"url":"components/TsLoadingOverlayComponent.html","title":"component - TsLoadingOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsLoadingOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/loading-overlay/loading-overlay.component.ts\n\n\n    \n        Description\n    \n    \n        The loading overlay component. Implemented by TsLoadingOverlayDirective\nQA CSS CLASSES\n\nqa-loading-overlay: Placed on the div overlay containing the loading spinner\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    See {\n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsLoadingOverlay\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-loading-overlay\n            \n\n            \n                styleUrls\n                loading-overlay.component.scss\n            \n\n\n            \n                template\n                \n  \n    \n  \n\n\n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {\n  Component,\n  ViewEncapsulation,\n} from '@angular/core';\n\n\n/**\n * The loading overlay component. Implemented by {@link TsLoadingOverlayDirective}\n *\n * #### QA CSS CLASSES\n * - `qa-loading-overlay`: Placed on the div overlay containing the loading spinner\n *\n * @example\n * See {@link TsLoadingOverlayDirective}\n */\n@Component({\n  selector: 'ts-loading-overlay',\n  styleUrls: ['./loading-overlay.component.scss'],\n  host: {\n    class: 'ts-loading-overlay',\n  },\n  template: `\n    \n      \n        \n      \n    \n  `,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsLoadingOverlay',\n})\nexport class TsLoadingOverlayComponent {}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsLoadingOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsLoadingOverlayDirective.html":{"url":"directives/TsLoadingOverlayDirective.html","title":"directive - TsLoadingOverlayDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsLoadingOverlayDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/loading-overlay/loading-overlay.directive.ts\n        \n\n            \n                Description\n            \n            \n                The tsLoadingOverlay UI Directive.\nProvides a spinner overlay to demonstrate loading for async data.\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n            \n                Example\n            \n            \n                        \n                            \n\nhttps://goo.gl/ieUPaG\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsLoadingOverlay]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bodyPortalHost\n                            \n                            \n                                    Private\n                                loadingOverlayPortal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                determinePosition\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tsLoadingOverlay\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                style.position\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, windowService: TsWindowService, componentFactoryResolver: ComponentFactoryResolver, appRef: ApplicationRef, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:59\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        windowService\n                                                  \n                                                        \n                                                                    TsWindowService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        appRef\n                                                  \n                                                        \n                                                                    ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        tsLoadingOverlay\n                    \n                    \n                        Define a setter to show/hide the loading overlay\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:46\n                            \n                        \n            \n        \n\n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            style.position\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        style.position:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:59\n                            \n                        \n\n                \n                    \n                        Alias the position back onto the component as a style attribute\n\n                    \n                \n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            determinePosition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        determinePosition(position: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:114\n                            \n                        \n\n\n                \n                    \n                            Return the correct position\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        position\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The current position value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The correct position value\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:101\n                            \n                        \n\n\n                \n                    \n                            Destroy the portal host if it exists\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:88\n                            \n                        \n\n\n                \n                    \n                            Determine and set the needed position\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            bodyPortalHost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bodyPortalHost:     DomPortalHost\n\n                    \n                \n                    \n                        \n                            Type :     DomPortalHost\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:40\n                            \n                        \n\n                \n                    \n                        Reference to our portal host\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingOverlayPortal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadingOverlayPortal:     ComponentPortal\n\n                    \n                \n                    \n                        \n                            Type :     ComponentPortal\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:35\n                            \n                        \n\n                \n                    \n                        A reference to the portal\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tsLoadingOverlay\n                    \n                \n\n\n                \n                    \n                        settsLoadingOverlay(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/loading-overlay/loading-overlay.directive.ts:46\n                                \n                            \n                    \n                        \n                                Define a setter to show/hide the loading overlay\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnDestroy,\n  HostBinding,\n  ComponentFactoryResolver,\n  ApplicationRef,\n  Injector,\n} from '@angular/core';\nimport { ComponentPortal, DomPortalHost } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { TsWindowService } from '@terminus/ngx-tools';\n\nimport { TsLoadingOverlayComponent } from './loading-overlay.component';\n\n\n/**\n * The tsLoadingOverlay UI Directive.\n * Provides a spinner overlay to demonstrate loading for async data.\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Directive({\n  selector: '[tsLoadingOverlay]',\n})\nexport class TsLoadingOverlayDirective implements OnInit, OnDestroy {\n  /**\n   * A reference to the portal\n   */\n  private loadingOverlayPortal: ComponentPortal;\n\n  /**\n   * Reference to our portal host\n   */\n  private bodyPortalHost: DomPortalHost;\n\n  /**\n   * Define a setter to show/hide the loading overlay\n   */\n  @Input()\n  public set tsLoadingOverlay(value: boolean) {\n    const shouldSet = coerceBooleanProperty(value);\n    if (shouldSet) {\n      this.bodyPortalHost.attach(this.loadingOverlayPortal);\n    } else {\n      this.bodyPortalHost.detach();\n    }\n  }\n\n  /**\n   * Alias the position back onto the component as a style attribute\n   */\n  @HostBinding('style.position')\n  public position!: string;\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private elementRef: ElementRef,\n    private windowService: TsWindowService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private injector: Injector,\n  ) {\n    // Create the body portal host\n    this.bodyPortalHost = new DomPortalHost(\n      this.elementRef.nativeElement,\n      this.componentFactoryResolver,\n      this.appRef,\n      this.injector,\n    );\n\n    // Create the component portal\n    this.loadingOverlayPortal = new ComponentPortal(TsLoadingOverlayComponent);\n  }\n\n\n  /**\n   * Determine and set the needed position\n   */\n  public ngOnInit(): void {\n    // Determine the CSS position of the element\n    const position = this.windowService.nativeWindow\n      .getComputedStyle(this.elementRef.nativeElement).getPropertyValue('position');\n\n    // Set the position\n    this.position = this.determinePosition(position);\n  }\n\n\n  /**\n   * Destroy the portal host if it exists\n   */\n  public ngOnDestroy(): void {\n    if (this.bodyPortalHost) {\n      this.bodyPortalHost.dispose();\n    }\n  }\n\n\n  /**\n   * Return the correct position\n   *\n   * @param position The current position value\n   * @return The correct position value\n   */\n  private determinePosition(position: string): string {\n    return (position === 'relative' || position === 'absolute') ? position : 'relative';\n  }\n\n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsLoadingOverlayModule.html":{"url":"modules/TsLoadingOverlayModule.html","title":"module - TsLoadingOverlayModule","body":"\n                   \n\n\n\n\n  Modules\n  TsLoadingOverlayModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsLoadingOverlayModule\n\n\n\ncluster_TsLoadingOverlayModule_declarations\n\n\n\ncluster_TsLoadingOverlayModule_exports\n\n\n\n\nTsLoadingOverlayComponent\n\nTsLoadingOverlayComponent\n\n\n\nTsLoadingOverlayModule\n\nTsLoadingOverlayModule\n\nTsLoadingOverlayModule -->\n\nTsLoadingOverlayComponent->TsLoadingOverlayModule\n\n\n\n\n\nTsLoadingOverlayDirective\n\nTsLoadingOverlayDirective\n\nTsLoadingOverlayModule -->\n\nTsLoadingOverlayDirective->TsLoadingOverlayModule\n\n\n\n\n\nTsLoadingOverlayDirective \n\nTsLoadingOverlayDirective \n\nTsLoadingOverlayDirective  -->\n\nTsLoadingOverlayModule->TsLoadingOverlayDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/loading-overlay/loading-overlay.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsLoadingOverlayComponent\n                            \n                            \n                                TsLoadingOverlayDirective\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TsLoadingOverlayComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsLoadingOverlayDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsLoadingOverlayComponent } from './loading-overlay.component';\nimport { TsLoadingOverlayDirective } from './loading-overlay.directive';\n\nexport * from './loading-overlay.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TsLoadingOverlayDirective,\n    TsLoadingOverlayComponent,\n  ],\n  entryComponents: [\n    TsLoadingOverlayComponent,\n  ],\n  exports: [\n    TsLoadingOverlayDirective,\n  ],\n})\nexport class TsLoadingOverlayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsLoginFormComponent.html":{"url":"components/TsLoginFormComponent.html","title":"component - TsLoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsLoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/login-form/login-form.component.ts\n\n\n    \n        Description\n    \n    \n        This is the login-form UI Component\nQA CSS CLASSES\n\nqa-login-form: Placed on the form element which contains this component\nqa-login-form-email: Placed on the TsInputComponent used for the \"email\" field\nqa-login-form-password: Placed on the TsInputComponent used for the \"password\" field\nqa-login-form-remember-me: Placed on the TsCheckboxComponent used for the \"remember\nme\" checkbox\nqa-login-form-forgot-password: Placed on the TsLinkComponent used for the \"forgot\npassword\" link\nqa-login-form-submit: Placed on the TsButtonComponent used for the submit button\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n    \n        Example\n    \n    \n                \n                    \n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsLoginForm\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-login-form\n            \n\n            \n                styleUrls\n                login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkbox\n                            \n                            \n                                    Private\n                                FORM_GROUP\n                            \n                            \n                                inputComponents\n                            \n                            \n                                    Public\n                                loginForm\n                            \n                            \n                                    Public\n                                PASSWORD_MINLENGTH\n                            \n                            \n                                    Public\n                                showForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Private\n                                resetForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                forgotPasswordLink\n                            \n                            \n                                forgotPasswordText\n                            \n                            \n                                inProgress\n                            \n                            \n                                isRedirecting\n                            \n                            \n                                loginCTA\n                            \n                            \n                                triggerFormReset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, validatorsService: TsValidatorsService)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/login-form/login-form.component.ts:170\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        validatorsService\n                                                  \n                                                        \n                                                                    TsValidatorsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        forgotPasswordLink\n                    \n                    \n                        Define the link to the 'forgot password' view\n\n                            \n                            Type:    string[]\n\n                            \n                        \n                            Default value: ['/forgot']\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:134\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        forgotPasswordText\n                    \n                    \n                        Define the text for the 'forgot password' link\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Forgot your password?'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:140\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inProgress\n                    \n                    \n                        Define if the form button is showing progress\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:146\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRedirecting\n                    \n                    \n                        Define if the user has successfully logged in and is being redirected\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:152\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loginCTA\n                    \n                    \n                        Define the login call to action\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Log In'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:158\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        triggerFormReset\n                    \n                    \n                        Allow a consumer to reset the form via an input\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:164\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        submit\n                    \n                    \n                        Emit an event on form submission\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:170\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:188\n                            \n                        \n\n\n                \n                    \n                            Trigger a form reset if triggerFormReset is changed to TRUE\n(explanation at resetForm method)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe inputs that have changed\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resetForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resetForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:205\n                            \n                        \n\n\n                \n                    \n                            Reset the form\nThis is a hack. Currently there doesn't seem to be a good way to reset the form value and\nvalidations without simply re-initializing the form each time.\nHACK: The showForm value is a 'hack' to reset the input validation styles by removing the\nform from the dom and re-adding it. This method won't break if the Material team changes any\nvalidation classes but it may be more performant to simply remove the classes.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkbox\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        checkbox:     TsCheckboxComponent\n\n                    \n                \n                    \n                        \n                            Type :     TsCheckboxComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:128\n                            \n                        \n\n                \n                    \n                        Provide access to the checkbox inputs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            FORM_GROUP\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FORM_GROUP:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    email: [\n      null,\n      [\n        Validators.required,\n        this.validatorsService.email(),\n      ],\n    ],\n    password: [\n      null,\n      [\n        Validators.required,\n      ],\n    ],\n    rememberMe: [\n      false,\n    ],\n  }\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:84\n                            \n                        \n\n                \n                    \n                        Define the form group for re-use\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputComponents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inputComponents:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChildren\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:122\n                            \n                        \n\n                \n                    \n                        Provide access to the text inputs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup | null\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup | null\n\n                        \n                    \n                    \n                        \n                            Default value : this.formBuilder.group(this.FORM_GROUP)\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:111\n                            \n                        \n\n                \n                    \n                        Initialize the login form\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            PASSWORD_MINLENGTH\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PASSWORD_MINLENGTH:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 8\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:106\n                            \n                        \n\n                \n                    \n                        Define the minimum length for a password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showForm:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/login-form/login-form.component.ts:116\n                            \n                        \n\n                \n                    \n                        Define a flag to add/remove the form from the DOM\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ViewChildren,\n  QueryList,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\n\nimport { TsInputComponent } from './../input/input.component';\nimport { TsCheckboxComponent } from './../checkbox/checkbox.component';\nimport { TsValidatorsService } from './../validators/validators.service';\n\n\n/**\n * Define the structure of the login form response\n */\nexport interface TsLoginFormResponse {\n  /**\n   * User's email\n   */\n  email: string;\n\n  /**\n   * User's password\n   */\n  password: string;\n\n  /**\n   * Flag determining if a cookie should be set\n   */\n  rememberMe: boolean;\n}\n\n\n/**\n * This is the login-form UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-login-form`: Placed on the form element which contains this component\n * - `qa-login-form-email`: Placed on the {@link TsInputComponent} used for the \"email\" field\n * - `qa-login-form-password`: Placed on the {@link TsInputComponent} used for the \"password\" field\n * - `qa-login-form-remember-me`: Placed on the {@link TsCheckboxComponent} used for the \"remember\n * me\" checkbox\n * - `qa-login-form-forgot-password`: Placed on the {@link TsLinkComponent} used for the \"forgot\n * password\" link\n * - `qa-login-form-submit`: Placed on the {@link TsButtonComponent} used for the submit button\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n  host: {\n    class: 'ts-login-form',\n  },\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsLoginForm',\n})\nexport class TsLoginFormComponent implements OnChanges {\n  /**\n   * Define the form group for re-use\n   */\n  private FORM_GROUP = {\n    email: [\n      null,\n      [\n        Validators.required,\n        this.validatorsService.email(),\n      ],\n    ],\n    password: [\n      null,\n      [\n        Validators.required,\n      ],\n    ],\n    rememberMe: [\n      false,\n    ],\n  };\n\n  /**\n   * Define the minimum length for a password\n   */\n  public PASSWORD_MINLENGTH: number = 8;\n\n  /**\n   * Initialize the login form\n   */\n  public loginForm: FormGroup | null = this.formBuilder.group(this.FORM_GROUP);\n\n  /**\n   * Define a flag to add/remove the form from the DOM\n   */\n  public showForm: boolean = true;\n\n  /**\n   * Provide access to the text inputs\n   */\n  @ViewChildren(TsInputComponent)\n  inputComponents!: QueryList;\n\n  /**\n   * Provide access to the checkbox inputs\n   */\n  @ViewChild(TsCheckboxComponent)\n  checkbox!: TsCheckboxComponent;\n\n  /**\n   * Define the link to the 'forgot password' view\n   */\n  @Input()\n  public forgotPasswordLink: string[] = ['/forgot'];\n\n  /**\n   * Define the text for the 'forgot password' link\n   */\n  @Input()\n  public forgotPasswordText: string = 'Forgot your password?';\n\n  /**\n   * Define if the form button is showing progress\n   */\n  @Input()\n  public inProgress: boolean = false;\n\n  /**\n   * Define if the user has successfully logged in and is being redirected\n   */\n  @Input()\n  public isRedirecting: boolean = false;\n\n  /**\n   * Define the login call to action\n   */\n  @Input()\n  public loginCTA: string = 'Log In';\n\n  /**\n   * Allow a consumer to reset the form via an input\n   */\n  @Input()\n  public triggerFormReset: boolean = false;\n\n  /**\n   * Emit an event on form submission\n   */\n  @Output()\n  public submit: EventEmitter = new EventEmitter;\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private validatorsService: TsValidatorsService,\n  ) {}\n\n\n  /**\n   * Trigger a form reset if `triggerFormReset` is changed to TRUE\n   * (explanation at `resetForm` method)\n   *\n   * @param changes - The inputs that have changed\n   */\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('triggerFormReset')) {\n      this.resetForm();\n    }\n  }\n\n\n  /**\n   * Reset the form\n   *\n   * This is a hack. Currently there doesn't seem to be a good way to reset the form value and\n   * validations without simply re-initializing the form each time.\n   *\n   * HACK: The `showForm` value is a 'hack' to reset the input validation styles by removing the\n   * form from the dom and re-adding it. This method won't break if the Material team changes any\n   * validation classes but it may be more performant to simply remove the classes.\n   */\n  private resetForm(): void {\n    // Destroy the form\n    this.showForm = false;\n\n    // Clear out the form\n    this.loginForm = null;\n\n    // Re-initialize the form\n    this.loginForm = this.formBuilder.group(this.FORM_GROUP);\n\n    // This timeout lets one change detection cycle pass so that the form is actually removed from\n    // the DOM\n    setTimeout(() => {\n      // Add the form back to the DOM\n      this.showForm = true;\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n  \n\n  \n    Remember me\n  \n\n  {{ forgotPasswordText }}\n\n  \n    \n      {{ loginCTA }}\n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Remember me    {{ forgotPasswordText }}            {{ loginCTA }}      '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsLoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsLoginFormModule.html":{"url":"modules/TsLoginFormModule.html","title":"module - TsLoginFormModule","body":"\n                   \n\n\n\n\n  Modules\n  TsLoginFormModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsLoginFormModule\n\n\n\ncluster_TsLoginFormModule_declarations\n\n\n\ncluster_TsLoginFormModule_imports\n\n\n\ncluster_TsLoginFormModule_exports\n\n\n\ncluster_TsLoginFormModule_providers\n\n\n\n\nTsLoginFormComponent\n\nTsLoginFormComponent\n\n\n\nTsLoginFormModule\n\nTsLoginFormModule\n\nTsLoginFormModule -->\n\nTsLoginFormComponent->TsLoginFormModule\n\n\n\n\n\nTsLoginFormComponent \n\nTsLoginFormComponent \n\nTsLoginFormComponent  -->\n\nTsLoginFormModule->TsLoginFormComponent \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsLoginFormModule -->\n\nTsButtonModule->TsLoginFormModule\n\n\n\n\n\nTsCheckboxModule\n\nTsCheckboxModule\n\nTsLoginFormModule -->\n\nTsCheckboxModule->TsLoginFormModule\n\n\n\n\n\nTsInputModule\n\nTsInputModule\n\nTsLoginFormModule -->\n\nTsInputModule->TsLoginFormModule\n\n\n\n\n\nTsLinkModule\n\nTsLinkModule\n\nTsLoginFormModule -->\n\nTsLinkModule->TsLoginFormModule\n\n\n\n\n\nTsSpacingModule\n\nTsSpacingModule\n\nTsLoginFormModule -->\n\nTsSpacingModule->TsLoginFormModule\n\n\n\n\n\nTsValidatorsService\n\nTsValidatorsService\n\nTsLoginFormModule -->\n\nTsValidatorsService->TsLoginFormModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/login-form/login-form.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsLoginFormComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsValidatorsService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsCheckboxModule\n                            \n                            \n                                    TsInputModule\n                            \n                            \n                                    TsLinkModule\n                            \n                            \n                                    TsSpacingModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsLoginFormComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { TsValidatorsService } from './../validators/validators.service';\nimport { TsInputModule } from './../input/input.module';\nimport { TsCheckboxModule } from './../checkbox/checkbox.module';\nimport { TsButtonModule } from './../button/button.module';\nimport { TsSpacingModule } from './../spacing/spacing.module';\nimport { TsLinkModule } from './../link/link.module';\nimport { TsLoginFormComponent } from './login-form.component';\n\nexport * from './login-form.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    TsInputModule,\n    TsCheckboxModule,\n    TsSpacingModule,\n    TsButtonModule,\n    TsLinkModule,\n  ],\n  providers: [\n    TsValidatorsService,\n  ],\n  exports: [\n    TsLoginFormComponent,\n  ],\n  declarations: [\n    TsLoginFormComponent,\n  ],\n})\nexport class TsLoginFormModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsLoginFormResponse.html":{"url":"interfaces/TsLoginFormResponse.html","title":"interface - TsLoginFormResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsLoginFormResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/login-form/login-form.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the structure of the login form response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                                \n                                        rememberMe\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's email\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's password\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rememberMe\n                                    \n                                \n                                \n                                    \n                                        rememberMe:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Flag determining if a cookie should be set\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ViewChildren,\n  QueryList,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\n\nimport { TsInputComponent } from './../input/input.component';\nimport { TsCheckboxComponent } from './../checkbox/checkbox.component';\nimport { TsValidatorsService } from './../validators/validators.service';\n\n\n/**\n * Define the structure of the login form response\n */\nexport interface TsLoginFormResponse {\n  /**\n   * User's email\n   */\n  email: string;\n\n  /**\n   * User's password\n   */\n  password: string;\n\n  /**\n   * Flag determining if a cookie should be set\n   */\n  rememberMe: boolean;\n}\n\n\n/**\n * This is the login-form UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-login-form`: Placed on the form element which contains this component\n * - `qa-login-form-email`: Placed on the {@link TsInputComponent} used for the \"email\" field\n * - `qa-login-form-password`: Placed on the {@link TsInputComponent} used for the \"password\" field\n * - `qa-login-form-remember-me`: Placed on the {@link TsCheckboxComponent} used for the \"remember\n * me\" checkbox\n * - `qa-login-form-forgot-password`: Placed on the {@link TsLinkComponent} used for the \"forgot\n * password\" link\n * - `qa-login-form-submit`: Placed on the {@link TsButtonComponent} used for the submit button\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n  host: {\n    class: 'ts-login-form',\n  },\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsLoginForm',\n})\nexport class TsLoginFormComponent implements OnChanges {\n  /**\n   * Define the form group for re-use\n   */\n  private FORM_GROUP = {\n    email: [\n      null,\n      [\n        Validators.required,\n        this.validatorsService.email(),\n      ],\n    ],\n    password: [\n      null,\n      [\n        Validators.required,\n      ],\n    ],\n    rememberMe: [\n      false,\n    ],\n  };\n\n  /**\n   * Define the minimum length for a password\n   */\n  public PASSWORD_MINLENGTH: number = 8;\n\n  /**\n   * Initialize the login form\n   */\n  public loginForm: FormGroup | null = this.formBuilder.group(this.FORM_GROUP);\n\n  /**\n   * Define a flag to add/remove the form from the DOM\n   */\n  public showForm: boolean = true;\n\n  /**\n   * Provide access to the text inputs\n   */\n  @ViewChildren(TsInputComponent)\n  inputComponents!: QueryList;\n\n  /**\n   * Provide access to the checkbox inputs\n   */\n  @ViewChild(TsCheckboxComponent)\n  checkbox!: TsCheckboxComponent;\n\n  /**\n   * Define the link to the 'forgot password' view\n   */\n  @Input()\n  public forgotPasswordLink: string[] = ['/forgot'];\n\n  /**\n   * Define the text for the 'forgot password' link\n   */\n  @Input()\n  public forgotPasswordText: string = 'Forgot your password?';\n\n  /**\n   * Define if the form button is showing progress\n   */\n  @Input()\n  public inProgress: boolean = false;\n\n  /**\n   * Define if the user has successfully logged in and is being redirected\n   */\n  @Input()\n  public isRedirecting: boolean = false;\n\n  /**\n   * Define the login call to action\n   */\n  @Input()\n  public loginCTA: string = 'Log In';\n\n  /**\n   * Allow a consumer to reset the form via an input\n   */\n  @Input()\n  public triggerFormReset: boolean = false;\n\n  /**\n   * Emit an event on form submission\n   */\n  @Output()\n  public submit: EventEmitter = new EventEmitter;\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private validatorsService: TsValidatorsService,\n  ) {}\n\n\n  /**\n   * Trigger a form reset if `triggerFormReset` is changed to TRUE\n   * (explanation at `resetForm` method)\n   *\n   * @param changes - The inputs that have changed\n   */\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('triggerFormReset')) {\n      this.resetForm();\n    }\n  }\n\n\n  /**\n   * Reset the form\n   *\n   * This is a hack. Currently there doesn't seem to be a good way to reset the form value and\n   * validations without simply re-initializing the form each time.\n   *\n   * HACK: The `showForm` value is a 'hack' to reset the input validation styles by removing the\n   * form from the dom and re-adding it. This method won't break if the Material team changes any\n   * validation classes but it may be more performant to simply remove the classes.\n   */\n  private resetForm(): void {\n    // Destroy the form\n    this.showForm = false;\n\n    // Clear out the form\n    this.loginForm = null;\n\n    // Re-initialize the form\n    this.loginForm = this.formBuilder.group(this.FORM_GROUP);\n\n    // This timeout lets one change detection cycle pass so that the form is actually removed from\n    // the DOM\n    setTimeout(() => {\n      // Add the form back to the DOM\n      this.showForm = true;\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsMask.html":{"url":"interfaces/TsMask.html","title":"interface - TsMask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsMask\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/input/input.component.ts\n        \n\n            \n                Description\n            \n            \n                An individual mask definition. Used by TsInputComponent\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        guide\n                                \n                                \n                                            Optional\n                                        keepCharPositions\n                                \n                                \n                                        mask\n                                \n                                \n                                            Optional\n                                        pipe\n                                \n                                \n                                            Optional\n                                        showMask\n                                \n                                \n                                            Optional\n                                        unmaskRegex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guide\n                                    \n                                \n                                \n                                    \n                                        guide:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepCharPositions\n                                    \n                                \n                                \n                                    \n                                        keepCharPositions:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mask\n                                    \n                                \n                                \n                                    \n                                        mask:     (RegExp | string)[] | TsMaskFunction | \"undefined\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (RegExp | string)[] | TsMaskFunction | \"undefined\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pipe\n                                    \n                                \n                                \n                                    \n                                        pipe:     Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showMask\n                                    \n                                \n                                \n                                    \n                                        showMask:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unmaskRegex\n                                    \n                                \n                                \n                                    \n                                        unmaskRegex:     RegExp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RegExp\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Input\n\n\n\n\nTable of Contents\n\nBasic usage\nHint\nPrefix icon\nDisabled\nRequired\nRequired asterisk *\n\n\nClearable\nFocused\nInput Type\nInput Attributes\nValidation timing\nComponent reference\n\n\nUsage with Reactive Forms\nEvent Emitters\nMasks\nAvailable Masks\nSanitize the model value\nAllow decimals in number-based masks\n\n\nDatepicker\nFilter out available dates\nSet a max/min date range\n\n\nOpen calendar to a specific date\nOpen calendar to a specific view\nExample with dynamic validation\n\n\nBasic usage\nAttach an NgModel or FormControl to the input:\n\n\nWe should almost always being using a FormControl.\n\nNote: If you don't need a full form group you can provide a stand-alone control: myControl = new FormControl();\n\nHint\nA 'hint' can be displayed below the input on the right-hand side. This should be used for helpful user information such as input\nrequirements.\nPrefix icon\nTo include an icon as a prefix to the input, pass a valid icon name to prefixIcon:\n\nSee all valid icon possibilities: https://material.io/icons\n\nDisabled\nInputs can be disabled by setting the component flag OR by setting the associated FormControl to disabled.\nThe isDisabled flag works with both ngModel and FormControl inputs:\nWhen using Reactive Forms, controls should be disabled via the control:\nmyControl: FormControl = new FormControl({value: null, disabled: true});Required\nFor input's not using a FormControl, set the isRequired input to true:\nWhen using a FormControl, set the required validator on the control:\nmyControl = new FormControl(null, Validators.required);Required asterisk *\nIf the input should be required, but the required asterisk * is not needed, disable it with the\nhideRequiredMarker input:\n\nNOTE: We should not hide this visual indicator without a very good reason!\n\nClearable\nIf the input should be easily reset, include the isClearable flag to enable a 'clear input'\nbutton: (button will appear as small x icon at the far right of the input)\nWhen the input is cleared, the cleared event emitter will be fired with the value true.\nFocused\nAuto-focus the input when the view loads:\n\nNOTE: If multiple inputs within the same view set isFocused to true, the last one rendered\nwill receive the final focus.\n\nThis can also be used to dynamically focus an existing input:\nmyFocusedFlag = false;\n\ntoggleInputFocus() {\n  this.myFocusedFlag = !this.myFocusedFlag;\n}Input Type\nThe input type can be defined with the type input:\n\nFor all allowed types, see TsInputTypes.\n\nInput Attributes\nautocapitalize, autocomplete, spellcheck, readonly\n\nFor all allowed autocomplete types, see TsInputAutocompleteTypes.\n\nValidation timing\nValidate on change rather than blur:\nComponent reference\nTo get a reference to the component class, assign the exported name to a local variable:\n@ViewChild(TsInputComponent)\nmyVar: TsInputComponent;\n\nconsole.log('Component Class: ', this.myVar);Usage with Reactive Forms\nPass in the form control:\n\n  \n\n  Submit\nmyForm = this.formBuilder.group({\n  date: [\n    null, // If you need a default value, change this `null` to your value\n    [\n      Validators.required,\n    ],\n  ],\n});NOTE: If using a form with nested form groups, each group must be created with\nformBuilder.group for the form get control to work:\n// Notice the nested `dateRange` object without using `.group`\nmyForm: FormGroup = this.formBuilder.group({\n  dateRange: {\n    startDate: [\n      new Date(2017, 4, 6),\n    ],\n    endDate: [\n      new Date(2017, 4, 8),\n    ],\n  },\n});\n\n// THIS WILL FAIL!\nconst range = myForm.get('dateRange');\n\n//////////////////////////////////////////////////\n\n// Notice the nested `dateRange` object IS using `.group`\nmyForm: FormGroup = this.formBuilder.group({\n  dateRange: this.formBuilder.group({\n    startDate: [\n      new Date(2017, 4, 6),\n      [\n        Validators.required,\n      ],\n    ],\n    endDate: [\n      new Date(2017, 4, 8),\n      [\n        Validators.required,\n      ],\n    ],\n  }),\n});\n\n// Now there is a group for us to 'get'\nconst range = myForm.get('dateRange');Event Emitters\nSupported event emitters:\nEach emitter is called with the current input value.\n\nNOTE: The selected input is only available when datepicker is true.\n\nMasks\nMasks enable the input to enforce specific formatting for values; such as postal codes: 12345-1234.\nAvailable Masks\n\n\n\nMask\nInput value\nMasked Value\n\n\n\n\ncurrency\n12.34\n$12.34\n\n\ndate\n12/12/1982\n12/12/1982\n\n\nnumber\n1234.56\n1,234.56\n\n\npercentage\n12.4\n12.4%\n\n\nphone\n1231231234\n(123) 123-1234\n\n\npostal\n123456789\n12345-6789\n\n\n\nSanitize the model value\nMost often you will not want the mask characters to be saved as part of the actual value. By default this component will sanitize the value\nbefore saving it to the model. This can be disabled if needed:\nThis setup will format the value displayed in the UI: (123) 456-7890)while saving the pure value to the model: 1234567890.\nAllow decimals in number-based masks\nBy default, number based masks (number, percentage) allow decimals. This can be disabled:\nThis means when the user types 12.34, the input UI and model value will both be 1234.\nDatepicker\nTo add datepicker abilities to an input, set the datepicker input:\nFilter out available dates\nIf, for instance, you need to prohibit weekend days (sat/sun) from being selected you can pass in a\ncustom method to filter dates:\nmyFilter = (d: Date): boolean => {\n  const day = d.getDay();\n  // Prevent Saturday and Sunday from being selected.\n  return day !== 0 && day !== 6;\n}Set a max/min date range\nTo define bounds for date selection, pass in a valid Date to minDate and/or maxDate:\ndate1 = new Date(2017, 2, 1);\ndate2 = new Date(2017, 8, 1);Open calendar to a specific date\nPass in a Date to openTo:\nmyDate = new Date(2017, 5, 12);Open calendar to a specific view\nBy default, the calendar opens up to show the month view. This can be changed to show the year view initially:\nyear and month are the only two valid values.\nExample with dynamic validation\nWe can recreate a version of the {@link TsDateRangeComponent} using dynamic validation:\n\n  \n\n  \n\n  Submit\nmyForm = this.formBuilder.group({\n  startDate: [\n    null,\n    [\n      Validators.required,\n    ],\n  ],\n  endDate: [\n    null,\n    [\n      Validators.required,\n    ],\n  ],\n});\n\n// When the startDate changes, we want to set that date as the minDate for the endDate\nrangeStartChange(event: MatDatepickerInputEvent) {\n  if (event) {\n    // Get the from control\n    const control = this.formTwo.get('endDate');\n\n    // Set all validators.\n    // NOTE: setting validators will clear ALL existing validators, so we must add the required\n    // validator here again\n    control.setValidators([\n      Validators.required,\n      this.validatorsService.minDate(event.value),\n    ]);\n    // Tell the control to update according to the new validators\n    control.updateValueAndValidity();\n  }\n}\n\n// When the endDate changes, we want to set that date as the maxDate for the startDate\nrangeEndChange(event: MatDatepickerInputEvent) {\n  if (event) {\n    // Get the from control\n    const control = this.formTwo.get('startDate');\n\n    // Set all validators.\n    // NOTE: setting validators will clear ALL existing validators, so we must add the required\n    // validator here again\n    control.setValidators([\n      Validators.required,\n      this.validatorsService.maxDate(event.value),\n    ]);\n    // Tell the control to update according to the new validators\n    control.updateValueAndValidity();\n  }\n}\n\n    \n\n    \n        import {\n  AfterContentChecked,\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  isDevMode,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormControl,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport {\n  hasRequiredControl,\n  isFunction,\n  noop,\n  TsDocumentService,\n} from '@terminus/ngx-tools';\nimport {\n  coerceBooleanProperty,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { AutofillMonitor } from '@angular/cdk/text-field';\nimport { MatDatepicker } from '@angular/material/datepicker';\nimport { createTextMaskInputElement } from 'text-mask-core/dist/textMaskCore';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\nimport createAutoCorrectedDatePipe from 'text-mask-addons/dist/createAutoCorrectedDatePipe';\nimport {\n  DateAdapter,\n  MAT_DATE_FORMATS,\n} from '@angular/material/core';\nimport { format as formatDate, isValid as isValidDate } from 'date-fns';\n\nimport {\n  TS_DATE_FORMATS,\n  TsDateAdapter,\n} from './date-adapter';\nimport { inputHasChanged } from './../utilities/input-has-changed/input-has-changed';\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TS_SPACING } from './../spacing/spacing.constant';\n\n\n/**\n * Define the function type for date filters. Used by {@link TsInputComponent}\n */\nexport type TsDateFilterFunction = (d: Date) => boolean;\n\n\n/**\n * Define the allowed {@link TsInputComponent} input types\n */\nexport type TsInputTypes\n  = 'text'\n  | 'password'\n  | 'email'\n  | 'hidden'\n  | 'number'\n  | 'search'\n  | 'tel'\n  | 'url'\n;\n\n/**\n * Define the allowed autocomplete variations for {@link TsInputComponent}\n *\n * NOTE: This is not all valid types; only the ones this library supports.\n */\nexport type TsInputAutocompleteTypes\n  = 'off'\n  | 'on'\n  | 'name'\n  | 'email'\n  | 'username'\n  | 'new-password'\n  | 'current-password'\n  | 'tel'\n;\n\n/**\n * A function that returns an array of RegExp (used to determine postal code RegExp in {@link TsInputComponent})\n */\nexport type TsMaskFunction = (value: string) => (RegExp|string)[];\n\n/**\n * An individual mask definition. Used by {@link TsInputComponent}\n */\nexport interface TsMask {\n  mask: (RegExp|string)[] | TsMaskFunction | false;\n  unmaskRegex?: RegExp;\n  pipe?: Function;\n  guide?: boolean;\n  showMask?: boolean;\n  keepCharPositions?: boolean;\n}\n\n/**\n * The collection of masks. Used by {@link TsInputComponent}\n */\nexport interface TsMaskCollection {\n  [key: string]: TsMask;\n}\n\n/**\n * Define the allowed mask shortcut option. Used by {@link TsInputComponent}\n */\nexport type TsMaskShortcutOptions\n  = 'currency'\n  | 'date'\n  | 'number'\n  | 'percentage'\n  | 'phone'\n  | 'postal'\n  | 'default' // matches all characters\n;\n\n/**\n * Create an array used to verify the passed in shortcut is valid. Used by {@link TsInputComponent}\n */\nconst allowedMaskShorcuts: TsMaskShortcutOptions[] = [\n  'currency',\n  'date',\n  'number',\n  'percentage',\n  'phone',\n  'postal',\n  'default',\n];\n\n\n// Unique ID for each instance\nlet nextUniqueId = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\nconst autocompleteDefault: TsInputAutocompleteTypes = 'on';\nconst NUMBER_ONLY_REGEX: RegExp = /[^0-9]/g;\nconst NUMBER_WITH_DECIMAL_REGEX: RegExp = /[^0-9.]/g;\n\n\n/**\n * Custom control value accessor for our component.\n * This allows our custom components to access the underlying form validation via our base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsInputComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * A presentational component to render a text input.\n *\n * #### QA CSS CLASSES\n * - `qa-input`: The container element\n * - `qa-input-container`: The container around the input\n * - `qa-input-label`: The label element\n * - `qa-input-text`: The input element\n * - `qa-input-prefix-icon`: The icon element for the prefix icon, if one is set\n * - `qa-input-suffix-icon`: The icon element for the clickable \"clear\" icon, if this control is\n * clearable\n * - `qa-input-hint`: The hint element, if hint content is provided\n * - `qa-input-validation-messages`: The {@link TsValidationMessagesComponent} which will contain\n * - `qa-datepicker-calendar`: The calendar popup for the datepicker\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n  host: {\n    class: 'ts-input',\n  },\n  providers: [\n    CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR,\n    {\n      provide: DateAdapter,\n      useClass: TsDateAdapter,\n    },\n    {\n      provide: MAT_DATE_FORMATS,\n      useValue: TS_DATE_FORMATS,\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsInput',\n})\nexport class TsInputComponent\n  implements ControlValueAccessor, OnInit, AfterViewInit, AfterContentInit, AfterContentChecked, OnChanges, OnDestroy {\n  /**\n   * Emits when the value changes (either due to user input or programmatic change). Need for Material Datepicker.\n   */\n  public _valueChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Define if the input has been autofilled\n   */\n  public autofilled = false;\n\n  /**\n   * Store the current mask\n   */\n  private currentMask!: TsMask;\n\n  /**\n   * Define the default format for the date mask\n   */\n  private defaultDateFormat = 'mm/dd/yyyy';\n\n  /**\n   * Store a reference to the document object\n   */\n  private document: Document;\n\n  /**\n   * Define the flex layout gap\n   */\n  public flexGap = TS_SPACING.small[0];\n\n  /**\n   * Define whether the input has focus\n   */\n  public focused = false;\n\n  /**\n   * Define the internal data model\n   */\n  private innerValue: any = '';\n\n  /**\n   * Store the last value for comparison\n   */\n  private lastValue!: string;\n\n  /**\n   * Define placeholder for callback (provided later by the control value accessor)\n   */\n  private onChangeCallback: (_: any) => void = noop;\n\n  /**\n   * Define placeholder for callback (provided later by the control value accessor)\n   */\n  private onTouchedCallback: () => void = noop;\n\n  /**\n   * The defined width of the space before the input border gap begins\n   */\n  public outlineGapStart = 0;\n\n  /**\n   * The defined width of the gap for the input border\n   */\n  public outlineGapWidth = 0;\n\n  /**\n   * State of the hint and error animations\n   */\n  public subscriptAnimationState: string = '';\n\n  /**\n   * Base settings for the mask\n   */\n  private textMaskConfig: any = {\n    mask: null,\n    guide: false,\n    keepCharPositions: false,\n  };\n\n  /**\n   * Store the mask instance\n   */\n  private textMaskInputElement: any;\n\n  /**\n   * Define the default component ID\n   */\n  protected uid = `ts-input-${nextUniqueId++}`;\n\n  /**\n   * Provide access to the container\n   */\n  @ViewChild('containerElement')\n  private containerElement!: ElementRef;\n\n  /**\n   * Expose reference to the Material datepicker component\n   */\n  @ViewChild('picker')\n  public picker!: MatDatepicker;\n\n  /**\n   * Provide access to the label\n   */\n  @ViewChild('labelElement')\n  private labelElement!: ElementRef;\n\n  /**\n   * Provide access to the input\n   */\n  @ViewChild('inputElement')\n  public inputElement!: ElementRef;\n\n  /**\n   * Determine if the input is empty\n   */\n  public get empty(): boolean {\n    const el: ElementRef = this.inputElement;\n    if (el && el.nativeElement) {\n      const input: HTMLInputElement = this.inputElement.nativeElement;\n      return !input.value && !this.isBadInput() && !this.autofilled;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Determine the correct required attribute content\n   *\n   * @return The required attribute value\n   */\n  public get requiredAttribute(): string | null {\n    const requiredFormControl = (this.formControl && hasRequiredControl(this.formControl));\n    return (requiredFormControl || this.isRequired) ? 'required' : null;\n  }\n\n  /**\n   * Getter returning a boolean based on both the component `isDisabled` flag and the FormControl's disabled status\n   */\n  get shouldBeDisabled(): boolean {\n    return this.formControl.disabled || this.isDisabled;\n  }\n\n  /**\n   * Determine if the label should float\n   */\n  public get shouldLabelFloat(): boolean {\n    return this.focused || !this.empty;\n  }\n\n  /**\n   * Set the accessor and call the onchange callback\n   */\n  public set value(v: any) {\n    const oldDate = this.innerValue;\n    if (v !== this.innerValue) {\n      this.innerValue = v;\n      this.onChangeCallback(v);\n    }\n\n    // istanbul ignore else\n    if (this.datepicker) {\n      // istanbul ignore else\n      if (!this.dateAdapter.sameDate(oldDate, v)) {\n        this._valueChange.emit(v);\n      }\n    }\n  }\n  public get value(): any {\n    return this.innerValue;\n  }\n\n  /**\n   * Define if the input should autocapitalize\n   * (standard HTML5 property)\n   */\n  @Input()\n  public set autocapitalize(value: boolean) {\n    this._autocapitalize = coerceBooleanProperty(value);\n  }\n  public get autocapitalize(): boolean {\n    return this._autocapitalize;\n  }\n  private _autocapitalize: boolean = false;\n\n  /**\n   * Define if the input should autocomplete. See {@link TsInputAutocompleteTypes}.\n   */\n  @Input()\n  public set autocomplete(value: TsInputAutocompleteTypes) {\n    if (value) {\n      this._autocomplete = value;\n    } else {\n      this._autocomplete = 'on';\n    }\n  }\n  public get autocomplete(): TsInputAutocompleteTypes {\n    return this._autocomplete;\n  }\n  private _autocomplete: TsInputAutocompleteTypes = 'on';\n\n  /**\n   * Define a date filter to disallow certain dates for the datepicker\n   */\n  @Input()\n  public set dateFilter(value: TsDateFilterFunction | undefined) {\n    this._dateFilter = value;\n  }\n  public get dateFilter(): TsDateFilterFunction | undefined {\n    return this._dateFilter;\n  }\n  private _dateFilter: TsDateFilterFunction | undefined;\n\n  /**\n   * Define if the datepicker should be enabled\n   */\n  @Input()\n  public set datepicker(value: boolean) {\n    this._datepicker = coerceBooleanProperty(value);\n  }\n  public get datepicker(): boolean {\n    return this._datepicker;\n  }\n  private _datepicker: boolean = false;\n\n  /**\n   * Define the form control to get access to validators\n   */\n  @Input()\n  public set formControl(value: FormControl) {\n    // istanbul ignore else\n    if (value) {\n      this._formControl = value;\n      // Register the onChange for the new control\n      this.registerOnChangeFn(this.updateInnerValue);\n\n      // HACK: This is to get around ExpressionChangedAfterChecked error.\n      Promise.resolve(null).then(() => {\n        this.value = this._formControl.value;\n      });\n    }\n  }\n  public get formControl(): FormControl {\n    return this._formControl;\n  }\n  private _formControl: FormControl = new FormControl();\n\n  /**\n   * Define if a required marker should be included\n   */\n  @Input()\n  public set hideRequiredMarker(value: boolean) {\n    this._hideRequiredMarker = coerceBooleanProperty(value);\n  }\n  public get hideRequiredMarker(): boolean {\n    return this._hideRequiredMarker;\n  }\n  private _hideRequiredMarker = false;\n\n  /**\n   * Define a hint for the input\n   */\n  @Input()\n  public set hint(value: string | undefined) {\n    this._hint = value;\n  }\n  public get hint(): string | undefined {\n    return this._hint;\n  }\n  private _hint: string | undefined;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this.uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this.uid;\n\n  /**\n   * Define if the input should surface the ability to clear it's value\n   */\n  @Input()\n  public set isClearable(value: boolean) {\n    this._isClearable = coerceBooleanProperty(value);\n  }\n  public get isClearable(): boolean {\n    return this._isClearable;\n  }\n  private _isClearable = false;\n\n  /**\n   * Define if the input should be disabled\n   */\n  @Input()\n  public set isDisabled(v: boolean) {\n    this._isDisabled = coerceBooleanProperty(v);\n  }\n  public get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n  private _isDisabled: boolean = false;\n\n  /**\n   * Define if the input should be focused\n   */\n  @Input()\n  public set isFocused(value: boolean) {\n    this._isFocused = coerceBooleanProperty(value);\n\n    if (this._isFocused) {\n      this.focusInput();\n    }\n  }\n  public get isFocused(): boolean {\n    return this._isFocused;\n  }\n  private _isFocused = false;\n\n  /**\n   * Define if the input is required\n   */\n  @Input()\n  public set isRequired(value: boolean) {\n    this._isRequired = coerceBooleanProperty(value);\n  }\n  public get isRequired(): boolean {\n    return this._isRequired;\n  }\n  private _isRequired = false;\n\n  /**\n   * Define the label\n   */\n  @Input()\n  public set label(value: string | undefined) {\n    this._label = value;\n  }\n  public get label(): string | undefined {\n    return this._label;\n  }\n  private _label: string | undefined;\n\n  /**\n   * Define a mask\n   *\n   * param value - A {@link TsMaskShortcutOptions}\n   */\n  @Input()\n  public set mask(value: TsMaskShortcutOptions | undefined) {\n    // Verify value is allowed\n    // istanbul ignore else\n    if (value && isDevMode() && (allowedMaskShorcuts.indexOf(value)  = new EventEmitter();\n\n  /**\n   * Define an event when the input receives a blur event\n   */\n  @Output()\n  public inputBlur: EventEmitter = new EventEmitter();\n\n  /**\n   * The event to emit when the input element receives a focus event\n   */\n  @Output()\n  public inputFocus: EventEmitter = new EventEmitter();\n\n  /**\n   * Define an event emitter to alert consumers that a date was selected\n   */\n  @Output()\n  public selected: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    private changeDetectorRef: ChangeDetectorRef,\n    private autofillMonitor: AutofillMonitor,\n    protected platform: Platform,\n    private ngZone: NgZone,\n    private documentService: TsDocumentService,\n    @Optional() public dateAdapter: DateAdapter,\n  ) {\n    this.document = this.documentService.document;\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Begin monitoring for the input autofill\n   */\n  public ngOnInit(): void {\n    this.autofillMonitor.monitor(this.elementRef.nativeElement).subscribe((event) => {\n      this.autofilled = event.isAutofilled;\n    });\n  }\n\n\n  /**\n   * Trigger iOS caret bug fix if on iOS\n   */\n  public ngAfterContentInit(): void {\n    // istanbul ignore else\n    if (this.platform.IOS) {\n      this.fixIOSCaretBug();\n    }\n  }\n\n\n  /**\n   * After the view is initialized, trigger any needed animations\n   */\n  public ngAfterViewInit(): void {\n     // Avoid animations on load.\n    this.subscriptAnimationState = 'enter';\n\n    // istanbul ignore else\n    if (this.mask) {\n      this.setUpMask();\n    }\n\n    // Register this component as the associated input for the Material datepicker\n    if (this.picker && !this.picker._datepickerInput) {\n      this.picker._registerInput(this as any);\n    }\n  }\n\n\n  /**\n   * Return the difference in time in words\n   *\n   * @param time - The time chosen\n   * @return The difference in time\n   */\n  public ngOnChanges(changes: SimpleChanges): void {\n    const validMaskChange: boolean = !!(inputHasChanged(changes, 'mask') && this.mask);\n    const validSanitizeChange: boolean = !!(inputHasChanged(changes, 'maskSanitizeValue'));\n    const validDecimalChange: boolean = !!(inputHasChanged(changes, 'maskAllowDecimal'));\n\n    // istanbul ignore else\n    if (validMaskChange || validSanitizeChange || validDecimalChange) {\n      this.setUpMask();\n      this.updateMaskModelHack();\n      this.setValue(this.value);\n    }\n\n    // istanbul ignore else\n    if (inputHasChanged(changes, 'label')) {\n      this.updateOutlineGap();\n    }\n\n    // istanbul ignore else\n    if (this.textMaskInputElement !== undefined) {\n      this.textMaskInputElement.update(this.inputElement.nativeElement.value);\n    }\n  }\n\n\n  /**\n   * Trigger the outline to be updated after inner content is checked\n   */\n  public ngAfterContentChecked(): void {\n    // It's important that we run this outside the `_ngZone`, because the `Promise.resolve`\n    // can kick us into an infinite change detection loop, if the `_initialGapCalculated`\n    // wasn't flipped on for some reason.\n    this.ngZone.runOutsideAngular(() => {\n      Promise.resolve().then(() => this.updateOutlineGap());\n    });\n  }\n\n\n  /**\n   * Stop monitoring autofill\n   */\n  public ngOnDestroy(): void {\n    this.autofillMonitor.stopMonitoring(this.elementRef.nativeElement);\n\n    // istanbul ignore else\n    if (this._valueChange) {\n      this._valueChange.complete();\n    }\n  }\n\n\n  /**\n   * Fix for the iOS caret bug\n   *\n   * On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n   * key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n   * exists on iOS, we only bother to install the listener on iOS.\n   * https://github.com/angular/material2/blob/master/src/lib/input/input.ts\n   */\n  private fixIOSCaretBug(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.inputElement.nativeElement.addEventListener('keyup', (event: Event) => {\n        const el = event.target as HTMLInputElement;\n\n        // istanbul ignore else\n        if (!el.value && !el.selectionStart && !el.selectionEnd) {\n          // Note: Just setting `0, 0` doesn't fix the issue. Setting\n          // `1, 1` fixes it for the first time that you type text and\n          // then hold delete. Toggling to `1, 1` and then back to\n          // `0, 0` seems to completely fix it.\n          el.setSelectionRange(1, 1);\n          el.setSelectionRange(0, 0);\n        }\n      });\n    });\n  }\n\n\n  /**\n   * Set touched on blur\n   */\n  public onBlur() {\n    this.onTouchedCallback();\n    this.inputBlur.emit(this.value);\n  }\n\n\n  /**\n   * Update the inner value when the formControl value is updated\n   *\n   * @param value - The value to set\n   */\n  public updateInnerValue = (value: string): void => {\n    this.value = value;\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Register onChange callback (from ControlValueAccessor interface)\n   */\n  public registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n\n  /**\n   * Register onTouched callback (from ControlValueAccessor interface)\n   */\n  public registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n\n  /**\n   * Clear the input's value\n   */\n  public reset(): void {\n    this.value = '';\n    this.cleared.emit(true);\n    this.formControl.markAsUntouched();\n    this.changeDetectorRef.markForCheck();\n  }\n\n\n  /**\n   * Focus the actual text input\n   */\n  public focusInput(): void {\n    this.inputElement.nativeElement.focus();\n  }\n\n\n  /**\n   * Callback for when the focused state of the input changes\n   *\n   * @param nowFocused - Boolean determining if the input is gaining or losing focus\n   */\n  public focusChanged(nowFocused: boolean): void {\n    // istanbul ignore else\n    if (nowFocused !== this.focused && !this.readOnly) {\n      this.focused = nowFocused;\n    }\n\n    // Trigger the onTouchedCallback for blur events\n    if (!nowFocused) {\n      this.onTouchedCallback();\n      this.inputBlur.emit(this.value);\n    } else {\n      this.inputFocus.emit(this.value);\n    }\n  }\n\n\n  /**\n   * Write the value\n   *\n   * @param value - The value to write to the model\n   */\n  public writeValue(value: string | Date): void {\n    if (this.mask) {\n      this.setUpMask();\n    }\n\n    // Set the initial value for cases where the mask is disabled\n    let normalizedValue = value ? value : '';\n    this.value = normalizedValue;\n\n    // Convert to a string if dealing with a date object\n    if (normalizedValue instanceof Date) {\n      normalizedValue = normalizedValue.toISOString();\n    }\n\n    // istanbul ignore else\n    if (this.inputElement) {\n      this.renderer.setProperty(this.inputElement, 'value', normalizedValue);\n    }\n\n    // istanbul ignore else\n    if (this.textMaskInputElement !== undefined) {\n      this.textMaskInputElement.update(normalizedValue);\n    }\n  }\n\n\n  /**\n   * Update values on input\n   *\n   * NOTE(B$): Apparently TSLint doesn't realize that the host listener is calling this method.  Using the @HostDecorator shows the same\n   * error. So for now, we are disabling the lint rule here.\n   *\n   * NOTE: KOWN BUG that allows model and UI to get out of sync when extra characters are added after a fully satisfied mask.\n   *\n   * @param value - The typed value\n   */\n  // tslint:disable: no-unused-variable\n  public onInput(value: string): void {\n    // We need to trim the last character due to a bug in the text-mask library\n    const trimmedValue = this.trimLastCharacter(value);\n    this.inputElement.nativeElement.value = trimmedValue;\n    // istanbul ignore else\n    if (this.textMaskInputElement !== undefined) {\n      // Update the mask.\n      this.textMaskInputElement.update(trimmedValue);\n\n      // Verify the value has changed\n      // istanbul ignore else\n      if (this.lastValue !== value) {\n        this.lastValue = value;\n\n        // Trigger the change (and remove mask if needed)\n        this.setValue(trimmedValue);\n      }\n    }\n\n    // istanbul ignore else\n    if (this.datepicker) {\n      this.selected.emit(this.value);\n      this._valueChange.emit(new Date(value));\n    }\n  }\n  // tslint:enable: no-unused-variable\n\n\n  /**\n   * Remove the mask if needed\n   *\n   * @param value - The value to clean\n   * @param regex - The RegExp to use to clean the value\n   * @return The clean value\n   */\n  private cleanValue(value: string, regex?: RegExp | Function): string {\n    // If there is no unmask regex, just return the value\n    if (!regex) {\n      return value;\n    } else {\n      // If the unmask regex is a function, invoke it to get the plain regex\n      const finalRegex: RegExp = (regex && isFunction(regex)) ? regex() : regex;\n      return finalRegex ? value.replace(new RegExp(finalRegex), '') : value;\n    }\n  }\n\n\n  /**\n   * Create the collection of possible masks\n   *\n   * @param allowDecimal - If the number based masks should allow a decimal character\n   * @return The collection of masks\n   */\n  private createMaskCollection(allowDecimal: boolean): TsMaskCollection {\n    return {\n      phone: {\n        mask: ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n        unmaskRegex: NUMBER_ONLY_REGEX,\n      },\n      currency: {\n        mask: createNumberMask({\n          allowDecimal: allowDecimal,\n        }),\n        unmaskRegex: allowDecimal ? NUMBER_WITH_DECIMAL_REGEX : NUMBER_ONLY_REGEX,\n      },\n      number: {\n        mask: createNumberMask({\n          prefix: '',\n          suffix: '',\n          allowDecimal: allowDecimal,\n          allowLeadingZeroes: true,\n        }),\n        unmaskRegex: allowDecimal ? NUMBER_WITH_DECIMAL_REGEX : NUMBER_ONLY_REGEX,\n      },\n      percentage: {\n        mask: createNumberMask({\n          prefix: '',\n          suffix: '%',\n          allowDecimal: allowDecimal,\n        }),\n        unmaskRegex: allowDecimal ? NUMBER_WITH_DECIMAL_REGEX : NUMBER_ONLY_REGEX,\n      },\n      postal: {\n        mask: this.determinePostalMask,\n      },\n      date: {\n        mask: [/\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n        pipe: createAutoCorrectedDatePipe(this.defaultDateFormat),\n        keepCharPositions: true,\n      },\n      default: {\n        mask: false,\n      },\n    };\n  }\n\n\n  /**\n   * Helper to determine the correct postal code match (5 characters vs 9)\n   *\n   * @param value - The current postal code value\n   * @return The correct mask\n   */\n  private determinePostalMask(value: string): (RegExp | string)[] {\n    if (!value || value.length  {\n      this.inputElement.nativeElement.dispatchEvent(event);\n    });\n  }\n\n\n  /**\n   * HACK: Trim the last character of the model when the string is longer than the model\n   *\n   * KNOWN BUG: This hack does not work correcty for unsanitized percentage masks.\n   *\n   * The underlying text-mask library has a bug that allows the user to type 1 more character than the mask allows. To get around this\n   * issue, we are checking to see if the input value is longer than the mask. If it is, trim the last character off and set the value.\n   * See: https://github.com/text-mask/text-mask/issues/294#issuecomment-342299450\n   *\n   * @param value - The value to check\n   * @return The trimmed value (if needed)\n   */\n  private trimLastCharacter(value: string): string {\n    // This only effects masked inputs\n    if (this.mask) {\n      const mask = this.currentMask.mask;\n      const staticMask = isFunction(mask) ? mask(this.value) : mask;\n      const maskLength = staticMask ? staticMask.length /* istanbul ignore next - Unreachable */ : 0;\n      const isNumberMask: boolean = (mask as any).instanceOf === 'createNumberMask';\n\n      // istanbul ignore else\n      if (isFunction(mask) && isNumberMask) {\n        const decimals = 2;\n        const cleanValue = this.maskSanitizeValue ? this.cleanValue(value, this.currentMask.unmaskRegex) : value;\n        const split = cleanValue.split('.');\n\n        if (split.length === 2 && split[1].length > decimals) {\n          // Trim the final character off\n          const trimmedValue = cleanValue.slice(0, -1);\n          value = trimmedValue;\n        }\n      } else {\n        let stringifiedDate: string | undefined;\n\n        if (this.mask === 'date') {\n          stringifiedDate = this.isValidDateString(value) ? formatDate(value, 'MM-DD-YYYY') : value;\n        }\n\n        value = stringifiedDate || value;\n\n        if (value && (maskLength > 0 && value.length > maskLength)) {\n          // Determine the max length to trim the extra character\n          // Get the cleaned value if needed\n          const finalValue = this.maskSanitizeValue ? this.cleanValue(stringifiedDate || value, this.currentMask.unmaskRegex) : value;\n          const trimmedValue = finalValue.slice(0, -1);\n\n          // Trim the final character off\n          value = trimmedValue;\n        }\n      }\n\n    }\n\n    return value;\n  }\n\n\n  /**\n   * Convert an valid date string to a Date if needed\n   *\n   * NOTE: When using 1 time bindings we are required to pass in ISO stringified dates. Adding this\n   * method to our setters adds support for either version\n   *\n   * @param date - The date\n   * @return The Date object\n   */\n  private verifyIsDateObject(date: string | Date): Date {\n    return !(date instanceof Date) ? new Date(date) : date;\n  }\n\n\n  /**\n   * Determine if a date string is valid.\n   *\n   * We cannot simply see if the string creates a valid date. The string '0' will technically create a valid Date. For our purposes, we can\n   * check to verify the length is correct AND it is a valid date. This works because the mask is enforcing a consistent 'length' for valid\n   * dates.\n   *\n   * @param value - The string\n   * @return If the string is a valid date\n   */\n  private isValidDateString(value: string): boolean {\n    const numbersInFormattedDate = 8;\n    const cleanValue = this.cleanValue(value, /[^0-9]/g);\n    const hasCorrectLength: boolean = cleanValue.length === numbersInFormattedDate;\n    const isValid: boolean = isValidDate(value);\n    return hasCorrectLength && isValid;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsMaskCollection.html":{"url":"interfaces/TsMaskCollection.html","title":"interface - TsMaskCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsMaskCollection\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/input/input.component.ts\n        \n\n            \n                Description\n            \n            \n                The collection of masks. Used by TsInputComponent\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    TsMask\n\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/input/input.component.ts:116\n                            \n                        \n            \n        \n\n\n    \n\n    \n        Input\n\n\n\n\nTable of Contents\n\nBasic usage\nHint\nPrefix icon\nDisabled\nRequired\nRequired asterisk *\n\n\nClearable\nFocused\nInput Type\nInput Attributes\nValidation timing\nComponent reference\n\n\nUsage with Reactive Forms\nEvent Emitters\nMasks\nAvailable Masks\nSanitize the model value\nAllow decimals in number-based masks\n\n\nDatepicker\nFilter out available dates\nSet a max/min date range\n\n\nOpen calendar to a specific date\nOpen calendar to a specific view\nExample with dynamic validation\n\n\nBasic usage\nAttach an NgModel or FormControl to the input:\n\n\nWe should almost always being using a FormControl.\n\nNote: If you don't need a full form group you can provide a stand-alone control: myControl = new FormControl();\n\nHint\nA 'hint' can be displayed below the input on the right-hand side. This should be used for helpful user information such as input\nrequirements.\nPrefix icon\nTo include an icon as a prefix to the input, pass a valid icon name to prefixIcon:\n\nSee all valid icon possibilities: https://material.io/icons\n\nDisabled\nInputs can be disabled by setting the component flag OR by setting the associated FormControl to disabled.\nThe isDisabled flag works with both ngModel and FormControl inputs:\nWhen using Reactive Forms, controls should be disabled via the control:\nmyControl: FormControl = new FormControl({value: null, disabled: true});Required\nFor input's not using a FormControl, set the isRequired input to true:\nWhen using a FormControl, set the required validator on the control:\nmyControl = new FormControl(null, Validators.required);Required asterisk *\nIf the input should be required, but the required asterisk * is not needed, disable it with the\nhideRequiredMarker input:\n\nNOTE: We should not hide this visual indicator without a very good reason!\n\nClearable\nIf the input should be easily reset, include the isClearable flag to enable a 'clear input'\nbutton: (button will appear as small x icon at the far right of the input)\nWhen the input is cleared, the cleared event emitter will be fired with the value true.\nFocused\nAuto-focus the input when the view loads:\n\nNOTE: If multiple inputs within the same view set isFocused to true, the last one rendered\nwill receive the final focus.\n\nThis can also be used to dynamically focus an existing input:\nmyFocusedFlag = false;\n\ntoggleInputFocus() {\n  this.myFocusedFlag = !this.myFocusedFlag;\n}Input Type\nThe input type can be defined with the type input:\n\nFor all allowed types, see TsInputTypes.\n\nInput Attributes\nautocapitalize, autocomplete, spellcheck, readonly\n\nFor all allowed autocomplete types, see TsInputAutocompleteTypes.\n\nValidation timing\nValidate on change rather than blur:\nComponent reference\nTo get a reference to the component class, assign the exported name to a local variable:\n@ViewChild(TsInputComponent)\nmyVar: TsInputComponent;\n\nconsole.log('Component Class: ', this.myVar);Usage with Reactive Forms\nPass in the form control:\n\n  \n\n  Submit\nmyForm = this.formBuilder.group({\n  date: [\n    null, // If you need a default value, change this `null` to your value\n    [\n      Validators.required,\n    ],\n  ],\n});NOTE: If using a form with nested form groups, each group must be created with\nformBuilder.group for the form get control to work:\n// Notice the nested `dateRange` object without using `.group`\nmyForm: FormGroup = this.formBuilder.group({\n  dateRange: {\n    startDate: [\n      new Date(2017, 4, 6),\n    ],\n    endDate: [\n      new Date(2017, 4, 8),\n    ],\n  },\n});\n\n// THIS WILL FAIL!\nconst range = myForm.get('dateRange');\n\n//////////////////////////////////////////////////\n\n// Notice the nested `dateRange` object IS using `.group`\nmyForm: FormGroup = this.formBuilder.group({\n  dateRange: this.formBuilder.group({\n    startDate: [\n      new Date(2017, 4, 6),\n      [\n        Validators.required,\n      ],\n    ],\n    endDate: [\n      new Date(2017, 4, 8),\n      [\n        Validators.required,\n      ],\n    ],\n  }),\n});\n\n// Now there is a group for us to 'get'\nconst range = myForm.get('dateRange');Event Emitters\nSupported event emitters:\nEach emitter is called with the current input value.\n\nNOTE: The selected input is only available when datepicker is true.\n\nMasks\nMasks enable the input to enforce specific formatting for values; such as postal codes: 12345-1234.\nAvailable Masks\n\n\n\nMask\nInput value\nMasked Value\n\n\n\n\ncurrency\n12.34\n$12.34\n\n\ndate\n12/12/1982\n12/12/1982\n\n\nnumber\n1234.56\n1,234.56\n\n\npercentage\n12.4\n12.4%\n\n\nphone\n1231231234\n(123) 123-1234\n\n\npostal\n123456789\n12345-6789\n\n\n\nSanitize the model value\nMost often you will not want the mask characters to be saved as part of the actual value. By default this component will sanitize the value\nbefore saving it to the model. This can be disabled if needed:\nThis setup will format the value displayed in the UI: (123) 456-7890)while saving the pure value to the model: 1234567890.\nAllow decimals in number-based masks\nBy default, number based masks (number, percentage) allow decimals. This can be disabled:\nThis means when the user types 12.34, the input UI and model value will both be 1234.\nDatepicker\nTo add datepicker abilities to an input, set the datepicker input:\nFilter out available dates\nIf, for instance, you need to prohibit weekend days (sat/sun) from being selected you can pass in a\ncustom method to filter dates:\nmyFilter = (d: Date): boolean => {\n  const day = d.getDay();\n  // Prevent Saturday and Sunday from being selected.\n  return day !== 0 && day !== 6;\n}Set a max/min date range\nTo define bounds for date selection, pass in a valid Date to minDate and/or maxDate:\ndate1 = new Date(2017, 2, 1);\ndate2 = new Date(2017, 8, 1);Open calendar to a specific date\nPass in a Date to openTo:\nmyDate = new Date(2017, 5, 12);Open calendar to a specific view\nBy default, the calendar opens up to show the month view. This can be changed to show the year view initially:\nyear and month are the only two valid values.\nExample with dynamic validation\nWe can recreate a version of the {@link TsDateRangeComponent} using dynamic validation:\n\n  \n\n  \n\n  Submit\nmyForm = this.formBuilder.group({\n  startDate: [\n    null,\n    [\n      Validators.required,\n    ],\n  ],\n  endDate: [\n    null,\n    [\n      Validators.required,\n    ],\n  ],\n});\n\n// When the startDate changes, we want to set that date as the minDate for the endDate\nrangeStartChange(event: MatDatepickerInputEvent) {\n  if (event) {\n    // Get the from control\n    const control = this.formTwo.get('endDate');\n\n    // Set all validators.\n    // NOTE: setting validators will clear ALL existing validators, so we must add the required\n    // validator here again\n    control.setValidators([\n      Validators.required,\n      this.validatorsService.minDate(event.value),\n    ]);\n    // Tell the control to update according to the new validators\n    control.updateValueAndValidity();\n  }\n}\n\n// When the endDate changes, we want to set that date as the maxDate for the startDate\nrangeEndChange(event: MatDatepickerInputEvent) {\n  if (event) {\n    // Get the from control\n    const control = this.formTwo.get('startDate');\n\n    // Set all validators.\n    // NOTE: setting validators will clear ALL existing validators, so we must add the required\n    // validator here again\n    control.setValidators([\n      Validators.required,\n      this.validatorsService.maxDate(event.value),\n    ]);\n    // Tell the control to update according to the new validators\n    control.updateValueAndValidity();\n  }\n}\n\n    \n\n    \n        import {\n  AfterContentChecked,\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  isDevMode,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormControl,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport {\n  hasRequiredControl,\n  isFunction,\n  noop,\n  TsDocumentService,\n} from '@terminus/ngx-tools';\nimport {\n  coerceBooleanProperty,\n  coerceNumberProperty,\n} from '@terminus/ngx-tools/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { AutofillMonitor } from '@angular/cdk/text-field';\nimport { MatDatepicker } from '@angular/material/datepicker';\nimport { createTextMaskInputElement } from 'text-mask-core/dist/textMaskCore';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\nimport createAutoCorrectedDatePipe from 'text-mask-addons/dist/createAutoCorrectedDatePipe';\nimport {\n  DateAdapter,\n  MAT_DATE_FORMATS,\n} from '@angular/material/core';\nimport { format as formatDate, isValid as isValidDate } from 'date-fns';\n\nimport {\n  TS_DATE_FORMATS,\n  TsDateAdapter,\n} from './date-adapter';\nimport { inputHasChanged } from './../utilities/input-has-changed/input-has-changed';\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TS_SPACING } from './../spacing/spacing.constant';\n\n\n/**\n * Define the function type for date filters. Used by {@link TsInputComponent}\n */\nexport type TsDateFilterFunction = (d: Date) => boolean;\n\n\n/**\n * Define the allowed {@link TsInputComponent} input types\n */\nexport type TsInputTypes\n  = 'text'\n  | 'password'\n  | 'email'\n  | 'hidden'\n  | 'number'\n  | 'search'\n  | 'tel'\n  | 'url'\n;\n\n/**\n * Define the allowed autocomplete variations for {@link TsInputComponent}\n *\n * NOTE: This is not all valid types; only the ones this library supports.\n */\nexport type TsInputAutocompleteTypes\n  = 'off'\n  | 'on'\n  | 'name'\n  | 'email'\n  | 'username'\n  | 'new-password'\n  | 'current-password'\n  | 'tel'\n;\n\n/**\n * A function that returns an array of RegExp (used to determine postal code RegExp in {@link TsInputComponent})\n */\nexport type TsMaskFunction = (value: string) => (RegExp|string)[];\n\n/**\n * An individual mask definition. Used by {@link TsInputComponent}\n */\nexport interface TsMask {\n  mask: (RegExp|string)[] | TsMaskFunction | false;\n  unmaskRegex?: RegExp;\n  pipe?: Function;\n  guide?: boolean;\n  showMask?: boolean;\n  keepCharPositions?: boolean;\n}\n\n/**\n * The collection of masks. Used by {@link TsInputComponent}\n */\nexport interface TsMaskCollection {\n  [key: string]: TsMask;\n}\n\n/**\n * Define the allowed mask shortcut option. Used by {@link TsInputComponent}\n */\nexport type TsMaskShortcutOptions\n  = 'currency'\n  | 'date'\n  | 'number'\n  | 'percentage'\n  | 'phone'\n  | 'postal'\n  | 'default' // matches all characters\n;\n\n/**\n * Create an array used to verify the passed in shortcut is valid. Used by {@link TsInputComponent}\n */\nconst allowedMaskShorcuts: TsMaskShortcutOptions[] = [\n  'currency',\n  'date',\n  'number',\n  'percentage',\n  'phone',\n  'postal',\n  'default',\n];\n\n\n// Unique ID for each instance\nlet nextUniqueId = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\nconst autocompleteDefault: TsInputAutocompleteTypes = 'on';\nconst NUMBER_ONLY_REGEX: RegExp = /[^0-9]/g;\nconst NUMBER_WITH_DECIMAL_REGEX: RegExp = /[^0-9.]/g;\n\n\n/**\n * Custom control value accessor for our component.\n * This allows our custom components to access the underlying form validation via our base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsInputComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * A presentational component to render a text input.\n *\n * #### QA CSS CLASSES\n * - `qa-input`: The container element\n * - `qa-input-container`: The container around the input\n * - `qa-input-label`: The label element\n * - `qa-input-text`: The input element\n * - `qa-input-prefix-icon`: The icon element for the prefix icon, if one is set\n * - `qa-input-suffix-icon`: The icon element for the clickable \"clear\" icon, if this control is\n * clearable\n * - `qa-input-hint`: The hint element, if hint content is provided\n * - `qa-input-validation-messages`: The {@link TsValidationMessagesComponent} which will contain\n * - `qa-datepicker-calendar`: The calendar popup for the datepicker\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n  host: {\n    class: 'ts-input',\n  },\n  providers: [\n    CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR,\n    {\n      provide: DateAdapter,\n      useClass: TsDateAdapter,\n    },\n    {\n      provide: MAT_DATE_FORMATS,\n      useValue: TS_DATE_FORMATS,\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsInput',\n})\nexport class TsInputComponent\n  implements ControlValueAccessor, OnInit, AfterViewInit, AfterContentInit, AfterContentChecked, OnChanges, OnDestroy {\n  /**\n   * Emits when the value changes (either due to user input or programmatic change). Need for Material Datepicker.\n   */\n  public _valueChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Define if the input has been autofilled\n   */\n  public autofilled = false;\n\n  /**\n   * Store the current mask\n   */\n  private currentMask!: TsMask;\n\n  /**\n   * Define the default format for the date mask\n   */\n  private defaultDateFormat = 'mm/dd/yyyy';\n\n  /**\n   * Store a reference to the document object\n   */\n  private document: Document;\n\n  /**\n   * Define the flex layout gap\n   */\n  public flexGap = TS_SPACING.small[0];\n\n  /**\n   * Define whether the input has focus\n   */\n  public focused = false;\n\n  /**\n   * Define the internal data model\n   */\n  private innerValue: any = '';\n\n  /**\n   * Store the last value for comparison\n   */\n  private lastValue!: string;\n\n  /**\n   * Define placeholder for callback (provided later by the control value accessor)\n   */\n  private onChangeCallback: (_: any) => void = noop;\n\n  /**\n   * Define placeholder for callback (provided later by the control value accessor)\n   */\n  private onTouchedCallback: () => void = noop;\n\n  /**\n   * The defined width of the space before the input border gap begins\n   */\n  public outlineGapStart = 0;\n\n  /**\n   * The defined width of the gap for the input border\n   */\n  public outlineGapWidth = 0;\n\n  /**\n   * State of the hint and error animations\n   */\n  public subscriptAnimationState: string = '';\n\n  /**\n   * Base settings for the mask\n   */\n  private textMaskConfig: any = {\n    mask: null,\n    guide: false,\n    keepCharPositions: false,\n  };\n\n  /**\n   * Store the mask instance\n   */\n  private textMaskInputElement: any;\n\n  /**\n   * Define the default component ID\n   */\n  protected uid = `ts-input-${nextUniqueId++}`;\n\n  /**\n   * Provide access to the container\n   */\n  @ViewChild('containerElement')\n  private containerElement!: ElementRef;\n\n  /**\n   * Expose reference to the Material datepicker component\n   */\n  @ViewChild('picker')\n  public picker!: MatDatepicker;\n\n  /**\n   * Provide access to the label\n   */\n  @ViewChild('labelElement')\n  private labelElement!: ElementRef;\n\n  /**\n   * Provide access to the input\n   */\n  @ViewChild('inputElement')\n  public inputElement!: ElementRef;\n\n  /**\n   * Determine if the input is empty\n   */\n  public get empty(): boolean {\n    const el: ElementRef = this.inputElement;\n    if (el && el.nativeElement) {\n      const input: HTMLInputElement = this.inputElement.nativeElement;\n      return !input.value && !this.isBadInput() && !this.autofilled;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Determine the correct required attribute content\n   *\n   * @return The required attribute value\n   */\n  public get requiredAttribute(): string | null {\n    const requiredFormControl = (this.formControl && hasRequiredControl(this.formControl));\n    return (requiredFormControl || this.isRequired) ? 'required' : null;\n  }\n\n  /**\n   * Getter returning a boolean based on both the component `isDisabled` flag and the FormControl's disabled status\n   */\n  get shouldBeDisabled(): boolean {\n    return this.formControl.disabled || this.isDisabled;\n  }\n\n  /**\n   * Determine if the label should float\n   */\n  public get shouldLabelFloat(): boolean {\n    return this.focused || !this.empty;\n  }\n\n  /**\n   * Set the accessor and call the onchange callback\n   */\n  public set value(v: any) {\n    const oldDate = this.innerValue;\n    if (v !== this.innerValue) {\n      this.innerValue = v;\n      this.onChangeCallback(v);\n    }\n\n    // istanbul ignore else\n    if (this.datepicker) {\n      // istanbul ignore else\n      if (!this.dateAdapter.sameDate(oldDate, v)) {\n        this._valueChange.emit(v);\n      }\n    }\n  }\n  public get value(): any {\n    return this.innerValue;\n  }\n\n  /**\n   * Define if the input should autocapitalize\n   * (standard HTML5 property)\n   */\n  @Input()\n  public set autocapitalize(value: boolean) {\n    this._autocapitalize = coerceBooleanProperty(value);\n  }\n  public get autocapitalize(): boolean {\n    return this._autocapitalize;\n  }\n  private _autocapitalize: boolean = false;\n\n  /**\n   * Define if the input should autocomplete. See {@link TsInputAutocompleteTypes}.\n   */\n  @Input()\n  public set autocomplete(value: TsInputAutocompleteTypes) {\n    if (value) {\n      this._autocomplete = value;\n    } else {\n      this._autocomplete = 'on';\n    }\n  }\n  public get autocomplete(): TsInputAutocompleteTypes {\n    return this._autocomplete;\n  }\n  private _autocomplete: TsInputAutocompleteTypes = 'on';\n\n  /**\n   * Define a date filter to disallow certain dates for the datepicker\n   */\n  @Input()\n  public set dateFilter(value: TsDateFilterFunction | undefined) {\n    this._dateFilter = value;\n  }\n  public get dateFilter(): TsDateFilterFunction | undefined {\n    return this._dateFilter;\n  }\n  private _dateFilter: TsDateFilterFunction | undefined;\n\n  /**\n   * Define if the datepicker should be enabled\n   */\n  @Input()\n  public set datepicker(value: boolean) {\n    this._datepicker = coerceBooleanProperty(value);\n  }\n  public get datepicker(): boolean {\n    return this._datepicker;\n  }\n  private _datepicker: boolean = false;\n\n  /**\n   * Define the form control to get access to validators\n   */\n  @Input()\n  public set formControl(value: FormControl) {\n    // istanbul ignore else\n    if (value) {\n      this._formControl = value;\n      // Register the onChange for the new control\n      this.registerOnChangeFn(this.updateInnerValue);\n\n      // HACK: This is to get around ExpressionChangedAfterChecked error.\n      Promise.resolve(null).then(() => {\n        this.value = this._formControl.value;\n      });\n    }\n  }\n  public get formControl(): FormControl {\n    return this._formControl;\n  }\n  private _formControl: FormControl = new FormControl();\n\n  /**\n   * Define if a required marker should be included\n   */\n  @Input()\n  public set hideRequiredMarker(value: boolean) {\n    this._hideRequiredMarker = coerceBooleanProperty(value);\n  }\n  public get hideRequiredMarker(): boolean {\n    return this._hideRequiredMarker;\n  }\n  private _hideRequiredMarker = false;\n\n  /**\n   * Define a hint for the input\n   */\n  @Input()\n  public set hint(value: string | undefined) {\n    this._hint = value;\n  }\n  public get hint(): string | undefined {\n    return this._hint;\n  }\n  private _hint: string | undefined;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this.uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this.uid;\n\n  /**\n   * Define if the input should surface the ability to clear it's value\n   */\n  @Input()\n  public set isClearable(value: boolean) {\n    this._isClearable = coerceBooleanProperty(value);\n  }\n  public get isClearable(): boolean {\n    return this._isClearable;\n  }\n  private _isClearable = false;\n\n  /**\n   * Define if the input should be disabled\n   */\n  @Input()\n  public set isDisabled(v: boolean) {\n    this._isDisabled = coerceBooleanProperty(v);\n  }\n  public get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n  private _isDisabled: boolean = false;\n\n  /**\n   * Define if the input should be focused\n   */\n  @Input()\n  public set isFocused(value: boolean) {\n    this._isFocused = coerceBooleanProperty(value);\n\n    if (this._isFocused) {\n      this.focusInput();\n    }\n  }\n  public get isFocused(): boolean {\n    return this._isFocused;\n  }\n  private _isFocused = false;\n\n  /**\n   * Define if the input is required\n   */\n  @Input()\n  public set isRequired(value: boolean) {\n    this._isRequired = coerceBooleanProperty(value);\n  }\n  public get isRequired(): boolean {\n    return this._isRequired;\n  }\n  private _isRequired = false;\n\n  /**\n   * Define the label\n   */\n  @Input()\n  public set label(value: string | undefined) {\n    this._label = value;\n  }\n  public get label(): string | undefined {\n    return this._label;\n  }\n  private _label: string | undefined;\n\n  /**\n   * Define a mask\n   *\n   * param value - A {@link TsMaskShortcutOptions}\n   */\n  @Input()\n  public set mask(value: TsMaskShortcutOptions | undefined) {\n    // Verify value is allowed\n    // istanbul ignore else\n    if (value && isDevMode() && (allowedMaskShorcuts.indexOf(value)  = new EventEmitter();\n\n  /**\n   * Define an event when the input receives a blur event\n   */\n  @Output()\n  public inputBlur: EventEmitter = new EventEmitter();\n\n  /**\n   * The event to emit when the input element receives a focus event\n   */\n  @Output()\n  public inputFocus: EventEmitter = new EventEmitter();\n\n  /**\n   * Define an event emitter to alert consumers that a date was selected\n   */\n  @Output()\n  public selected: EventEmitter = new EventEmitter();\n\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    private changeDetectorRef: ChangeDetectorRef,\n    private autofillMonitor: AutofillMonitor,\n    protected platform: Platform,\n    private ngZone: NgZone,\n    private documentService: TsDocumentService,\n    @Optional() public dateAdapter: DateAdapter,\n  ) {\n    this.document = this.documentService.document;\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Begin monitoring for the input autofill\n   */\n  public ngOnInit(): void {\n    this.autofillMonitor.monitor(this.elementRef.nativeElement).subscribe((event) => {\n      this.autofilled = event.isAutofilled;\n    });\n  }\n\n\n  /**\n   * Trigger iOS caret bug fix if on iOS\n   */\n  public ngAfterContentInit(): void {\n    // istanbul ignore else\n    if (this.platform.IOS) {\n      this.fixIOSCaretBug();\n    }\n  }\n\n\n  /**\n   * After the view is initialized, trigger any needed animations\n   */\n  public ngAfterViewInit(): void {\n     // Avoid animations on load.\n    this.subscriptAnimationState = 'enter';\n\n    // istanbul ignore else\n    if (this.mask) {\n      this.setUpMask();\n    }\n\n    // Register this component as the associated input for the Material datepicker\n    if (this.picker && !this.picker._datepickerInput) {\n      this.picker._registerInput(this as any);\n    }\n  }\n\n\n  /**\n   * Return the difference in time in words\n   *\n   * @param time - The time chosen\n   * @return The difference in time\n   */\n  public ngOnChanges(changes: SimpleChanges): void {\n    const validMaskChange: boolean = !!(inputHasChanged(changes, 'mask') && this.mask);\n    const validSanitizeChange: boolean = !!(inputHasChanged(changes, 'maskSanitizeValue'));\n    const validDecimalChange: boolean = !!(inputHasChanged(changes, 'maskAllowDecimal'));\n\n    // istanbul ignore else\n    if (validMaskChange || validSanitizeChange || validDecimalChange) {\n      this.setUpMask();\n      this.updateMaskModelHack();\n      this.setValue(this.value);\n    }\n\n    // istanbul ignore else\n    if (inputHasChanged(changes, 'label')) {\n      this.updateOutlineGap();\n    }\n\n    // istanbul ignore else\n    if (this.textMaskInputElement !== undefined) {\n      this.textMaskInputElement.update(this.inputElement.nativeElement.value);\n    }\n  }\n\n\n  /**\n   * Trigger the outline to be updated after inner content is checked\n   */\n  public ngAfterContentChecked(): void {\n    // It's important that we run this outside the `_ngZone`, because the `Promise.resolve`\n    // can kick us into an infinite change detection loop, if the `_initialGapCalculated`\n    // wasn't flipped on for some reason.\n    this.ngZone.runOutsideAngular(() => {\n      Promise.resolve().then(() => this.updateOutlineGap());\n    });\n  }\n\n\n  /**\n   * Stop monitoring autofill\n   */\n  public ngOnDestroy(): void {\n    this.autofillMonitor.stopMonitoring(this.elementRef.nativeElement);\n\n    // istanbul ignore else\n    if (this._valueChange) {\n      this._valueChange.complete();\n    }\n  }\n\n\n  /**\n   * Fix for the iOS caret bug\n   *\n   * On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n   * key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n   * exists on iOS, we only bother to install the listener on iOS.\n   * https://github.com/angular/material2/blob/master/src/lib/input/input.ts\n   */\n  private fixIOSCaretBug(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.inputElement.nativeElement.addEventListener('keyup', (event: Event) => {\n        const el = event.target as HTMLInputElement;\n\n        // istanbul ignore else\n        if (!el.value && !el.selectionStart && !el.selectionEnd) {\n          // Note: Just setting `0, 0` doesn't fix the issue. Setting\n          // `1, 1` fixes it for the first time that you type text and\n          // then hold delete. Toggling to `1, 1` and then back to\n          // `0, 0` seems to completely fix it.\n          el.setSelectionRange(1, 1);\n          el.setSelectionRange(0, 0);\n        }\n      });\n    });\n  }\n\n\n  /**\n   * Set touched on blur\n   */\n  public onBlur() {\n    this.onTouchedCallback();\n    this.inputBlur.emit(this.value);\n  }\n\n\n  /**\n   * Update the inner value when the formControl value is updated\n   *\n   * @param value - The value to set\n   */\n  public updateInnerValue = (value: string): void => {\n    this.value = value;\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Register onChange callback (from ControlValueAccessor interface)\n   */\n  public registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n\n  /**\n   * Register onTouched callback (from ControlValueAccessor interface)\n   */\n  public registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n\n  /**\n   * Clear the input's value\n   */\n  public reset(): void {\n    this.value = '';\n    this.cleared.emit(true);\n    this.formControl.markAsUntouched();\n    this.changeDetectorRef.markForCheck();\n  }\n\n\n  /**\n   * Focus the actual text input\n   */\n  public focusInput(): void {\n    this.inputElement.nativeElement.focus();\n  }\n\n\n  /**\n   * Callback for when the focused state of the input changes\n   *\n   * @param nowFocused - Boolean determining if the input is gaining or losing focus\n   */\n  public focusChanged(nowFocused: boolean): void {\n    // istanbul ignore else\n    if (nowFocused !== this.focused && !this.readOnly) {\n      this.focused = nowFocused;\n    }\n\n    // Trigger the onTouchedCallback for blur events\n    if (!nowFocused) {\n      this.onTouchedCallback();\n      this.inputBlur.emit(this.value);\n    } else {\n      this.inputFocus.emit(this.value);\n    }\n  }\n\n\n  /**\n   * Write the value\n   *\n   * @param value - The value to write to the model\n   */\n  public writeValue(value: string | Date): void {\n    if (this.mask) {\n      this.setUpMask();\n    }\n\n    // Set the initial value for cases where the mask is disabled\n    let normalizedValue = value ? value : '';\n    this.value = normalizedValue;\n\n    // Convert to a string if dealing with a date object\n    if (normalizedValue instanceof Date) {\n      normalizedValue = normalizedValue.toISOString();\n    }\n\n    // istanbul ignore else\n    if (this.inputElement) {\n      this.renderer.setProperty(this.inputElement, 'value', normalizedValue);\n    }\n\n    // istanbul ignore else\n    if (this.textMaskInputElement !== undefined) {\n      this.textMaskInputElement.update(normalizedValue);\n    }\n  }\n\n\n  /**\n   * Update values on input\n   *\n   * NOTE(B$): Apparently TSLint doesn't realize that the host listener is calling this method.  Using the @HostDecorator shows the same\n   * error. So for now, we are disabling the lint rule here.\n   *\n   * NOTE: KOWN BUG that allows model and UI to get out of sync when extra characters are added after a fully satisfied mask.\n   *\n   * @param value - The typed value\n   */\n  // tslint:disable: no-unused-variable\n  public onInput(value: string): void {\n    // We need to trim the last character due to a bug in the text-mask library\n    const trimmedValue = this.trimLastCharacter(value);\n    this.inputElement.nativeElement.value = trimmedValue;\n    // istanbul ignore else\n    if (this.textMaskInputElement !== undefined) {\n      // Update the mask.\n      this.textMaskInputElement.update(trimmedValue);\n\n      // Verify the value has changed\n      // istanbul ignore else\n      if (this.lastValue !== value) {\n        this.lastValue = value;\n\n        // Trigger the change (and remove mask if needed)\n        this.setValue(trimmedValue);\n      }\n    }\n\n    // istanbul ignore else\n    if (this.datepicker) {\n      this.selected.emit(this.value);\n      this._valueChange.emit(new Date(value));\n    }\n  }\n  // tslint:enable: no-unused-variable\n\n\n  /**\n   * Remove the mask if needed\n   *\n   * @param value - The value to clean\n   * @param regex - The RegExp to use to clean the value\n   * @return The clean value\n   */\n  private cleanValue(value: string, regex?: RegExp | Function): string {\n    // If there is no unmask regex, just return the value\n    if (!regex) {\n      return value;\n    } else {\n      // If the unmask regex is a function, invoke it to get the plain regex\n      const finalRegex: RegExp = (regex && isFunction(regex)) ? regex() : regex;\n      return finalRegex ? value.replace(new RegExp(finalRegex), '') : value;\n    }\n  }\n\n\n  /**\n   * Create the collection of possible masks\n   *\n   * @param allowDecimal - If the number based masks should allow a decimal character\n   * @return The collection of masks\n   */\n  private createMaskCollection(allowDecimal: boolean): TsMaskCollection {\n    return {\n      phone: {\n        mask: ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n        unmaskRegex: NUMBER_ONLY_REGEX,\n      },\n      currency: {\n        mask: createNumberMask({\n          allowDecimal: allowDecimal,\n        }),\n        unmaskRegex: allowDecimal ? NUMBER_WITH_DECIMAL_REGEX : NUMBER_ONLY_REGEX,\n      },\n      number: {\n        mask: createNumberMask({\n          prefix: '',\n          suffix: '',\n          allowDecimal: allowDecimal,\n          allowLeadingZeroes: true,\n        }),\n        unmaskRegex: allowDecimal ? NUMBER_WITH_DECIMAL_REGEX : NUMBER_ONLY_REGEX,\n      },\n      percentage: {\n        mask: createNumberMask({\n          prefix: '',\n          suffix: '%',\n          allowDecimal: allowDecimal,\n        }),\n        unmaskRegex: allowDecimal ? NUMBER_WITH_DECIMAL_REGEX : NUMBER_ONLY_REGEX,\n      },\n      postal: {\n        mask: this.determinePostalMask,\n      },\n      date: {\n        mask: [/\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n        pipe: createAutoCorrectedDatePipe(this.defaultDateFormat),\n        keepCharPositions: true,\n      },\n      default: {\n        mask: false,\n      },\n    };\n  }\n\n\n  /**\n   * Helper to determine the correct postal code match (5 characters vs 9)\n   *\n   * @param value - The current postal code value\n   * @return The correct mask\n   */\n  private determinePostalMask(value: string): (RegExp | string)[] {\n    if (!value || value.length  {\n      this.inputElement.nativeElement.dispatchEvent(event);\n    });\n  }\n\n\n  /**\n   * HACK: Trim the last character of the model when the string is longer than the model\n   *\n   * KNOWN BUG: This hack does not work correcty for unsanitized percentage masks.\n   *\n   * The underlying text-mask library has a bug that allows the user to type 1 more character than the mask allows. To get around this\n   * issue, we are checking to see if the input value is longer than the mask. If it is, trim the last character off and set the value.\n   * See: https://github.com/text-mask/text-mask/issues/294#issuecomment-342299450\n   *\n   * @param value - The value to check\n   * @return The trimmed value (if needed)\n   */\n  private trimLastCharacter(value: string): string {\n    // This only effects masked inputs\n    if (this.mask) {\n      const mask = this.currentMask.mask;\n      const staticMask = isFunction(mask) ? mask(this.value) : mask;\n      const maskLength = staticMask ? staticMask.length /* istanbul ignore next - Unreachable */ : 0;\n      const isNumberMask: boolean = (mask as any).instanceOf === 'createNumberMask';\n\n      // istanbul ignore else\n      if (isFunction(mask) && isNumberMask) {\n        const decimals = 2;\n        const cleanValue = this.maskSanitizeValue ? this.cleanValue(value, this.currentMask.unmaskRegex) : value;\n        const split = cleanValue.split('.');\n\n        if (split.length === 2 && split[1].length > decimals) {\n          // Trim the final character off\n          const trimmedValue = cleanValue.slice(0, -1);\n          value = trimmedValue;\n        }\n      } else {\n        let stringifiedDate: string | undefined;\n\n        if (this.mask === 'date') {\n          stringifiedDate = this.isValidDateString(value) ? formatDate(value, 'MM-DD-YYYY') : value;\n        }\n\n        value = stringifiedDate || value;\n\n        if (value && (maskLength > 0 && value.length > maskLength)) {\n          // Determine the max length to trim the extra character\n          // Get the cleaned value if needed\n          const finalValue = this.maskSanitizeValue ? this.cleanValue(stringifiedDate || value, this.currentMask.unmaskRegex) : value;\n          const trimmedValue = finalValue.slice(0, -1);\n\n          // Trim the final character off\n          value = trimmedValue;\n        }\n      }\n\n    }\n\n    return value;\n  }\n\n\n  /**\n   * Convert an valid date string to a Date if needed\n   *\n   * NOTE: When using 1 time bindings we are required to pass in ISO stringified dates. Adding this\n   * method to our setters adds support for either version\n   *\n   * @param date - The date\n   * @return The Date object\n   */\n  private verifyIsDateObject(date: string | Date): Date {\n    return !(date instanceof Date) ? new Date(date) : date;\n  }\n\n\n  /**\n   * Determine if a date string is valid.\n   *\n   * We cannot simply see if the string creates a valid date. The string '0' will technically create a valid Date. For our purposes, we can\n   * check to verify the length is correct AND it is a valid date. This works because the mask is enforcing a consistent 'length' for valid\n   * dates.\n   *\n   * @param value - The string\n   * @return If the string is a valid date\n   */\n  private isValidDateString(value: string): boolean {\n    const numbersInFormattedDate = 8;\n    const cleanValue = this.cleanValue(value, /[^0-9]/g);\n    const hasCorrectLength: boolean = cleanValue.length === numbersInFormattedDate;\n    const isValid: boolean = isValidDate(value);\n    return hasCorrectLength && isValid;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsMenuComponent.html":{"url":"components/TsMenuComponent.html","title":"component - TsMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsMenuComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/menu/menu.component.ts\n\n\n    \n        Description\n    \n    \n        A presentational component to render a dropdown menu.\nQA CSS CLASSES\n-qa-menu: Placed on the wrapper around the menu items\n-qa-menu-trigger: Placed on the menu trigger\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    Select Item\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsMenu\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-menu\n            \n\n            \n                styleUrls\n                menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                shouldOverlapTrigger\n                            \n                            \n                                    Public\n                                trigger\n                            \n                            \n                                    Private\n                                TRIGGER_ICON_DEFAULT\n                            \n                            \n                                    Private\n                                TRIGGER_ICON_UTILITY\n                            \n                            \n                                    Public\n                                triggerIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                defaultOpened\n                            \n                            \n                                format\n                            \n                            \n                                isDisabled\n                            \n                            \n                                menuItemsTemplate\n                            \n                            \n                                menuPositionX\n                            \n                            \n                                menuPositionY\n                            \n                            \n                                theme\n                            \n                            \n                                triggerType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        defaultOpened\n                    \n                    \n                        Define if the menu should be opened by default\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:115\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        format\n                    \n                    \n                        Define the button format\n\n                            \n                            Type:    TsButtonFormatTypes\n\n                            \n                        \n                            Default value: 'filled'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:151\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                    \n                        Define if the menu should be disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:121\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuItemsTemplate\n                    \n                    \n                        Allow a custom template for menu items\n\n                            \n                            Type:    TemplateRef\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:127\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuPositionX\n                    \n                    \n                        Define the X menu position\n\n                            \n                            Type:    TsMenuPositionTypesX\n\n                            \n                        \n                            Default value: 'after'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:133\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuPositionY\n                    \n                    \n                        Define the Y menu position\n\n                            \n                            Type:    TsMenuPositionTypesY\n\n                            \n                        \n                            Default value: 'below'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:139\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the menu theme\n\n                            \n                            Type:    TsStyleThemeTypes\n\n                            \n                        \n                            Default value: 'primary'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:145\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        triggerType\n                    \n                    \n                        Define the type of trigger TsMenuTriggerTypes\n\n'utility' will expose a simple fab trigger: ⋮\n'default' will expose a standard TsButtonComponent\n\n\n                            \n                            Type:    TsMenuTriggerTypes\n\n                            \n                        \n                            Default value: 'default'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:160\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:175\n                            \n                        \n\n\n                \n                    \n                            After the view has initialized, open the menu if it is defaulted to 'open'\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:166\n                            \n                        \n\n\n                \n                    \n                            Set the triggerIcon based on the triggerType\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldOverlapTrigger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shouldOverlapTrigger:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:98\n                            \n                        \n\n                \n                    \n                        Define if the menu should overlap the trigger\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trigger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trigger:     MatMenuTrigger\n\n                    \n                \n                    \n                        \n                            Type :     MatMenuTrigger\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:109\n                            \n                        \n\n                \n                    \n                        Provide access to the trigger\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            TRIGGER_ICON_DEFAULT\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TRIGGER_ICON_DEFAULT:     \n\n                    \n                \n                    \n                        \n                            Default value : 'arrow_drop_down'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:81\n                            \n                        \n\n                \n                    \n                        Define the default icon for the trigger button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            TRIGGER_ICON_UTILITY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TRIGGER_ICON_UTILITY:     \n\n                    \n                \n                    \n                        \n                            Default value : 'more_vert'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:86\n                            \n                        \n\n                \n                    \n                        Define the utility icon for the trigger button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            triggerIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        triggerIcon:     \"arrow_drop_down\" | \"more_vert\"\n\n                    \n                \n                    \n                        \n                            Type :     \"arrow_drop_down\" | \"more_vert\"\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/menu/menu.component.ts:103\n                            \n                        \n\n                \n                    \n                        The icon to be used in the trigger button\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isUtilityMenu\n                    \n                \n\n                \n                    \n                        getisUtilityMenu()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/menu/menu.component.ts:91\n                                \n                            \n                    \n                        \n                                Return if the current menu is a utility menu\n\n\n                                \n                                    Returns :     boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n    \n        \n\nTable of Contents\n\nBasic Usage\nCheckbox Menu\n\n\nBasic Usage\n\n\n  Select Item\n\n\n\n\n  \n    Roger, Roger.\n  \n\n  \n    A tasty link\n  \nThis allows all selection functionality to be handled by the consuming application rather than being\nproxied through event emitters.\n\nNOTE:  and  will be styled the same within a menu.\n\nCheckbox Menu\n\nThis is very similar to the basic usage example, with a few small, key differences.\n\nCreate the form and array of possible options:\n// The list of column names to show in the UI\ncolumns = [\n  'Title',\n  'Account',\n  'Budget',\n  'Enabled',\n];\n// We are creating a form array with 4 controls all defaulted to 'true'\nmyForm = this.formBuilder.group({\n  showColumns: this.formBuilder.array([true, true, true, true]),\n});Create the menu trigger and the dropdown contents:\n\n\n  Select Item\n\n\n\n\n  \n    \n    \n      \n      \n        \n        {{ columns[i] }}\n      \n    \n  \n\nNOTE: In this example, the form is stand-alone so the entire form is nested inside the menu\ntemplate. If this were part of a larger form, the form element would be higher in the DOM\nhierarchy.\n\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  ViewChild,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ElementRef,\n  TemplateRef,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TsButtonFormatTypes } from '../button/button.component';\n\n\n/**\n * Define the allowed X positions for a menu\n */\nexport type TsMenuPositionTypesX =\n  'before'\n  | 'after'\n;\n\n\n/**\n * Define the allowed Y positions for a menu\n */\nexport type TsMenuPositionTypesY =\n  'above'\n  | 'below'\n;\n\n\n/**\n * Define the allowed trigger types for a menu\n */\nexport type TsMenuTriggerTypes\n  = 'default'\n  | 'utility'\n;\n\n\n/**\n * A presentational component to render a dropdown menu.\n *\n * #### QA CSS CLASSES\n * -`qa-menu`: Placed on the wrapper around the menu items\n * -`qa-menu-trigger`: Placed on the menu trigger\n *\n * @example\n * Select Item\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n  host: {\n    class: 'ts-menu',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsMenu',\n})\nexport class TsMenuComponent implements AfterViewInit, OnInit {\n  /**\n   * Define the default icon for the trigger button\n   */\n  private TRIGGER_ICON_DEFAULT: 'arrow_drop_down' = 'arrow_drop_down';\n\n  /**\n   * Define the utility icon for the trigger button\n   */\n  private TRIGGER_ICON_UTILITY: 'more_vert' = 'more_vert';\n\n  /**\n   * Return if the current menu is a utility menu\n   */\n  public get isUtilityMenu(): boolean {\n    return this.triggerType === 'utility';\n  }\n\n  /**\n   * Define if the menu should overlap the trigger\n   */\n  public shouldOverlapTrigger: boolean = false;\n\n  /**\n   * The icon to be used in the trigger button\n   */\n  public triggerIcon!: 'arrow_drop_down' | 'more_vert';\n\n  /**\n   * Provide access to the trigger\n   */\n  @ViewChild(MatMenuTrigger)\n  public trigger!: MatMenuTrigger;\n\n  /**\n   * Define if the menu should be opened by default\n   */\n  @Input()\n  public defaultOpened: boolean = false;\n\n  /**\n   * Define if the menu should be disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Allow a custom template for menu items\n   */\n  @Input()\n  public menuItemsTemplate!: TemplateRef;\n\n  /**\n   * Define the X menu position\n   */\n  @Input()\n  public menuPositionX: TsMenuPositionTypesX = 'after';\n\n  /**\n   * Define the Y menu position\n   */\n  @Input()\n  public menuPositionY: TsMenuPositionTypesY = 'below';\n\n  /**\n   * Define the menu theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define the button format\n   */\n  @Input()\n  public format: TsButtonFormatTypes = 'filled';\n\n  /**\n   * Define the type of trigger {@link TsMenuTriggerTypes}\n   *\n   * - 'utility' will expose a simple fab trigger: `⋮`\n   * - 'default' will expose a standard {@link TsButtonComponent}\n   */\n  @Input()\n  public triggerType: TsMenuTriggerTypes = 'default';\n\n\n  /**\n   * Set the triggerIcon based on the triggerType\n   */\n  ngOnInit(): void {\n    this.triggerIcon = (this.triggerType === 'default') ?\n      this.TRIGGER_ICON_DEFAULT : this.TRIGGER_ICON_UTILITY;\n  }\n\n\n  /**\n   * After the view has initialized, open the menu if it is defaulted to 'open'\n   */\n  public ngAfterViewInit(): void {\n    if (this.defaultOpened) {\n      this.trigger.openMenu();\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n\n    \n      {{ triggerIcon }}\n    \n  \n\n  \n    \n      {{ triggerIcon }}\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ triggerIcon }}                  {{ triggerIcon }}      '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsMenuModule.html":{"url":"modules/TsMenuModule.html","title":"module - TsMenuModule","body":"\n                   \n\n\n\n\n  Modules\n  TsMenuModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsMenuModule\n\n\n\ncluster_TsMenuModule_declarations\n\n\n\ncluster_TsMenuModule_imports\n\n\n\ncluster_TsMenuModule_exports\n\n\n\n\nTsMenuComponent\n\nTsMenuComponent\n\n\n\nTsMenuModule\n\nTsMenuModule\n\nTsMenuModule -->\n\nTsMenuComponent->TsMenuModule\n\n\n\n\n\nTsMenuComponent \n\nTsMenuComponent \n\nTsMenuComponent  -->\n\nTsMenuModule->TsMenuComponent \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsMenuModule -->\n\nTsButtonModule->TsMenuModule\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsMenuModule -->\n\nTsIconModule->TsMenuModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/menu/menu.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsMenuComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsMenuComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsButtonModule } from './../button/button.module';\nimport { TsMenuComponent } from './menu.component';\n\nexport * from './menu.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatMenuModule,\n    TsIconModule,\n    MatButtonModule,\n    TsButtonModule,\n  ],\n  exports: [\n    TsMenuComponent,\n  ],\n  declarations: [\n    TsMenuComponent,\n  ],\n})\nexport class TsMenuModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsNavigationActionItem.html":{"url":"interfaces/TsNavigationActionItem.html","title":"interface - TsNavigationActionItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsNavigationActionItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.component.ts\n        \n\n            \n                Description\n            \n            \n                Action specific keys for an item passed to the TsNavigationComponent\n\n            \n\n            \n                Extends\n            \n            \n                    NavigationItemBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The action to emit upon interaction\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'tsNavigation',\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsNavigationComponent.html":{"url":"components/TsNavigationComponent.html","title":"component - TsNavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsNavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/navigation/navigation.component.ts\n\n\n    \n        Description\n    \n    \n        This is the navigation UI Component\nQA CSS CLASSES\n\nqa-navigation: Placed on the nav element which contains this component\nqa-navigation-items: Placed on the div element which contains the navigation items\nqa-navigation-item: Placed on the button elements which represent each visible navigation\nitem\nqa-navigation-secondary-trigger: Placed on the button element which displays the drop down\ncontaining secondary links when clicked\nqa-navigation-secondary-items: Placed on the menu element which contains the secondary\nnavigation items\nqa-navigation-secondary-item: Placed on the button elements which represent each secondary\nnavigation item\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsNavigation\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-navigation\n            \n\n            \n                styleUrls\n                navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                breakWidths\n                            \n                            \n                                    Public\n                                hiddenItems\n                            \n                            \n                                    Private\n                                pristineItems\n                            \n                            \n                                    Public\n                                visibleItems\n                            \n                            \n                                    Public\n                                visibleItemsList\n                            \n                            \n                                    Public\n                                visibleLinkElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateBreakWidths\n                            \n                            \n                                    Public\n                                isExternalLink\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Private\n                                setUpInitialArrays\n                            \n                            \n                                    Private\n                                updateLists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                user\n                            \n                            \n                                welcomeMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/navigation/navigation.component.ts:250\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                        Accept the array of navigation items and trigger setup\n\n                            \n                            Type:    []\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:202\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                    \n                        Accept the user data\n\n                            \n                            Type:    TsUser\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:218\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        welcomeMessage\n                    \n                    \n                        Define the welcome message\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Welcome'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:224\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                    \n                        Emit the click event with the TsNavigationPayload\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:242\n                            \n                        \n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            window:resize\n                            \n                            \n                        \n                    \n                \n                \n                    \nwindow:resize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:248\n                            \n                        \n\n\n                \n                    \n                            Trigger a layout update when the window resizes\n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            generateBreakWidths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateBreakWidths()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:282\n                            \n                        \n\n\n                \n                    \n                            Generate the array of breakWidths\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isExternalLink\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isExternalLink(destination: string | string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:368\n                            \n                        \n\n\n                \n                    \n                            If the destination is a string and begins with http\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        destination\n                                                        \n                                                                    string | string[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe destination to check\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Boolean determining if the link is external\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:272\n                            \n                        \n\n\n                \n                    \n                            Trigger initial layout update after the view initializes\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:264\n                            \n                        \n\n\n                \n                    \n                            Set up initial link groups\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setUpInitialArrays\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setUpInitialArrays(items: TsNavigationItem[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:302\n                            \n                        \n\n\n                \n                    \n                            Clone the nav items and split into the initially visible/hidden lists\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    TsNavigationItem[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe complete list of navigation items\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateLists\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateLists()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:319\n                            \n                        \n\n\n                \n                    \n                            Move items between the two lists as required by the available space\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            breakWidths\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        breakWidths:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:165\n                            \n                        \n\n                \n                    \n                        Define an array of widths at which to break the navigation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hiddenItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hiddenItems:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject([] as TsNavigationItem[])\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:170\n                            \n                        \n\n                \n                    \n                        Define the list of hidden items\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pristineItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pristineItems:     TsNavigationItem[]\n\n                    \n                \n                    \n                        \n                            Type :     TsNavigationItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:149\n                            \n                        \n\n                \n                    \n                        Store a pristine copy of the navigation items\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            visibleItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visibleItems:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject([] as TsNavigationItem[])\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:187\n                            \n                        \n\n                \n                    \n                        The collection of visible navigation items\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            visibleItemsList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visibleItemsList:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:230\n                            \n                        \n\n                \n                    \n                        Element reference for visible list items\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            visibleLinkElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visibleLinkElement:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChildren\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:236\n                            \n                        \n\n                \n                    \n                        Query list of all elements from the visible items list\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        availableSpace\n                    \n                \n\n                \n                    \n                        getavailableSpace()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:156\n                                \n                            \n                    \n                        \n                                Getter to return the available navigation width\n\n\n                                \n                                \n                                \n                                    Returns :     number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        usersFullName\n                    \n                \n\n                \n                    \n                        getusersFullName()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:177\n                                \n                            \n                    \n                        \n                                Getter to return the user's full name if it exists\n\n\n                                \n                                \n                                \n                                    Returns :     string | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        visibleItemsLength\n                    \n                \n\n                \n                    \n                        getvisibleItemsLength()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:194\n                                \n                            \n                    \n                        \n                                Getter to return the count of visible items\n\n\n                                \n                                \n                                \n                                    Returns :     number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n\n\n                \n                    \n                        setitems(value: [])\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/navigation/navigation.component.ts:202\n                                \n                            \n                    \n                        \n                                Accept the array of navigation items and trigger setup\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'tsNavigation',\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n      \n        \n          {{ item.name }}\n        \n      \n\n      \n        \n          {{ item.name }}\n        \n      \n\n      \n        \n          {{ item.name }}\n        \n      \n    \n\n  \n\n\n  \n    \n      {{ welcomeMessage }}\n      ,\n    \n    \n    {{ usersFullName }}\n\n    \n      keyboard_arrow_down\n    \n  \n\n\n\n\n  \n\n    \n      \n        {{ item.name }}\n      \n\n      \n        {{ item.name }}\n      \n    \n\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ item.name }}                                      {{ item.name }}                                      {{ item.name }}                                {{ welcomeMessage }}      ,            {{ usersFullName }}          keyboard_arrow_down                          {{ item.name }}                    {{ item.name }}            '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsNavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsNavigationLinkItem.html":{"url":"interfaces/TsNavigationLinkItem.html","title":"interface - TsNavigationLinkItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsNavigationLinkItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.component.ts\n        \n\n            \n                Description\n            \n            \n                Link specific keys for an item passed to the TsNavigationComponent\n\n            \n\n            \n                Extends\n            \n            \n                    NavigationItemBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destination\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The destination for items with a 'navigate' action. Single strings are used for external\nlocations while an array of strings are used for routerLinks\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'tsNavigation',\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsNavigationModule.html":{"url":"modules/TsNavigationModule.html","title":"module - TsNavigationModule","body":"\n                   \n\n\n\n\n  Modules\n  TsNavigationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsNavigationModule\n\n\n\ncluster_TsNavigationModule_declarations\n\n\n\ncluster_TsNavigationModule_imports\n\n\n\ncluster_TsNavigationModule_exports\n\n\n\n\nTsNavigationComponent\n\nTsNavigationComponent\n\n\n\nTsNavigationModule\n\nTsNavigationModule\n\nTsNavigationModule -->\n\nTsNavigationComponent->TsNavigationModule\n\n\n\n\n\nTsNavigationComponent \n\nTsNavigationComponent \n\nTsNavigationComponent  -->\n\nTsNavigationModule->TsNavigationComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsNavigationModule -->\n\nTsIconModule->TsNavigationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsNavigationComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsNavigationComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsNavigationComponent } from './navigation.component';\n\nexport * from './navigation.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatMenuModule,\n    RouterModule,\n    TsIconModule,\n  ],\n  declarations: [\n    TsNavigationComponent,\n  ],\n  exports: [\n    TsNavigationComponent,\n  ],\n})\nexport class TsNavigationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsNavigationPayload.html":{"url":"interfaces/TsNavigationPayload.html","title":"interface - TsNavigationPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsNavigationPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the expected response from the TsNavigationComponent emitter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        event\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The selected item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:     MouseEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MouseEvent\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The mouse click event\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'tsNavigation',\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsPaginatorMenuItem.html":{"url":"interfaces/TsPaginatorMenuItem.html","title":"interface - TsPaginatorMenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsPaginatorMenuItem\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/paginator/paginator.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the allowed keys and types for an item passed to the TsMenuComponent within a\nTsPaginatorComponent\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The menu item name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A value for the item\n\n                                \n                            \n                        \n                    \n            \n    \n\n    \n        Paginator\n\n\n\n\nTable of Contents\n\nBasic usage\nEvents\nCurrent page\nZero or One based pagination\nRecord count too high\nMax records\nRecord count message\n\n\nRecords per page\n\n\nBasic usage\nFor the most minimal implementation, just pass in the total record count:\nEvents\nThe paginator will emit the current page each time the page is changed or the records-per-page count\nis changed:\nmySelectFunc(v: TsPaginatorMenuItem) {\n  // v:\n  // {\n  //   name: \"1 - 10\",\n  //   value: 1,\n  // }\n}\n\nmyChangeFunc(v: number) {\n  // v: 50\n}Current page\nSet the current page:\nZero or One based pagination\nBy default the paginator starts the pages array with a value of '0'. If your API starts it's\npagination at 1 (such as Rails) you can set isZeroBased to false:\n\n\n\n\nRecord count too high\nThe paginator will display a message if too many records are found. This is to encourage better\nfiltering rather than more time paging through results.\nMax records\nBy default, anything over 100 is considered too many. To change this value, pass in a number to\nmaxPreferredRecords:\nRecord count message\nA custom message may be defined:\nA custom message template can also be defined. This allows dynamic links to documentation, help or a\nbetter set of filters.\n\n\n\n\n  {{ message }}\nRecords per page\nDefine the choices for how many records can be displayed on a single 'page':\nThis menu can be disabled completely if desired:\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  AfterViewInit,\n  TemplateRef,\n  ElementRef,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {\n  coerceNumberProperty,\n  coerceBooleanProperty,\n} from '@terminus/ngx-tools/coercion';\nimport { inputHasChanged } from './../utilities/input-has-changed/input-has-changed';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsMenuComponent} within a\n * {@link TsPaginatorComponent}\n */\nexport interface TsPaginatorMenuItem {\n  /**\n   * The menu item name\n   */\n  name: string;\n\n  /**\n   * A value for the item\n   */\n  value?: number;\n}\n\n\n/**\n * A paginator component\n *\n * #### QA CSS CLASSES\n * - `qa-paginator`: Placed on the primary container\n * - `qa-paginator-per-page-select`: Placed on the results per page select menu\n * - `qa-paginator-first-page-button`: Placed on the 'first page' button\n * - `qa-paginator-previous-page-button`: Placed on the 'previous page' button\n * - `qa-paginator-current-page-menu`: Placed on the 'current page' menu dropdown\n * - `qa-paginator-next-page-button`: Placed on the 'next page' button\n * - `qa-paginator-last-page-button`: Placed on the the 'last page' button\n * - `qa-paginator-message`: Placed on the messaging regarding the record count being too high\n *\n * @example\n * \n *\n * \n *   {{ message }}\n *   Learn more\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-paginator',\n  templateUrl: './paginator.component.html',\n  styleUrls: ['./paginator.component.scss'],\n  host: {\n    class: 'ts-paginator',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsPaginator',\n})\nexport class TsPaginatorComponent implements OnChanges, AfterViewInit {\n  /**\n   * Define the default count of records per page\n   */\n  private DEFAULT_PER_PAGE: number = 10;\n\n  /**\n   * Default max records before message is shown\n   */\n  private DEFAULT_MAX_PREFERED_RECORDS: number = 100;\n\n  /**\n   * Define the default options for the records per page select menu\n   */\n  private DEFAULT_RECORDS_PER_PAGE_OPTIONS: number[] = [10, 20, 50];\n\n  /**\n   * Define the default message to show when too many records are returned\n   */\n  private DEFAULT_HIGH_RECORD_MESSAGE: string = 'That\\'s a lot of results! ' +\n    'Try refining your filters for better results.';\n\n  /**\n   * Define the icon for the 'first page' button\n   */\n  public firstPageIcon: string = 'first_page';\n\n  /**\n   * Define the icon for the 'previous page' button\n   */\n  public previousPageIcon: string = 'keyboard_arrow_left';\n\n  /**\n   * Define the icon for the 'next page' button\n   */\n  public nextPageIcon: string = 'keyboard_arrow_right';\n\n  /**\n   * Define the icon for the 'last page' button\n   */\n  public lastPageIcon: string = 'last_page';\n\n  /**\n   * Store the array of objects that represent pages of collections\n   */\n  public pagesArray!: TsPaginatorMenuItem[];\n\n  /**\n   * Store the label for the current page\n   */\n  public currentPageLabel!: string;\n\n  /**\n   * Define the amount of records show per page\n   */\n  public recordsPerPage: number = this.DEFAULT_PER_PAGE;\n\n  /**\n   * Define the template context for the record count message\n   */\n  public templateContext = {\n    $implicit: this.DEFAULT_HIGH_RECORD_MESSAGE,\n  };\n\n  /**\n   * Define if the paging is 0-based or 1-based\n   */\n  @Input()\n  public set isZeroBased(v: boolean) {\n    this._isZeroBased = coerceBooleanProperty(v);\n  }\n  public get isZeroBased(): boolean {\n    return this._isZeroBased;\n  }\n  private _isZeroBased: boolean = true;\n\n  /**\n   * Define the tooltip message for the first page tooltip\n   */\n  @Input()\n  public firstPageTooltip: string = 'View the first results';\n\n  /**\n   * Define the tooltip message for the previous page tooltip\n   */\n  @Input()\n  public previousPageTooltip: string = 'View the previous results';\n\n  /**\n   * Define the tooltip message for the next page tooltip\n   */\n  @Input()\n  public nextPageTooltip: string = 'View the next results';\n\n  /**\n   * Define the tooltip message for the last page tooltip\n   */\n  @Input()\n  public lastPageTooltip: string = 'View the last results';\n\n  /**\n   * Define the current page\n   */\n  @Input()\n  public set currentPageIndex(page: number) {\n    this._currentPageIndex = coerceNumberProperty(page);\n  }\n  public get currentPageIndex(): number {\n    return this._currentPageIndex;\n  }\n  private _currentPageIndex: number = 0;\n\n  /**\n   * Define how many pages exist to show a prompt about better filtering\n   */\n  @Input()\n  public maxPreferredRecords: number = this.DEFAULT_MAX_PREFERED_RECORDS;\n\n  /**\n   * Define the menu location (open up or open down)\n   */\n  @Input()\n  public menuLocation: 'above' | 'below' = 'above';\n\n  /**\n   * Allow a custom template to be used for the paginator message\n   */\n  @Input()\n  public paginatorMessageTemplate!: TemplateRef;\n\n  /**\n   * Define the color theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'accent';\n\n  /**\n   * Define the total number of records\n   */\n  @Input()\n  public set totalRecords(records: number) {\n    this._totalRecords = coerceNumberProperty(records);\n  }\n  public get totalRecords(): number {\n    return this._totalRecords;\n  }\n  private _totalRecords: number = 0;\n\n  /**\n   * Define the message to show when too many pages exist\n   */\n  @Input()\n  public recordCountTooHighMessage: string = this.DEFAULT_HIGH_RECORD_MESSAGE;\n\n  /**\n   * Define how many records are shown per page\n   */\n  @Input()\n  public recordsPerPageChoices: number[] = this.DEFAULT_RECORDS_PER_PAGE_OPTIONS;\n\n  /**\n   * Define the label for the records per page select\n   */\n  @Input()\n  public recordsSelectLabel: string = 'Per page';\n\n  /**\n   * Define if the records per page select menu should be visible\n   */\n  @Input()\n  public showRecordsPerPageSelector: boolean = true;\n\n  /**\n   * Emit a page selected event\n   */\n  @Output()\n  public pageSelect: EventEmitter = new EventEmitter();\n\n  /**\n   * Emit a change event when the records per page changes\n   */\n  @Output()\n  public recordsPerPageChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Getter to return the index of the first page\n   */\n  public get firstPageIndex(): number {\n    return this.isZeroBased ? 0 : 1;\n  }\n\n  /**\n   * Getter to return the index of the next page\n   */\n  public get nextPageIndex(): number {\n    return this.currentPageIndex - this.firstPageIndex;\n  }\n\n  /**\n   * Getter to return the index of the last page\n   */\n  public get lastPageIndex(): number {\n    return this.isZeroBased ? (this.pagesArray.length - 1) : this.pagesArray.length ;\n  }\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Initialize on init\n   */\n  public ngAfterViewInit(): void {\n    this.initialize();\n  }\n\n\n  /**\n   * Initialize on any changes\n   *\n   * @param changes - The object containing all changes since last cycle\n   */\n  public ngOnChanges(changes: SimpleChanges): void {\n    // If the record count changed, assign the new value to the template context\n    // istanbul ignore else\n    if (inputHasChanged(changes, 'recordCountTooHighMessage')) {\n      this.templateContext.$implicit = this.recordCountTooHighMessage;\n    }\n\n    // If the zeroBased input changes, update the current page index\n    if (inputHasChanged(changes, 'isZeroBased')) {\n      this.currentPageIndex = changes.isZeroBased.currentValue ? 0 : 1;\n    }\n\n    this.initialize();\n  }\n\n\n  /**\n   * Set up initial resources\n   */\n   private initialize(): void {\n     this.pagesArray =\n       this.createPagesArray(this.totalRecords, this.recordsPerPage, this.isZeroBased);\n     this.currentPageLabel =\n       this.createCurrentPageLabel(this.currentPageIndex, this.pagesArray, this.totalRecords);\n\n     // Change to the current page\n     // istanbul ignore else\n     if (this.totalRecords > 0) {\n       this.changePage(this.currentPageIndex, -1, this.pagesArray);\n     }\n   }\n\n\n  /**\n   * Perform tasks when the current page is changed\n   *\n   * @param page - The selected page\n   */\n  public currentPageChanged(page: TsPaginatorMenuItem): void {\n    // Set the current page\n    this.currentPageIndex = coerceNumberProperty(page.value);\n\n    // Create a new label for the menu\n    this.currentPageLabel =\n      this.createCurrentPageLabel(this.currentPageIndex, this.pagesArray, this.totalRecords);\n\n    // Emit an event\n    this.pageSelect.emit(page);\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Manually trigger a page change event from a number\n   *\n   * @param destinationPage - The selected page number\n   * @param currentPage - The current page number\n   * @param pages - The collection of pages\n   */\n  public changePage(\n    destinationPage: number,\n    currentPage: number,\n    pages: TsPaginatorMenuItem[],\n  ): void {\n    const destinationIsValid: boolean = destinationPage >= this.firstPageIndex && destinationPage  {\n        return page.value === destinationPage;\n      });\n\n      // istanbul ignore else\n      if (foundPage) {\n        this.currentPageChanged(foundPage);\n      }\n    }\n  }\n\n\n  /**\n   * Check if a page is the first page\n   *\n   * @param page - The number of the current page\n   * @return A boolean representing if this is the first page\n   */\n  public isFirstPage(page: number): boolean {\n    return coerceNumberProperty(page) === this.firstPageIndex;\n  }\n\n\n  /**\n   * Check if a page is the last page\n   *\n   * @param page - The number of the current page\n   * @return A boolean representing if this is the last page\n   */\n  public isLastPage(page: number): boolean {\n    if (this.pagesArray) {\n      return page === (this.pagesArray.length - (this.isZeroBased ? 1 : 0));\n    } else {\n      return false;\n    }\n  }\n\n\n  /**\n   * Determine if the string exists\n   *\n   * @param message - The help message when too many results are returned\n   * @param max - The max number of records before the message should be shown\n   * @param totalRecords - The number of records\n   * @return A boolean representing if the message should be shown\n   */\n  public shouldShowRecordsMessage(message: string, max: number, totalRecords: number): boolean {\n    if (totalRecords > max) {\n      return (message && message.length > 0) ? true : false;\n    } else {\n      return false;\n    }\n  }\n\n\n  /**\n   * Re-initialize the paginator when records per page changes\n   *\n   * @param selection - The selected records-per-page count\n   */\n  public recordsPerPageUpdated(selection: number): void {\n    this.recordsPerPage = selection;\n    this.currentPageIndex = this.firstPageIndex;\n    this.recordsPerPageChange.emit(selection);\n\n    this.initialize();\n  }\n\n\n  /**\n   * Determine if the page select menu should be disabled\n   *\n   * @param pagesCount - The number of pages\n   * @return A boolean representing if the menu should be disabled\n   */\n  public menuIsDisabled(pagesCount: number): boolean {\n    return coerceNumberProperty(pagesCount)  {\n      return pages.find((page: TsPaginatorMenuItem): boolean => {\n        return page.value === index;\n      });\n    };\n\n    let foundPage: TsPaginatorMenuItem | undefined = findPage(pages, currentPage);\n\n    // If no found page, try the previous page\n    if (!foundPage) {\n      foundPage = findPage(pages, currentPage - 1);\n\n      // istanbul ignore else\n      if (foundPage) {\n        // If we found the previous page,\n        // save the current page change back to the primary variable\n        this.currentPageIndex -= 1;\n      }\n    }\n\n    // This may be the case if there are no records\n    if (!foundPage || !foundPage.name) {\n      foundPage = {\n        name: '0',\n      };\n    }\n\n    // '1 - 10 of 243'\n    return `${foundPage.name} of ${totalRecords}`;\n  }\n\n\n  /**\n   * Create an array containing objects that represent each available page of records\n   *\n   * @param total - The total records remaining\n   * @param perPage - How many records are shown per page\n   * @param zeroBased - If the pages are based on a `0` index rather than `1`\n   * @return The array representing all possible pages of records\n   */\n  private createPagesArray(total: number, perPage: number, zeroBased: boolean): TsPaginatorMenuItem[] {\n    const paginatorArray: TsPaginatorMenuItem[] = [];\n    let recordsRemaining = total;\n    let page = zeroBased ? 0 : 1;\n\n    // If there are no records just return an empty array\n    if (!recordsRemaining || recordsRemaining = perPage) {\n      // We are creating the text for the range here so we are dealing with records based on 1\n      // (while the pages themselves may be based on 0 or 1)\n      const pageNumber = (page = perPage) {\n        page = pageValue + 1;\n      }\n\n    }\n\n    // If any records remain, add the partial group as the last page in the array\n    if (recordsRemaining > 0) {\n      let name;\n      let value;\n      const pageNumber = (page  0) {\n        name = `${pageNumber * perPage + 1} - ${pageNumber * perPage + recordsRemaining}`;\n        value = (pageValue - (zeroBased ? 1 : 0));\n      } else {\n        name = `${pageNumber} - ${recordsRemaining}`;\n        value = (pageValue - (zeroBased ? 1 : 0));\n      }\n\n      paginatorArray.push({\n        name: name,\n        value: value,\n      });\n    }\n\n    return paginatorArray.sort((a: TsPaginatorMenuItem, b: TsPaginatorMenuItem): number => {\n      const first: number = coerceNumberProperty(a.value);\n      const second: number = coerceNumberProperty(b.value);\n\n      return (first \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsPaginatorModule.html":{"url":"modules/TsPaginatorModule.html","title":"module - TsPaginatorModule","body":"\n                   \n\n\n\n\n  Modules\n  TsPaginatorModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsPaginatorModule\n\n\n\ncluster_TsPaginatorModule_declarations\n\n\n\ncluster_TsPaginatorModule_imports\n\n\n\ncluster_TsPaginatorModule_exports\n\n\n\n\nTsPaginatorComponent\n\nTsPaginatorComponent\n\n\n\nTsPaginatorModule\n\nTsPaginatorModule\n\nTsPaginatorModule -->\n\nTsPaginatorComponent->TsPaginatorModule\n\n\n\n\n\nTsPaginatorComponent \n\nTsPaginatorComponent \n\nTsPaginatorComponent  -->\n\nTsPaginatorModule->TsPaginatorComponent \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsPaginatorModule -->\n\nTsButtonModule->TsPaginatorModule\n\n\n\n\n\nTsMenuModule\n\nTsMenuModule\n\nTsPaginatorModule -->\n\nTsMenuModule->TsPaginatorModule\n\n\n\n\n\nTsSelectModule\n\nTsSelectModule\n\nTsPaginatorModule -->\n\nTsSelectModule->TsPaginatorModule\n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTsPaginatorModule -->\n\nTsTooltipModule->TsPaginatorModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/paginator/paginator.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsPaginatorComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsMenuModule\n                            \n                            \n                                    TsSelectModule\n                            \n                            \n                                    TsTooltipModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsPaginatorComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { TsButtonModule } from './../button/button.module';\nimport { TsSelectModule } from './../select/select.module';\nimport { TsMenuModule } from './../menu/menu.module';\nimport { TsTooltipModule } from './../tooltip/tooltip.module';\nimport { TsPaginatorComponent } from './paginator.component';\n\nexport * from './paginator.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    TsButtonModule,\n    TsSelectModule,\n    TsMenuModule,\n    TsTooltipModule,\n  ],\n  exports: [\n    TsPaginatorComponent,\n  ],\n  declarations: [\n    TsPaginatorComponent,\n  ],\n})\nexport class TsPaginatorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsPipesModule.html":{"url":"modules/TsPipesModule.html","title":"module - TsPipesModule","body":"\n                   \n\n\n\n\n  Modules\n  TsPipesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsPipesModule\n\n\n\ncluster_TsPipesModule_declarations\n\n\n\ncluster_TsPipesModule_exports\n\n\n\n\nTsDatePipe\n\nTsDatePipe\n\n\n\nTsPipesModule\n\nTsPipesModule\n\nTsPipesModule -->\n\nTsDatePipe->TsPipesModule\n\n\n\n\n\nTsRoundNumberPipe\n\nTsRoundNumberPipe\n\nTsPipesModule -->\n\nTsRoundNumberPipe->TsPipesModule\n\n\n\n\n\nTsSentenceCasePipe\n\nTsSentenceCasePipe\n\nTsPipesModule -->\n\nTsSentenceCasePipe->TsPipesModule\n\n\n\n\n\nTsTimeAgoPipe\n\nTsTimeAgoPipe\n\nTsPipesModule -->\n\nTsTimeAgoPipe->TsPipesModule\n\n\n\n\n\nTsTitleCasePipe\n\nTsTitleCasePipe\n\nTsPipesModule -->\n\nTsTitleCasePipe->TsPipesModule\n\n\n\n\n\nTsDatePipe \n\nTsDatePipe \n\nTsDatePipe  -->\n\nTsPipesModule->TsDatePipe \n\n\n\n\n\nTsRoundNumberPipe \n\nTsRoundNumberPipe \n\nTsRoundNumberPipe  -->\n\nTsPipesModule->TsRoundNumberPipe \n\n\n\n\n\nTsSentenceCasePipe \n\nTsSentenceCasePipe \n\nTsSentenceCasePipe  -->\n\nTsPipesModule->TsSentenceCasePipe \n\n\n\n\n\nTsTimeAgoPipe \n\nTsTimeAgoPipe \n\nTsTimeAgoPipe  -->\n\nTsPipesModule->TsTimeAgoPipe \n\n\n\n\n\nTsTitleCasePipe \n\nTsTitleCasePipe \n\nTsTitleCasePipe  -->\n\nTsPipesModule->TsTitleCasePipe \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/pipes.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsDatePipe\n                            \n                            \n                                TsRoundNumberPipe\n                            \n                            \n                                TsSentenceCasePipe\n                            \n                            \n                                TsTimeAgoPipe\n                            \n                            \n                                TsTitleCasePipe\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsDatePipe\n                            \n                            \n                                    TsRoundNumberPipe\n                            \n                            \n                                    TsSentenceCasePipe\n                            \n                            \n                                    TsTimeAgoPipe\n                            \n                            \n                                    TsTitleCasePipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsDatePipe } from './date/date.pipe';\nimport { TsRoundNumberPipe } from './round-number/round-number.pipe';\nimport { TsSentenceCasePipe } from './sentence-case/sentence-case.pipe';\nimport { TsTimeAgoPipe } from './time-ago/time-ago.pipe';\nimport { TsTitleCasePipe } from './title-case/title-case.pipe';\n\nexport * from './date/date.pipe';\nexport * from './round-number/round-number.pipe';\nexport * from './sentence-case/sentence-case.pipe';\nexport * from './time-ago/time-ago.pipe';\nexport * from './title-case/title-case.pipe';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    TsDatePipe,\n    TsRoundNumberPipe,\n    TsSentenceCasePipe,\n    TsTimeAgoPipe,\n    TsTitleCasePipe,\n  ],\n  providers: [\n    TsDatePipe,\n    TsRoundNumberPipe,\n    TsSentenceCasePipe,\n    TsTimeAgoPipe,\n    TsTitleCasePipe,\n  ],\n  declarations: [\n    TsDatePipe,\n    TsRoundNumberPipe,\n    TsSentenceCasePipe,\n    TsTimeAgoPipe,\n    TsTitleCasePipe,\n  ],\n})\nexport class TsPipesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsRadioChange.html":{"url":"classes/TsRadioChange.html","title":"class - TsRadioChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsRadioChange\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/radio-group/radio-group.component.ts\n        \n\n            \n                Description\n            \n            \n                Expose the MatRadioChange event as TsRadioChange. Used by TsRadioGroupComponent\n\n            \n\n            \n                Extends\n            \n            \n                    MatRadioChange\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        Radio Group\n\n\n\n\nTable of Contents\n\nBasic usage\nSub-labels\nEvent driven\nRequired\nDisabled\nDisabled option\n\n\nVisual mode\nCustom content\n\n\n\n\nBasic usage\nPass in:\n\nan array of items\na form control\na formatter function to determine the UI display value\na formatter function to determine the model value\n\n\n  \n\n  Submit\n// Define items to be passed to the radio group\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n    bing: 'Some helper text for my item',\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    bing: 'Some helper text for my item',\n    disabled: true,\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n    bing: 'Some helper text for my item',\n  },\n]);\n\n// Create a form\nmyForm = this.formBuilder.group({\n  myRadioGroup: [null],\n});\n\n// Use the 'bar' value as the UI display\nuiFormatter = (v) => v.bar;\n// use the 'foo' value to save to the model\nmodelFormatter = (v) => v.foo;\nNOTE: Since we can set the default value in the form control, we no longer need to add the\nchecked property to any or our items.\n\nSub-labels\nPassing a formatter function to formatUISubLabelFn will enable sub-label support:\n// Use the 'bing' value as a sub-label\nuiSubFormatter = (v) => v.bing;\n// Use the 'bar' value as the UI display\nuiFormatter = (v) => v.bar;\n// use the 'foo' value to save to the model\nmodelFormatter = (v) => v.foo;Event driven\nListen for change events:\nRequired\nTo define the radio group as 'required', set the required validator on the form group:\nmyForm = this.formBuilder.group({\n  myRadioGroup: [\n    null,\n    [\n      Validators.required,\n    ],\n  ],\n});Disabled\nTo disable the entire radio group, set isDisabled to true:\nDisabled option\nTo disabled only a single option, define the disabled key on the item object:\n// Define items to be passed to the radio group\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    disabled: true, // This radio option will be disabled\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n  },\n]);Visual mode\nVisual mode displays radio options as large clickable areas containing content.\nEnable by setting the isVisual flag:\nCustom content\nTsRadioOption now accepts an optional template key with a string template:\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n    template: `My link!`\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    // if no template is defined, it will fall back to `formatUILabelFn` for the display value\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n    template: `Hi! Here is a thing!`\n  },\n]);\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  isDevMode,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatRadioChange } from '@angular/material/radio';\nimport {\n  isFunction,\n  hasRequiredControl,\n  untilComponentDestroyed,\n} from '@terminus/ngx-tools';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\n\n\n/**\n * Define the allowed keys for an item passed to the {@link TsRadioComponent}\n */\nexport interface TsRadioOption {\n  [key: string]: any;\n\n  /**\n   * Define if the item is disabled\n   */\n  disabled?: boolean;\n\n  /**\n   * Define the template for the content (used if type is visual)\n   */\n  template?: string;\n}\n\n\n/**\n * Expose the MatRadioChange event as TsRadioChange. Used by {@link TsRadioGroupComponent}\n */\nexport class TsRadioChange extends MatRadioChange {}\n\n\n/**\n * Expose the formatter function type used by {@link TsRadioGroupComponent}\n */\nexport type TsRadioFormatFn = (v: any) => string;\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via the base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_RADIO_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsRadioGroupComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * This is the radio UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-radio-group`: The primary container\n * - `qa-radio-control`: An individual radio control\n * - `qa-radio-validation-messages`: The validation messages container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-radio-group',\n  templateUrl: './radio-group.component.html',\n  styleUrls: ['./radio-group.component.scss'],\n  host: {\n    class: 'ts-radio-group',\n  },\n  providers: [CUSTOM_RADIO_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRadioGroup',\n})\nexport class TsRadioGroupComponent extends TsReactiveFormBaseComponent implements OnInit, OnDestroy {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-radio-group-${nextUniqueId++}`;\n\n  /**\n   * Define the ripple color.\n   * TODO: abstract out to a service or utility function or set as a global default for ripples\n   */\n  public rippleColor: string = 'rgba(0, 83, 138, .1)';\n\n  // NOTE: Since we are matching standard HTML attributes, we will rename for internal use.\n  // tslint:disable: no-input-rename\n  /**\n   * Used to set the 'aria-label' attribute on the underlying input element.\n   */\n  @Input('aria-label')\n  public ariaLabel: string | undefined;\n\n  /**\n   * The 'aria-labelledby' attribute takes precedence as the element's text alternative.\n   */\n  @Input('aria-labelledby')\n  public ariaLabelledby: string | undefined;\n\n  /**\n   * The 'aria-describedby' attribute is read after the element's label and field type.\n   */\n  @Input('aria-describedby')\n  public ariaDescribedby: string | undefined;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatUILabelFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatUILabelFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatUILabelFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatUILabelFn(): TsRadioFormatFn {\n    return this._formatUILabelFn;\n  }\n  private _formatUILabelFn!: TsRadioFormatFn;\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatUISubLabelFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatUISubLabelFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatUISubLabelFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatUISubLabelFn(): TsRadioFormatFn {\n    return this._formatUISubLabelFn;\n  }\n  private _formatUISubLabelFn!: TsRadioFormatFn;\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatModelValueFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatModelValueFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatModelValueFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatModelValueFn(): TsRadioFormatFn {\n    return this._formatModelValueFn;\n  }\n  private _formatModelValueFn!: TsRadioFormatFn;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Define if the radio group is disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the radio group is visual (boxes) or standard (text)\n   */\n  @Input()\n  public set isVisual(value: boolean) {\n    this._isVisual = coerceBooleanProperty(value);\n  }\n  public get isVisual(): boolean {\n    return this._isVisual;\n  }\n  private _isVisual: boolean = false;\n\n  /**\n   * Define a label for the radio group\n   */\n  @Input()\n  public label!: string;\n\n  /**\n   * The HTML name attribute applied to radio buttons in this group.\n   */\n  @Input()\n  public set name(value: string) {\n    this._name = value ? value : this._uid;\n  }\n  public get name(): string {\n    return this._name;\n  }\n  private _name: string = this._uid;\n\n  /**\n   * Accept an array of radio options in the {@link TsRadioOption} format\n   */\n  @Input()\n  public set options(value: TsRadioOption[]) {\n    if (!value) {\n      return;\n    }\n\n    this._options = value;\n  }\n  public get options(): TsRadioOption[] {\n    return this._options;\n  }\n  private _options!: TsRadioOption[];\n\n  /**\n   * Define if the visual style should be large or small\n   */\n  @Input()\n  public set small(value: boolean) {\n    this._small = coerceBooleanProperty(value);\n  }\n  public get small(): boolean {\n    return this._small;\n  }\n  private _small: boolean = false;\n\n  /**\n   * Define the theme. {@link TsStyleThemeTypes}\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit event when a selection occurs. {@link TsRadioChange}\n   */\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n\n  /**\n   * Getter to determine if the group is required\n   */\n  get isRequired(): boolean {\n    return hasRequiredControl(this.formControl);\n  }\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    public domSanitizer: DomSanitizer,\n  ) {\n    super();\n\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Update the change detector if the control value changes\n   */\n  public ngOnInit(): void {\n    // istanbul ignore else\n    if (this.formControl) {\n      this.formControl.valueChanges\n        .pipe(\n          untilComponentDestroyed(this),\n        )\n        .subscribe((v: any) => {\n          this.writeValue(v);\n          this.changeDetectorRef.markForCheck();\n        });\n    }\n  }\n\n\n  /**\n   * Needed for untilComponentDestroyed\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Retrieve a value determined by the passed in formatter\n   *\n   * @param option - The radio option\n   * @param formatter - The formatter function used to retrieve the value\n   * @return The retrieved value\n   */\n  public retrieveValue(option: TsRadioOption, formatter?: TsRadioFormatFn): TsRadioOption | string {\n    return (formatter && formatter(option)) ? formatter(option) : option;\n  }\n\n\n  /**\n   * Handle clicks on labels\n   *\n   * @param option - The selected option\n   */\n  public labelClick(option: TsRadioOption): void {\n    if (this.isDisabled || (option && option.disabled)) {\n      return;\n    }\n    const value = this.retrieveValue(option, this.formatModelValueFn);\n    this.value = value;\n    this.changeDetectorRef.markForCheck();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsRadioGroupModule.html":{"url":"modules/TsRadioGroupModule.html","title":"module - TsRadioGroupModule","body":"\n                   \n\n\n\n\n  Modules\n  TsRadioGroupModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsRadioGroupModule\n\n\n\ncluster_TsRadioGroupModule_declarations\n\n\n\ncluster_TsRadioGroupModule_TsRadioGroupComponent_providers\n\n\n\ncluster_TsRadioGroupModule_imports\n\n\n\ncluster_TsRadioGroupModule_exports\n\n\n\n\nTsRadioGroupComponent\n\nTsRadioGroupComponent\n\n\n\nTsRadioGroupModule\n\nTsRadioGroupModule\n\nTsRadioGroupModule -->\n\nTsRadioGroupComponent->TsRadioGroupModule\n\n\n\n\n\nTsRadioGroupComponent \n\nTsRadioGroupComponent \n\nTsRadioGroupComponent  -->\n\nTsRadioGroupModule->TsRadioGroupComponent \n\n\n\n\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR\n\nTsRadioGroupComponent -->\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR->TsRadioGroupComponent\n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTsRadioGroupModule -->\n\nTsIconModule->TsRadioGroupModule\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsRadioGroupModule -->\n\nTsValidationMessagesModule->TsRadioGroupModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/radio-group/radio-group.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsRadioGroupComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsIconModule\n                            \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsRadioGroupComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { TsIconModule } from './../icon/icon.module';\nimport { TsValidationMessagesModule } from './../validation-messages/validation-messages.module';\nimport { TsRadioGroupComponent } from './radio-group.component';\n\nexport * from './radio-group.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatRadioModule,\n    FlexLayoutModule,\n    TsValidationMessagesModule,\n    MatRippleModule,\n    TsIconModule,\n  ],\n  exports: [\n    TsRadioGroupComponent,\n  ],\n  declarations: [\n    TsRadioGroupComponent,\n  ],\n})\nexport class TsRadioGroupModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsRadioOption.html":{"url":"interfaces/TsRadioOption.html","title":"interface - TsRadioOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsRadioOption\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/radio-group/radio-group.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the allowed keys for an item passed to the {@link TsRadioComponent}\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        template\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/radio-group/radio-group.component.ts:31\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define if the item is disabled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        template\n                                    \n                                \n                                \n                                    \n                                        template:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define the template for the content (used if type is visual)\n\n                                \n                            \n                        \n                    \n            \n    \n\n    \n        Radio Group\n\n\n\n\nTable of Contents\n\nBasic usage\nSub-labels\nEvent driven\nRequired\nDisabled\nDisabled option\n\n\nVisual mode\nCustom content\n\n\n\n\nBasic usage\nPass in:\n\nan array of items\na form control\na formatter function to determine the UI display value\na formatter function to determine the model value\n\n\n  \n\n  Submit\n// Define items to be passed to the radio group\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n    bing: 'Some helper text for my item',\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    bing: 'Some helper text for my item',\n    disabled: true,\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n    bing: 'Some helper text for my item',\n  },\n]);\n\n// Create a form\nmyForm = this.formBuilder.group({\n  myRadioGroup: [null],\n});\n\n// Use the 'bar' value as the UI display\nuiFormatter = (v) => v.bar;\n// use the 'foo' value to save to the model\nmodelFormatter = (v) => v.foo;\nNOTE: Since we can set the default value in the form control, we no longer need to add the\nchecked property to any or our items.\n\nSub-labels\nPassing a formatter function to formatUISubLabelFn will enable sub-label support:\n// Use the 'bing' value as a sub-label\nuiSubFormatter = (v) => v.bing;\n// Use the 'bar' value as the UI display\nuiFormatter = (v) => v.bar;\n// use the 'foo' value to save to the model\nmodelFormatter = (v) => v.foo;Event driven\nListen for change events:\nRequired\nTo define the radio group as 'required', set the required validator on the form group:\nmyForm = this.formBuilder.group({\n  myRadioGroup: [\n    null,\n    [\n      Validators.required,\n    ],\n  ],\n});Disabled\nTo disable the entire radio group, set isDisabled to true:\nDisabled option\nTo disabled only a single option, define the disabled key on the item object:\n// Define items to be passed to the radio group\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    disabled: true, // This radio option will be disabled\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n  },\n]);Visual mode\nVisual mode displays radio options as large clickable areas containing content.\nEnable by setting the isVisual flag:\nCustom content\nTsRadioOption now accepts an optional template key with a string template:\nitems$: Observable = of([\n  {\n    foo: 'foo_value',\n    bar: 'Foo Display',\n    template: `My link!`\n  },\n  {\n    foo: 'bar_value',\n    bar: 'Bar Display',\n    // if no template is defined, it will fall back to `formatUILabelFn` for the display value\n  },\n  {\n    foo: 'baz_value',\n    bar: 'Baz Display',\n    template: `Hi! Here is a thing!`\n  },\n]);\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  isDevMode,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatRadioChange } from '@angular/material/radio';\nimport {\n  isFunction,\n  hasRequiredControl,\n  untilComponentDestroyed,\n} from '@terminus/ngx-tools';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\n\n\n/**\n * Define the allowed keys for an item passed to the {@link TsRadioComponent}\n */\nexport interface TsRadioOption {\n  [key: string]: any;\n\n  /**\n   * Define if the item is disabled\n   */\n  disabled?: boolean;\n\n  /**\n   * Define the template for the content (used if type is visual)\n   */\n  template?: string;\n}\n\n\n/**\n * Expose the MatRadioChange event as TsRadioChange. Used by {@link TsRadioGroupComponent}\n */\nexport class TsRadioChange extends MatRadioChange {}\n\n\n/**\n * Expose the formatter function type used by {@link TsRadioGroupComponent}\n */\nexport type TsRadioFormatFn = (v: any) => string;\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via the base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_RADIO_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsRadioGroupComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * This is the radio UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-radio-group`: The primary container\n * - `qa-radio-control`: An individual radio control\n * - `qa-radio-validation-messages`: The validation messages container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-radio-group',\n  templateUrl: './radio-group.component.html',\n  styleUrls: ['./radio-group.component.scss'],\n  host: {\n    class: 'ts-radio-group',\n  },\n  providers: [CUSTOM_RADIO_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRadioGroup',\n})\nexport class TsRadioGroupComponent extends TsReactiveFormBaseComponent implements OnInit, OnDestroy {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-radio-group-${nextUniqueId++}`;\n\n  /**\n   * Define the ripple color.\n   * TODO: abstract out to a service or utility function or set as a global default for ripples\n   */\n  public rippleColor: string = 'rgba(0, 83, 138, .1)';\n\n  // NOTE: Since we are matching standard HTML attributes, we will rename for internal use.\n  // tslint:disable: no-input-rename\n  /**\n   * Used to set the 'aria-label' attribute on the underlying input element.\n   */\n  @Input('aria-label')\n  public ariaLabel: string | undefined;\n\n  /**\n   * The 'aria-labelledby' attribute takes precedence as the element's text alternative.\n   */\n  @Input('aria-labelledby')\n  public ariaLabelledby: string | undefined;\n\n  /**\n   * The 'aria-describedby' attribute is read after the element's label and field type.\n   */\n  @Input('aria-describedby')\n  public ariaDescribedby: string | undefined;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatUILabelFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatUILabelFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatUILabelFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatUILabelFn(): TsRadioFormatFn {\n    return this._formatUILabelFn;\n  }\n  private _formatUILabelFn!: TsRadioFormatFn;\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatUISubLabelFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatUISubLabelFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatUISubLabelFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatUISubLabelFn(): TsRadioFormatFn {\n    return this._formatUISubLabelFn;\n  }\n  private _formatUISubLabelFn!: TsRadioFormatFn;\n\n  /**\n   * Define a function to retrieve the UI value for an option\n   */\n  @Input()\n  public set formatModelValueFn(value: TsRadioFormatFn) {\n    if (!value) {\n      return;\n    }\n\n    if (isFunction(value)) {\n      this._formatModelValueFn = value;\n    } else {\n      // istanbul ignore else\n      if (isDevMode()) {\n        throw Error(`TsRadioGroupComponent: 'formatModelValueFn' must be passed a 'TsRadioFormatFn'.`);\n      }\n    }\n  }\n  public get formatModelValueFn(): TsRadioFormatFn {\n    return this._formatModelValueFn;\n  }\n  private _formatModelValueFn!: TsRadioFormatFn;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Define if the radio group is disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the radio group is visual (boxes) or standard (text)\n   */\n  @Input()\n  public set isVisual(value: boolean) {\n    this._isVisual = coerceBooleanProperty(value);\n  }\n  public get isVisual(): boolean {\n    return this._isVisual;\n  }\n  private _isVisual: boolean = false;\n\n  /**\n   * Define a label for the radio group\n   */\n  @Input()\n  public label!: string;\n\n  /**\n   * The HTML name attribute applied to radio buttons in this group.\n   */\n  @Input()\n  public set name(value: string) {\n    this._name = value ? value : this._uid;\n  }\n  public get name(): string {\n    return this._name;\n  }\n  private _name: string = this._uid;\n\n  /**\n   * Accept an array of radio options in the {@link TsRadioOption} format\n   */\n  @Input()\n  public set options(value: TsRadioOption[]) {\n    if (!value) {\n      return;\n    }\n\n    this._options = value;\n  }\n  public get options(): TsRadioOption[] {\n    return this._options;\n  }\n  private _options!: TsRadioOption[];\n\n  /**\n   * Define if the visual style should be large or small\n   */\n  @Input()\n  public set small(value: boolean) {\n    this._small = coerceBooleanProperty(value);\n  }\n  public get small(): boolean {\n    return this._small;\n  }\n  private _small: boolean = false;\n\n  /**\n   * Define the theme. {@link TsStyleThemeTypes}\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit event when a selection occurs. {@link TsRadioChange}\n   */\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n\n  /**\n   * Getter to determine if the group is required\n   */\n  get isRequired(): boolean {\n    return hasRequiredControl(this.formControl);\n  }\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    public domSanitizer: DomSanitizer,\n  ) {\n    super();\n\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Update the change detector if the control value changes\n   */\n  public ngOnInit(): void {\n    // istanbul ignore else\n    if (this.formControl) {\n      this.formControl.valueChanges\n        .pipe(\n          untilComponentDestroyed(this),\n        )\n        .subscribe((v: any) => {\n          this.writeValue(v);\n          this.changeDetectorRef.markForCheck();\n        });\n    }\n  }\n\n\n  /**\n   * Needed for untilComponentDestroyed\n   */\n  public ngOnDestroy(): void {}\n\n\n  /**\n   * Retrieve a value determined by the passed in formatter\n   *\n   * @param option - The radio option\n   * @param formatter - The formatter function used to retrieve the value\n   * @return The retrieved value\n   */\n  public retrieveValue(option: TsRadioOption, formatter?: TsRadioFormatFn): TsRadioOption | string {\n    return (formatter && formatter(option)) ? formatter(option) : option;\n  }\n\n\n  /**\n   * Handle clicks on labels\n   *\n   * @param option - The selected option\n   */\n  public labelClick(option: TsRadioOption): void {\n    if (this.isDisabled || (option && option.disabled)) {\n      return;\n    }\n    const value = this.retrieveValue(option, this.formatModelValueFn);\n    this.value = value;\n    this.changeDetectorRef.markForCheck();\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsReactiveFormBaseComponent.html":{"url":"components/TsReactiveFormBaseComponent.html","title":"component - TsReactiveFormBaseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsReactiveFormBaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/utilities/reactive-form-base.component.ts\n\n\n    \n        Description\n    \n    \n        This is the base class for all custom reactive form elements.\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    export class TsInputComponent extends TsReactiveFormBaseComponent {}\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ts-dummy-selector\n            \n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                innerValue\n                            \n                            \n                                    Protected\n                                onChangeCallback\n                            \n                            \n                                    Protected\n                                onTouchedCallback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onBlur\n                            \n                            \n                                    Protected\n                                registerOnChange\n                            \n                            \n                                    Protected\n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControl\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        Define the form control to get access to validators\n\n                            \n                            Type:    FormControl\n\n                            \n                        \n                            Default value: new FormControl()\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:42\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onBlur\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onBlur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            Set touched on blur\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:69\n                            \n                        \n\n\n                \n                    \n                            Register onChange callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Register onTouched callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Write value to inner value (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            innerValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        innerValue:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:26\n                            \n                        \n\n                \n                    \n                        Define the internal data model\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onChangeCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onChangeCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:31\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onTouchedCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onTouchedCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:36\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:53\n                                \n                            \n\n                \n                    \n                        setvalue(v: any)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/utilities/reactive-form-base.component.ts:47\n                                \n                            \n                    \n                        \n                                Set the accessor and call the onchange callback\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { noop } from '@terminus/ngx-tools';\n\n\n/**\n * This is the base class for all custom reactive form elements.\n *\n * @example\n * export class TsInputComponent extends TsReactiveFormBaseComponent {}\n */\n@Component({\n  /*\n   * NOTE: Without this dummy selector, this class isn't picked up by the docs generator\n   */\n  selector: `ts-dummy-selector`,\n  template: ``,\n})\nexport class TsReactiveFormBaseComponent {\n  /**\n   * Define the internal data model\n   */\n  protected innerValue: any = '';\n\n  /**\n   * Define placeholder for callback (provided later by the control value accessor)\n   */\n  protected onChangeCallback: (_: any) => void = noop;\n\n  /**\n   * Define placeholder for callback (provided later by the control value accessor)\n   */\n  protected onTouchedCallback: () => void = noop;\n\n  /**\n   * Define the form control to get access to validators\n   */\n  @Input()\n  public formControl: FormControl = new FormControl();\n\n  /**\n   * Set the accessor and call the onchange callback\n   */\n  public set value(v: any) {\n    if (v !== this.innerValue) {\n      this.innerValue = v;\n      this.onChangeCallback(v);\n    }\n  }\n  public get value(): any {\n    return this.innerValue;\n  }\n\n\n  /**\n   * Set touched on blur\n   */\n  public onBlur() {\n    this.onTouchedCallback();\n  }\n\n\n  /**\n   * Register onChange callback (from ControlValueAccessor interface)\n   */\n  protected registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n\n  /**\n   * Register onTouched callback (from ControlValueAccessor interface)\n   */\n  protected registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n\n  /**\n   * Write value to inner value (from ControlValueAccessor interface)\n   */\n  protected writeValue(value: any) {\n    // NOTE: Currently, this 'else' path seems untestable\n    // istanbul ignore else\n    if (value !== this.innerValue) {\n      this.innerValue = value;\n    }\n  }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsReactiveFormBaseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TsRoundNumberPipe.html":{"url":"pipes/TsRoundNumberPipe.html","title":"pipe - TsRoundNumberPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  TsRoundNumberPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/round-number/round-number.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        tsRoundNumber\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: number, precision: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/pipes/round-number/round-number.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        precision\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\nimport { roundNumber } from '@terminus/ngx-tools';\n\n\n@Pipe({\n  name: 'tsRoundNumber',\n})\nexport class TsRoundNumberPipe implements PipeTransform {\n  transform(value: number, precision = 0): number | undefined {\n    // Check for null values to avoid issues during data-binding\n    if (!value) {\n      return;\n    }\n\n    return roundNumber(value, precision);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsRowComponent.html":{"url":"components/TsRowComponent.html","title":"component - TsRowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsRowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/table/row.ts\n\n\n    \n        Description\n    \n    \n        Data row template container that contains the cell outlet. Adds the right class and role.\n\n    \n\n    \n        Extends\n    \n    \n            CdkRow\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsRow\n            \n\n            \n                host\n                {}\n            \n\n\n\n            \n                preserveWhitespaces\n                false\n            \n\n\n\n            \n                selector\n                ts-row\n            \n\n\n\n            \n                template\n                CDK_ROW_TEMPLATE\n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CDK_ROW_TEMPLATE,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  CdkRow,\n  CdkRowDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Header row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other header properties such as the columns to display.\n */\n@Directive({\n  selector: '[tsHeaderRowDef]',\n  providers: [{provide: CdkHeaderRowDef, useExisting: TsHeaderRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why this type of input was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsHeaderRowDef'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsHeaderRowDefDirective extends CdkHeaderRowDef {}\n\n\n/**\n * Data row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n@Directive({\n  selector: '[tsRowDef]',\n  providers: [{provide: CdkRowDef, useExisting: TsRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why it was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsRowDefColumns', 'when: tsRowDefWhen'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsRowDefDirective extends CdkRowDef {}\n\n\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-header-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-header-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsHeaderRow',\n  preserveWhitespaces: false,\n})\nexport class TsHeaderRowComponent extends CdkHeaderRow {}\n\n\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRow',\n  preserveWhitespaces: false,\n})\nexport class TsRowComponent extends CdkRow {}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'CDK_ROW_TEMPLATE'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsRowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsRowDefDirective.html":{"url":"directives/TsRowDefDirective.html","title":"directive - TsRowDefDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsRowDefDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/row.ts\n        \n\n            \n                Description\n            \n            \n                Data row definition for the TsTableComponent.\nCaptures the header row's template and other row properties such as the columns to display and\na when predicate that describes when this row should be used.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , :  }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [tsRowDef]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CDK_ROW_TEMPLATE,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  CdkRow,\n  CdkRowDef,\n} from '@angular/cdk/table';\n\n\n/**\n * Header row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other header properties such as the columns to display.\n */\n@Directive({\n  selector: '[tsHeaderRowDef]',\n  providers: [{provide: CdkHeaderRowDef, useExisting: TsHeaderRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why this type of input was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsHeaderRowDef'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsHeaderRowDefDirective extends CdkHeaderRowDef {}\n\n\n/**\n * Data row definition for the {@link TsTableComponent}.\n *\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n@Directive({\n  selector: '[tsRowDef]',\n  providers: [{provide: CdkRowDef, useExisting: TsRowDefDirective}],\n  // NOTE(B$): Disabling this rule as I am unsure why it was needed by Material\n  // tslint:disable: use-input-property-decorator\n  inputs: ['columns: tsRowDefColumns', 'when: tsRowDefWhen'],\n  // tslint:enable: use-input-property-decorator\n})\nexport class TsRowDefDirective extends CdkRowDef {}\n\n\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-header-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-header-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsHeaderRow',\n  preserveWhitespaces: false,\n})\nexport class TsHeaderRowComponent extends CdkHeaderRow {}\n\n\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\n@Component({\n  selector: 'ts-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    class: 'ts-row',\n    role: 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsRow',\n  preserveWhitespaces: false,\n})\nexport class TsRowComponent extends CdkRow {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsScrollbarPosition.html":{"url":"classes/TsScrollbarPosition.html","title":"class - TsScrollbarPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsScrollbarPosition\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/scrollbars/scrollbars.component.ts\n        \n\n            \n                Description\n            \n            \n                A class that represents the current scrollbar positions\n\n            \n\n            \n                Extends\n            \n            \n                    Position\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        Scrollbars\n\n\n\n\nTable of Contents\n\nBasic usage\nDisable\nUpdate\n\n\nEvents\n\n\nBasic usage\nYou must set a fixed height and/or width to enable scrollbars (otherwise the browser will just continue making the container larger to fit\nthe content).\n\n  ...\nDisable\nThe scrollbars can be disabled dynamically if needed:\n\n  ...\nUpdate\nIf the scrollbars content is dynamically updated, you will need to update the scrollbars instance:\n\n\n  ...\n  ...\n\n  @ViewChild(TsScrollbarsComponent)\n  public scrollbars!: TsScrollbarsComponent;\n\n\n  myUpdate() {\n    // Update the content\n    this.updateScrollContent();\n\n    // Update the scrollbars\n    this.scrollbars.update();\n  }Events\n\n  ...\n\n\n\nAvailable events\n\n\n\n\nscrollDown\n\n\nscrollLeft\n\n\nscrollRight\n\n\nscrollUp\n\n\nscrollX\n\n\nscrollY\n\n\nxReachEnd\n\n\nxReachStart\n\n\nyReachEnd\n\n\nyReachStart\n\n\n\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  forwardRef,\n} from '@angular/core';\nimport {\n  Geometry,\n  PerfectScrollbarDirective,\n  Position,\n} from 'ngx-perfect-scrollbar';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\n\n/**\n * Define possible scroll directions for {@link TsScrollbarsScrollDirections}.\n */\nexport type TsScrollbarsScrollDirections\n  = 'any'\n  | 'both'\n  | 'x'\n  | 'y'\n;\n\n\n/**\n * A class that represents the current gemotric state of scrolling.\n */\nexport class TsScrollbarsGeometry extends Geometry {}\n\n\n/**\n * A class that represents the current scrollbar positions\n */\nexport class TsScrollbarPosition extends Position {}\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * The scrollbars UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-scrollbars`: Placed on the primary container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-scrollbars',\n  templateUrl: './scrollbars.component.html',\n  styleUrls: [\n    './scrollbars.component.scss',\n    './../../../node_modules/perfect-scrollbar/css/perfect-scrollbar.css',\n  ],\n  host: {\n    class: 'ts-scrollbars',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsScrollbars',\n})\nexport class TsScrollbarsComponent {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-scrollbars-${nextUniqueId++}`;\n\n  /**\n   * Define the speed at which to scroll during automated movements\n   */\n  protected scrollSpeed = 400;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Define if the scrollbars are disabled\n   */\n  @Input()\n  public set isDisabled(value: boolean) {\n    this._isDisabled = coerceBooleanProperty(value);\n  }\n  public get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n  private _isDisabled: boolean = false;\n\n  /**\n   * Access underlying scrollbar directive\n   */\n  @ViewChild(forwardRef(() => PerfectScrollbarDirective))\n  public scrollbar!: PerfectScrollbarDirective;\n\n  /**\n   * Event Emitters:\n   */\n  @Output()\n  public scrollDown: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollLeft: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollRight: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollUp: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollX: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollY: EventEmitter = new EventEmitter();\n\n  @Output()\n  public xReachEnd: EventEmitter = new EventEmitter();\n\n  @Output()\n  public xReachStart: EventEmitter = new EventEmitter();\n\n  @Output()\n  public yReachEnd: EventEmitter = new EventEmitter();\n\n  @Output()\n  public yReachStart: EventEmitter = new EventEmitter();\n\n\n  constructor() {\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Return an object containing scrollbar geometry.\n   *\n   * @return An object with all geometry information\n   */\n  public get geometry(): TsScrollbarsGeometry | null {\n    if (this.scrollbar) {\n      return this.scrollbar.geometry('scroll') as TsScrollbarsGeometry;\n    } else {\n      return null;\n    }\n  }\n\n\n  /**\n   * Return the current scrollbar position.\n   *\n   * @return The current scrollbar position\n   */\n  public get position(): TsScrollbarPosition | null {\n    if (this.scrollbar) {\n      return this.scrollbar.position() as TsScrollbarPosition;\n    } else {\n      return null;\n    }\n  }\n\n\n  /**\n   * Determine if a direction is scrollable. See {@link TsScrollbarsScrollDirections} for all possible options.\n   *\n   * @param direction - The scroll direction to check\n   * @return Whether the direction is currently scrollable\n   */\n  public scrollable(direction: TsScrollbarsScrollDirections = 'any'): boolean | null {\n    if (this.scrollbar) {\n      return this.scrollbar.scrollable(direction);\n    } else {\n      return null;\n    }\n  }\n\n\n  public scrollTo(x: number, y?: number, speed?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollTo(x, y, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to element\n   *\n   * @param queryString - The string to query the DOM for\n   * @param speed - The speed to move at\n   * @param offset - A px offest\n   */\n  public scrollToElement(queryString: string, speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToElement(queryString, offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the bottom\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToBottom(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToBottom(offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the left\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToLeft(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToLeft(offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the right\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToRight(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToRight(offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the top\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToTop(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToTop(offset, speed);\n    }\n  }\n\n\n  /**\n   * Trigger an update on the underlying scrollbar library instance.\n   */\n  public update(): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.update();\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsScrollbarsGeometry.html":{"url":"classes/TsScrollbarsGeometry.html","title":"class - TsScrollbarsGeometry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsScrollbarsGeometry\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/scrollbars/scrollbars.component.ts\n        \n\n            \n                Description\n            \n            \n                A class that represents the current gemotric state of scrolling.\n\n            \n\n            \n                Extends\n            \n            \n                    Geometry\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        Scrollbars\n\n\n\n\nTable of Contents\n\nBasic usage\nDisable\nUpdate\n\n\nEvents\n\n\nBasic usage\nYou must set a fixed height and/or width to enable scrollbars (otherwise the browser will just continue making the container larger to fit\nthe content).\n\n  ...\nDisable\nThe scrollbars can be disabled dynamically if needed:\n\n  ...\nUpdate\nIf the scrollbars content is dynamically updated, you will need to update the scrollbars instance:\n\n\n  ...\n  ...\n\n  @ViewChild(TsScrollbarsComponent)\n  public scrollbars!: TsScrollbarsComponent;\n\n\n  myUpdate() {\n    // Update the content\n    this.updateScrollContent();\n\n    // Update the scrollbars\n    this.scrollbars.update();\n  }Events\n\n  ...\n\n\n\nAvailable events\n\n\n\n\nscrollDown\n\n\nscrollLeft\n\n\nscrollRight\n\n\nscrollUp\n\n\nscrollX\n\n\nscrollY\n\n\nxReachEnd\n\n\nxReachStart\n\n\nyReachEnd\n\n\nyReachStart\n\n\n\n\n    \n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  forwardRef,\n} from '@angular/core';\nimport {\n  Geometry,\n  PerfectScrollbarDirective,\n  Position,\n} from 'ngx-perfect-scrollbar';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\n\n/**\n * Define possible scroll directions for {@link TsScrollbarsScrollDirections}.\n */\nexport type TsScrollbarsScrollDirections\n  = 'any'\n  | 'both'\n  | 'x'\n  | 'y'\n;\n\n\n/**\n * A class that represents the current gemotric state of scrolling.\n */\nexport class TsScrollbarsGeometry extends Geometry {}\n\n\n/**\n * A class that represents the current scrollbar positions\n */\nexport class TsScrollbarPosition extends Position {}\n\n\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n\n\n/**\n * The scrollbars UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-scrollbars`: Placed on the primary container\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-scrollbars',\n  templateUrl: './scrollbars.component.html',\n  styleUrls: [\n    './scrollbars.component.scss',\n    './../../../node_modules/perfect-scrollbar/css/perfect-scrollbar.css',\n  ],\n  host: {\n    class: 'ts-scrollbars',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsScrollbars',\n})\nexport class TsScrollbarsComponent {\n  /**\n   * Define the default component ID\n   */\n  protected _uid = `ts-scrollbars-${nextUniqueId++}`;\n\n  /**\n   * Define the speed at which to scroll during automated movements\n   */\n  protected scrollSpeed = 400;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this._uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this._uid;\n\n  /**\n   * Define if the scrollbars are disabled\n   */\n  @Input()\n  public set isDisabled(value: boolean) {\n    this._isDisabled = coerceBooleanProperty(value);\n  }\n  public get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n  private _isDisabled: boolean = false;\n\n  /**\n   * Access underlying scrollbar directive\n   */\n  @ViewChild(forwardRef(() => PerfectScrollbarDirective))\n  public scrollbar!: PerfectScrollbarDirective;\n\n  /**\n   * Event Emitters:\n   */\n  @Output()\n  public scrollDown: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollLeft: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollRight: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollUp: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollX: EventEmitter = new EventEmitter();\n\n  @Output()\n  public scrollY: EventEmitter = new EventEmitter();\n\n  @Output()\n  public xReachEnd: EventEmitter = new EventEmitter();\n\n  @Output()\n  public xReachStart: EventEmitter = new EventEmitter();\n\n  @Output()\n  public yReachEnd: EventEmitter = new EventEmitter();\n\n  @Output()\n  public yReachStart: EventEmitter = new EventEmitter();\n\n\n  constructor() {\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n\n  /**\n   * Return an object containing scrollbar geometry.\n   *\n   * @return An object with all geometry information\n   */\n  public get geometry(): TsScrollbarsGeometry | null {\n    if (this.scrollbar) {\n      return this.scrollbar.geometry('scroll') as TsScrollbarsGeometry;\n    } else {\n      return null;\n    }\n  }\n\n\n  /**\n   * Return the current scrollbar position.\n   *\n   * @return The current scrollbar position\n   */\n  public get position(): TsScrollbarPosition | null {\n    if (this.scrollbar) {\n      return this.scrollbar.position() as TsScrollbarPosition;\n    } else {\n      return null;\n    }\n  }\n\n\n  /**\n   * Determine if a direction is scrollable. See {@link TsScrollbarsScrollDirections} for all possible options.\n   *\n   * @param direction - The scroll direction to check\n   * @return Whether the direction is currently scrollable\n   */\n  public scrollable(direction: TsScrollbarsScrollDirections = 'any'): boolean | null {\n    if (this.scrollbar) {\n      return this.scrollbar.scrollable(direction);\n    } else {\n      return null;\n    }\n  }\n\n\n  public scrollTo(x: number, y?: number, speed?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollTo(x, y, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to element\n   *\n   * @param queryString - The string to query the DOM for\n   * @param speed - The speed to move at\n   * @param offset - A px offest\n   */\n  public scrollToElement(queryString: string, speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToElement(queryString, offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the bottom\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToBottom(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToBottom(offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the left\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToLeft(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToLeft(offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the right\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToRight(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToRight(offset, speed);\n    }\n  }\n\n\n  /**\n   * Scroll to the top\n   *\n   * @param speed - The rate at which to move\n   * @param offset - An offset when scrolling\n   */\n  public scrollToTop(speed: number = this.scrollSpeed, offset?: number): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.scrollToTop(offset, speed);\n    }\n  }\n\n\n  /**\n   * Trigger an update on the underlying scrollbar library instance.\n   */\n  public update(): void {\n    // istanbul ignore else\n    if (this.scrollbar) {\n      this.scrollbar.update();\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsScrollbarsModule.html":{"url":"modules/TsScrollbarsModule.html","title":"module - TsScrollbarsModule","body":"\n                   \n\n\n\n\n  Modules\n  TsScrollbarsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsScrollbarsModule\n\n\n\ncluster_TsScrollbarsModule_declarations\n\n\n\ncluster_TsScrollbarsModule_exports\n\n\n\n\nTsScrollbarsComponent\n\nTsScrollbarsComponent\n\n\n\nTsScrollbarsModule\n\nTsScrollbarsModule\n\nTsScrollbarsModule -->\n\nTsScrollbarsComponent->TsScrollbarsModule\n\n\n\n\n\nTsScrollbarsComponent \n\nTsScrollbarsComponent \n\nTsScrollbarsComponent  -->\n\nTsScrollbarsModule->TsScrollbarsComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/scrollbars/scrollbars.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsScrollbarsComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsScrollbarsComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\n\nimport { TsScrollbarsComponent } from './scrollbars.component';\n\n\nexport * from './scrollbars.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PerfectScrollbarModule,\n  ],\n  declarations: [\n    TsScrollbarsComponent,\n  ],\n  exports: [\n    TsScrollbarsComponent,\n  ],\n})\nexport class TsScrollbarsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsSearchComponent.html":{"url":"components/TsSearchComponent.html","title":"component - TsSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/search/search.component.ts\n\n\n    \n        Description\n    \n    \n        A presentational component to render a search form\nQA CSS CLASSES\n\nqa-search: Placed on the form element which contains this component\nqa-search-input: Placed on the TsInputComponent used for the search text input\nqa-search-button: Placed on the TsButtonComponent used for the submit button\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-search\n            \n\n            \n                styleUrls\n                search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buttonAction\n                            \n                            \n                                    Public\n                                buttonType\n                            \n                            \n                                    Public\n                                debouncedEmit\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Private\n                                INPUT_DEBOUNCE_TIME\n                            \n                            \n                                    Public\n                                inputPatternRegex\n                            \n                            \n                                    Public\n                                query\n                            \n                            \n                                    Public\n                                queryMinLength\n                            \n                            \n                                    Public\n                                searchForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emitSubmit\n                            \n                            \n                                    Public\n                                keyup\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoSubmit\n                            \n                            \n                                initialValue\n                            \n                            \n                                inputHint\n                            \n                            \n                                inputLabel\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isFocused\n                            \n                            \n                                isSubmitting\n                            \n                            \n                                theme\n                            \n                            \n                                userCanClear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                cleared\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/search/search.component.ts:201\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoSubmit\n                    \n                    \n                        Define if the input should automatically submit values as typed\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:135\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialValue\n                    \n                    \n                        Define an initial value for the search input\n\n                            \n                            Type:    string | undefined\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:141\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputHint\n                    \n                    \n                        Define the hint text below the input\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Enter at least two letters.'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:147\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputLabel\n                    \n                    \n                        Define the primary label for the input\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Search'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:153\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                    \n                        Define if the search should be disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:159\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isFocused\n                    \n                    \n                        Define if the search input should be focused initially\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:165\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSubmitting\n                    \n                    \n                        Define if the search is currently submitting a query\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:171\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the theme\n\n                            \n                            Type:    TsStyleThemeTypes\n\n                            \n                        \n                            Default value: 'primary'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:177\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userCanClear\n                    \n                    \n                        Define if the user can clear the search input\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:183\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                    \n                        The event to emit when the internal input value is changed\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:195\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cleared\n                    \n                    \n                        The event to emit when the internal input value is cleared\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:201\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitted\n                    \n                    \n                        The event to emit when the form is submitted\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:189\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            emitSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        emitSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:244\n                            \n                        \n\n\n                \n                    \n                            Emit the submitted event\nNOTE: This wrapper is needed so that we can pass the query value to the emitter\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keyup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        keyup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:228\n                            \n                        \n\n\n                \n                    \n                            Fire events as needed after keyup events\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:215\n                            \n                        \n\n\n                \n                    \n                            Seed the value if needed on initialization\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buttonAction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonAction:     TsButtonActionTypes\n\n                    \n                \n                    \n                        \n                            Type :     TsButtonActionTypes\n\n                        \n                    \n                    \n                        \n                            Default value : 'Submit'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:79\n                            \n                        \n\n                \n                    \n                        Define the button action label\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buttonType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonType:     TsButtonFunctionTypes\n\n                    \n                \n                    \n                        \n                            Type :     TsButtonFunctionTypes\n\n                        \n                    \n                    \n                        \n                            Default value : 'search'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:84\n                            \n                        \n\n                \n                    \n                        Define the button type\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            debouncedEmit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debouncedEmit:     \n\n                    \n                \n                    \n                        \n                            Default value : debounce(this.emitSubmit, this.INPUT_DEBOUNCE_TIME)\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:96\n                            \n                        \n\n                \n                    \n                        Define a debounced method to emit the submission event\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'search'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:101\n                            \n                        \n\n                \n                    \n                        Define the icon name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            INPUT_DEBOUNCE_TIME\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        INPUT_DEBOUNCE_TIME:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:74\n                            \n                        \n\n                \n                    \n                        Define the time to wait for user interaction to stop before auto-submitting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputPatternRegex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inputPatternRegex:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[a-zA-Z0-9_ ]*'\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:106\n                            \n                        \n\n                \n                    \n                        Define the regular expression to validate the query\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            query\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        query:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:129\n                            \n                        \n\n                \n                    \n                        Store the search query\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queryMinLength\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        queryMinLength:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:111\n                            \n                        \n\n                \n                    \n                        Define the minimum length of a valid query\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                    \n                        \n                            Default value : this.formBuilder.group({\n    query: [\n      null,\n      [\n        Validators.minLength(this.queryMinLength),\n        Validators.pattern(this.inputPatternRegex),\n      ],\n    ],\n  })\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/search/search.component.ts:116\n                            \n                        \n\n                \n                    \n                        Initialize the form\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentQuery\n                    \n                \n\n                \n                    \n                        getcurrentQuery()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/search/search.component.ts:89\n                                \n                            \n                    \n                        \n                                Define a helper to return the current query string\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { debounce } from '@terminus/ngx-tools';\n\nimport {\n  TsButtonActionTypes,\n  TsButtonFunctionTypes,\n} from './../button/button.module';\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsSearchResponse {\n  /**\n   * The search query\n   */\n  query: string;\n}\n\n\n/**\n * A presentational component to render a search form\n *\n * #### QA CSS CLASSES\n * - `qa-search`: Placed on the form element which contains this component\n * - `qa-search-input`: Placed on the {@link TsInputComponent} used for the search text input\n * - `qa-search-button`: Placed on the {@link TsButtonComponent} used for the submit button\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n  host: {\n    class: 'ts-search',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsSearchComponent implements OnInit {\n  /**\n   * Define the time to wait for user interaction to stop before auto-submitting\n   */\n  private INPUT_DEBOUNCE_TIME: number = 200;\n\n  /**\n   * Define the button action label\n   */\n  public buttonAction: TsButtonActionTypes = 'Submit';\n\n  /**\n   * Define the button type\n   */\n  public buttonType: TsButtonFunctionTypes = 'search';\n\n  /**\n   * Define a helper to return the current query string\n   */\n  public get currentQuery(): string {\n    return this.searchForm.value.query ? this.searchForm.value.query.trim() : '';\n  }\n\n  /**\n   * Define a debounced method to emit the submission event\n   */\n  public debouncedEmit = debounce(this.emitSubmit, this.INPUT_DEBOUNCE_TIME);\n\n  /**\n   * Define the icon name\n   */\n  public icon: string = 'search';\n\n  /**\n   * Define the regular expression to validate the query\n   */\n  public inputPatternRegex: string = '[a-zA-Z0-9_ ]*';\n\n  /**\n   * Define the minimum length of a valid query\n   */\n  public queryMinLength: number = 2;\n\n  /**\n   * Initialize the form\n   */\n  public searchForm: FormGroup = this.formBuilder.group({\n    query: [\n      null,\n      [\n        Validators.minLength(this.queryMinLength),\n        Validators.pattern(this.inputPatternRegex),\n      ],\n    ],\n  });\n\n  /**\n   * Store the search query\n   */\n  public query: string = '';\n\n  /**\n   * Define if the input should automatically submit values as typed\n   */\n  @Input()\n  public autoSubmit: boolean = false;\n\n  /**\n   * Define an initial value for the search input\n   */\n  @Input()\n  public initialValue: string | undefined;\n\n  /**\n   * Define the hint text below the input\n   */\n  @Input()\n  public inputHint: string = 'Enter at least two letters.';\n\n  /**\n   * Define the primary label for the input\n   */\n  @Input()\n  public inputLabel: string = 'Search';\n\n  /**\n   * Define if the search should be disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the search input should be focused initially\n   */\n  @Input()\n  public isFocused: boolean = false;\n\n  /**\n   * Define if the search is currently submitting a query\n   */\n  @Input()\n  public isSubmitting: boolean = false;\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define if the user can clear the search input\n   */\n  @Input()\n  public userCanClear: boolean = true;\n\n  /**\n   * The event to emit when the form is submitted\n   */\n  @Output()\n  public submitted: EventEmitter = new EventEmitter();\n\n  /**\n   * The event to emit when the internal input value is changed\n   */\n  @Output()\n  public changed: EventEmitter = new EventEmitter();\n\n  /**\n   * The event to emit when the internal input value is cleared\n   */\n  @Output()\n  public cleared: EventEmitter = new EventEmitter();\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n  ) {}\n\n\n  /**\n   * Seed the value if needed on initialization\n   */\n  public ngOnInit(): void {\n    // istanbul ignore else\n    if (this.initialValue) {\n      this.searchForm.patchValue({\n        query: this.initialValue,\n      });\n    }\n  }\n\n\n  /**\n   * Fire events as needed after keyup events\n   */\n  public keyup(): void {\n    this.changed.emit(this.currentQuery);\n\n    // NOTE: We need to check for a valid query length here even though we are using a minLength\n    // validator. When the length is 0 the minLength validator returns valid.\n    if (this.autoSubmit && this.searchForm.valid && this.currentQuery.length > 0) {\n      this.debouncedEmit(this);\n    }\n  }\n\n\n  /**\n   * Emit the submitted event\n   *\n   * NOTE: This wrapper is needed so that we can pass the query value to the emitter\n   */\n  private emitSubmit(): void {\n    this.submitted.emit({query: this.currentQuery});\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n  Search\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Search'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsSearchModule.html":{"url":"modules/TsSearchModule.html","title":"module - TsSearchModule","body":"\n                   \n\n\n\n\n  Modules\n  TsSearchModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsSearchModule\n\n\n\ncluster_TsSearchModule_declarations\n\n\n\ncluster_TsSearchModule_imports\n\n\n\ncluster_TsSearchModule_exports\n\n\n\n\nTsSearchComponent\n\nTsSearchComponent\n\n\n\nTsSearchModule\n\nTsSearchModule\n\nTsSearchModule -->\n\nTsSearchComponent->TsSearchModule\n\n\n\n\n\nTsSearchComponent \n\nTsSearchComponent \n\nTsSearchComponent  -->\n\nTsSearchModule->TsSearchComponent \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTsSearchModule -->\n\nTsButtonModule->TsSearchModule\n\n\n\n\n\nTsInputModule\n\nTsInputModule\n\nTsSearchModule -->\n\nTsInputModule->TsSearchModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/search/search.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsSearchComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsButtonModule\n                            \n                            \n                                    TsInputModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsSearchComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { TsInputModule } from './../input/input.module';\nimport { TsButtonModule } from './../button/button.module';\nimport { TsSearchComponent } from './search.component';\n\nexport * from './search.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    TsInputModule,\n    TsButtonModule,\n  ],\n  exports: [\n    TsSearchComponent,\n  ],\n  declarations: [\n    TsSearchComponent,\n  ],\n})\nexport class TsSearchModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsSearchResponse.html":{"url":"interfaces/TsSearchResponse.html","title":"interface - TsSearchResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsSearchResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/search/search.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the user object interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        query\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The search query\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { debounce } from '@terminus/ngx-tools';\n\nimport {\n  TsButtonActionTypes,\n  TsButtonFunctionTypes,\n} from './../button/button.module';\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsSearchResponse {\n  /**\n   * The search query\n   */\n  query: string;\n}\n\n\n/**\n * A presentational component to render a search form\n *\n * #### QA CSS CLASSES\n * - `qa-search`: Placed on the form element which contains this component\n * - `qa-search-input`: Placed on the {@link TsInputComponent} used for the search text input\n * - `qa-search-button`: Placed on the {@link TsButtonComponent} used for the submit button\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n  host: {\n    class: 'ts-search',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsSearchComponent implements OnInit {\n  /**\n   * Define the time to wait for user interaction to stop before auto-submitting\n   */\n  private INPUT_DEBOUNCE_TIME: number = 200;\n\n  /**\n   * Define the button action label\n   */\n  public buttonAction: TsButtonActionTypes = 'Submit';\n\n  /**\n   * Define the button type\n   */\n  public buttonType: TsButtonFunctionTypes = 'search';\n\n  /**\n   * Define a helper to return the current query string\n   */\n  public get currentQuery(): string {\n    return this.searchForm.value.query ? this.searchForm.value.query.trim() : '';\n  }\n\n  /**\n   * Define a debounced method to emit the submission event\n   */\n  public debouncedEmit = debounce(this.emitSubmit, this.INPUT_DEBOUNCE_TIME);\n\n  /**\n   * Define the icon name\n   */\n  public icon: string = 'search';\n\n  /**\n   * Define the regular expression to validate the query\n   */\n  public inputPatternRegex: string = '[a-zA-Z0-9_ ]*';\n\n  /**\n   * Define the minimum length of a valid query\n   */\n  public queryMinLength: number = 2;\n\n  /**\n   * Initialize the form\n   */\n  public searchForm: FormGroup = this.formBuilder.group({\n    query: [\n      null,\n      [\n        Validators.minLength(this.queryMinLength),\n        Validators.pattern(this.inputPatternRegex),\n      ],\n    ],\n  });\n\n  /**\n   * Store the search query\n   */\n  public query: string = '';\n\n  /**\n   * Define if the input should automatically submit values as typed\n   */\n  @Input()\n  public autoSubmit: boolean = false;\n\n  /**\n   * Define an initial value for the search input\n   */\n  @Input()\n  public initialValue: string | undefined;\n\n  /**\n   * Define the hint text below the input\n   */\n  @Input()\n  public inputHint: string = 'Enter at least two letters.';\n\n  /**\n   * Define the primary label for the input\n   */\n  @Input()\n  public inputLabel: string = 'Search';\n\n  /**\n   * Define if the search should be disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the search input should be focused initially\n   */\n  @Input()\n  public isFocused: boolean = false;\n\n  /**\n   * Define if the search is currently submitting a query\n   */\n  @Input()\n  public isSubmitting: boolean = false;\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Define if the user can clear the search input\n   */\n  @Input()\n  public userCanClear: boolean = true;\n\n  /**\n   * The event to emit when the form is submitted\n   */\n  @Output()\n  public submitted: EventEmitter = new EventEmitter();\n\n  /**\n   * The event to emit when the internal input value is changed\n   */\n  @Output()\n  public changed: EventEmitter = new EventEmitter();\n\n  /**\n   * The event to emit when the internal input value is cleared\n   */\n  @Output()\n  public cleared: EventEmitter = new EventEmitter();\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n  ) {}\n\n\n  /**\n   * Seed the value if needed on initialization\n   */\n  public ngOnInit(): void {\n    // istanbul ignore else\n    if (this.initialValue) {\n      this.searchForm.patchValue({\n        query: this.initialValue,\n      });\n    }\n  }\n\n\n  /**\n   * Fire events as needed after keyup events\n   */\n  public keyup(): void {\n    this.changed.emit(this.currentQuery);\n\n    // NOTE: We need to check for a valid query length here even though we are using a minLength\n    // validator. When the length is 0 the minLength validator returns valid.\n    if (this.autoSubmit && this.searchForm.valid && this.currentQuery.length > 0) {\n      this.debouncedEmit(this);\n    }\n  }\n\n\n  /**\n   * Emit the submitted event\n   *\n   * NOTE: This wrapper is needed so that we can pass the query value to the emitter\n   */\n  private emitSubmit(): void {\n    this.submitted.emit({query: this.currentQuery});\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsSelectModule.html":{"url":"modules/TsSelectModule.html","title":"module - TsSelectModule","body":"\n                   \n\n\n\n\n  Modules\n  TsSelectModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsSelectModule\n\n\n\ncluster_TsSelectModule_declarations\n\n\n\ncluster_TsSelectModule_TsSelectComponent_providers\n\n\n\ncluster_TsSelectModule_imports\n\n\n\ncluster_TsSelectModule_exports\n\n\n\n\nTsSelectComponent\n\nTsSelectComponent\n\n\n\nTsSelectModule\n\nTsSelectModule\n\nTsSelectModule -->\n\nTsSelectComponent->TsSelectModule\n\n\n\n\n\nTsSelectComponent \n\nTsSelectComponent \n\nTsSelectComponent  -->\n\nTsSelectModule->TsSelectComponent \n\n\n\n\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR\n\nTsSelectComponent -->\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR->TsSelectComponent\n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsSelectModule -->\n\nTsValidationMessagesModule->TsSelectModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/select/select.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsSelectComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsValidationMessagesModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsSelectComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { TsValidationMessagesModule } from './../validation-messages/validation-messages.module';\nimport { TsSelectComponent } from './select.component';\n\nexport * from './select.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatSelectModule,\n    TsValidationMessagesModule,\n  ],\n  exports: [\n    TsSelectComponent,\n  ],\n  declarations: [\n    TsSelectComponent,\n  ],\n})\nexport class TsSelectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsSelectedFile.html":{"url":"classes/TsSelectedFile.html","title":"class - TsSelectedFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsSelectedFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/file-upload/selected-file.ts\n        \n\n            \n                Description\n            \n            \n                Manage a single selected file\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dimensions\n                            \n                            \n                                    Public\n                                file\n                            \n                            \n                                    Public\n                                fileLoaded$\n                            \n                            \n                                    Private\n                                fileReader\n                            \n                            \n                                    Private\n                                    Optional\n                                fileReference\n                            \n                            \n                                    Public\n                                mimeType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                ratio\n                            \n                            \n                                    Public\n                                size\n                            \n                            \n                                    Public\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                determineImageDimensions\n                            \n                            \n                                    Private\n                                isSame\n                            \n                            \n                                    Private\n                                validateImageDimensions\n                            \n                            \n                                    Private\n                                validateImageRatio\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(file: File, imageDimensionConstraints: TsFileImageDimensionConstraints | undefined, typeConstraint: TsFileAcceptedMimeTypes[] | undefined, maxSize: number, ratioConstraint: Array | undefined)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/file-upload/selected-file.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        file\n                                                  \n                                                        \n                                                                    File\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageDimensionConstraints\n                                                  \n                                                        \n                                                                    TsFileImageDimensionConstraints | undefined\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConstraint\n                                                  \n                                                        \n                                                                    TsFileAcceptedMimeTypes[] | undefined\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxSize\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        ratioConstraint\n                                                  \n                                                        \n                                                                    Array | undefined\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dimensions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dimensions:     TsImageDimensions | undefined\n\n                    \n                \n                    \n                        \n                            Type :     TsImageDimensions | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            file\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        file:     File\n\n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileLoaded$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileLoaded$:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this.fileReference)\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:57\n                            \n                        \n\n                \n                    \n                        BehaviorSubject to alert consumers when all calculations are complete\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fileReader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileReader:     FileReader\n\n                    \n                \n                    \n                        \n                            Type :     FileReader\n\n                        \n                    \n                    \n                        \n                            Default value : new FileReader()\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            fileReference\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileReference:     TsSelectedFile\n\n                    \n                \n                    \n                        \n                            Type :     TsSelectedFile\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:52\n                            \n                        \n\n                \n                    \n                        Only needed to appease TypeScript when defining fileLoaded$\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mimeType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mimeType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ratio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ratio:     number | undefined\n\n                    \n                \n                    \n                        \n                            Type :     number | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            size\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        size:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            validations\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validations:     TsFileValidations\n\n                    \n                \n                    \n                        \n                            Type :     TsFileValidations\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    fileType: false,\n    fileSize: false,\n    imageDimensions: false,\n    imageRatio: false,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:41\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            determineImageDimensions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        determineImageDimensions(callback?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:150\n                            \n                        \n\n\n                \n                    \n                            Determine the dimensions and ratio of an image\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        callback\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                \nA function to call after the dimensions have been calculated (asynchronously)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isSame\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isSame(number1: number, number2: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:251\n                            \n                        \n\n\n                \n                    \n                            A utility function to determine whether two numbers are the same\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        number1\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \none number\n\n\n                                                        \n                                                \n                                                \n                                                        number2\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nanother number\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Whether these two numbers are the same\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateImageDimensions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        validateImageDimensions(constraints: TsFileImageDimensionConstraints | undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:201\n                            \n                        \n\n\n                \n                    \n                            Validate the image dimensions\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        constraints\n                                                        \n                                                                    TsFileImageDimensionConstraints | undefined\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe constraints this the image dimensions must fit\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    The validation result\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateImageRatio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        validateImageRatio(constraints: Array | undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:228\n                            \n                        \n\n\n                \n                    \n                            Validate the image ratios\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        constraints\n                                                        \n                                                                    Array | undefined\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe constrains that the image ratio must fit\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    The validation result\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:95\n                                \n                            \n                    \n                        \n                                Get the image width\n\n\n                                \n                                \n                                \n                                    Returns :     number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:104\n                                \n                            \n                    \n                        \n                                Get the image height\n\n\n                                \n                                \n                                \n                                    Returns :     number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isCSV\n                    \n                \n\n                \n                    \n                        getisCSV()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:113\n                                \n                            \n                    \n                        \n                                Get a boolean representing if the file is a CSV\n\n\n                                \n                                \n                                \n                                    Returns :     boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isImage\n                    \n                \n\n                \n                    \n                        getisImage()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:122\n                                \n                            \n                    \n                        \n                                Get a boolean representing if the file is an image\n\n\n                                \n                                \n                                \n                                    Returns :     boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fileContents\n                    \n                \n\n                \n                    \n                        getfileContents()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:131\n                                \n                            \n                    \n                        \n                                Get the file contents\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isValid\n                    \n                \n\n                \n                    \n                        getisValid()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/file-upload/selected-file.ts:140\n                                \n                            \n                    \n                        \n                                Get the validation status\n\n\n                                \n                                \n                                \n                                    Returns :     boolean\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { BehaviorSubject } from 'rxjs';\n\nimport { TsFileImageDimensionConstraints } from './image-dimension-constraints';\nimport { TsImageDimensions } from './image-dimensions';\nimport { TsFileAcceptedMimeTypes } from './mime-types';\nimport { ImageRatio } from './file-upload.module';\n\n\n/**\n * The structure of the object to track file validations internally\n */\nexport interface TsFileValidations {\n  fileType: boolean;\n  fileSize: boolean;\n  imageDimensions: boolean;\n  imageRatio: boolean;\n}\n\n\n/**\n * The number of bytes per kilobyte (for calculations)\n */\nconst BYTES_PER_KB = 1024;\n\n\n/**\n * Manage a single selected file\n *\n * @param file - The selected file\n * @param imageDimensionConstraints - An array of image dimension constraints {@link TsFileImageDimensionConstraints}\n * @param typeConstraint - An array of allowed MIME types {@link TsFileAcceptedMimeTypes}\n * @param maxSize - The maximum size in kilobytes\n * @param ratioConstraint - An array of allowed image ratios in form of ImageRatio\n */\nexport class TsSelectedFile {\n  public name: string | undefined;\n  public mimeType: string;\n  public dimensions: TsImageDimensions | undefined;\n  public ratio: number | undefined;\n  public size: number;\n  public validations: TsFileValidations = {\n    fileType: false,\n    fileSize: false,\n    imageDimensions: false,\n    imageRatio: false,\n  };\n  private fileReader: FileReader = new FileReader();\n\n  /**\n   * Only needed to appease TypeScript when defining `fileLoaded$`\n   */\n  private fileReference?: TsSelectedFile;\n\n  /**\n   * BehaviorSubject to alert consumers when all calculations are complete\n   */\n  public fileLoaded$: BehaviorSubject = new BehaviorSubject(this.fileReference);\n\n\n  constructor(\n    public file: File,\n    private imageDimensionConstraints: TsFileImageDimensionConstraints | undefined,\n    private typeConstraint: TsFileAcceptedMimeTypes[] | undefined,\n    private maxSize: number,\n    private ratioConstraint: Array | undefined,\n  ) {\n    this.mimeType = this.file.type;\n    this.size = Math.ceil(this.file.size / BYTES_PER_KB);\n    this.name = this.file.name;\n\n    // Begin the validation chain by validating image dimensions\n    this.determineImageDimensions(() => {\n      // Validate mime-type\n      // istanbul ignore else\n      if (this.typeConstraint && this.typeConstraint.indexOf(this.file.type as TsFileAcceptedMimeTypes) >= 0) {\n        this.validations.fileType = true;\n      }\n\n      // Validate file size\n      // istanbul ignore else\n      if (this.size  {\n        // istanbul ignore else\n        if (img) {\n          img.src = this.fileReader.result;\n        }\n      };\n      img.onload = (v: Event) => {\n        // istanbul ignore else\n        if (img) {\n          this.dimensions = new TsImageDimensions(img.naturalWidth, img.naturalHeight);\n        }\n\n        // Validate dimensions and ratio\n        this.validations.imageDimensions = this.validateImageDimensions(this.imageDimensionConstraints);\n        this.validations.imageRatio = this.validateImageRatio(this.ratioConstraint);\n        // Call the callback if one exists\n        // istanbul ignore else\n        if (callback) {\n          callback();\n        }\n      };\n    } else {\n      // We are not dealing with an image:\n      // istanbul ignore else\n      if (callback) {\n        callback();\n      }\n\n      // Since this is not an image, set dimension/ratio validation to `true` to 'bypass'\n      this.validations.imageDimensions = true;\n      this.validations.imageRatio = true;\n    }\n\n    // Read the file (this triggers the FileReader load event)\n    this.fileReader.readAsDataURL(this.file);\n  }\n\n\n  /**\n   * Validate the image dimensions\n   *\n   * @param constraints - The constraints this the image dimensions must fit\n   * @return The validation result\n   */\n  private validateImageDimensions(constraints: TsFileImageDimensionConstraints | undefined): boolean {\n    if (!constraints || constraints.length = constraint.height.min && height = constraint.width.min && width  | undefined): boolean {\n    if (!constraints) {\n      return true;\n    }\n\n    const ratios = constraints.map((r) => r.widthRatio / r.heightRatio);\n    for (const r of ratios) {\n      const ratio = this.width / this.height;\n      if (this.isSame(r, ratio)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * A utility function to determine whether two numbers are the same\n   * @param number1 - one number\n   * @param number2 - another number\n   * @return Whether these two numbers are the same\n   */\n\n  private isSame(number1: number, number2: number) {\n    if (Math.abs((number1 - number2) / number1) \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TsSentenceCasePipe.html":{"url":"pipes/TsSentenceCasePipe.html","title":"pipe - TsSentenceCasePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  TsSentenceCasePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/sentence-case/sentence-case.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        tsSentenceCase\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/pipes/sentence-case/sentence-case.pipe.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\n\n\n@Pipe({\n  name: 'tsSentenceCase',\n})\nexport class TsSentenceCasePipe implements PipeTransform {\n  transform(value: string): string | undefined {\n    // Check for null values to avoid issues during data-binding\n    if (!value) {\n      return;\n    }\n\n    return value.charAt(0).toUpperCase() + value.slice(1).toLowerCase();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsSlideToggleChange.html":{"url":"classes/TsSlideToggleChange.html","title":"class - TsSlideToggleChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsSlideToggleChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/toggle/toggle.component.ts\n        \n\n            \n                Description\n            \n            \n                Expose the MatSlideToggleChange event as TsSlideToggleChange. Used by TsToggleComponent\n\n            \n\n            \n                Extends\n            \n            \n                    MatSlideToggleChange\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  forwardRef,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Expose the MatSlideToggleChange event as TsSlideToggleChange. Used by {@link TsToggleComponent}\n */\nexport class TsSlideToggleChange extends MatSlideToggleChange {}\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via our base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsToggleComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * The is a toggle component\n *\n * #### QA CSS CLASSES\n * - `qa-toggle`: The toggle element\n *\n * @example\n * My Toggle!\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss'],\n  host: {\n    class: 'ts-toggle',\n  },\n  providers: [CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsToggleComponent extends TsReactiveFormBaseComponent {\n  /**\n   * Define the aria label\n   */\n  @Input()\n  public ariaLabel: string | undefined;\n\n  /**\n   * Allow the checked state to be set\n   */\n  @Input()\n  public set isChecked(value: boolean) {\n    this._isChecked = coerceBooleanProperty(value);\n    this.value = this._isChecked;\n  }\n  public get isChecked(): boolean {\n    return this._isChecked;\n  }\n  private _isChecked: boolean = false;\n\n  /**\n   * Define if the toggle should be disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the toggle is required\n   */\n  @Input()\n  public isRequired: boolean = true;\n\n  /**\n   * Define the position of the label\n   */\n  @Input()\n  public labelPosition: 'before' | 'after' = 'after';\n\n  /**\n   * Define the input name for the toggle\n   */\n  @Input()\n  public name: string = 'toggle';\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit an event each time the toggle value changes\n   */\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsSortBase.html":{"url":"classes/TsSortBase.html","title":"class - TsSortBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsSortBase\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort.directive.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n\nTable of Contents\n\nAdding sort to table headers\nChanging the sort order\nDisabling sorting\nUsing sort with the ts-table\nAccessibility\n\n\nAdding sort to table headers\nTo add sorting behavior and styling to a set of table headers, add ts-sort-header to each header\nand provide an id that will identify it. These headers should be contained within a parent element\nwith the tsSort directive, which will emit a sortChange event when the user triggers sorting\non the header.\nUsers can trigger the sort header through a mouse click or keyboard action. When this happens, the\ntsSort will emit an sortChange event that contains the ID of the header triggered and the\ndirection to sort (asc or desc).\nChanging the sort order\nBy default, a sort header starts its sorting at asc and then desc. Triggering the sort header\nafter desc will remove sorting.\nTo reverse the sort order for all headers, set the tsSortStart to desc on the tsSort\ndirective. To reverse the order only for a specific header, set the start input only on the header\ninstead.\nTo prevent the user from clearing the sort sort state from an already sorted column, set\ntsSortDisableClear to true on the tsSort to affect all headers, or set disableClear to true on\na specific header.\nDisabling sorting\nIf you want to prevent the user from changing the sorting order of any column, you can use the\ntsSortDisabled binding on the ts-sort, or the disabled on an single ts-sort-header.\nUsing sort with the ts-table\nWhen used on an ts-table header, it is not required to set an ts-sort-header id on because by\ndefault it will use the id of the column.\nAccessibility\nThe aria-label for the sort button can be set in TsSortHeaderIntl.\n\n    \n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  isDevMode,\n  Output,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { Subject } from 'rxjs';\n\nimport {\n  getSortInvalidDirectionError,\n  getSortDuplicateSortableIdError,\n  getSortHeaderMissingIdError,\n} from './sort-errors';\n\n\n/**\n * Define the allowed sort directions for {@link TsSort}\n */\nexport type TsSortDirection\n  = 'asc'\n  | 'desc'\n  | ''\n;\n\n\n/**\n * Interface for a directive that holds sorting state consumed by `TsSortHeaderComponent`\n */\nexport interface TsSortableItem {\n  /**\n   * The id of the column being sorted\n   */\n  id: string;\n\n  /**\n   * Starting sort direction\n   */\n  start: 'asc' | 'desc';\n\n  /**\n   * Whether to disable clearing the sorting state\n   */\n  disableClear: boolean;\n}\n\n\n/**\n * The current sort state\n */\nexport interface TsSortState {\n  /**\n   * The id of the column being sorted\n   */\n  active: string;\n\n  /**\n   * The sort direction\n   */\n  direction: TsSortDirection;\n}\n\n\n// Boilerplate for applying mixins to TsSort.\nexport class TsSortBase {}\nexport const _TsSortMixinBase = mixinDisabled(TsSortBase);\n\n\n/**\n * Container for TsSortables to manage the sort state and provide default sort parameters\n */\n@Directive({\n  selector: '[tsSort]',\n  exportAs: 'tsSort',\n  inputs: ['disabled: tsSortDisabled'],\n})\nexport class TsSortDirective extends _TsSortMixinBase implements CanDisable, OnChanges, OnDestroy {\n  /**\n   * Collection of all registered sortables that this directive manages\n   */\n  private sortables = new Map();\n\n  /**\n   * Used to notify any child components listening to state changes\n   */\n  public _stateChanges = new Subject();\n\n  /**\n   * The id of the most recently sorted TsSortable\n   */\n  @Input('tsSortActive')\n  public active!: string;\n\n  /**\n   * The direction to set when an TsSortable is initially sorted.\n   *\n   * May be overriden by the TsSortable's sort start.\n   */\n  @Input('tsSortStart')\n  public start: 'asc' | 'desc' = 'asc';\n\n  /**\n   * The sort direction of the currently active TsSortable\n   */\n  @Input('tsSortDirection')\n  public set direction(direction: TsSortDirection) {\n    if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n      throw getSortInvalidDirectionError(direction);\n    }\n    this._direction = direction;\n  }\n  public get direction(): TsSortDirection {\n    return this._direction;\n  }\n  private _direction: TsSortDirection = '';\n\n  /**\n   * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n   *\n   * May be overriden by the TsSortable's disable clear input.\n   */\n  @Input('tsSortDisableClear')\n  public set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  public get disableClear() {\n    return this._disableClear;\n  }\n  private _disableClear: boolean = false;\n\n  /**\n   * Event emitted when the user changes either the active sort or sort direction\n   */\n  @Output('tsSortChange')\n  readonly sortChange = new EventEmitter();\n\n\n  /**\n   * Trigger next on all changes\n   */\n  public ngOnChanges(): void {\n    this._stateChanges.next();\n  }\n\n\n  /**\n   * Complete the observable on destroy\n   */\n  public ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n\n  /**\n   * Register function to be used by the contained TsSortables. Adds the TsSortable to the\n   * collection of TsSortables.\n   */\n  register(sortable: TsSortableItem): void {\n    if (!sortable.id && isDevMode()) {\n      throw getSortHeaderMissingIdError();\n    }\n\n    if (this.sortables.has(sortable.id) && isDevMode()) {\n      throw getSortDuplicateSortableIdError(sortable.id);\n    }\n\n    this.sortables.set(sortable.id, sortable);\n  }\n\n\n  /**\n   * Unregister function to be used by the contained TsSortables. Removes the TsSortable from the\n   * collection of contained TsSortables.\n   */\n  deregister(sortable: TsSortableItem): void {\n    this.sortables.delete(sortable.id);\n  }\n\n\n  /**\n   * Sets the active sort id and determines the new sort direction\n   */\n  sort(sortable: TsSortableItem): void {\n    if (this.active !== sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n\n    this.sortChange.next({active: this.active, direction: this.direction});\n  }\n\n\n  /**\n   * Returns the next sort direction of the active sortable, checking for potential overrides\n   */\n  getNextSortDirection(sortable: TsSortableItem): TsSortDirection {\n    if (!sortable) {\n      return '';\n    }\n\n    // Get the sort direction cycle with the potential sortable overrides.\n    const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n    const sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n\n    // Get and return the next direction in the cycle\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) {\n      nextDirectionIndex = 0;\n    }\n\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n\n}\n\n\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear\n */\nfunction getSortDirectionCycle(start: 'asc' | 'desc', disableClear: boolean): TsSortDirection[] {\n  const sortOrder: TsSortDirection[] = ['asc', 'desc'];\n\n  if (start === 'desc') {\n    sortOrder.reverse();\n  }\n\n  if (!disableClear) {\n    sortOrder.push('');\n  }\n\n  return sortOrder;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsSortDirective.html":{"url":"directives/TsSortDirective.html","title":"directive - TsSortDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsSortDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort.directive.ts\n        \n\n            \n                Description\n            \n            \n                Container for TsSortables to manage the sort state and provide default sort parameters\n\n            \n\n            \n                Implements\n            \n            \n                        CanDisable\n                        OnChanges\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsSort]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _direction\n                            \n                            \n                                    Private\n                                _disableClear\n                            \n                            \n                                    Public\n                                _stateChanges\n                            \n                            \n                                    Private\n                                sortables\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deregister\n                            \n                            \n                                getNextSortDirection\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                register\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tsSortActive\n                            \n                            \n                                tsSortDirection\n                            \n                            \n                                tsSortDisableClear\n                            \n                            \n                                tsSortStart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                tsSortChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        tsSortActive\n                    \n                    \n                        The id of the most recently sorted TsSortable\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:98\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tsSortDirection\n                    \n                    \n                        The sort direction of the currently active TsSortable\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:112\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tsSortDisableClear\n                    \n                    \n                        Whether to disable the user from clearing the sort by finishing the sort direction cycle.\nMay be overriden by the TsSortable's disable clear input.\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:129\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tsSortStart\n                    \n                    \n                        The direction to set when an TsSortable is initially sorted.\nMay be overriden by the TsSortable's sort start.\n\n                            \n                            Type:    \"asc\" | \"desc\"\n\n                            \n                        \n                            Default value: 'asc'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:106\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        tsSortChange\n                    \n                    \n                        Event emitted when the user changes either the active sort or sort direction\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:141\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deregister\n                            \n                            \n                        \n                    \n                \n                \n                    \nderegister(sortable: TsSortableItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:181\n                            \n                        \n\n\n                \n                    \n                            Unregister function to be used by the contained TsSortables. Removes the TsSortable from the\ncollection of contained TsSortables.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sortable\n                                                        \n                                                                    TsSortableItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNextSortDirection\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNextSortDirection(sortable: TsSortableItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:204\n                            \n                        \n\n\n                \n                    \n                            Returns the next sort direction of the active sortable, checking for potential overrides\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sortable\n                                                        \n                                                                    TsSortableItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     TsSortDirection\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:147\n                            \n                        \n\n\n                \n                    \n                            Trigger next on all changes\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:155\n                            \n                        \n\n\n                \n                    \n                            Complete the observable on destroy\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \nregister(sortable: TsSortableItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:164\n                            \n                        \n\n\n                \n                    \n                            Register function to be used by the contained TsSortables. Adds the TsSortable to the\ncollection of TsSortables.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sortable\n                                                        \n                                                                    TsSortableItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \nsort(sortable: TsSortableItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:189\n                            \n                        \n\n\n                \n                    \n                            Sets the active sort id and determines the new sort direction\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sortable\n                                                        \n                                                                    TsSortableItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _direction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _direction:     TsSortDirection\n\n                    \n                \n                    \n                        \n                            Type :     TsSortDirection\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:121\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disableClear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _disableClear:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:135\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _stateChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _stateChanges:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:92\n                            \n                        \n\n                \n                    \n                        Used to notify any child components listening to state changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sortables\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortables:     \n\n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:87\n                            \n                        \n\n                \n                    \n                        Collection of all registered sortables that this directive manages\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        direction\n                    \n                \n\n                \n                    \n                        getdirection()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:118\n                                \n                            \n\n                \n                    \n                        setdirection(direction: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:112\n                                \n                            \n                    \n                        \n                                The sort direction of the currently active TsSortable\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            direction\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        disableClear\n                    \n                \n\n                \n                    \n                        getdisableClear()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:132\n                                \n                            \n\n                \n                    \n                        setdisableClear(v: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/sort/sort.directive.ts:129\n                                \n                            \n                    \n                        \n                                Whether to disable the user from clearing the sort by finishing the sort direction cycle.\nMay be overriden by the TsSortable's disable clear input.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n    \n        \n\nTable of Contents\n\nAdding sort to table headers\nChanging the sort order\nDisabling sorting\nUsing sort with the ts-table\nAccessibility\n\n\nAdding sort to table headers\nTo add sorting behavior and styling to a set of table headers, add ts-sort-header to each header\nand provide an id that will identify it. These headers should be contained within a parent element\nwith the tsSort directive, which will emit a sortChange event when the user triggers sorting\non the header.\nUsers can trigger the sort header through a mouse click or keyboard action. When this happens, the\ntsSort will emit an sortChange event that contains the ID of the header triggered and the\ndirection to sort (asc or desc).\nChanging the sort order\nBy default, a sort header starts its sorting at asc and then desc. Triggering the sort header\nafter desc will remove sorting.\nTo reverse the sort order for all headers, set the tsSortStart to desc on the tsSort\ndirective. To reverse the order only for a specific header, set the start input only on the header\ninstead.\nTo prevent the user from clearing the sort sort state from an already sorted column, set\ntsSortDisableClear to true on the tsSort to affect all headers, or set disableClear to true on\na specific header.\nDisabling sorting\nIf you want to prevent the user from changing the sorting order of any column, you can use the\ntsSortDisabled binding on the ts-sort, or the disabled on an single ts-sort-header.\nUsing sort with the ts-table\nWhen used on an ts-table header, it is not required to set an ts-sort-header id on because by\ndefault it will use the id of the column.\nAccessibility\nThe aria-label for the sort button can be set in TsSortHeaderIntl.\n\n    \n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  isDevMode,\n  Output,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { Subject } from 'rxjs';\n\nimport {\n  getSortInvalidDirectionError,\n  getSortDuplicateSortableIdError,\n  getSortHeaderMissingIdError,\n} from './sort-errors';\n\n\n/**\n * Define the allowed sort directions for {@link TsSort}\n */\nexport type TsSortDirection\n  = 'asc'\n  | 'desc'\n  | ''\n;\n\n\n/**\n * Interface for a directive that holds sorting state consumed by `TsSortHeaderComponent`\n */\nexport interface TsSortableItem {\n  /**\n   * The id of the column being sorted\n   */\n  id: string;\n\n  /**\n   * Starting sort direction\n   */\n  start: 'asc' | 'desc';\n\n  /**\n   * Whether to disable clearing the sorting state\n   */\n  disableClear: boolean;\n}\n\n\n/**\n * The current sort state\n */\nexport interface TsSortState {\n  /**\n   * The id of the column being sorted\n   */\n  active: string;\n\n  /**\n   * The sort direction\n   */\n  direction: TsSortDirection;\n}\n\n\n// Boilerplate for applying mixins to TsSort.\nexport class TsSortBase {}\nexport const _TsSortMixinBase = mixinDisabled(TsSortBase);\n\n\n/**\n * Container for TsSortables to manage the sort state and provide default sort parameters\n */\n@Directive({\n  selector: '[tsSort]',\n  exportAs: 'tsSort',\n  inputs: ['disabled: tsSortDisabled'],\n})\nexport class TsSortDirective extends _TsSortMixinBase implements CanDisable, OnChanges, OnDestroy {\n  /**\n   * Collection of all registered sortables that this directive manages\n   */\n  private sortables = new Map();\n\n  /**\n   * Used to notify any child components listening to state changes\n   */\n  public _stateChanges = new Subject();\n\n  /**\n   * The id of the most recently sorted TsSortable\n   */\n  @Input('tsSortActive')\n  public active!: string;\n\n  /**\n   * The direction to set when an TsSortable is initially sorted.\n   *\n   * May be overriden by the TsSortable's sort start.\n   */\n  @Input('tsSortStart')\n  public start: 'asc' | 'desc' = 'asc';\n\n  /**\n   * The sort direction of the currently active TsSortable\n   */\n  @Input('tsSortDirection')\n  public set direction(direction: TsSortDirection) {\n    if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n      throw getSortInvalidDirectionError(direction);\n    }\n    this._direction = direction;\n  }\n  public get direction(): TsSortDirection {\n    return this._direction;\n  }\n  private _direction: TsSortDirection = '';\n\n  /**\n   * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n   *\n   * May be overriden by the TsSortable's disable clear input.\n   */\n  @Input('tsSortDisableClear')\n  public set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  public get disableClear() {\n    return this._disableClear;\n  }\n  private _disableClear: boolean = false;\n\n  /**\n   * Event emitted when the user changes either the active sort or sort direction\n   */\n  @Output('tsSortChange')\n  readonly sortChange = new EventEmitter();\n\n\n  /**\n   * Trigger next on all changes\n   */\n  public ngOnChanges(): void {\n    this._stateChanges.next();\n  }\n\n\n  /**\n   * Complete the observable on destroy\n   */\n  public ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n\n  /**\n   * Register function to be used by the contained TsSortables. Adds the TsSortable to the\n   * collection of TsSortables.\n   */\n  register(sortable: TsSortableItem): void {\n    if (!sortable.id && isDevMode()) {\n      throw getSortHeaderMissingIdError();\n    }\n\n    if (this.sortables.has(sortable.id) && isDevMode()) {\n      throw getSortDuplicateSortableIdError(sortable.id);\n    }\n\n    this.sortables.set(sortable.id, sortable);\n  }\n\n\n  /**\n   * Unregister function to be used by the contained TsSortables. Removes the TsSortable from the\n   * collection of contained TsSortables.\n   */\n  deregister(sortable: TsSortableItem): void {\n    this.sortables.delete(sortable.id);\n  }\n\n\n  /**\n   * Sets the active sort id and determines the new sort direction\n   */\n  sort(sortable: TsSortableItem): void {\n    if (this.active !== sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n\n    this.sortChange.next({active: this.active, direction: this.direction});\n  }\n\n\n  /**\n   * Returns the next sort direction of the active sortable, checking for potential overrides\n   */\n  getNextSortDirection(sortable: TsSortableItem): TsSortDirection {\n    if (!sortable) {\n      return '';\n    }\n\n    // Get the sort direction cycle with the potential sortable overrides.\n    const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n    const sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n\n    // Get and return the next direction in the cycle\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) {\n      nextDirectionIndex = 0;\n    }\n\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n\n}\n\n\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear\n */\nfunction getSortDirectionCycle(start: 'asc' | 'desc', disableClear: boolean): TsSortDirection[] {\n  const sortOrder: TsSortDirection[] = ['asc', 'desc'];\n\n  if (start === 'desc') {\n    sortOrder.reverse();\n  }\n\n  if (!disableClear) {\n    sortOrder.push('');\n  }\n\n  return sortOrder;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsSortHeaderBase.html":{"url":"classes/TsSortHeaderBase.html","title":"class - TsSortHeaderBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsSortHeaderBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort-header.component.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  isDevMode,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { untilComponentDestroyed } from '@terminus/ngx-tools';\nimport { CdkColumnDef } from '@angular/cdk/table';\nimport {\n  merge,\n} from 'rxjs';\n\nimport { TsSortDirective } from './sort.directive';\nimport { TsSortableItem } from './sort.directive';\nimport { TsSortHeaderIntl } from './sort-header-intl';\nimport { getSortHeaderNotContainedWithinSortError } from './sort-errors';\nimport { tsSortAnimations } from './sort-animations';\n\n\n// Boilerplate for applying mixins to the sort header.\nexport class TsSortHeaderBase {}\nexport const _TsSortHeaderMixinBase = mixinDisabled(TsSortHeaderBase);\n\n\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent TsSortDirective.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\n@Component({\n  // NOTE(B$): This component needs to be added to another component so we need a non-element\n  // selector\n  // tslint:disable: component-selector\n  selector: '[ts-sort-header]',\n  // tslint:enable: component-selector\n  exportAs: 'tsSortHeader',\n  templateUrl: './sort-header.component.html',\n  styleUrls: ['./sort-header.component.scss'],\n  host: {\n    class: 'ts-sortable',\n    '[class.ts-sort-header-sorted]': '_isSorted()',\n    '[class.ts-sort-header-disabled]': '_isDisabled()',\n    '(click)': '_handleClick()',\n  },\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  animations: [\n    tsSortAnimations.indicator,\n    tsSortAnimations.leftPointer,\n    tsSortAnimations.rightPointer,\n    tsSortAnimations.indicatorToggle,\n  ],\n})\nexport class TsSortHeaderComponent extends _TsSortHeaderMixinBase implements TsSortableItem, CanDisable, OnInit, OnDestroy  {\n  /**\n   * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n   * the column's name.\n   */\n  // NOTE(B$): Renaming input so that we can pull a value from the primary directive\n  // tslint:disable: no-input-rename\n  @Input('ts-sort-header')\n  id!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Sets the position of the arrow that displays when sorted\n   */\n  @Input()\n  arrowPosition: 'before' | 'after' = 'after';\n\n  /**\n   * Overrides the sort start value of the containing TsSort for this TsSortable\n   */\n  @Input()\n  start!: 'asc' | 'desc';\n\n  /**\n   * Overrides the disable clear value of the containing TsSort for this TsSortable\n   */\n  @Input()\n  get disableClear(): boolean {\n    return this._disableClear;\n  }\n  set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  private _disableClear!: boolean;\n\n\n  /**\n   * Check for _sort and set up auto-change-detection\n   */\n  constructor(\n    public _intl: TsSortHeaderIntl,\n    changeDetectorRef: ChangeDetectorRef,\n    @Optional() public _sort: TsSortDirective,\n    @Optional() public _cdkColumnDef: CdkColumnDef,\n  ) {\n    super();\n\n    if (!_sort && isDevMode()) {\n      throw getSortHeaderNotContainedWithinSortError();\n    }\n\n    // Mark directive for change detection after any of these changes\n    merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n      .pipe(\n        untilComponentDestroyed(this),\n      )\n      .subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n\n  /**\n   * Default to cdk column name\n   */\n  public ngOnInit(): void {\n    if (!this.id && this._cdkColumnDef) {\n      this.id = this._cdkColumnDef.name;\n    }\n\n    this._sort.register(this);\n  }\n\n\n  /**\n   * Deregister sort and unsubscribe from observables\n   */\n  public ngOnDestroy(): void {\n    this._sort.deregister(this);\n  }\n\n\n  /**\n   * Handles click events on the header\n   */\n  public _handleClick() {\n    if (!this._isDisabled()) {\n      this._sort.sort(this);\n    }\n  }\n\n\n  /**\n   * Whether this TsSortHeader is currently sorted in either ascending or descending order\n   */\n  public _isSorted() {\n    return this._sort.active == this.id &&\n        (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n  }\n\n\n  /**\n   * Whether this TsSortHeader is disabled\n   */\n  public _isDisabled() {\n    return this._sort.disabled || this.disabled;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsSortHeaderComponent.html":{"url":"components/TsSortHeaderComponent.html","title":"component - TsSortHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsSortHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/sort/sort-header.component.ts\n\n\n    \n        Description\n    \n    \n        Applies sorting behavior (click to change sort) and styles to an element, including an\narrow to display the current sort direction.\nMust be provided with an id and contained within a parent TsSortDirective.\nIf used on header cells in a CdkTable, it will automatically default its id from its containing\ncolumn definition.\n\n    \n\n    \n        Extends\n    \n    \n            _TsSortHeaderMixinBase\n    \n\n    \n        Implements\n    \n    \n                TsSortableItem\n                CanDisable\n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsSortHeader\n            \n\n            \n                host\n                {}\n            \n\n\n\n            \n                preserveWhitespaces\n                false\n            \n\n\n\n            \n                selector\n                [ts-sort-header]\n            \n\n            \n                styleUrls\n                sort-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sort-header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _cdkColumnDef\n                            \n                            \n                                    Private\n                                _disableClear\n                            \n                            \n                                    Public\n                                _intl\n                            \n                            \n                                    Public\n                                _sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _handleClick\n                            \n                            \n                                    Public\n                                _isDisabled\n                            \n                            \n                                    Public\n                                _isSorted\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                arrowPosition\n                            \n                            \n                                disableClear\n                            \n                            \n                                start\n                            \n                            \n                                ts-sort-header\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_intl: TsSortHeaderIntl, changeDetectorRef: ChangeDetectorRef, _sort: TsSortDirective, _cdkColumnDef: CdkColumnDef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/sort/sort-header.component.ts:101\n                            \n                        \n\n                \n                    \n                            Check for _sort and set up auto-change-detection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _intl\n                                                  \n                                                        \n                                                                    TsSortHeaderIntl\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _sort\n                                                  \n                                                        \n                                                                    TsSortDirective\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _cdkColumnDef\n                                                  \n                                                        \n                                                                    CdkColumnDef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        arrowPosition\n                    \n                    \n                        Sets the position of the arrow that displays when sorted\n\n                            \n                            Type:    \"before\" | \"after\"\n\n                            \n                        \n                            Default value: 'after'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:83\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableClear\n                    \n                    \n                        Overrides the disable clear value of the containing TsSort for this TsSortable\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:95\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        start\n                    \n                    \n                        Overrides the sort start value of the containing TsSort for this TsSortable\n\n                            \n                            Type:    \"asc\" | \"desc\"\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:89\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ts-sort-header\n                    \n                    \n                        ID of this sort header. If used within the context of a CdkColumnDef, this will default to\nthe column's name.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:76\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _handleClick\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _handleClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:151\n                            \n                        \n\n\n                \n                    \n                            Handles click events on the header\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _isDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:170\n                            \n                        \n\n\n                \n                    \n                            Whether this TsSortHeader is disabled\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _isSorted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _isSorted()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:161\n                            \n                        \n\n\n                \n                    \n                            Whether this TsSortHeader is currently sorted in either ascending or descending order\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:143\n                            \n                        \n\n\n                \n                    \n                            Deregister sort and unsubscribe from observables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            Default to cdk column name\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _cdkColumnDef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _cdkColumnDef:     CdkColumnDef\n\n                    \n                \n                    \n                        \n                            Type :     CdkColumnDef\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:111\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disableClear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _disableClear:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _intl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _intl:     TsSortHeaderIntl\n\n                    \n                \n                    \n                        \n                            Type :     TsSortHeaderIntl\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _sort:     TsSortDirective\n\n                    \n                \n                    \n                        \n                            Type :     TsSortDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:110\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        disableClear\n                    \n                \n\n\n                \n                    \n                        setdisableClear(v: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/sort/sort-header.component.ts:98\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  isDevMode,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { untilComponentDestroyed } from '@terminus/ngx-tools';\nimport { CdkColumnDef } from '@angular/cdk/table';\nimport {\n  merge,\n} from 'rxjs';\n\nimport { TsSortDirective } from './sort.directive';\nimport { TsSortableItem } from './sort.directive';\nimport { TsSortHeaderIntl } from './sort-header-intl';\nimport { getSortHeaderNotContainedWithinSortError } from './sort-errors';\nimport { tsSortAnimations } from './sort-animations';\n\n\n// Boilerplate for applying mixins to the sort header.\nexport class TsSortHeaderBase {}\nexport const _TsSortHeaderMixinBase = mixinDisabled(TsSortHeaderBase);\n\n\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent TsSortDirective.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\n@Component({\n  // NOTE(B$): This component needs to be added to another component so we need a non-element\n  // selector\n  // tslint:disable: component-selector\n  selector: '[ts-sort-header]',\n  // tslint:enable: component-selector\n  exportAs: 'tsSortHeader',\n  templateUrl: './sort-header.component.html',\n  styleUrls: ['./sort-header.component.scss'],\n  host: {\n    class: 'ts-sortable',\n    '[class.ts-sort-header-sorted]': '_isSorted()',\n    '[class.ts-sort-header-disabled]': '_isDisabled()',\n    '(click)': '_handleClick()',\n  },\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  animations: [\n    tsSortAnimations.indicator,\n    tsSortAnimations.leftPointer,\n    tsSortAnimations.rightPointer,\n    tsSortAnimations.indicatorToggle,\n  ],\n})\nexport class TsSortHeaderComponent extends _TsSortHeaderMixinBase implements TsSortableItem, CanDisable, OnInit, OnDestroy  {\n  /**\n   * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n   * the column's name.\n   */\n  // NOTE(B$): Renaming input so that we can pull a value from the primary directive\n  // tslint:disable: no-input-rename\n  @Input('ts-sort-header')\n  id!: string;\n  // tslint:enable: no-input-rename\n\n  /**\n   * Sets the position of the arrow that displays when sorted\n   */\n  @Input()\n  arrowPosition: 'before' | 'after' = 'after';\n\n  /**\n   * Overrides the sort start value of the containing TsSort for this TsSortable\n   */\n  @Input()\n  start!: 'asc' | 'desc';\n\n  /**\n   * Overrides the disable clear value of the containing TsSort for this TsSortable\n   */\n  @Input()\n  get disableClear(): boolean {\n    return this._disableClear;\n  }\n  set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  private _disableClear!: boolean;\n\n\n  /**\n   * Check for _sort and set up auto-change-detection\n   */\n  constructor(\n    public _intl: TsSortHeaderIntl,\n    changeDetectorRef: ChangeDetectorRef,\n    @Optional() public _sort: TsSortDirective,\n    @Optional() public _cdkColumnDef: CdkColumnDef,\n  ) {\n    super();\n\n    if (!_sort && isDevMode()) {\n      throw getSortHeaderNotContainedWithinSortError();\n    }\n\n    // Mark directive for change detection after any of these changes\n    merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n      .pipe(\n        untilComponentDestroyed(this),\n      )\n      .subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n\n  /**\n   * Default to cdk column name\n   */\n  public ngOnInit(): void {\n    if (!this.id && this._cdkColumnDef) {\n      this.id = this._cdkColumnDef.name;\n    }\n\n    this._sort.register(this);\n  }\n\n\n  /**\n   * Deregister sort and unsubscribe from observables\n   */\n  public ngOnDestroy(): void {\n    this._sort.deregister(this);\n  }\n\n\n  /**\n   * Handles click events on the header\n   */\n  public _handleClick() {\n    if (!this._isDisabled()) {\n      this._sort.sort(this);\n    }\n  }\n\n\n  /**\n   * Whether this TsSortHeader is currently sorted in either ascending or descending order\n   */\n  public _isSorted() {\n    return this._sort.active == this.id &&\n        (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n  }\n\n\n  /**\n   * Whether this TsSortHeader is disabled\n   */\n  public _isDisabled() {\n    return this._sort.disabled || this.disabled;\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n      \n\n      \n        \n        \n        \n      \n    \n  \n\n\n\n  &nbsp;{{ _intl.sortDescriptionLabel(id, _sort.direction) }}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                             {{ _intl.sortDescriptionLabel(id, _sort.direction) }}'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsSortHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TsSortHeaderIntl.html":{"url":"injectables/TsSortHeaderIntl.html","title":"injectable - TsSortHeaderIntl","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TsSortHeaderIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort-header-intl.ts\n        \n\n            \n                Description\n            \n            \n                To modify the labels and text displayed, create a new instance of TsSortHeaderIntl and\ninclude it in a custom provider.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changes\n                            \n                            \n                                sortButtonLabel\n                            \n                            \n                                sortDescriptionLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changes:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header-intl.ts:21\n                            \n                        \n\n                \n                    \n                        Stream that emits whenever the labels here are changed. Use this to notify\ncomponents if the labels have changed after initialization.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortButtonLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortButtonLabel:     \n\n                    \n                \n                    \n                        \n                            Default value : (id: string) => {\n    return `Change sorting for ${id}`;\n  }\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header-intl.ts:26\n                            \n                        \n\n                \n                    \n                        ARIA label for the sorting button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortDescriptionLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortDescriptionLabel:     \n\n                    \n                \n                    \n                        \n                            Default value : (id: string, direction: TsSortDirection) => {\n    return `Sorted by ${id} ${direction === 'asc' ? 'ascending' : 'descending'}`;\n  }\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/sort/sort-header-intl.ts:33\n                            \n                        \n\n                \n                    \n                        A label to describe the current sort (visible only to screenreaders)\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { TsSortDirection } from './sort.directive';\n\n\n/**\n * To modify the labels and text displayed, create a new instance of TsSortHeaderIntl and\n * include it in a custom provider.\n */\n@Injectable()\nexport class TsSortHeaderIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  changes: Subject = new Subject();\n\n  /**\n   * ARIA label for the sorting button\n   */\n  sortButtonLabel = (id: string) => {\n    return `Change sorting for ${id}`;\n  }\n\n  /**\n   * A label to describe the current sort (visible only to screenreaders)\n   */\n  sortDescriptionLabel = (id: string, direction: TsSortDirection) => {\n    return `Sorted by ${id} ${direction === 'asc' ? 'ascending' : 'descending'}`;\n  }\n}\n\n\n/**\n * Factory to return an instance of TsSortHeaderIntl\n */\nexport function TS_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl: TsSortHeaderIntl) {\n  return parentIntl || new TsSortHeaderIntl();\n}\n\n\n/**\n * TsSortHeaderIntl provider declaration\n */\nexport const TS_SORT_HEADER_INTL_PROVIDER = {\n  // If there is already an TsSortHeaderIntl available, use that. Otherwise, provide a new one.\n  provide: TsSortHeaderIntl,\n  deps: [[new Optional(), new SkipSelf(), TsSortHeaderIntl]],\n  useFactory: TS_SORT_HEADER_INTL_PROVIDER_FACTORY,\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsSortModule.html":{"url":"modules/TsSortModule.html","title":"module - TsSortModule","body":"\n                   \n\n\n\n\n  Modules\n  TsSortModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsSortModule\n\n\n\ncluster_TsSortModule_declarations\n\n\n\ncluster_TsSortModule_exports\n\n\n\n\nTsSortDirective\n\nTsSortDirective\n\n\n\nTsSortModule\n\nTsSortModule\n\nTsSortModule -->\n\nTsSortDirective->TsSortModule\n\n\n\n\n\nTsSortHeaderComponent\n\nTsSortHeaderComponent\n\nTsSortModule -->\n\nTsSortHeaderComponent->TsSortModule\n\n\n\n\n\nTsSortDirective \n\nTsSortDirective \n\nTsSortDirective  -->\n\nTsSortModule->TsSortDirective \n\n\n\n\n\nTsSortHeaderComponent \n\nTsSortHeaderComponent \n\nTsSortHeaderComponent  -->\n\nTsSortModule->TsSortHeaderComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/sort/sort.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Much of this was lifted directly from Angular Material. I highly recommend checking out their\nsource code: https://github.com/angular/material2/tree/master/src/lib/sort\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsSortDirective\n                            \n                            \n                                TsSortHeaderComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsSortDirective\n                            \n                            \n                                    TsSortHeaderComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsSortHeaderComponent } from './sort-header.component';\nimport { TS_SORT_HEADER_INTL_PROVIDER } from './sort-header-intl';\nimport { TsSortDirective } from './sort.directive';\n\nexport * from './sort-animations';\nexport * from './sort-header-intl';\nexport * from './sort-header.component';\nexport * from './sort.directive';\n\n\n/**\n * Much of this was lifted directly from Angular Material. I highly recommend checking out their\n * source code: https://github.com/angular/material2/tree/master/src/lib/sort\n */\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    TS_SORT_HEADER_INTL_PROVIDER,\n  ],\n  declarations: [\n    TsSortDirective,\n    TsSortHeaderComponent,\n  ],\n  exports: [\n    TsSortDirective,\n    TsSortHeaderComponent,\n  ],\n})\nexport class TsSortModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsSortState.html":{"url":"interfaces/TsSortState.html","title":"interface - TsSortState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsSortState\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort.directive.ts\n        \n\n            \n                Description\n            \n            \n                The current sort state\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        direction\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the column being sorted\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                    \n                                \n                                \n                                    \n                                        direction:     TsSortDirection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TsSortDirection\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The sort direction\n\n                                \n                            \n                        \n                    \n            \n    \n\n    \n        \n\nTable of Contents\n\nAdding sort to table headers\nChanging the sort order\nDisabling sorting\nUsing sort with the ts-table\nAccessibility\n\n\nAdding sort to table headers\nTo add sorting behavior and styling to a set of table headers, add ts-sort-header to each header\nand provide an id that will identify it. These headers should be contained within a parent element\nwith the tsSort directive, which will emit a sortChange event when the user triggers sorting\non the header.\nUsers can trigger the sort header through a mouse click or keyboard action. When this happens, the\ntsSort will emit an sortChange event that contains the ID of the header triggered and the\ndirection to sort (asc or desc).\nChanging the sort order\nBy default, a sort header starts its sorting at asc and then desc. Triggering the sort header\nafter desc will remove sorting.\nTo reverse the sort order for all headers, set the tsSortStart to desc on the tsSort\ndirective. To reverse the order only for a specific header, set the start input only on the header\ninstead.\nTo prevent the user from clearing the sort sort state from an already sorted column, set\ntsSortDisableClear to true on the tsSort to affect all headers, or set disableClear to true on\na specific header.\nDisabling sorting\nIf you want to prevent the user from changing the sorting order of any column, you can use the\ntsSortDisabled binding on the ts-sort, or the disabled on an single ts-sort-header.\nUsing sort with the ts-table\nWhen used on an ts-table header, it is not required to set an ts-sort-header id on because by\ndefault it will use the id of the column.\nAccessibility\nThe aria-label for the sort button can be set in TsSortHeaderIntl.\n\n    \n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  isDevMode,\n  Output,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { Subject } from 'rxjs';\n\nimport {\n  getSortInvalidDirectionError,\n  getSortDuplicateSortableIdError,\n  getSortHeaderMissingIdError,\n} from './sort-errors';\n\n\n/**\n * Define the allowed sort directions for {@link TsSort}\n */\nexport type TsSortDirection\n  = 'asc'\n  | 'desc'\n  | ''\n;\n\n\n/**\n * Interface for a directive that holds sorting state consumed by `TsSortHeaderComponent`\n */\nexport interface TsSortableItem {\n  /**\n   * The id of the column being sorted\n   */\n  id: string;\n\n  /**\n   * Starting sort direction\n   */\n  start: 'asc' | 'desc';\n\n  /**\n   * Whether to disable clearing the sorting state\n   */\n  disableClear: boolean;\n}\n\n\n/**\n * The current sort state\n */\nexport interface TsSortState {\n  /**\n   * The id of the column being sorted\n   */\n  active: string;\n\n  /**\n   * The sort direction\n   */\n  direction: TsSortDirection;\n}\n\n\n// Boilerplate for applying mixins to TsSort.\nexport class TsSortBase {}\nexport const _TsSortMixinBase = mixinDisabled(TsSortBase);\n\n\n/**\n * Container for TsSortables to manage the sort state and provide default sort parameters\n */\n@Directive({\n  selector: '[tsSort]',\n  exportAs: 'tsSort',\n  inputs: ['disabled: tsSortDisabled'],\n})\nexport class TsSortDirective extends _TsSortMixinBase implements CanDisable, OnChanges, OnDestroy {\n  /**\n   * Collection of all registered sortables that this directive manages\n   */\n  private sortables = new Map();\n\n  /**\n   * Used to notify any child components listening to state changes\n   */\n  public _stateChanges = new Subject();\n\n  /**\n   * The id of the most recently sorted TsSortable\n   */\n  @Input('tsSortActive')\n  public active!: string;\n\n  /**\n   * The direction to set when an TsSortable is initially sorted.\n   *\n   * May be overriden by the TsSortable's sort start.\n   */\n  @Input('tsSortStart')\n  public start: 'asc' | 'desc' = 'asc';\n\n  /**\n   * The sort direction of the currently active TsSortable\n   */\n  @Input('tsSortDirection')\n  public set direction(direction: TsSortDirection) {\n    if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n      throw getSortInvalidDirectionError(direction);\n    }\n    this._direction = direction;\n  }\n  public get direction(): TsSortDirection {\n    return this._direction;\n  }\n  private _direction: TsSortDirection = '';\n\n  /**\n   * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n   *\n   * May be overriden by the TsSortable's disable clear input.\n   */\n  @Input('tsSortDisableClear')\n  public set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  public get disableClear() {\n    return this._disableClear;\n  }\n  private _disableClear: boolean = false;\n\n  /**\n   * Event emitted when the user changes either the active sort or sort direction\n   */\n  @Output('tsSortChange')\n  readonly sortChange = new EventEmitter();\n\n\n  /**\n   * Trigger next on all changes\n   */\n  public ngOnChanges(): void {\n    this._stateChanges.next();\n  }\n\n\n  /**\n   * Complete the observable on destroy\n   */\n  public ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n\n  /**\n   * Register function to be used by the contained TsSortables. Adds the TsSortable to the\n   * collection of TsSortables.\n   */\n  register(sortable: TsSortableItem): void {\n    if (!sortable.id && isDevMode()) {\n      throw getSortHeaderMissingIdError();\n    }\n\n    if (this.sortables.has(sortable.id) && isDevMode()) {\n      throw getSortDuplicateSortableIdError(sortable.id);\n    }\n\n    this.sortables.set(sortable.id, sortable);\n  }\n\n\n  /**\n   * Unregister function to be used by the contained TsSortables. Removes the TsSortable from the\n   * collection of contained TsSortables.\n   */\n  deregister(sortable: TsSortableItem): void {\n    this.sortables.delete(sortable.id);\n  }\n\n\n  /**\n   * Sets the active sort id and determines the new sort direction\n   */\n  sort(sortable: TsSortableItem): void {\n    if (this.active !== sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n\n    this.sortChange.next({active: this.active, direction: this.direction});\n  }\n\n\n  /**\n   * Returns the next sort direction of the active sortable, checking for potential overrides\n   */\n  getNextSortDirection(sortable: TsSortableItem): TsSortDirection {\n    if (!sortable) {\n      return '';\n    }\n\n    // Get the sort direction cycle with the potential sortable overrides.\n    const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n    const sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n\n    // Get and return the next direction in the cycle\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) {\n      nextDirectionIndex = 0;\n    }\n\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n\n}\n\n\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear\n */\nfunction getSortDirectionCycle(start: 'asc' | 'desc', disableClear: boolean): TsSortDirection[] {\n  const sortOrder: TsSortDirection[] = ['asc', 'desc'];\n\n  if (start === 'desc') {\n    sortOrder.reverse();\n  }\n\n  if (!disableClear) {\n    sortOrder.push('');\n  }\n\n  return sortOrder;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsSortableItem.html":{"url":"interfaces/TsSortableItem.html","title":"interface - TsSortableItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsSortableItem\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/sort/sort.directive.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a directive that holds sorting state consumed by TsSortHeaderComponent\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        disableClear\n                                \n                                \n                                        id\n                                \n                                \n                                        start\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disableClear\n                                    \n                                \n                                \n                                    \n                                        disableClear:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to disable clearing the sorting state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the column being sorted\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                    \n                                \n                                \n                                    \n                                        start:     \"asc\" | \"desc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"asc\" | \"desc\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Starting sort direction\n\n                                \n                            \n                        \n                    \n            \n    \n\n    \n        \n\nTable of Contents\n\nAdding sort to table headers\nChanging the sort order\nDisabling sorting\nUsing sort with the ts-table\nAccessibility\n\n\nAdding sort to table headers\nTo add sorting behavior and styling to a set of table headers, add ts-sort-header to each header\nand provide an id that will identify it. These headers should be contained within a parent element\nwith the tsSort directive, which will emit a sortChange event when the user triggers sorting\non the header.\nUsers can trigger the sort header through a mouse click or keyboard action. When this happens, the\ntsSort will emit an sortChange event that contains the ID of the header triggered and the\ndirection to sort (asc or desc).\nChanging the sort order\nBy default, a sort header starts its sorting at asc and then desc. Triggering the sort header\nafter desc will remove sorting.\nTo reverse the sort order for all headers, set the tsSortStart to desc on the tsSort\ndirective. To reverse the order only for a specific header, set the start input only on the header\ninstead.\nTo prevent the user from clearing the sort sort state from an already sorted column, set\ntsSortDisableClear to true on the tsSort to affect all headers, or set disableClear to true on\na specific header.\nDisabling sorting\nIf you want to prevent the user from changing the sorting order of any column, you can use the\ntsSortDisabled binding on the ts-sort, or the disabled on an single ts-sort-header.\nUsing sort with the ts-table\nWhen used on an ts-table header, it is not required to set an ts-sort-header id on because by\ndefault it will use the id of the column.\nAccessibility\nThe aria-label for the sort button can be set in TsSortHeaderIntl.\n\n    \n\n    \n        import {\n  Directive,\n  EventEmitter,\n  Input,\n  isDevMode,\n  Output,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { CanDisable, mixinDisabled } from '@angular/material/core';\nimport { Subject } from 'rxjs';\n\nimport {\n  getSortInvalidDirectionError,\n  getSortDuplicateSortableIdError,\n  getSortHeaderMissingIdError,\n} from './sort-errors';\n\n\n/**\n * Define the allowed sort directions for {@link TsSort}\n */\nexport type TsSortDirection\n  = 'asc'\n  | 'desc'\n  | ''\n;\n\n\n/**\n * Interface for a directive that holds sorting state consumed by `TsSortHeaderComponent`\n */\nexport interface TsSortableItem {\n  /**\n   * The id of the column being sorted\n   */\n  id: string;\n\n  /**\n   * Starting sort direction\n   */\n  start: 'asc' | 'desc';\n\n  /**\n   * Whether to disable clearing the sorting state\n   */\n  disableClear: boolean;\n}\n\n\n/**\n * The current sort state\n */\nexport interface TsSortState {\n  /**\n   * The id of the column being sorted\n   */\n  active: string;\n\n  /**\n   * The sort direction\n   */\n  direction: TsSortDirection;\n}\n\n\n// Boilerplate for applying mixins to TsSort.\nexport class TsSortBase {}\nexport const _TsSortMixinBase = mixinDisabled(TsSortBase);\n\n\n/**\n * Container for TsSortables to manage the sort state and provide default sort parameters\n */\n@Directive({\n  selector: '[tsSort]',\n  exportAs: 'tsSort',\n  inputs: ['disabled: tsSortDisabled'],\n})\nexport class TsSortDirective extends _TsSortMixinBase implements CanDisable, OnChanges, OnDestroy {\n  /**\n   * Collection of all registered sortables that this directive manages\n   */\n  private sortables = new Map();\n\n  /**\n   * Used to notify any child components listening to state changes\n   */\n  public _stateChanges = new Subject();\n\n  /**\n   * The id of the most recently sorted TsSortable\n   */\n  @Input('tsSortActive')\n  public active!: string;\n\n  /**\n   * The direction to set when an TsSortable is initially sorted.\n   *\n   * May be overriden by the TsSortable's sort start.\n   */\n  @Input('tsSortStart')\n  public start: 'asc' | 'desc' = 'asc';\n\n  /**\n   * The sort direction of the currently active TsSortable\n   */\n  @Input('tsSortDirection')\n  public set direction(direction: TsSortDirection) {\n    if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n      throw getSortInvalidDirectionError(direction);\n    }\n    this._direction = direction;\n  }\n  public get direction(): TsSortDirection {\n    return this._direction;\n  }\n  private _direction: TsSortDirection = '';\n\n  /**\n   * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n   *\n   * May be overriden by the TsSortable's disable clear input.\n   */\n  @Input('tsSortDisableClear')\n  public set disableClear(v: boolean) {\n    this._disableClear = coerceBooleanProperty(v);\n  }\n  public get disableClear() {\n    return this._disableClear;\n  }\n  private _disableClear: boolean = false;\n\n  /**\n   * Event emitted when the user changes either the active sort or sort direction\n   */\n  @Output('tsSortChange')\n  readonly sortChange = new EventEmitter();\n\n\n  /**\n   * Trigger next on all changes\n   */\n  public ngOnChanges(): void {\n    this._stateChanges.next();\n  }\n\n\n  /**\n   * Complete the observable on destroy\n   */\n  public ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n\n  /**\n   * Register function to be used by the contained TsSortables. Adds the TsSortable to the\n   * collection of TsSortables.\n   */\n  register(sortable: TsSortableItem): void {\n    if (!sortable.id && isDevMode()) {\n      throw getSortHeaderMissingIdError();\n    }\n\n    if (this.sortables.has(sortable.id) && isDevMode()) {\n      throw getSortDuplicateSortableIdError(sortable.id);\n    }\n\n    this.sortables.set(sortable.id, sortable);\n  }\n\n\n  /**\n   * Unregister function to be used by the contained TsSortables. Removes the TsSortable from the\n   * collection of contained TsSortables.\n   */\n  deregister(sortable: TsSortableItem): void {\n    this.sortables.delete(sortable.id);\n  }\n\n\n  /**\n   * Sets the active sort id and determines the new sort direction\n   */\n  sort(sortable: TsSortableItem): void {\n    if (this.active !== sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n\n    this.sortChange.next({active: this.active, direction: this.direction});\n  }\n\n\n  /**\n   * Returns the next sort direction of the active sortable, checking for potential overrides\n   */\n  getNextSortDirection(sortable: TsSortableItem): TsSortDirection {\n    if (!sortable) {\n      return '';\n    }\n\n    // Get the sort direction cycle with the potential sortable overrides.\n    const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n    const sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n\n    // Get and return the next direction in the cycle\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) {\n      nextDirectionIndex = 0;\n    }\n\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n\n}\n\n\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear\n */\nfunction getSortDirectionCycle(start: 'asc' | 'desc', disableClear: boolean): TsSortDirection[] {\n  const sortOrder: TsSortDirection[] = ['asc', 'desc'];\n\n  if (start === 'desc') {\n    sortOrder.reverse();\n  }\n\n  if (!disableClear) {\n    sortOrder.push('');\n  }\n\n  return sortOrder;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsSpacingModule.html":{"url":"modules/TsSpacingModule.html","title":"module - TsSpacingModule","body":"\n                   \n\n\n\n\n  Modules\n  TsSpacingModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsSpacingModule\n\n\n\ncluster_TsSpacingModule_declarations\n\n\n\ncluster_TsSpacingModule_exports\n\n\n\n\nTsVerticalSpacingDirective\n\nTsVerticalSpacingDirective\n\n\n\nTsSpacingModule\n\nTsSpacingModule\n\nTsSpacingModule -->\n\nTsVerticalSpacingDirective->TsSpacingModule\n\n\n\n\n\nTsVerticalSpacingDirective \n\nTsVerticalSpacingDirective \n\nTsVerticalSpacingDirective  -->\n\nTsSpacingModule->TsVerticalSpacingDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/spacing/spacing.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsVerticalSpacingDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsVerticalSpacingDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TsVerticalSpacingDirective } from './vertical-spacing.directive';\n\nexport * from './vertical-spacing.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TsVerticalSpacingDirective,\n  ],\n  exports: [\n    TsVerticalSpacingDirective,\n  ],\n})\nexport class TsSpacingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsTableComponent.html":{"url":"components/TsTableComponent.html","title":"component - TsTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsTableComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/table/table.component.ts\n\n\n    \n        Description\n    \n    \n        Wrapper for the CdkTable with Material design styles.\n\n    \n\n    \n        Extends\n    \n    \n            CdkTable\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsTable\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-table\n            \n\n            \n                styleUrls\n                table.component.scss\n            \n\n\n            \n                template\n                \n  \n    \n    \n    \n  \n\n\n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        \n\nTable of Contents\n\nBasic usage\n1. Define the table's columns\n2. Define the table's rows\n3. Provide data\n4. Full HTML example\n\n\nDynamically update table data\nDynamic columns\nSorting by column\nRow selection\nNo-wrap for a column\nMin-width for a column\nFull example with pagination, sorting and dynamic columns\n\n\nBasic usage\n1. Define the table's columns\nDefine the table's columns. Each column definition should be given a unique name and contain the\ncontent for its header and row cells.\nHere's a simple column definition with the name userName. The header cell contains the text Username\nand the row cell will render the name property of each row's data.\n\n  \n    Username\n  \n\n  \n    {{ item.username }}\n  \n2. Define the table's rows\nAfter defining your columns, provide the header and data row templates that will be rendered out by\nthe table. Each row needs to be given a list of the columns that it should contain. The order of the\nnames will define the order of the cells rendered.\nIt is not required to provide a list of all the defined column names, but only the ones that you\nwant to have rendered.\n\n\n\n\n\n3. Provide data\nThe column and row definitions now capture how data will render - all that's left is to provide the\ndata itself.\nCreate an instance of TsTableDataSource and set the items to be displayed to the data property.\nthis.myDataSource = new TsTableDataSource();\nthis.myDataSource.data = dataToRender;\n  ...\nThe DataSource can be seeded with initial data:\nthis.myDataSource = new TsTableDataSource(INITIAL_DATA);An interface for your table item can be passed to TsTableDataSource for stricter typing:\nexport interface MyTableItem {\n  name: string;\n  id: number;\n}\n\nthis.myDataSource: TsTableDataSource = new TsTableDataSource(INITIAL_DATA)4. Full HTML example\n\n\n\n  \n  \n    \n      Username\n    \n\n    \n      {{ item.username }}\n    \n  \n\n  \n  \n    \n      Age\n    \n\n    \n      {{ item.age }}\n    \n  \n\n  \n  \n  \n\n  \n  \n  \n\nDynamically update table data\nYour data source was created during the bootstraping of your component:\nthis.myDataSource = new TsTableDataSource();Simply assign the new data to myDataSource.data. The table will flush the old data and display the\nnew data:\nthis.myDataSource.data = dataToRender;Dynamic columns\nEnable dynamic columns using a TsSelectComponent:\n// Define a data source\nthis.myDataSource = new TsTableDataSource();\n\n// Define all available columns (`TsSelectComponent` requires an array of objects)\nallColumns = [\n  {\n    name: 'Username',\n    myValue: 'username',\n  },\n  {\n    name: 'Age',\n    myValue: 'age',\n  },\n];Both the TsSelectComponent and the tsRowDef columns input should reference the same ngModel\n(displayedColumns in this example).\n\n\n\n  \n\n  \n  \n  \n\n  \n  \n  \n\nSorting by column\nTo add sorting behavior to the table, add the tsSort directive to the  and add\nts-sort-header to each column header cell that should trigger sorting. Provide the\nTsSortDirective directive to the TsTableDataSource and it will automatically listen for sorting\nchanges and change the order of data rendered by the table.\nBy default, the TsTableDataSource sorts with the assumption that the sorted column's name matches\nthe data property name that the column displays. For example, the following column definition is\nnamed position, which matches the name of the property displayed in the row cell.\n\n\n\n  \n  \n    \n    \n      Position\n    \n\n    \n      \n      {{ element.position }}\n    \n  \n\nIn your class, get a reference to the TsSortDirective using @ViewChild:\nimport { AfterViewInit } from '@angular/core';\nimport { TsSortDirective } from '@terminus/ui';\n\nexport class TableComponent implements AfterViewInit {\n  // Get a reference to the TsSortDirective instance\n  @ViewChild(TsSortDirective) sort: TsSortDirective;\n\n  public ngAfterViewInit(): void {\n    // Subscribe to the sortChange event to reset pagination, fetch new data, etc\n    this.sort.sortChange.subscribe(() => {\n      // Table was sorted - go get new data!\n    });\n  }\n}Row selection\nPossible but not implemented until a valid use-case arises.\nNo-wrap for a column\nSometimes a column's content should not wrap even at small viewport sizes. Adding the directive\nnoWrap=\"true\" to the column will keep then contents from wrapping regardless of the viewport\nwidth.\n\n\n  \n    Created\n  \n  \n    {{ item.created_at | date:shortDate }}\n  \nMin-width for a column\nDefining a minimum width for specific columns can help the layout not compress certain columns past\na readable point. Add the directive minWidth and pass it any valid CSS min-width value (100px,\n10%, 12rem, etc..).\n\n\n  \n    Created\n  \n  \n    {{ item.created_at | date:shortDate }}\n  \n\nFull example with pagination, sorting and dynamic columns\nimport {\n  Component,\n  ViewChild,\n  AfterViewInit,\n} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { merge, Observable, of } from 'rxjs';\nimport { startWith } from 'rxjs/operators/startWith';\nimport { map } from 'rxjs/operators/map';\nimport { switchMap } from 'rxjs/operators/switchMap';\nimport { catchError } from 'rxjs/operators/catchError';\n\nimport {\n  TsTableDataSource,\n  TsSortDirective,\n  TsPaginatorComponent,\n  TsPaginatorMenuItem,\n} from '@terminus/ui';\n\n\n@Component({\n  selector: 'my-component',\n  template: `\n    \n    \n      \n    \n\n\n    \n\n      \n        \n          Created\n        \n        \n          {{ item.created_at | date:shortDate }}\n        \n      \n\n      \n        \n          Number\n        \n        \n          {{ item.number }}\n        \n      \n\n      \n        \n          Title\n        \n        \n          {{ item.title }}\n        \n      \n\n      \n        \n          State\n        \n        \n          {{ item.state }}\n        \n      \n\n      \n        \n          Comments\n        \n        \n          {{ item.comments }}\n        \n      \n\n      \n      \n\n      \n      \n\n    \n\n\n    \n    \n      \n    \n  `,\n})\nexport class TableComponent implements AfterViewInit {\n  allColumns: any[] = [\n    {\n      name: 'Created',\n      value: 'created',\n    },\n    {\n      name: 'Title',\n      value: 'title',\n    },\n    {\n      name: 'Comments',\n      value: 'comments',\n    },\n    {\n      name: 'State',\n      value: 'state',\n    },\n    {\n      name: 'Number',\n      value: 'number',\n    },\n  ];\n  displayedColumns: string[] = [\n    'created',\n    'number',\n    'title',\n    'state',\n    'comments',\n  ];\n  exampleDatabase: ExampleHttpDao | null;\n  dataSource: TsTableDataSource = new TsTableDataSource();\n  resultsLength: number = 0;\n\n  @ViewChild(TsSortDirective)\n  sort: TsSortDirective;\n\n  @ViewChild(TsPaginatorComponent)\n  paginator: TsPaginatorComponent;\n\n\n  constructor(\n    private http: HttpClient,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.exampleDatabase = new ExampleHttpDao(this.http);\n\n    // If the user changes the sort order, reset back to the first page.\n    this.sort.sortChange.subscribe(() => {\n      this.paginator.currentPageIndex = 0;\n    });\n\n    // Fetch new data anytime the sort is changed, the page is changed, or the records shown per\n    // page is changed\n    merge(this.sort.sortChange, this.paginator.pageSelect, this.paginator.recordsPerPageChange)\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          return this.exampleDatabase.getRepoIssues(\n            this.sort.active,\n            this.sort.direction,\n            this.paginator.currentPageIndex,\n            this.paginator.recordsPerPage,\n          );\n        }),\n        map(data => {\n          console.log('Demo: fetched data: ', data)\n          this.resultsLength = data.total_count;\n\n          return data.items;\n        }),\n        catchError(() => {\n          // Catch if the GitHub API has reached its rate limit. Return empty data.\n          console.warn('GitHub API rate limit has been reached!')\n          return of([]);\n        })\n      ).subscribe(data => {\n        this.dataSource.data = data;\n      });\n  }\n}\n\n\nexport interface GithubApi {\n  items: GithubIssue[];\n  total_count: number;\n}\n\nexport interface GithubIssue {\n  created_at: string;\n  number: string;\n  state: string;\n  title: string;\n}\n\n/**\n * An example database that this example uses to retrieve data for the table.\n */\nexport class ExampleHttpDao {\n  constructor(private http: HttpClient) {}\n\n  getRepoIssues(sort: string, order: string, page: number, perPage: number): Observable {\n    const href = 'https://api.github.com/search/issues';\n    const requestUrl = `${href}?q=repo:GetTerminus/terminus-ui`;\n    const requestParams = `&sort=${sort}&order=${order}&page=${page + 1}&per_page=${perPage}`;\n\n    return this.http.get(`${requestUrl}${requestParams}`);\n  }\n}\n    \n\n    \n        import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CdkTable,\n} from '@angular/cdk/table';\n\n\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\n@Component({\n  selector: 'ts-table',\n  template: `\n    \n      \n        \n        \n        \n      \n    \n  `,\n  styleUrls: ['./table.component.scss'],\n  host: {\n    class: 'ts-table',\n  },\n  exportAs: 'tsTable',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TsTableComponent extends CdkTable { }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TsTableDataSource.html":{"url":"classes/TsTableDataSource.html","title":"class - TsTableDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TsTableDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/table/table-data-source.ts\n        \n\n            \n                Description\n            \n            \n                Data source that accepts a client-side data array and includes native support of filtering,\nsorting (using TsSortDirective), and paginator (using TsPaginatorComponent).\n\n            \n\n\n            \n                Implements\n            \n            \n                        DataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _data\n                            \n                            \n                                _renderChangesSubscription\n                            \n                            \n                                    Private\n                                _renderData\n                            \n                            \n                                filteredData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _updateChangeSubscription\n                            \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initialData: T[])\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/table/table-data-source.ts:48\n                            \n                        \n\n                \n                    \n                            Set up data and change subscriptions\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initialData\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _data:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:19\n                            \n                        \n\n                \n                    \n                        Stream that emits when a new data array is set on the data source.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _renderChangesSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _renderChangesSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:30\n                            \n                        \n\n                \n                    \n                        Subscription to the changes that should trigger an update to the table's rendered rows, such\nas filtering, sorting, pagination, or base data changes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _renderData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _renderData:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:24\n                            \n                        \n\n                \n                    \n                        Stream emitting render data to the table (depends on ordered data changes).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filteredData:     T[]\n\n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:38\n                            \n                        \n\n                \n                    \n                        The filtered set of data that has been matched by the filter string, or all the data if there\nis no filter. Useful for knowing the set of data the table represents.\nFor example, a 'selectAll()' function would likely want to select the set of filtered data\nshown to the user rather than all the data.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _updateChangeSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n_updateChangeSubscription()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:65\n                            \n                        \n\n\n                \n                    \n                            Subscribe to changes that should trigger an update to the table's rendered rows. When the\nchanges occur, process the current state of the filter, sort, and pagination along with the\nprovided base data and send it to the table for rendering.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connect\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:80\n                            \n                        \n\n\n                \n                    \n                            Used by the TsTableComponent. Called when it connects to the data source.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/table/table-data-source.ts:86\n                            \n                        \n\n\n                \n                    \n                            Used by the TsTableComponent. Called when it is destroyed. No-op.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/table/table-data-source.ts:46\n                                \n                            \n\n                \n                    \n                        setdata(data: [])\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/table/table-data-source.ts:43\n                                \n                            \n                    \n                        \n                                Array of data that should be rendered by the table, where each object represents one row.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { DataSource } from '@angular/cdk/table';\nimport {\n  BehaviorSubject,\n  Subscription,\n} from 'rxjs';\n\n\n\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using {@link TsSortDirective}), and paginator (using {@link TsPaginatorComponent}).\n */\nexport class TsTableDataSource implements DataSource {\n  /**\n   * Stream that emits when a new data array is set on the data source.\n   */\n  private _data: BehaviorSubject;\n\n  /**\n   * Stream emitting render data to the table (depends on ordered data changes).\n   */\n  private _renderData = new BehaviorSubject([]);\n\n  /**\n   * Subscription to the changes that should trigger an update to the table's rendered rows, such\n   * as filtering, sorting, pagination, or base data changes.\n   */\n  _renderChangesSubscription!: Subscription;\n\n  /**\n   * The filtered set of data that has been matched by the filter string, or all the data if there\n   * is no filter. Useful for knowing the set of data the table represents.\n   * For example, a 'selectAll()' function would likely want to select the set of filtered data\n   * shown to the user rather than all the data.\n   */\n  filteredData!: T[];\n\n  /**\n   * Array of data that should be rendered by the table, where each object represents one row.\n   */\n  set data(data: T[]) {\n    this._data.next(data);\n  }\n  get data() {\n    return this._data.value;\n  }\n\n\n  /**\n   * Set up data and change subscriptions\n   */\n  constructor(initialData: T[] = []) {\n    this._data = new BehaviorSubject(initialData);\n    this._updateChangeSubscription();\n  }\n\n\n  /**\n   * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n   * changes occur, process the current state of the filter, sort, and pagination along with the\n   * provided base data and send it to the table for rendering.\n   */\n  _updateChangeSubscription(): void {\n    if (this._renderChangesSubscription) {\n      this._renderChangesSubscription.unsubscribe();\n    }\n\n    // Watch for base data or filter changes to provide a filtered set of data.\n    this._renderChangesSubscription = this._data\n    // Watched for paged data changes and send the result to the table to render.\n    .subscribe((data) => this._renderData.next(data));\n  }\n\n\n  /**\n   * Used by the {@link TsTableComponent}. Called when it connects to the data source.\n   */\n  connect() { return this._renderData; }\n\n\n  /**\n   * Used by the {@link TsTableComponent}. Called when it is destroyed. No-op.\n   */\n  disconnect() {}\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsTableModule.html":{"url":"modules/TsTableModule.html","title":"module - TsTableModule","body":"\n                   \n\n\n\n\n  Modules\n  TsTableModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsTableModule\n\n\n\ncluster_TsTableModule_declarations\n\n\n\ncluster_TsTableModule_TsCellDefDirective_providers\n\n\n\ncluster_TsTableModule_imports\n\n\n\ncluster_TsTableModule_exports\n\n\n\n\nTsCellDefDirective\n\nTsCellDefDirective\n\n\n\nTsTableModule\n\nTsTableModule\n\nTsTableModule -->\n\nTsCellDefDirective->TsTableModule\n\n\n\n\n\nTsCellDirective\n\nTsCellDirective\n\nTsTableModule -->\n\nTsCellDirective->TsTableModule\n\n\n\n\n\nTsColumnDefDirective\n\nTsColumnDefDirective\n\nTsTableModule -->\n\nTsColumnDefDirective->TsTableModule\n\n\n\n\n\nTsHeaderCellDefDirective\n\nTsHeaderCellDefDirective\n\nTsTableModule -->\n\nTsHeaderCellDefDirective->TsTableModule\n\n\n\n\n\nTsHeaderCellDirective\n\nTsHeaderCellDirective\n\nTsTableModule -->\n\nTsHeaderCellDirective->TsTableModule\n\n\n\n\n\nTsHeaderRowComponent\n\nTsHeaderRowComponent\n\nTsTableModule -->\n\nTsHeaderRowComponent->TsTableModule\n\n\n\n\n\nTsHeaderRowDefDirective\n\nTsHeaderRowDefDirective\n\nTsTableModule -->\n\nTsHeaderRowDefDirective->TsTableModule\n\n\n\n\n\nTsRowComponent\n\nTsRowComponent\n\nTsTableModule -->\n\nTsRowComponent->TsTableModule\n\n\n\n\n\nTsRowDefDirective\n\nTsRowDefDirective\n\nTsTableModule -->\n\nTsRowDefDirective->TsTableModule\n\n\n\n\n\nTsTableComponent\n\nTsTableComponent\n\nTsTableModule -->\n\nTsTableComponent->TsTableModule\n\n\n\n\n\nTsCellDefDirective \n\nTsCellDefDirective \n\nTsCellDefDirective  -->\n\nTsTableModule->TsCellDefDirective \n\n\n\n\n\nTsCellDirective \n\nTsCellDirective \n\nTsCellDirective  -->\n\nTsTableModule->TsCellDirective \n\n\n\n\n\nTsColumnDefDirective \n\nTsColumnDefDirective \n\nTsColumnDefDirective  -->\n\nTsTableModule->TsColumnDefDirective \n\n\n\n\n\nTsHeaderCellDefDirective \n\nTsHeaderCellDefDirective \n\nTsHeaderCellDefDirective  -->\n\nTsTableModule->TsHeaderCellDefDirective \n\n\n\n\n\nTsHeaderCellDirective \n\nTsHeaderCellDirective \n\nTsHeaderCellDirective  -->\n\nTsTableModule->TsHeaderCellDirective \n\n\n\n\n\nTsHeaderRowComponent \n\nTsHeaderRowComponent \n\nTsHeaderRowComponent  -->\n\nTsTableModule->TsHeaderRowComponent \n\n\n\n\n\nTsHeaderRowDefDirective \n\nTsHeaderRowDefDirective \n\nTsHeaderRowDefDirective  -->\n\nTsTableModule->TsHeaderRowDefDirective \n\n\n\n\n\nTsRowComponent \n\nTsRowComponent \n\nTsRowComponent  -->\n\nTsTableModule->TsRowComponent \n\n\n\n\n\nTsRowDefDirective \n\nTsRowDefDirective \n\nTsRowDefDirective  -->\n\nTsTableModule->TsRowDefDirective \n\n\n\n\n\nTsTableComponent \n\nTsTableComponent \n\nTsTableComponent  -->\n\nTsTableModule->TsTableComponent \n\n\n\n\n\n{ : , :  }\n\n{ : , :  }\n\nTsCellDefDirective -->\n\n{ : , :  }->TsCellDefDirective\n\n\n\nTsColumnDefDirective -->\n\n{ : , :  }->TsColumnDefDirective\n\n\n\nTsHeaderCellDefDirective -->\n\n{ : , :  }->TsHeaderCellDefDirective\n\n\n\nTsHeaderRowDefDirective -->\n\n{ : , :  }->TsHeaderRowDefDirective\n\n\n\nTsRowDefDirective -->\n\n{ : , :  }->TsRowDefDirective\n\n\n\n\n\nTsPaginatorModule\n\nTsPaginatorModule\n\nTsTableModule -->\n\nTsPaginatorModule->TsTableModule\n\n\n\n\n\nTsSortModule\n\nTsSortModule\n\nTsTableModule -->\n\nTsSortModule->TsTableModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/table/table.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Much of this was lifted directly from Angular Material. I highly recommend checking out their\nsource code: https://github.com/angular/material2/tree/master/src/lib/table\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsCellDefDirective\n                            \n                            \n                                TsCellDirective\n                            \n                            \n                                TsColumnDefDirective\n                            \n                            \n                                TsHeaderCellDefDirective\n                            \n                            \n                                TsHeaderCellDirective\n                            \n                            \n                                TsHeaderRowComponent\n                            \n                            \n                                TsHeaderRowDefDirective\n                            \n                            \n                                TsRowComponent\n                            \n                            \n                                TsRowDefDirective\n                            \n                            \n                                TsTableComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TsPaginatorModule\n                            \n                            \n                                    TsSortModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsCellDefDirective\n                            \n                            \n                                    TsCellDirective\n                            \n                            \n                                    TsColumnDefDirective\n                            \n                            \n                                    TsHeaderCellDefDirective\n                            \n                            \n                                    TsHeaderCellDirective\n                            \n                            \n                                    TsHeaderRowComponent\n                            \n                            \n                                    TsHeaderRowDefDirective\n                            \n                            \n                                    TsRowComponent\n                            \n                            \n                                    TsRowDefDirective\n                            \n                            \n                                    TsTableComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CdkTableModule } from '@angular/cdk/table';\n\nimport { TsSortModule } from './../sort/sort.module';\nimport { TsPaginatorModule } from './../paginator/paginator.module';\nimport {\n  TsCellDirective,\n  TsCellDefDirective,\n  TsColumnDefDirective,\n  TsHeaderCellDirective,\n  TsHeaderCellDefDirective,\n} from './cell';\nimport {\n  TsHeaderRowComponent,\n  TsHeaderRowDefDirective,\n  TsRowComponent,\n  TsRowDefDirective,\n} from './row';\nimport { TsTableComponent } from './table.component';\n\nexport * from './table-data-source';\nexport * from './cell';\nexport * from './row';\nexport * from './table.component';\nexport * from './../sort/sort.module';\n\n\n/**\n * Much of this was lifted directly from Angular Material. I highly recommend checking out their\n * source code: https://github.com/angular/material2/tree/master/src/lib/table\n */\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CdkTableModule,\n    TsSortModule,\n    TsPaginatorModule,\n  ],\n  declarations: [\n    TsCellDefDirective,\n    TsCellDirective,\n    TsColumnDefDirective,\n    TsHeaderCellDefDirective,\n    TsHeaderCellDirective,\n    TsHeaderRowComponent,\n    TsHeaderRowDefDirective,\n    TsRowComponent,\n    TsRowDefDirective,\n    TsTableComponent,\n  ],\n  exports: [\n    TsCellDefDirective,\n    TsCellDirective,\n    TsColumnDefDirective,\n    TsHeaderCellDefDirective,\n    TsHeaderCellDirective,\n    TsHeaderRowComponent,\n    TsHeaderRowDefDirective,\n    TsRowComponent,\n    TsRowDefDirective,\n    TsTableComponent,\n  ],\n})\nexport class TsTableModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TsTimeAgoPipe.html":{"url":"pipes/TsTimeAgoPipe.html","title":"pipe - TsTimeAgoPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  TsTimeAgoPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/time-ago/time-ago.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        tsTimeAgo\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string | Date, comparedDate: string | Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/pipes/time-ago/time-ago.pipe.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string | Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        comparedDate\n                                                        \n                                                                    string | Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Pipe,\n  PipeTransform,\n  isDevMode,\n} from '@angular/core';\nimport {\n  isValid,\n  formatDistance,\n} from 'date-fns';\n\n\n@Pipe({\n  name: 'tsTimeAgo',\n})\nexport class TsTimeAgoPipe implements PipeTransform {\n  transform(value: string | Date, comparedDate: string | Date): string | undefined {\n    // Check for null values to avoid issues during data-binding\n    if (value == null || value === '') {\n      return;\n    }\n\n    // Check for date validity\n    if (!isValid(value) && isDevMode()) {\n      throw Error(`'${value}' is not a valid date.`);\n    }\n    if (!isValid(comparedDate) && isDevMode()) {\n      throw Error(`'${comparedDate}' is not a valid date.`);\n    }\n\n    // If dealing with a date objects, convert to strings\n    const date1: string = (typeof value === 'string') ? value : new Date(value).toISOString();\n    const date2: string =\n      (typeof comparedDate === 'string') ? comparedDate : new Date(comparedDate).toISOString();\n\n    return formatDistance(date1, date2);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TsTitleCasePipe.html":{"url":"pipes/TsTitleCasePipe.html","title":"pipe - TsTitleCasePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  TsTitleCasePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/pipes/title-case/title-case.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        tsTitleCase\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/pipes/title-case/title-case.pipe.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\n\n\n@Pipe({\n  name: 'tsTitleCase',\n})\nexport class TsTitleCasePipe implements PipeTransform {\n  transform(value: string): string | undefined {\n    // Check for null values to avoid issues during data-binding\n    if (value == null || value === '') {\n      return;\n    }\n\n    return value.toLowerCase().split(' ').map((word) => {\n      return (word.charAt(0).toUpperCase() + word.slice(1));\n    }).join(' ');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsToggleComponent.html":{"url":"components/TsToggleComponent.html","title":"component - TsToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/toggle/toggle.component.ts\n\n\n    \n        Description\n    \n    \n        The is a toggle component\nQA CSS CLASSES\n\nqa-toggle: The toggle element\n\n\n    \n\n    \n        Extends\n    \n    \n            TsReactiveFormBaseComponent\n    \n\n\n    \n        Example\n    \n    \n                \n                    My Toggle!\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n            \n                providers\n                \n                            CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                ts-toggle\n            \n\n            \n                styleUrls\n                toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isChecked\n                            \n                            \n                                    Protected\n                                innerValue\n                            \n                            \n                                    Protected\n                                onChangeCallback\n                            \n                            \n                                    Protected\n                                onTouchedCallback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onBlur\n                            \n                            \n                                    Protected\n                                registerOnChange\n                            \n                            \n                                    Protected\n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaLabel\n                            \n                            \n                                isChecked\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isRequired\n                            \n                            \n                                labelPosition\n                            \n                            \n                                name\n                            \n                            \n                                theme\n                            \n                            \n                                formControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaLabel\n                    \n                    \n                        Define the aria label\n\n                            \n                            Type:    string | undefined\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:73\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isChecked\n                    \n                    \n                        Allow the checked state to be set\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:79\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                    \n                        Define if the toggle should be disabled\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:92\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRequired\n                    \n                    \n                        Define if the toggle is required\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:98\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelPosition\n                    \n                    \n                        Define the position of the label\n\n                            \n                            Type:    \"before\" | \"after\"\n\n                            \n                        \n                            Default value: 'after'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:104\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        Define the input name for the toggle\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'toggle'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:110\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        Define the theme\n\n                            \n                            Type:    TsStyleThemeTypes\n\n                            \n                        \n                            Default value: 'primary'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:116\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        Define the form control to get access to validators\n\n                            \n                            Type:    FormControl\n\n                            \n                        \n                            Default value: new FormControl()\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:42\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        Emit an event each time the toggle value changes\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:122\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onBlur\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onBlur()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:61\n                            \n                        \n\n\n                \n                    \n                            Set touched on blur\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:69\n                            \n                        \n\n\n                \n                    \n                            Register onChange callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:77\n                            \n                        \n\n\n                \n                    \n                            Register onTouched callback (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:85\n                            \n                        \n\n\n                \n                    \n                            Write value to inner value (from ControlValueAccessor interface)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _isChecked\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _isChecked:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            innerValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        innerValue:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:26\n                            \n                        \n\n                \n                    \n                        Define the internal data model\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onChangeCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onChangeCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:31\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            onTouchedCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onTouchedCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                            \n                                \n                                    Inherited from     TsReactiveFormBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in TsReactiveFormBaseComponent:36\n                            \n                        \n\n                \n                    \n                        Define placeholder for callback (provided later by the control value accessor)\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isChecked\n                    \n                \n\n                \n                    \n                        getisChecked()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:83\n                                \n                            \n\n                \n                    \n                        setisChecked(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/toggle/toggle.component.ts:79\n                                \n                            \n                    \n                        \n                                Allow the checked state to be set\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  forwardRef,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\nimport { TsReactiveFormBaseComponent } from './../utilities/reactive-form-base.component';\nimport { TsStyleThemeTypes } from './../utilities/types/style-theme.types';\n\n\n/**\n * Expose the MatSlideToggleChange event as TsSlideToggleChange. Used by {@link TsToggleComponent}\n */\nexport class TsSlideToggleChange extends MatSlideToggleChange {}\n\n\n/**\n * Custom control value accessor for our component\n * This allows our custom components to access the underlying form validation via our base class\n */\n/* tslint:disable:no-use-before-declare */\nexport const CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsToggleComponent),\n  multi: true,\n};\n/* tslint-enable: no-use-before-declare */\n\n\n/**\n * The is a toggle component\n *\n * #### QA CSS CLASSES\n * - `qa-toggle`: The toggle element\n *\n * @example\n * My Toggle!\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss'],\n  host: {\n    class: 'ts-toggle',\n  },\n  providers: [CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsToggleComponent extends TsReactiveFormBaseComponent {\n  /**\n   * Define the aria label\n   */\n  @Input()\n  public ariaLabel: string | undefined;\n\n  /**\n   * Allow the checked state to be set\n   */\n  @Input()\n  public set isChecked(value: boolean) {\n    this._isChecked = coerceBooleanProperty(value);\n    this.value = this._isChecked;\n  }\n  public get isChecked(): boolean {\n    return this._isChecked;\n  }\n  private _isChecked: boolean = false;\n\n  /**\n   * Define if the toggle should be disabled\n   */\n  @Input()\n  public isDisabled: boolean = false;\n\n  /**\n   * Define if the toggle is required\n   */\n  @Input()\n  public isRequired: boolean = true;\n\n  /**\n   * Define the position of the label\n   */\n  @Input()\n  public labelPosition: 'before' | 'after' = 'after';\n\n  /**\n   * Define the input name for the toggle\n   */\n  @Input()\n  public name: string = 'toggle';\n\n  /**\n   * Define the theme\n   */\n  @Input()\n  public theme: TsStyleThemeTypes = 'primary';\n\n  /**\n   * Emit an event each time the toggle value changes\n   */\n  @Output()\n  public change: EventEmitter = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsToggleModule.html":{"url":"modules/TsToggleModule.html","title":"module - TsToggleModule","body":"\n                   \n\n\n\n\n  Modules\n  TsToggleModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsToggleModule\n\n\n\ncluster_TsToggleModule_declarations\n\n\n\ncluster_TsToggleModule_TsToggleComponent_providers\n\n\n\ncluster_TsToggleModule_exports\n\n\n\n\nTsToggleComponent\n\nTsToggleComponent\n\n\n\nTsToggleModule\n\nTsToggleModule\n\nTsToggleModule -->\n\nTsToggleComponent->TsToggleModule\n\n\n\n\n\nTsToggleComponent \n\nTsToggleComponent \n\nTsToggleComponent  -->\n\nTsToggleModule->TsToggleComponent \n\n\n\n\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR\n\nTsToggleComponent -->\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR->TsToggleComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/toggle/toggle.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsToggleComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsToggleComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { TsToggleComponent } from './toggle.component';\n\nexport * from './toggle.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatSlideToggleModule,\n  ],\n  exports: [\n    TsToggleComponent,\n  ],\n  declarations: [\n    TsToggleComponent,\n  ],\n})\nexport class TsToggleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsTooltipComponent.html":{"url":"components/TsTooltipComponent.html","title":"component - TsTooltipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsTooltipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/tooltip/tooltip.component.ts\n\n\n    \n        Description\n    \n    \n        This is the tooltip UI Component\nQA CSS CLASSES\n\nqa-tooltip : Placed on the span element used for this component\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    My Tooltip!\n\nhttps://goo.gl/ieUPaG\n                \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-tooltip\n            \n\n            \n                styleUrls\n                tooltip.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tooltip.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hasUnderline\n                            \n                            \n                                tooltipPosition\n                            \n                            \n                                tooltipValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hasUnderline\n                    \n                    \n                        Define whether there is a dotted underline shown on the text\n\n                            \n                            Type:    boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/tooltip/tooltip.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipPosition\n                    \n                    \n                        Define the position of the tooltip\n\n                            \n                            Type:    TsTooltipPositionTypes\n\n                            \n                        \n                            Default value: 'below'\n                        \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/tooltip/tooltip.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipValue\n                    \n                    \n                        Define the content to display within the tooltip\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/tooltip/tooltip.component.ts:59\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\n\n\n/**\n * Define the accepted string values for the {@link TsTooltipComponent} position\n */\nexport type TsTooltipPositionTypes =\n  'left' |\n  'right' |\n  'above' |\n  'below' |\n  'before' |\n  'after'\n;\n\n\n/**\n * This is the tooltip UI Component\n *\n * #### QA CSS CLASSES\n *\n * - qa-tooltip : Placed on the span element used for this component\n *\n * @example\n * My Tooltip!\n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-tooltip',\n  templateUrl: './tooltip.component.html',\n  styleUrls: ['./tooltip.component.scss'],\n  host: {\n    class: 'ts-tooltip',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TsTooltipComponent {\n  /**\n   * Define the position of the tooltip\n   */\n  @Input()\n  public tooltipPosition: TsTooltipPositionTypes = 'below';\n\n  /**\n   * Define the content to display within the tooltip\n   */\n  @Input()\n  public tooltipValue!: string;\n\n  /**\n   * Define whether there is a dotted underline shown on the text\n   */\n  @Input()\n  public hasUnderline: boolean = false;\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsTooltipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsTooltipModule.html":{"url":"modules/TsTooltipModule.html","title":"module - TsTooltipModule","body":"\n                   \n\n\n\n\n  Modules\n  TsTooltipModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsTooltipModule\n\n\n\ncluster_TsTooltipModule_declarations\n\n\n\ncluster_TsTooltipModule_exports\n\n\n\n\nTsTooltipComponent\n\nTsTooltipComponent\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTsTooltipModule -->\n\nTsTooltipComponent->TsTooltipModule\n\n\n\n\n\nTsTooltipComponent \n\nTsTooltipComponent \n\nTsTooltipComponent  -->\n\nTsTooltipModule->TsTooltipComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/tooltip/tooltip.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsTooltipComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsTooltipComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { TsTooltipComponent } from './tooltip.component';\n\nexport * from './tooltip.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatTooltipModule,\n  ],\n  exports: [\n    TsTooltipComponent,\n  ],\n  declarations: [\n    TsTooltipComponent,\n  ],\n})\nexport class TsTooltipModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TsUser.html":{"url":"interfaces/TsUser.html","title":"interface - TsUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TsUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/navigation/navigation.component.ts\n        \n\n            \n                Description\n            \n            \n                Define the user object interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fullName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fullName\n                                    \n                                \n                                \n                                    \n                                        fullName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's full name\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { groupBy } from '@terminus/ngx-tools';\n\n\n/**\n * Define the user object interface\n */\nexport interface TsUser {\n  /**\n   * The user's full name\n   */\n  fullName: string;\n}\n\n\n/**\n * Base allowed keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface NavigationItemBase {\n  /**\n   * The value to use as the item text\n   */\n  name: string;\n\n  /**\n   * Define if the item should only be allowed in the secondary navigation\n   */\n  // TODO: API change for clarity\n  alwaysHidden: boolean;\n\n  /**\n   * Define if the item is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Define if the item is for admin functionality only\n   */\n  // TODO: API change for clarity\n  isForAdmin?: boolean;\n}\n\n\n/**\n * Link specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationLinkItem extends NavigationItemBase {\n  /**\n   * The destination for items with a 'navigate' action. Single strings are used for external\n   * locations while an array of strings are used for routerLinks\n   */\n  destination: string | string[];\n}\n\n\n/**\n * Action specific keys for an item passed to the {@link TsNavigationComponent}\n */\nexport interface TsNavigationActionItem extends NavigationItemBase {\n  /**\n   * The action to emit upon interaction\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * Define the allowed keys and types for an item passed to the {@link TsNavigationComponent}\n */\nexport type TsNavigationItem = TsNavigationLinkItem | TsNavigationActionItem;\n\n\n/**\n * Define the expected response from the {@link TsNavigationComponent} emitter\n */\nexport interface TsNavigationPayload {\n  /**\n   * The mouse click event\n   */\n  event: MouseEvent;\n\n  /**\n   * The selected item\n   */\n  action: {\n    type: string;\n  };\n}\n\n\n/**\n * This is the navigation UI Component\n *\n * #### QA CSS CLASSES\n * - `qa-navigation`: Placed on the nav element which contains this component\n * - `qa-navigation-items`: Placed on the div element which contains the navigation items\n * - `qa-navigation-item`: Placed on the button elements which represent each visible navigation\n * item\n * - `qa-navigation-secondary-trigger`: Placed on the button element which displays the drop down\n * containing secondary links when clicked\n * - `qa-navigation-secondary-items`: Placed on the menu element which contains the secondary\n * navigation items\n * - `qa-navigation-secondary-item`: Placed on the button elements which represent each secondary\n * navigation item\n *\n * @example\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Component({\n  selector: 'ts-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  host: {\n    class: 'ts-navigation',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'tsNavigation',\n})\nexport class TsNavigationComponent implements OnInit, AfterViewInit {\n  /**\n   * Store a pristine copy of the navigation items\n   */\n  private pristineItems!: TsNavigationItem[];\n\n  /**\n   * Getter to return the available navigation width\n   *\n   * @return The available navigation space\n   */\n  private get availableSpace(): number {\n    const NAV_WIDTH_BUFFER = 10;\n\n    return this.visibleItemsList.nativeElement.offsetWidth - NAV_WIDTH_BUFFER;\n  }\n\n  /**\n   * Define an array of widths at which to break the navigation\n   */\n  private breakWidths: number[] = [];\n\n  /**\n   * Define the list of hidden items\n   */\n  public hiddenItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the user's full name if it exists\n   *\n   * @return The user's full name\n   */\n  public get usersFullName(): string | null {\n    const userExists = this.user ? true : false;\n    const nameExists = userExists && (this.user.fullName.length > 0);\n\n    return (userExists && nameExists) ? this.user.fullName : null;\n  }\n\n  /**\n   * The collection of visible navigation items\n   */\n  public visibleItems: BehaviorSubject = new BehaviorSubject([] as TsNavigationItem[]);\n\n  /**\n   * Getter to return the count of visible items\n   *\n   * @return The number of visible items\n   */\n  public get visibleItemsLength(): number {\n    return this.visibleItems.getValue().length;\n  }\n\n  /**\n   * Accept the array of navigation items and trigger setup\n   */\n  @Input()\n  public set items(value: TsNavigationItem[]) {\n    // Filter out disabled items\n    const enabledItems = value.filter((item: TsNavigationItem) => {\n      return !item.isDisabled;\n    });\n\n    this.pristineItems = enabledItems;\n    this.setUpInitialArrays(this.pristineItems);\n    this.generateBreakWidths();\n    this.updateLists();\n  }\n\n  /**\n   * Accept the user data\n   */\n  @Input()\n  public user!: TsUser;\n\n  /**\n   * Define the welcome message\n   */\n  @Input()\n  public welcomeMessage: string = 'Welcome';\n\n  /**\n   * Element reference for visible list items\n   */\n  @ViewChild('visibleItemsList')\n  public visibleItemsList!: ElementRef;\n\n  /**\n   * Query list of all elements from the visible items list\n   */\n  @ViewChildren('visibleLinkElement')\n  public visibleLinkElement!: QueryList;\n\n  /**\n   * Emit the click event with the {@link TsNavigationPayload}\n   */\n  @Output()\n  public action: EventEmitter = new EventEmitter;\n\n  /**\n   * Trigger a layout update when the window resizes\n   */\n  @HostListener('window:resize')\n  onResize(): void {\n    this.updateLists();\n  }\n\n\n  /**\n   * Inject services\n   */\n  constructor(\n   private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  /**\n   * Set up initial link groups\n   */\n  public ngOnInit(): void {\n    this.setUpInitialArrays(this.pristineItems);\n  }\n\n\n  /**\n   * Trigger initial layout update after the view initializes\n   */\n  public ngAfterViewInit(): void {\n    this.generateBreakWidths();\n    this.updateLists();\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Generate the array of breakWidths\n   */\n  private generateBreakWidths(): void {\n    let totalSpace = 0;\n    this.breakWidths.length = 0;\n\n    // Loop through the visible links\n    this.visibleLinkElement.forEach((item: ElementRef) => {\n      // Tally up the total space\n      totalSpace += item.nativeElement.offsetWidth;\n\n      // Add the total space as a breakpoint\n      this.breakWidths.push(totalSpace);\n    });\n  }\n\n\n  /**\n   * Clone the nav items and split into the initially visible/hidden lists\n   *\n   * @param items - The complete list of navigation items\n   */\n  private setUpInitialArrays(items: TsNavigationItem[]): void {\n    // Clone the items so we can work freely with the array.\n    const allItems = Array.from(items);\n    // Create an object with the arrays separated\n    const splitArrays = groupBy(allItems, 'alwaysHidden');\n\n    // Push the separated arrays\n    this.visibleItems.next(splitArrays.false);\n    this.hiddenItems.next(splitArrays.true);\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * Move items between the two lists as required by the available space\n   */\n  private updateLists(): void {\n    const requiredSpace = this.breakWidths[this.visibleItemsLength - 1];\n\n    // If there is not enough space\n    if (requiredSpace > this.availableSpace) {\n      // Pull the last link out of the visible array\n      const currentVisible: TsNavigationItem[] = this.visibleItems.getValue();\n      const itemToMove = currentVisible.pop();\n      const updatedHiddenArray: TsNavigationItem[] = this.hiddenItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedHiddenArray.unshift(itemToMove);\n      }\n\n      // Push out the updated value\n      this.hiddenItems.next(updatedHiddenArray);\n\n      // Trigger another layout check\n      this.updateLists();\n    } else if (this.availableSpace > this.breakWidths[this.visibleItemsLength]) {\n      // Else, if there is more than enough space\n\n      // Pull the first item from the hidden array\n      const currentHidden = this.hiddenItems.getValue();\n      const itemToMove = currentHidden.shift();\n      const updatedVisibleArray: TsNavigationItem[] = this.visibleItems.getValue();\n\n      // If an item was found, add it to the beginning of the hidden items array\n      // istanbul ignore else\n      if (itemToMove) {\n        updatedVisibleArray.push(itemToMove);\n      }\n\n      // Add it to the end of the visible array\n      this.visibleItems.next(updatedVisibleArray);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n\n  /**\n   * If the destination is a string and begins with `http`\n   *\n   * @param destination - The destination to check\n   * @return Boolean determining if the link is external\n   */\n  public isExternalLink(destination: string | string[]): boolean {\n    return destination.indexOf('http') >= 0;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TsValidationMessageService.html":{"url":"injectables/TsValidationMessageService.html","title":"injectable - TsValidationMessageService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TsValidationMessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/validation-messages/validation-message.service.ts\n        \n\n            \n                Description\n            \n            \n                Define a service that offers custom validators\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getValidatorErrorMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getValidatorErrorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getValidatorErrorMessage(validatorName: string, validatorValue?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in terminus-ui/src/validation-messages/validation-message.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Return the correct error message for a validator\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        validatorName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe name of the validator\n\n\n                                                        \n                                                \n                                                \n                                                        validatorValue\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe value of the validator\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The error message\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { format } from 'date-fns';\n\n\n/**\n * Define the error message for an invalid email\n */\nconst emailMessage = `Invalid email address.`;\n\n/**\n * Define the error message for an invalid credit card\n */\nconst creditCardMessage = `Invalid credit card number.`;\n\n/**\n * Define the error message for an invalid password\n */\nconst passwordMessage = `Password must be between 6 and 100 characters, and contain a number.`;\n\n\n/*\n * TODO: The consuming app will need a way to pass in the error messages config object so that\n * localization is supported. See https://github.com/GetTerminus/terminus-ui/issues/403\n */\n\n\n/**\n * Define a service that offers custom validators\n */\n@Injectable()\nexport class TsValidationMessageService {\n\n  /**\n   * Return the correct error message for a validator\n   *\n   * @param validatorName - The name of the validator\n   * @param validatorValue - The value of the validator\n   * @return The error message\n   */\n  public getValidatorErrorMessage(validatorName: string, validatorValue?: any): string {\n    const config: {[key: string]: string} = {\n      // Standard responses:\n      required: `Required`,\n      minlength: `Minimum length ${validatorValue.requiredLength}`,\n      maxlength: `Maximum length ${validatorValue.requiredLength}`,\n      // Custom responses:\n      creditCard: creditCardMessage,\n      email: emailMessage,\n      password: passwordMessage,\n      // TODO: Figure out how to abstract pattern messages out so they can be customized per\n      // pattern. (showing a regex pattern to an end user isn't helpful) and we need the ability to\n      // support multiple patterns\n      pattern: `Must contain only letters, numbers or spaces`,\n      maxDate: '',\n      minDate: '',\n      greaterThan: `${validatorValue.actual} is not greater than ${validatorValue.greaterThan}`,\n      greaterThanOrEqual: `${validatorValue.actual} is not greater than or equal to ${validatorValue.greaterThanOrEqual}`,\n      numbers: `Must contain at least ${validatorValue.numbers} numbers`,\n      lessThan: `${validatorValue.actual} must be less than ${validatorValue.lessThan}`,\n      lessThanOrEqual: `${validatorValue.actual} must be less than or equal to ${validatorValue.lessThanOrEqual}`,\n      notUnique: `${validatorValue.actual} has already been selected.`,\n      noResults: `No results found.`,\n      url: `'${validatorValue.actual}' must be a valid URL.`,\n      equalToControl: `'${validatorValue.actual}' must be equal to '${validatorValue.compareValue}'`,\n      lowercase: `Must contain at least ${validatorValue.lowercase} lowercase letters`,\n      uppercase: `Must contain at least ${validatorValue.uppercase} uppercase letters`,\n      fileSize: `Must be smaller than ${validatorValue.max}kb`,\n      fileType: `${validatorValue.actual} is not an accepted MIME type.`,\n      imageDimensions: ``,\n      imageRatio: ``,\n    };\n\n    if (validatorName === 'maxDate') {\n      const message = `Date must be before`;\n      config.maxDate = `${message} ${format(validatorValue.maxDate, 'M/D/YYYY')}`;\n    }\n\n    if (validatorName === 'minDate') {\n      const message = `Date must be after`;\n      config.minDate = `${message} ${format(validatorValue.minDate, 'M/D/YYYY')}`;\n    }\n\n    if (validatorName === 'imageDimensions') {\n      config.imageDimensions = `${validatorValue.actual.width}x${validatorValue.actual.height} is not an allowed image dimension.`;\n    }\n\n    if (validatorName === 'imageRatio') {\n      config.imageRatio = `${validatorValue.actual} is not an allowed image ratio.`;\n    }\n\n    return config[validatorName];\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TsValidationMessagesComponent.html":{"url":"components/TsValidationMessagesComponent.html","title":"component - TsValidationMessagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TsValidationMessagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    terminus-ui/src/validation-messages/validation-messages.component.ts\n\n\n    \n        Description\n    \n    \n        A presentational component to render validation messages\nQA CSS CLASSES\n\nqa-validation-message: Placed on the error element used for this component\n\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n            \n                exportAs\n                tsValidationMessages\n            \n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                ts-validation-messages\n            \n\n            \n                styleUrls\n                validation-messages.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./validation-messages.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _id\n                            \n                            \n                                    Private\n                                _validateImmediately\n                            \n                            \n                                    Private\n                                _validateOnChange\n                            \n                            \n                                    Protected\n                                uid\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                            \n                                id\n                            \n                            \n                                validateImmediately\n                            \n                            \n                                validateOnChange\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(validationMessageService: TsValidationMessageService)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:110\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationMessageService\n                                                  \n                                                        \n                                                                    TsValidationMessageService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                    \n                        Define the associated form control\n\n                            \n                            Type:    FormControl | undefined\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:74\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                    \n                        Define an ID for the component\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:80\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validateImmediately\n                    \n                    \n                        Define if the validation should be immediate\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:104\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validateOnChange\n                    \n                    \n                        Define if validation should occur on blur or immediately\n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:92\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : this.uid\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _validateImmediately\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _validateImmediately:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:110\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _validateOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _validateOnChange:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            uid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uid:     \n\n                    \n                \n                    \n                        \n                            Default value : `ts-validation-messages-${nextUniqueId++}`\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:42\n                            \n                        \n\n                \n                    \n                        Define the default component ID\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        validationMessage\n                    \n                \n\n                \n                    \n                        getvalidationMessage()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:49\n                                \n                            \n                    \n                        \n                                Define the error message\n\n\n                                \n                                \n                                \n                                    Returns :     string | null | undefined\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:83\n                                \n                            \n\n                \n                    \n                        setid(value: string)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:80\n                                \n                            \n                    \n                        \n                                Define an ID for the component\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        validateOnChange\n                    \n                \n\n                \n                    \n                        getvalidateOnChange()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:95\n                                \n                            \n\n                \n                    \n                        setvalidateOnChange(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:92\n                                \n                            \n                    \n                        \n                                Define if validation should occur on blur or immediately\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        validateImmediately\n                    \n                \n\n                \n                    \n                        getvalidateImmediately()\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:107\n                                \n                            \n\n                \n                    \n                        setvalidateImmediately(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/validation-messages/validation-messages.component.ts:104\n                                \n                            \n                    \n                        \n                                Define if the validation should be immediate\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\n\nimport { TsValidationMessageService } from './validation-message.service';\n\n\n// Unique ID for each instance\nlet nextUniqueId = 0;\n\n\n/**\n * A presentational component to render validation messages\n *\n * #### QA CSS CLASSES\n * - `qa-validation-message`: Placed on the error element used for this component\n *\n * @example\n * \n */\n@Component({\n  selector: 'ts-validation-messages',\n  templateUrl: './validation-messages.component.html',\n  styleUrls: ['./validation-messages.component.scss'],\n  host: {\n    class: 'ts-validation-messages',\n  },\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'tsValidationMessages',\n})\nexport class TsValidationMessagesComponent {\n  /**\n   * Define the default component ID\n   */\n  protected uid = `ts-validation-messages-${nextUniqueId++}`;\n\n  /**\n   * Define the error message\n   *\n   * @return The error message or null if no error\n   */\n  public get validationMessage(): string | null | undefined {\n    if (this.control && this.control.errors) {\n      for (const propertyName in this.control.errors) {\n\n        // istanbul ignore else\n        if (propertyName) {\n          // Only show after 'touched' if we are NOT validating on every change\n          const immediatelyOrOnChange = this.validateImmediately || this.validateOnChange;\n          if (immediatelyOrOnChange || (!this.validateOnChange && this.control.touched)) {\n            const errors = this.control.errors[propertyName];\n\n            return this.validationMessageService.getValidatorErrorMessage(propertyName, errors);\n          }\n        }\n\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Define the associated form control\n   */\n  @Input()\n  public control: FormControl | undefined;\n\n  /**\n   * Define an ID for the component\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value || this.uid;\n  }\n  get id(): string {\n    return this._id;\n  }\n  protected _id: string = this.uid;\n\n  /**\n   * Define if validation should occur on blur or immediately\n   */\n  @Input()\n  public set validateOnChange(value: boolean) {\n    this._validateOnChange = coerceBooleanProperty(value);\n  }\n  public get validateOnChange(): boolean {\n    return this._validateOnChange;\n  }\n  private _validateOnChange: boolean = false;\n\n  /**\n   * Define if the validation should be immediate\n   */\n  @Input()\n  public set validateImmediately(value: boolean) {\n    this._validateImmediately = coerceBooleanProperty(value);\n  }\n  public get validateImmediately(): boolean {\n    return this._validateImmediately;\n  }\n  private _validateImmediately: boolean = false;\n\n\n  constructor(\n    private validationMessageService: TsValidationMessageService,\n  ) {\n    // Force setter to be called in case the ID was not specified.\n    this.id = this.id;\n  }\n\n}\n\n    \n\n    \n        \n  {{ validationMessage }}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ validationMessage }}'\n    var COMPONENTS = [{'name': 'TsAutocompleteComponent', 'selector': 'ts-autocomplete'},{'name': 'TsButtonComponent', 'selector': 'ts-button'},{'name': 'TsCSVEntryComponent', 'selector': 'ts-csv-entry'},{'name': 'TsCardComponent', 'selector': 'ts-card'},{'name': 'TsChartComponent', 'selector': 'ts-chart'},{'name': 'TsCheckboxComponent', 'selector': 'ts-checkbox'},{'name': 'TsConfirmationModalComponent', 'selector': 'ts-confirmation-modal'},{'name': 'TsCopyComponent', 'selector': 'ts-copy'},{'name': 'TsDateRangeComponent', 'selector': 'ts-date-range'},{'name': 'TsFileUploadComponent', 'selector': 'ts-file-upload'},{'name': 'TsHeaderRowComponent', 'selector': 'ts-header-row'},{'name': 'TsIconButtonComponent', 'selector': 'ts-icon-button'},{'name': 'TsIconComponent', 'selector': 'ts-icon'},{'name': 'TsInputComponent', 'selector': 'ts-input'},{'name': 'TsLinkComponent', 'selector': 'ts-link'},{'name': 'TsLoadingOverlayComponent', 'selector': 'ts-loading-overlay'},{'name': 'TsLoginFormComponent', 'selector': 'ts-login-form'},{'name': 'TsMenuComponent', 'selector': 'ts-menu'},{'name': 'TsNavigationComponent', 'selector': 'ts-navigation'},{'name': 'TsPaginatorComponent', 'selector': 'ts-paginator'},{'name': 'TsRadioGroupComponent', 'selector': 'ts-radio-group'},{'name': 'TsReactiveFormBaseComponent', 'selector': 'ts-dummy-selector'},{'name': 'TsRowComponent', 'selector': 'ts-row'},{'name': 'TsScrollbarsComponent', 'selector': 'ts-scrollbars'},{'name': 'TsSearchComponent', 'selector': 'ts-search'},{'name': 'TsSelectComponent', 'selector': 'ts-select'},{'name': 'TsSortHeaderComponent', 'selector': '[ts-sort-header]'},{'name': 'TsTableComponent', 'selector': 'ts-table'},{'name': 'TsToggleComponent', 'selector': 'ts-toggle'},{'name': 'TsTooltipComponent', 'selector': 'ts-tooltip'},{'name': 'TsValidationMessagesComponent', 'selector': 'ts-validation-messages'}];\n    var DIRECTIVES = [{'name': 'TsAutofocusDirective', 'selector': '[tsAutofocus]'},{'name': 'TsCardTitleDirective', 'selector': '[tsCardTitle]'},{'name': 'TsCellDefDirective', 'selector': '[tsCellDef]'},{'name': 'TsCellDirective', 'selector': 'ts-cell'},{'name': 'TsColumnDefDirective', 'selector': '[tsColumnDef]'},{'name': 'TsConfirmationDirective', 'selector': '[tsConfirmation]'},{'name': 'TsHeaderCellDefDirective', 'selector': '[tsHeaderCellDef]'},{'name': 'TsHeaderCellDirective', 'selector': 'ts-header-cell'},{'name': 'TsHeaderRowDefDirective', 'selector': '[tsHeaderRowDef]'},{'name': 'TsLoadingOverlayDirective', 'selector': '[tsLoadingOverlay]'},{'name': 'TsRowDefDirective', 'selector': '[tsRowDef]'},{'name': 'TsSortDirective', 'selector': '[tsSort]'},{'name': 'TsVerticalSpacingDirective', 'selector': '[tsVerticalSpacing]'}];\n    var ACTUAL_COMPONENT = {'name': 'TsValidationMessagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TsValidationMessagesModule.html":{"url":"modules/TsValidationMessagesModule.html","title":"module - TsValidationMessagesModule","body":"\n                   \n\n\n\n\n  Modules\n  TsValidationMessagesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TsValidationMessagesModule\n\n\n\ncluster_TsValidationMessagesModule_declarations\n\n\n\ncluster_TsValidationMessagesModule_exports\n\n\n\ncluster_TsValidationMessagesModule_providers\n\n\n\n\nTsValidationMessagesComponent\n\nTsValidationMessagesComponent\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule -->\n\nTsValidationMessagesComponent->TsValidationMessagesModule\n\n\n\n\n\nTsValidationMessagesComponent \n\nTsValidationMessagesComponent \n\nTsValidationMessagesComponent  -->\n\nTsValidationMessagesModule->TsValidationMessagesComponent \n\n\n\n\n\nTsValidationMessageService\n\nTsValidationMessageService\n\nTsValidationMessagesModule -->\n\nTsValidationMessageService->TsValidationMessagesModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            terminus-ui/src/validation-messages/validation-messages.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TsValidationMessagesComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TsValidationMessageService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TsValidationMessagesComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { TsValidationMessageService } from './validation-message.service';\nimport { TsValidationMessagesComponent } from './validation-messages.component';\n\nexport * from './validation-message.service';\nexport * from './validation-messages.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n  ],\n  providers: [\n    TsValidationMessageService,\n  ],\n  exports: [\n    TsValidationMessagesComponent,\n  ],\n  declarations: [\n    TsValidationMessagesComponent,\n  ],\n})\nexport class TsValidationMessagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TsValidatorsService.html":{"url":"injectables/TsValidatorsService.html","title":"injectable - TsValidatorsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TsValidatorsService\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/validators/validators.service.ts\n        \n\n            \n                Description\n            \n            \n                Define a service that exposes custom form validators for use with reactive forms.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                creditCard\n                            \n                            \n                                email\n                            \n                            \n                                equalToControl\n                            \n                            \n                                greaterThan\n                            \n                            \n                                greaterThanOrEqual\n                            \n                            \n                                lessThan\n                            \n                            \n                                lessThanOrEqual\n                            \n                            \n                                lowercase\n                            \n                            \n                                maxDate\n                            \n                            \n                                minDate\n                            \n                            \n                                numbers\n                            \n                            \n                                password\n                            \n                            \n                                uppercase\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creditCard\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        creditCard:     \n\n                    \n                \n                    \n                        \n                            Default value : creditCardValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     \n\n                    \n                \n                    \n                        \n                            Default value : emailValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            equalToControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        equalToControl:     \n\n                    \n                \n                    \n                        \n                            Default value : equalToControlValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            greaterThan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        greaterThan:     \n\n                    \n                \n                    \n                        \n                            Default value : greaterThanValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            greaterThanOrEqual\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        greaterThanOrEqual:     \n\n                    \n                \n                    \n                        \n                            Default value : greaterThanOrEqualValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lessThan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lessThan:     \n\n                    \n                \n                    \n                        \n                            Default value : lessThanValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lessThanOrEqual\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lessThanOrEqual:     \n\n                    \n                \n                    \n                        \n                            Default value : lessThanOrEqualValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lowercase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lowercase:     \n\n                    \n                \n                    \n                        \n                            Default value : lowercaseValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxDate:     \n\n                    \n                \n                    \n                        \n                            Default value : maxDateValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minDate:     \n\n                    \n                \n                    \n                        \n                            Default value : minDateValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numbers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numbers:     \n\n                    \n                \n                    \n                        \n                            Default value : numbersValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     \n\n                    \n                \n                    \n                        \n                            Default value : passwordValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uppercase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uppercase:     \n\n                    \n                \n                    \n                        \n                            Default value : uppercaseValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     \n\n                    \n                \n                    \n                        \n                            Default value : urlValidator\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/validators/validators.service.ts:34\n                            \n                        \n\n\n            \n        \n\n\n    \n\n    \n        Validators\n\n\n\n\nTable of Contents\n\nBasic usage\nAvailable validators\nMocking\n\n\nBasic usage\nimport {\n  FormBuilder,\n  FormGroup,\n} from '@angular/forms';\nimport { TsValidatorsService } from '@terminus/ui';\n\n\n@Component({\n  ...\n})\nexport class MyComponent {\n  // Create a form\n  myForm: FormGroup = this.formBuilder.group({\n    email: [\n      null,\n      [\n        // Basic validator\n        this.validatorsService.email(),\n      ],\n    ],\n    greaterThan: [\n      null,\n      [\n        // Validator with a required argument\n        this.validatorsService.greaterThan(10),\n      ],\n    ],\n  });\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private validatorsService: TsValidatorsService,\n  ) {}\n\n}Available validators\n\n\n\nValidator\nPurpose\n\n\n\n\ncreditCard\nA credit card number must be valid\n\n\nemail\nAn email address must be valid\n\n\nequalToControl\nA control's value must be equal to another control's value\n\n\ngreaterThan\nA number must be greater than another value\n\n\ngreaterThanOrEqual\nA number must be greater than or equal to another value\n\n\nlessThan\nA number must be less than another value\n\n\nlessThanOrEqual\nA number must be less than or equal to another value\n\n\nlowercase\nA value must contain a minimum amount of lowercase characters\n\n\nmaxDate\nA date must be before a maximum date\n\n\nminDate\nA date must be after a minimum date\n\n\nnumbers\nA minimum amount of numbers must be found\n\n\npassword\nA password must meet certain requirements\n\n\nuppercase\nA value must contain a minimum amount of uppercase characters\n\n\nurl\nA URL must be valid\n\n\n\nMocking\nA mocked version of the service is available for testing as TsValidatorsServiceMock.\nThe mocks consist of Jest mock functions. Based on the class value isValid the validator mock will\nreturn an error message or null.\n\n    \n\n    \n        import { Injectable } from '@angular/core';\n\nimport { creditCardValidator } from './validators/creditCard/creditCard';\nimport { emailValidator } from './validators/email/email';\nimport { equalToControlValidator } from './validators/equalToControl/equalToControl';\nimport { greaterThanOrEqualValidator } from './validators/greaterThanOrEqual/greaterThanOrEqual';\nimport { greaterThanValidator } from './validators/greaterThan/greaterThan';\nimport { lessThanOrEqualValidator } from './validators/lessThanOrEqual/lessThanOrEqual';\nimport { lessThanValidator } from './validators/lessThan/lessThan';\nimport { lowercaseValidator } from './validators/lowercase/lowercase';\nimport { numbersValidator } from './validators/numbers/numbers';\nimport { maxDateValidator } from './validators/maxDate/maxDate';\nimport { minDateValidator } from './validators/minDate/minDate';\nimport { passwordValidator } from './validators/password/password';\nimport { urlValidator } from './validators/url/url';\nimport { uppercaseValidator } from './validators/uppercase/uppercase';\n\n\n/**\n * Define a service that exposes custom form validators for use with reactive forms.\n */\n@Injectable()\nexport class TsValidatorsService {\n  creditCard = creditCardValidator;\n  email = emailValidator;\n  equalToControl = equalToControlValidator;\n  greaterThan = greaterThanValidator;\n  greaterThanOrEqual = greaterThanOrEqualValidator;\n  lessThan = lessThanValidator;\n  lessThanOrEqual = lessThanOrEqualValidator;\n  maxDate = maxDateValidator;\n  minDate = minDateValidator;\n  password = passwordValidator;\n  url = urlValidator;\n  lowercase = lowercaseValidator;\n  uppercase = uppercaseValidator;\n  numbers = numbersValidator;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TsVerticalSpacingDirective.html":{"url":"directives/TsVerticalSpacingDirective.html","title":"directive - TsVerticalSpacingDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TsVerticalSpacingDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/spacing/vertical-spacing.directive.ts\n        \n\n            \n                Description\n            \n            \n                This is the vertical spacing UI directive. Accepts TsVerticalSpacingTypes\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            \nMy content!\n\n\n\nMy content!\n\n\n\nMy content!\n\n\nhttps://goo.gl/ieUPaG\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [tsVerticalSpacing]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tsVerticalSpacing\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/spacing/vertical-spacing.directive.ts:85\n                            \n                        \n\n                \n                    \n                            Inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        tsVerticalSpacing\n                    \n                    \n                        Set a spacing class based on the passed in value\n\n                    \n                \n                        \n                            \n                                    Defined in terminus-ui/src/spacing/vertical-spacing.directive.ts:58\n                            \n                        \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tsVerticalSpacing\n                    \n                \n\n\n                \n                    \n                        settsVerticalSpacing(value: )\n                    \n                \n                            \n                                \n                                    Defined in terminus-ui/src/spacing/vertical-spacing.directive.ts:58\n                                \n                            \n                    \n                        \n                                Set a spacing class based on the passed in value\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                            \n                                                                    \nThe spacing value passed in.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  Input,\n  isDevMode,\n} from '@angular/core';\n\nimport { TS_SPACING } from './spacing.constant';\n\n\n/**\n * Define the accepted string values for {@link TsVerticalSpacingDirective}\n */\nexport type TsVerticalSpacingTypes =\n  'small--2' |\n  'small--1' |\n  'small--0' |\n  'none' |\n  'default--0' |\n  'large--0' |\n  'large--1' |\n  'large--2' |\n  'large--3' |\n  'large--4' |\n  'large--5' |\n  'large--6'\n;\n\n\n/**\n * This is the vertical spacing UI directive. Accepts {@link TsVerticalSpacingTypes}\n *\n * @example\n * \n *   My content!\n * \n *\n * \n *   My content!\n * \n *\n * \n *   My content!\n * \n *\n * https://goo.gl/ieUPaG\n */\n@Directive({\n  selector: '[tsVerticalSpacing]',\n})\nexport class TsVerticalSpacingDirective {\n  /**\n   * Set a spacing class based on the passed in value\n   *\n   * @param value - The spacing value passed in.\n   */\n  @Input()\n  public set tsVerticalSpacing(value: TsVerticalSpacingTypes) {\n    // Set a default value if nothing was passed in\n    if (!value) {\n      value = 'default--0';\n    }\n\n    // Split the string to get the type and size\n    const type: string = value.split('--')[0];\n    const size: number = parseInt(value.split('--')[1], 10);\n    const valueIsNone: boolean = value === 'none';\n\n    // Verify type and size are valid options\n    const typeIsInvalid: boolean = !!(!TS_SPACING[type] || TS_SPACING[type].length \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Version.html":{"url":"classes/Version.html","title":"class - Version","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Version\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            terminus-ui/src/utilities/version/version.ts\n        \n\n            \n                Description\n            \n            \n                Create version information from a version string\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                full\n                            \n                            \n                                    Public\n                                    Readonly\n                                major\n                            \n                            \n                                    Public\n                                    Readonly\n                                minor\n                            \n                            \n                                    Public\n                                    Readonly\n                                patch\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(full: string)\n                    \n                \n                        \n                            \n                                Defined in terminus-ui/src/utilities/version/version.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        full\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            full\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        full:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/version/version.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            major\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        major:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/version/version.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            minor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minor:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/version/version.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            patch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        patch:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in terminus-ui/src/utilities/version/version.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Version {\n  public readonly major: string;\n  public readonly minor: string;\n  public readonly patch: string;\n\n  constructor(public full: string) {\n    this.major = full.split('.')[0];\n    this.minor = full.split('.')[1];\n    this.patch = full.split('.').slice(2).join('.');\n  }\n}\n\nexport const VERSION = new Version('0.0.0-PLACEHOLDER');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\n\n Contributing to Terminus/UI\n\nWe are always open questions, ideas and code contributions. As a contributor, here are the\nguidelines we would like you to follow.\n\n\nTable of Contents\n\nCode of Conduct\nQuestion or Problem?\nWant a Feature?\nSubmitting an Issue\nSubmitting a Pull Request (PR)\nAfter your pull request is merged\nCoding Rules & Workflow\n\n\n\n\n\n\nCode of Conduct\nHelp us keep Terminus open and inclusive. Please read and follow our Code of Conduct.\nQuestion or Problem?\nIf you find a bug in the source code or a mistake in the documentation, you can help us by\nsubmitting an issue to our GitHub repository. Including an issue\nreproduction (via our StackBlitz starter) is the absolute best way to help the team quickly\ndiagnose the problem. Screenshots are also helpful.\nYou can help the team even more and submit a Pull Request with a fix! :pray:\nWant a Feature?\nYou can request a new feature by submitting an issue to our GitHub\nrepository. If you would like to implement a new feature, please submit an issue with a\nproposal for your work first, to be sure that we can use it.  Please consider what kind of change it\nis:\n\nFor a Major Feature, first open an issue and outline your proposal so that it can be\ndiscussed. This will also allow us to better coordinate our efforts, prevent duplication of work,\nand help you to craft the change so that it is successfully accepted into the project.\nSmall Features can be crafted and directly submitted as a Pull Request.\n\nSubmitting an Issue\nBefore you submit an issue, search existing open/closed issues, as your question may have\nalready been answered.\nIf your issue appears to be a bug, and hasn't been reported, open a new issue.\nHelp us to maximize the effort we can spend fixing issues and adding new\nfeatures by not reporting duplicate issues.  Providing the following information will increase the\nchances of your issue being dealt with quickly:\n\nOverview of the Issue - if an error is being thrown a non-minified stack trace helps\nMotivation for or Use Case - explain what are you trying to do and why the current behavior\n  is a bug for you\nBrowsers and Operating System - is this a problem with all browsers?\nReproduce the Error - provide a live example using our StackBlitz starter or a\n  unambiguous set of steps\nScreenshots - Due to the visual nature of this library, screenshots can help the team triage\n  issues far more quickly than a text description.\nRelated Issues - has a similar issue been reported before?\nSuggest a Fix - if you can't fix the bug yourself, perhaps you can point to what might be\n  causing the problem (line of code or commit)\n\nYou can file new issues by providing the above information here.\nSubmitting a Pull Request (PR)\nBefore you submit your Pull Request (PR) consider the following guidelines:\n\nSearch GitHub for an open or closed PR that relates to your submission. You don't want to\nduplicate effort.\nMake your changes in a new git branch:\ngit checkout -b 312-my-fix-branch master\nNote: You should prefix your branch name with the associated issue number.\n\n\nCreate your patch, including appropriate test cases.\nFollow our coding rules (by verifying all linters pass).\nRun the full test suite and ensure that all tests pass.\nCommit your changes using a descriptive commit message that follows our\ncommit message conventions. Adherence to these conventions is necessary because release notes are\nautomatically generated from these messages. (for this reason it is often advisable to rebase your\nfeature branch to ensure clear, concise commits)\nPush your branch to GitHub:\ngit push my-fork 312-my-fix-branch\n\n\nIn GitHub, send a pull request to terminus-ui:master.\nIf we suggest changes then:\nMake the required updates.\nRe-run all test suites to ensure tests are still passing.\nRe-run all linters.\nRebase your branch and force push to your GitHub repository (this will update your Pull Request):\ngit rebase master -i\ngit push -f\n\n\n\n\n\nThat's it! Thank you for your contribution! :pray:\nAfter your pull request is merged\nAfter your pull request is merged, you can safely delete your branch and pull the changes from the\nmain (upstream) repository:\n\nDelete the remote branch on GitHub either through the GitHub web UI or your local shell:\ngit push my-fork --delete 312-my-fix-branch\n\n\nCheck out the master branch:\ngit checkout master -f\n\n\nDelete the local branch:\ngit branch -D 312-my-fix-branch\n\n\nUpdate your master with the latest upstream version:\ngit pull --ff upstream master\n\n\n\nCoding Rules & Workflow\nTo ensure consistency throughout the source code, keep these rules in mind as you are working:\n\nAll features or bug fixes must be tested by one or more specs (unit-tests).\nAll public API methods must be documented. (Details TBD).\nMost coding styles are enforced via linters\nReference our development documentation for more details.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @amcharts/amcharts4 : ^4.0.0-beta.50\n        \n            @amcharts/amcharts4-geodata : ^4.0.10\n        \n            @angular/animations : ^6.0.7\n        \n            @angular/common : ^6.0.7\n        \n            @angular/core : ^6.0.7\n        \n            @angular/flex-layout : 6.0.0-beta.16\n        \n            @angular/forms : ^6.0.7\n        \n            @angular/http : ^6.0.7\n        \n            @angular/platform-browser : ^6.0.7\n        \n            @angular/platform-browser-dynamic : ^6.0.7\n        \n            @angular/router : ^6.0.7\n        \n            @terminus/ngx-tools : ^2.25.2\n        \n            @terminus/ui : ^8.13.1\n        \n            date-fns : 2.0.0-alpha.7\n        \n            ngx-perfect-scrollbar : ^6.2.1\n        \n            rxjs-compat : ^6.2.1\n        \n            text-mask-addons : ^3.7.2\n        \n            text-mask-core : ^5.0.1\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTerminus UI Library\nThe library of UI components used for Terminus applications.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable of Contents\n\nLibrary Purpose\nDocumentation\nAvailable Features\nComponents\nPipes\nServices\nAvailable Validators\n\n\nConstants\nStyle Helpers\n\n\nInstallation\nGlobal Styles\nSCSS Helpers\nContributing\nContributors\nProject Resources\n\n\nLibrary Purpose\nThis library was created to assist Terminus engineers in maintaining a consistent experience across\napplications while following a unified design language.\nThe library is open source with the hopes that others may find solutions and ideas here, as we have\ndone while browsing so many other repositories. While we want to make decisions that are best for\neveryone, in the end, the needs of the Terminus engineering team must come first.\nIf a deviation makes sense for the feature itself, but not for Terminus, we support (and will assist\nin) abstracting the functionality out for generalization.\nThis library is heavily based on Material Design currently. This provides us a way to rely on very\nwell thought out usability and accessibility decisions for areas we have not yet addressed\ninternally. While we hold Material in high regard, we do not believe that all of their decisions are\nbest for the Terminus UI specifically.\nDocumentation\nThe available features table contains links for functional and usage documentation\nfor each feature.\nAvailable Features\n\n\n:hammer: started\n:white_check_mark: available\n:hankey: deprecated\n\n\nComponents\n\n\n\nFeature\nNotes\nStatus\nDemo\nDocs\nUsage\n\n\n\n\nalert\n\n\n\n\n\n\n\nautocomplete\nInput with autocomplete\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nautofocus\nFocus a focusable element on load\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nbadge\n\n\n\n\n\n\n\nbutton\n\n:white_check_mark:\nDemo\nDocs\n\n\n\nbreadcrumbs\n\n\n\n\n\n\n\ncard\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nchart\nCharts, graphs etc\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nchip\n\n\n\n\n\n\n\ncheckbox\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nconfirmation\nAdd a confirmation step to any ts-button\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ncopy\n\n:white_check_mark:\nDemo\nDocs\n\n\n\ncsv entry\nManually enter CSV values\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ndatepicker\nSee TsInputComponent\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ndate-range\nDual inputs with calendar pop-ups\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ndialog\n\n\n\n\n\n\n\ndivider\n\n\n\n\n\n\n\nexpansion\n\n\n\n\n\n\n\nfile-upload\nFile upload with drag and drop\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nicon\nSupported icons: https://material.io/icons\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nicon-button\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ninput\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nlink\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nloading overlay\nOverlay with loading spinner\n:white_check_mark:\nDemo\nDocs\n\n\n\nlogin form\nEmail/password with 'remember me' checkbox\n:white_check_mark:\nDemo\nDocs\n\n\n\nmenu\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nnavigation\nGlobal navigation menu\n:white_check_mark:\nDemo\nDocs\n\n\n\npaginator\nPaging controls for collections\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\npipes\nA collection of pipes for Angular\n:white_check_mark:\nDemo\nDocs\n\n\n\nprogress\n\n\n\n\n\n\n\nprogression\ni.e. Stepper, wizard\n\n\n\n\n\n\nradio-group\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nscrollbars\nCustom scrollars for both axis'\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\nsearch\ninput with search capabilities\n:white_check_mark:\nDemo\nDocs\n\n\n\nselect\n\n:white_check_mark:\nDemo\nDocs\n\n\n\nspacing\nHelpers for consistent spacing\n:white_check_mark:\nDemo\nDocs\n\n\n\nsort\nUsed by table for column sorting\n:white_check_mark:\n(see table demo)\nDocs\nUsage\n\n\ntable\n\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\ntabs\n\n\n\n\n\n\n\ntoggle\n\n:white_check_mark:\nDemo\nDocs\n\n\n\ntooltip\n\n:white_check_mark:\nDemo\nDocs\n\n\n\nPipes\n:books: Pipes Documentation\n\n:circus_tent: Pipes Demo\n\n\n\nPipe\nNotes\nStatus\n\n\n\n\ntsDate\nshort, medium, extended, timestamp\n:white_check_mark:\n\n\ntsRoundNumber\nRound a number to a specific precision\n:white_check_mark:\n\n\ntsSentenceCase\nConvert string casing to sentence-case\n:white_check_mark:\n\n\ntsTimeAgo\nHuman-readable time span\n:white_check_mark:\n\n\ntsTitleCase\nTitle Case A String\n:white_check_mark:\n\n\n\nServices\n\n\n\nFeature\nNotes\nStatus\nDemo\nDocs\nUsage\n\n\n\n\nValidators\nExpose custom validation methods for reactive forms\n:white_check_mark:\nDemo\nDocs\nUsage\n\n\n\nAvailable Validators\n\n\n\nName\nPurpose\n\n\n\n\ncreditCard\nA credit card number must be valid\n\n\nemail\nAn email address must be valid\n\n\nequalToControl\nA control's value must be equal to another control's value\n\n\ngreaterThan\nA number must be greater than another value\n\n\ngreaterThanOrEqual\nA number must be greater than or equal to another value\n\n\nlessThan\nA number must be less than another value\n\n\nlessThanOrEqual\nA number must be less than or equal to another value\n\n\nlowercase\nA value must contain a minimum amount of lowercase characters\n\n\nminDate\nA date must be after a minimum date\n\n\nmaxDate\nA date must be before a maximum date\n\n\npassword\nA password must meet certain requirements\n\n\nurl\nA URL must be valid\n\n\n\nConstants\n\n\n\nFeature\nNotes\nStatus\nDemo\nDocs\nUsage\n\n\n\n\nTS_SPACING\nExpose our spacing sizes in TypeScript\n:white_check_mark:\nDemo\n\n\n\n\nStyle Helpers\n\n\n\nFeature\nNotes\nStatus\nDocs\n\n\n\n\nanimation\n\n:hammer:\n\n\n\nassets\n\n:hammer:\n\n\n\nbreakpoints\n\n:white_check_mark:\nDocs\n\n\ncolors\n\n:white_check_mark:\nDocs\n\n\ncursors\n\n:white_check_mark:\nDocs\n\n\nlayout\n\n:white_check_mark:\nDocs\n\n\nshadows\n\n:white_check_mark:\nDocs\n\n\nspacing\n\n:white_check_mark:\nDocs\n\n\ntypography\n\n:white_check_mark:\nDocs\n\n\nz-index\n\n:white_check_mark:\nDocs\n\n\n\nInstallation\nInstall the library and required dependencies:\n$ yarn add @terminus/ui @terminus/ngx-tools @angular/flex-layout@6.0.0-beta.15 date-fns@2.0.0-alpha.7Global Styles\nTo use the global styles, import the CSS file into your stylesheets:\n@import '@terminus/ui/terminus-ui.css'SCSS Helpers\nTo use the provided SCSS helper methods/variables/mixins, import the helpers file from @terminus/ui:\n@import '~@terminus/ui/helpers'Contributing\nView the contribution documentation and the development documentation.\nContributors\nThanks goes to these wonderful people (emoji key):\n\n\n\n\n\nBenjamin Charity&#x1F4BB; &#x1F4D6; ⚠️ &#x1F3A8; &#x1F914; &#x1F440; &#x1F527;\ncoreyterminator&#x1F4BB;\nWendy&#x1F41B; &#x1F4BB;\nBrian Malinconico&#x1F41B; &#x1F914;\nDavid Harkness&#x1F4BB;\nkal93&#x1F41B;\ndivyameher&#x1F41B;\n\n\n\n\nDevon Peet&#x1F3A8; &#x1F914;\ndean jones&#x1F4BB;\n\n\n\n\nThis project follows the all-contributors specification. Contributions of any kind welcome!\nProject Resources\n\nSemantic Release - Automatically release versioned release to NPM and generate\n  a changelog in the Github tag.\nCommitizen - Interactive cli for enforcing commit message format.\nCommitizen VSCode Plugin - VSCode plugin for commitizen.\nDoctoc - Generate documentation table of contents.\nCodeCov - Code coverage reporting.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License\nCopyright (c) 2018 Terminus Software, LLC.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TerminusUIModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsAutocompleteModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsAutofocusModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsButtonModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsCSVEntryModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsCardModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsChartModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsCheckboxModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsConfirmationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsCopyModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsDateRangeModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsFileUploadModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsIconButtonModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsIconModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsInputModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsLinkModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsLoadingOverlayModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsLoginFormModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsMenuModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsNavigationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsPaginatorModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsPipesModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsRadioGroupModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsScrollbarsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsSearchModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsSelectModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsSortModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsSpacingModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsTableModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsToggleModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsTooltipModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TsValidationMessagesModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TerminusUIModule\n\n\n\ncluster_TerminusUIModule_declarations\n\n\n\ncluster_TerminusUIModule_imports\n\n\n\ncluster_TerminusUIModule_exports\n\n\n\ncluster_TerminusUIModule_providers\n\n\n\ncluster_TsAutocompleteModule\n\n\n\ncluster_TsAutocompleteModule_declarations\n\n\n\ncluster_TsAutocompleteModule_exports\n\n\n\ncluster_TsAutofocusModule\n\n\n\ncluster_TsAutofocusModule_declarations\n\n\n\ncluster_TsAutofocusModule_exports\n\n\n\ncluster_TsButtonModule\n\n\n\ncluster_TsButtonModule_declarations\n\n\n\ncluster_TsButtonModule_exports\n\n\n\ncluster_TsCSVEntryModule\n\n\n\ncluster_TsCSVEntryModule_declarations\n\n\n\ncluster_TsCSVEntryModule_exports\n\n\n\ncluster_TsCardModule\n\n\n\ncluster_TsCardModule_declarations\n\n\n\ncluster_TsCardModule_exports\n\n\n\ncluster_TsChartModule\n\n\n\ncluster_TsChartModule_declarations\n\n\n\ncluster_TsChartModule_exports\n\n\n\ncluster_TsChartModule_providers\n\n\n\ncluster_TsCheckboxModule\n\n\n\ncluster_TsCheckboxModule_declarations\n\n\n\ncluster_TsCheckboxModule_TsCheckboxComponent_providers\n\n\n\ncluster_TsCheckboxModule_exports\n\n\n\ncluster_TsConfirmationModule\n\n\n\ncluster_TsConfirmationModule_declarations\n\n\n\ncluster_TsConfirmationModule_exports\n\n\n\ncluster_TsCopyModule\n\n\n\ncluster_TsCopyModule_declarations\n\n\n\ncluster_TsCopyModule_exports\n\n\n\ncluster_TsDateRangeModule\n\n\n\ncluster_TsDateRangeModule_declarations\n\n\n\ncluster_TsDateRangeModule_exports\n\n\n\ncluster_TsFileUploadModule\n\n\n\ncluster_TsFileUploadModule_declarations\n\n\n\ncluster_TsFileUploadModule_TsFileUploadComponent_providers\n\n\n\ncluster_TsFileUploadModule_exports\n\n\n\ncluster_TsFileUploadModule_providers\n\n\n\ncluster_TsIconButtonModule\n\n\n\ncluster_TsIconButtonModule_declarations\n\n\n\ncluster_TsIconButtonModule_exports\n\n\n\ncluster_TsIconModule\n\n\n\ncluster_TsIconModule_declarations\n\n\n\ncluster_TsIconModule_exports\n\n\n\ncluster_TsInputModule\n\n\n\ncluster_TsInputModule_declarations\n\n\n\ncluster_TsInputModule_TsInputComponent_providers\n\n\n\ncluster_TsInputModule_exports\n\n\n\ncluster_TsLinkModule\n\n\n\ncluster_TsLinkModule_declarations\n\n\n\ncluster_TsLinkModule_exports\n\n\n\ncluster_TsLoadingOverlayModule\n\n\n\ncluster_TsLoadingOverlayModule_declarations\n\n\n\ncluster_TsLoadingOverlayModule_exports\n\n\n\ncluster_TsLoginFormModule\n\n\n\ncluster_TsLoginFormModule_declarations\n\n\n\ncluster_TsLoginFormModule_exports\n\n\n\ncluster_TsMenuModule\n\n\n\ncluster_TsMenuModule_declarations\n\n\n\ncluster_TsMenuModule_exports\n\n\n\ncluster_TsNavigationModule\n\n\n\ncluster_TsNavigationModule_declarations\n\n\n\ncluster_TsNavigationModule_exports\n\n\n\ncluster_TsPaginatorModule\n\n\n\ncluster_TsPaginatorModule_declarations\n\n\n\ncluster_TsPaginatorModule_exports\n\n\n\ncluster_TsPipesModule\n\n\n\ncluster_TsPipesModule_declarations\n\n\n\ncluster_TsPipesModule_exports\n\n\n\ncluster_TsRadioGroupModule\n\n\n\ncluster_TsRadioGroupModule_declarations\n\n\n\ncluster_TsRadioGroupModule_TsRadioGroupComponent_providers\n\n\n\ncluster_TsRadioGroupModule_exports\n\n\n\ncluster_TsScrollbarsModule\n\n\n\ncluster_TsScrollbarsModule_declarations\n\n\n\ncluster_TsScrollbarsModule_exports\n\n\n\ncluster_TsSearchModule\n\n\n\ncluster_TsSearchModule_declarations\n\n\n\ncluster_TsSearchModule_exports\n\n\n\ncluster_TsSelectModule\n\n\n\ncluster_TsSelectModule_declarations\n\n\n\ncluster_TsSelectModule_TsSelectComponent_providers\n\n\n\ncluster_TsSelectModule_exports\n\n\n\ncluster_TsSortModule\n\n\n\ncluster_TsSortModule_declarations\n\n\n\ncluster_TsSortModule_exports\n\n\n\ncluster_TsSpacingModule\n\n\n\ncluster_TsSpacingModule_declarations\n\n\n\ncluster_TsSpacingModule_exports\n\n\n\ncluster_TsTableModule\n\n\n\ncluster_TsTableModule_declarations\n\n\n\ncluster_TsTableModule_TsCellDefDirective_providers\n\n\n\ncluster_TsTableModule_exports\n\n\n\ncluster_TsToggleModule\n\n\n\ncluster_TsToggleModule_declarations\n\n\n\ncluster_TsToggleModule_TsToggleComponent_providers\n\n\n\ncluster_TsToggleModule_exports\n\n\n\ncluster_TsTooltipModule\n\n\n\ncluster_TsTooltipModule_declarations\n\n\n\ncluster_TsTooltipModule_exports\n\n\n\ncluster_TsValidationMessagesModule\n\n\n\ncluster_TsValidationMessagesModule_declarations\n\n\n\ncluster_TsValidationMessagesModule_exports\n\n\n\ncluster_TsValidationMessagesModule_providers\n\n\n\n\nTsReactiveFormBaseComponent\n\nTsReactiveFormBaseComponent\n\n\n\nTerminusUIModule\n\nTerminusUIModule\n\nTerminusUIModule -->\n\nTsReactiveFormBaseComponent->TerminusUIModule\n\n\n\n\n\nTsAutocompleteModule \n\nTsAutocompleteModule \n\nTsAutocompleteModule  -->\n\nTerminusUIModule->TsAutocompleteModule \n\n\n\n\n\nTsAutofocusModule \n\nTsAutofocusModule \n\nTsAutofocusModule  -->\n\nTerminusUIModule->TsAutofocusModule \n\n\n\n\n\nTsButtonModule \n\nTsButtonModule \n\nTsButtonModule  -->\n\nTerminusUIModule->TsButtonModule \n\n\n\n\n\nTsCSVEntryModule \n\nTsCSVEntryModule \n\nTsCSVEntryModule  -->\n\nTerminusUIModule->TsCSVEntryModule \n\n\n\n\n\nTsCardModule \n\nTsCardModule \n\nTsCardModule  -->\n\nTerminusUIModule->TsCardModule \n\n\n\n\n\nTsChartModule \n\nTsChartModule \n\nTsChartModule  -->\n\nTerminusUIModule->TsChartModule \n\n\n\n\n\nTsCheckboxModule \n\nTsCheckboxModule \n\nTsCheckboxModule  -->\n\nTerminusUIModule->TsCheckboxModule \n\n\n\n\n\nTsConfirmationModule \n\nTsConfirmationModule \n\nTsConfirmationModule  -->\n\nTerminusUIModule->TsConfirmationModule \n\n\n\n\n\nTsCopyModule \n\nTsCopyModule \n\nTsCopyModule  -->\n\nTerminusUIModule->TsCopyModule \n\n\n\n\n\nTsDateRangeModule \n\nTsDateRangeModule \n\nTsDateRangeModule  -->\n\nTerminusUIModule->TsDateRangeModule \n\n\n\n\n\nTsFileUploadModule \n\nTsFileUploadModule \n\nTsFileUploadModule  -->\n\nTerminusUIModule->TsFileUploadModule \n\n\n\n\n\nTsIconButtonModule \n\nTsIconButtonModule \n\nTsIconButtonModule  -->\n\nTerminusUIModule->TsIconButtonModule \n\n\n\n\n\nTsIconModule \n\nTsIconModule \n\nTsIconModule  -->\n\nTerminusUIModule->TsIconModule \n\n\n\n\n\nTsInputModule \n\nTsInputModule \n\nTsInputModule  -->\n\nTerminusUIModule->TsInputModule \n\n\n\n\n\nTsLinkModule \n\nTsLinkModule \n\nTsLinkModule  -->\n\nTerminusUIModule->TsLinkModule \n\n\n\n\n\nTsLoadingOverlayModule \n\nTsLoadingOverlayModule \n\nTsLoadingOverlayModule  -->\n\nTerminusUIModule->TsLoadingOverlayModule \n\n\n\n\n\nTsLoginFormModule \n\nTsLoginFormModule \n\nTsLoginFormModule  -->\n\nTerminusUIModule->TsLoginFormModule \n\n\n\n\n\nTsMenuModule \n\nTsMenuModule \n\nTsMenuModule  -->\n\nTerminusUIModule->TsMenuModule \n\n\n\n\n\nTsNavigationModule \n\nTsNavigationModule \n\nTsNavigationModule  -->\n\nTerminusUIModule->TsNavigationModule \n\n\n\n\n\nTsPaginatorModule \n\nTsPaginatorModule \n\nTsPaginatorModule  -->\n\nTerminusUIModule->TsPaginatorModule \n\n\n\n\n\nTsRadioGroupModule \n\nTsRadioGroupModule \n\nTsRadioGroupModule  -->\n\nTerminusUIModule->TsRadioGroupModule \n\n\n\n\n\nTsScrollbarsModule \n\nTsScrollbarsModule \n\nTsScrollbarsModule  -->\n\nTerminusUIModule->TsScrollbarsModule \n\n\n\n\n\nTsSearchModule \n\nTsSearchModule \n\nTsSearchModule  -->\n\nTerminusUIModule->TsSearchModule \n\n\n\n\n\nTsSelectModule \n\nTsSelectModule \n\nTsSelectModule  -->\n\nTerminusUIModule->TsSelectModule \n\n\n\n\n\nTsSortModule \n\nTsSortModule \n\nTsSortModule  -->\n\nTerminusUIModule->TsSortModule \n\n\n\n\n\nTsSpacingModule \n\nTsSpacingModule \n\nTsSpacingModule  -->\n\nTerminusUIModule->TsSpacingModule \n\n\n\n\n\nTsTableModule \n\nTsTableModule \n\nTsTableModule  -->\n\nTerminusUIModule->TsTableModule \n\n\n\n\n\nTsToggleModule \n\nTsToggleModule \n\nTsToggleModule  -->\n\nTerminusUIModule->TsToggleModule \n\n\n\n\n\nTsTooltipModule \n\nTsTooltipModule \n\nTsTooltipModule  -->\n\nTerminusUIModule->TsTooltipModule \n\n\n\n\n\nTsValidationMessagesModule \n\nTsValidationMessagesModule \n\nTsValidationMessagesModule  -->\n\nTerminusUIModule->TsValidationMessagesModule \n\n\n\n\n\nTsAutocompleteModule\n\nTsAutocompleteModule\n\nTerminusUIModule -->\n\nTsAutocompleteModule->TerminusUIModule\n\n\n\n\n\nTsAutocompleteComponent \n\nTsAutocompleteComponent \n\nTsAutocompleteComponent  -->\n\nTsAutocompleteModule->TsAutocompleteComponent \n\n\n\n\n\nTsAutofocusModule\n\nTsAutofocusModule\n\nTerminusUIModule -->\n\nTsAutofocusModule->TerminusUIModule\n\n\n\n\n\nTsAutofocusDirective \n\nTsAutofocusDirective \n\nTsAutofocusDirective  -->\n\nTsAutofocusModule->TsAutofocusDirective \n\n\n\n\n\nTsButtonModule\n\nTsButtonModule\n\nTerminusUIModule -->\n\nTsButtonModule->TerminusUIModule\n\n\n\n\n\nTsCSVEntryModule\n\nTsCSVEntryModule\n\nTsCSVEntryModule -->\n\nTsButtonModule->TsCSVEntryModule\n\n\n\n\n\nTsConfirmationModule\n\nTsConfirmationModule\n\nTsConfirmationModule -->\n\nTsButtonModule->TsConfirmationModule\n\n\n\n\n\nTsFileUploadModule\n\nTsFileUploadModule\n\nTsFileUploadModule -->\n\nTsButtonModule->TsFileUploadModule\n\n\n\n\n\nTsLoginFormModule\n\nTsLoginFormModule\n\nTsLoginFormModule -->\n\nTsButtonModule->TsLoginFormModule\n\n\n\n\n\nTsMenuModule\n\nTsMenuModule\n\nTsMenuModule -->\n\nTsButtonModule->TsMenuModule\n\n\n\n\n\nTsPaginatorModule\n\nTsPaginatorModule\n\nTsPaginatorModule -->\n\nTsButtonModule->TsPaginatorModule\n\n\n\n\n\nTsSearchModule\n\nTsSearchModule\n\nTsSearchModule -->\n\nTsButtonModule->TsSearchModule\n\n\n\n\n\nTsButtonComponent \n\nTsButtonComponent \n\nTsButtonComponent  -->\n\nTsButtonModule->TsButtonComponent \n\n\n\nTerminusUIModule -->\n\nTsCSVEntryModule->TerminusUIModule\n\n\n\n\n\nTsCSVEntryComponent \n\nTsCSVEntryComponent \n\nTsCSVEntryComponent  -->\n\nTsCSVEntryModule->TsCSVEntryComponent \n\n\n\n\n\nTsCardModule\n\nTsCardModule\n\nTerminusUIModule -->\n\nTsCardModule->TerminusUIModule\n\n\n\n\n\nTsCardComponent \n\nTsCardComponent \n\nTsCardComponent  -->\n\nTsCardModule->TsCardComponent \n\n\n\n\n\nTsCardTitleDirective \n\nTsCardTitleDirective \n\nTsCardTitleDirective  -->\n\nTsCardModule->TsCardTitleDirective \n\n\n\n\n\nTsChartModule\n\nTsChartModule\n\nTerminusUIModule -->\n\nTsChartModule->TerminusUIModule\n\n\n\n\n\nTsChartComponent \n\nTsChartComponent \n\nTsChartComponent  -->\n\nTsChartModule->TsChartComponent \n\n\n\n\n\nTsCheckboxModule\n\nTsCheckboxModule\n\nTerminusUIModule -->\n\nTsCheckboxModule->TerminusUIModule\n\n\n\nTsLoginFormModule -->\n\nTsCheckboxModule->TsLoginFormModule\n\n\n\n\n\nTsCheckboxComponent \n\nTsCheckboxComponent \n\nTsCheckboxComponent  -->\n\nTsCheckboxModule->TsCheckboxComponent \n\n\n\nTerminusUIModule -->\n\nTsConfirmationModule->TerminusUIModule\n\n\n\n\n\nTsConfirmationDirective \n\nTsConfirmationDirective \n\nTsConfirmationDirective  -->\n\nTsConfirmationModule->TsConfirmationDirective \n\n\n\n\n\nTsCopyModule\n\nTsCopyModule\n\nTerminusUIModule -->\n\nTsCopyModule->TerminusUIModule\n\n\n\n\n\nTsCopyComponent \n\nTsCopyComponent \n\nTsCopyComponent  -->\n\nTsCopyModule->TsCopyComponent \n\n\n\n\n\nTsDateRangeModule\n\nTsDateRangeModule\n\nTerminusUIModule -->\n\nTsDateRangeModule->TerminusUIModule\n\n\n\n\n\nTsDateRangeComponent \n\nTsDateRangeComponent \n\nTsDateRangeComponent  -->\n\nTsDateRangeModule->TsDateRangeComponent \n\n\n\nTerminusUIModule -->\n\nTsFileUploadModule->TerminusUIModule\n\n\n\n\n\nTsFileUploadComponent \n\nTsFileUploadComponent \n\nTsFileUploadComponent  -->\n\nTsFileUploadModule->TsFileUploadComponent \n\n\n\n\n\nTsIconButtonModule\n\nTsIconButtonModule\n\nTerminusUIModule -->\n\nTsIconButtonModule->TerminusUIModule\n\n\n\nTsCSVEntryModule -->\n\nTsIconButtonModule->TsCSVEntryModule\n\n\n\nTsFileUploadModule -->\n\nTsIconButtonModule->TsFileUploadModule\n\n\n\n\n\nTsIconButtonComponent \n\nTsIconButtonComponent \n\nTsIconButtonComponent  -->\n\nTsIconButtonModule->TsIconButtonComponent \n\n\n\n\n\nTsIconModule\n\nTsIconModule\n\nTerminusUIModule -->\n\nTsIconModule->TerminusUIModule\n\n\n\nTsAutocompleteModule -->\n\nTsIconModule->TsAutocompleteModule\n\n\n\nTsButtonModule -->\n\nTsIconModule->TsButtonModule\n\n\n\nTsCSVEntryModule -->\n\nTsIconModule->TsCSVEntryModule\n\n\n\nTsCardModule -->\n\nTsIconModule->TsCardModule\n\n\n\nTsCopyModule -->\n\nTsIconModule->TsCopyModule\n\n\n\nTsFileUploadModule -->\n\nTsIconModule->TsFileUploadModule\n\n\n\nTsIconButtonModule -->\n\nTsIconModule->TsIconButtonModule\n\n\n\n\n\nTsInputModule\n\nTsInputModule\n\nTsInputModule -->\n\nTsIconModule->TsInputModule\n\n\n\n\n\nTsLinkModule\n\nTsLinkModule\n\nTsLinkModule -->\n\nTsIconModule->TsLinkModule\n\n\n\nTsMenuModule -->\n\nTsIconModule->TsMenuModule\n\n\n\n\n\nTsNavigationModule\n\nTsNavigationModule\n\nTsNavigationModule -->\n\nTsIconModule->TsNavigationModule\n\n\n\n\n\nTsRadioGroupModule\n\nTsRadioGroupModule\n\nTsRadioGroupModule -->\n\nTsIconModule->TsRadioGroupModule\n\n\n\n\n\nTsIconComponent \n\nTsIconComponent \n\nTsIconComponent  -->\n\nTsIconModule->TsIconComponent \n\n\n\nTerminusUIModule -->\n\nTsInputModule->TerminusUIModule\n\n\n\nTsAutocompleteModule -->\n\nTsInputModule->TsAutocompleteModule\n\n\n\nTsDateRangeModule -->\n\nTsInputModule->TsDateRangeModule\n\n\n\nTsLoginFormModule -->\n\nTsInputModule->TsLoginFormModule\n\n\n\nTsSearchModule -->\n\nTsInputModule->TsSearchModule\n\n\n\n\n\nTsInputComponent \n\nTsInputComponent \n\nTsInputComponent  -->\n\nTsInputModule->TsInputComponent \n\n\n\nTerminusUIModule -->\n\nTsLinkModule->TerminusUIModule\n\n\n\nTsLoginFormModule -->\n\nTsLinkModule->TsLoginFormModule\n\n\n\n\n\nTsLinkComponent \n\nTsLinkComponent \n\nTsLinkComponent  -->\n\nTsLinkModule->TsLinkComponent \n\n\n\n\n\nTsLoadingOverlayModule\n\nTsLoadingOverlayModule\n\nTerminusUIModule -->\n\nTsLoadingOverlayModule->TerminusUIModule\n\n\n\n\n\nTsLoadingOverlayDirective \n\nTsLoadingOverlayDirective \n\nTsLoadingOverlayDirective  -->\n\nTsLoadingOverlayModule->TsLoadingOverlayDirective \n\n\n\nTerminusUIModule -->\n\nTsLoginFormModule->TerminusUIModule\n\n\n\n\n\nTsLoginFormComponent \n\nTsLoginFormComponent \n\nTsLoginFormComponent  -->\n\nTsLoginFormModule->TsLoginFormComponent \n\n\n\nTerminusUIModule -->\n\nTsMenuModule->TerminusUIModule\n\n\n\nTsPaginatorModule -->\n\nTsMenuModule->TsPaginatorModule\n\n\n\n\n\nTsMenuComponent \n\nTsMenuComponent \n\nTsMenuComponent  -->\n\nTsMenuModule->TsMenuComponent \n\n\n\nTerminusUIModule -->\n\nTsNavigationModule->TerminusUIModule\n\n\n\n\n\nTsNavigationComponent \n\nTsNavigationComponent \n\nTsNavigationComponent  -->\n\nTsNavigationModule->TsNavigationComponent \n\n\n\nTerminusUIModule -->\n\nTsPaginatorModule->TerminusUIModule\n\n\n\n\n\nTsTableModule\n\nTsTableModule\n\nTsTableModule -->\n\nTsPaginatorModule->TsTableModule\n\n\n\n\n\nTsPaginatorComponent \n\nTsPaginatorComponent \n\nTsPaginatorComponent  -->\n\nTsPaginatorModule->TsPaginatorComponent \n\n\n\nTerminusUIModule -->\n\nTsRadioGroupModule->TerminusUIModule\n\n\n\n\n\nTsRadioGroupComponent \n\nTsRadioGroupComponent \n\nTsRadioGroupComponent  -->\n\nTsRadioGroupModule->TsRadioGroupComponent \n\n\n\n\n\nTsScrollbarsModule\n\nTsScrollbarsModule\n\nTerminusUIModule -->\n\nTsScrollbarsModule->TerminusUIModule\n\n\n\n\n\nTsScrollbarsComponent \n\nTsScrollbarsComponent \n\nTsScrollbarsComponent  -->\n\nTsScrollbarsModule->TsScrollbarsComponent \n\n\n\nTerminusUIModule -->\n\nTsSearchModule->TerminusUIModule\n\n\n\n\n\nTsSearchComponent \n\nTsSearchComponent \n\nTsSearchComponent  -->\n\nTsSearchModule->TsSearchComponent \n\n\n\n\n\nTsSelectModule\n\nTsSelectModule\n\nTerminusUIModule -->\n\nTsSelectModule->TerminusUIModule\n\n\n\nTsPaginatorModule -->\n\nTsSelectModule->TsPaginatorModule\n\n\n\n\n\nTsSelectComponent \n\nTsSelectComponent \n\nTsSelectComponent  -->\n\nTsSelectModule->TsSelectComponent \n\n\n\n\n\nTsSortModule\n\nTsSortModule\n\nTerminusUIModule -->\n\nTsSortModule->TerminusUIModule\n\n\n\nTsTableModule -->\n\nTsSortModule->TsTableModule\n\n\n\n\n\nTsSortDirective \n\nTsSortDirective \n\nTsSortDirective  -->\n\nTsSortModule->TsSortDirective \n\n\n\n\n\nTsSortHeaderComponent \n\nTsSortHeaderComponent \n\nTsSortHeaderComponent  -->\n\nTsSortModule->TsSortHeaderComponent \n\n\n\n\n\nTsSpacingModule\n\nTsSpacingModule\n\nTerminusUIModule -->\n\nTsSpacingModule->TerminusUIModule\n\n\n\nTsLoginFormModule -->\n\nTsSpacingModule->TsLoginFormModule\n\n\n\n\n\nTsVerticalSpacingDirective \n\nTsVerticalSpacingDirective \n\nTsVerticalSpacingDirective  -->\n\nTsSpacingModule->TsVerticalSpacingDirective \n\n\n\nTerminusUIModule -->\n\nTsTableModule->TerminusUIModule\n\n\n\n\n\nTsCellDefDirective \n\nTsCellDefDirective \n\nTsCellDefDirective  -->\n\nTsTableModule->TsCellDefDirective \n\n\n\n\n\nTsCellDirective \n\nTsCellDirective \n\nTsCellDirective  -->\n\nTsTableModule->TsCellDirective \n\n\n\n\n\nTsColumnDefDirective \n\nTsColumnDefDirective \n\nTsColumnDefDirective  -->\n\nTsTableModule->TsColumnDefDirective \n\n\n\n\n\nTsHeaderCellDefDirective \n\nTsHeaderCellDefDirective \n\nTsHeaderCellDefDirective  -->\n\nTsTableModule->TsHeaderCellDefDirective \n\n\n\n\n\nTsHeaderCellDirective \n\nTsHeaderCellDirective \n\nTsHeaderCellDirective  -->\n\nTsTableModule->TsHeaderCellDirective \n\n\n\n\n\nTsHeaderRowComponent \n\nTsHeaderRowComponent \n\nTsHeaderRowComponent  -->\n\nTsTableModule->TsHeaderRowComponent \n\n\n\n\n\nTsHeaderRowDefDirective \n\nTsHeaderRowDefDirective \n\nTsHeaderRowDefDirective  -->\n\nTsTableModule->TsHeaderRowDefDirective \n\n\n\n\n\nTsRowComponent \n\nTsRowComponent \n\nTsRowComponent  -->\n\nTsTableModule->TsRowComponent \n\n\n\n\n\nTsRowDefDirective \n\nTsRowDefDirective \n\nTsRowDefDirective  -->\n\nTsTableModule->TsRowDefDirective \n\n\n\n\n\nTsTableComponent \n\nTsTableComponent \n\nTsTableComponent  -->\n\nTsTableModule->TsTableComponent \n\n\n\n\n\nTsToggleModule\n\nTsToggleModule\n\nTerminusUIModule -->\n\nTsToggleModule->TerminusUIModule\n\n\n\n\n\nTsToggleComponent \n\nTsToggleComponent \n\nTsToggleComponent  -->\n\nTsToggleModule->TsToggleComponent \n\n\n\n\n\nTsTooltipModule\n\nTsTooltipModule\n\nTerminusUIModule -->\n\nTsTooltipModule->TerminusUIModule\n\n\n\nTsCSVEntryModule -->\n\nTsTooltipModule->TsCSVEntryModule\n\n\n\nTsCopyModule -->\n\nTsTooltipModule->TsCopyModule\n\n\n\nTsFileUploadModule -->\n\nTsTooltipModule->TsFileUploadModule\n\n\n\nTsPaginatorModule -->\n\nTsTooltipModule->TsPaginatorModule\n\n\n\n\n\nTsTooltipComponent \n\nTsTooltipComponent \n\nTsTooltipComponent  -->\n\nTsTooltipModule->TsTooltipComponent \n\n\n\n\n\nTsValidationMessagesModule\n\nTsValidationMessagesModule\n\nTerminusUIModule -->\n\nTsValidationMessagesModule->TerminusUIModule\n\n\n\nTsAutocompleteModule -->\n\nTsValidationMessagesModule->TsAutocompleteModule\n\n\n\nTsFileUploadModule -->\n\nTsValidationMessagesModule->TsFileUploadModule\n\n\n\nTsInputModule -->\n\nTsValidationMessagesModule->TsInputModule\n\n\n\nTsRadioGroupModule -->\n\nTsValidationMessagesModule->TsRadioGroupModule\n\n\n\nTsSelectModule -->\n\nTsValidationMessagesModule->TsSelectModule\n\n\n\n\n\nTsValidationMessagesComponent \n\nTsValidationMessagesComponent \n\nTsValidationMessagesComponent  -->\n\nTsValidationMessagesModule->TsValidationMessagesComponent \n\n\n\n\n\nTsValidatorsService\n\nTsValidatorsService\n\nTerminusUIModule -->\n\nTsValidatorsService->TerminusUIModule\n\n\n\nTsInputModule -->\n\nTsValidatorsService->TsInputModule\n\n\n\nTsLoginFormModule -->\n\nTsValidatorsService->TsLoginFormModule\n\n\n\n\n\nTsAutocompleteComponent\n\nTsAutocompleteComponent\n\nTsAutocompleteModule -->\n\nTsAutocompleteComponent->TsAutocompleteModule\n\n\n\n\n\nTsAutofocusDirective\n\nTsAutofocusDirective\n\nTsAutofocusModule -->\n\nTsAutofocusDirective->TsAutofocusModule\n\n\n\n\n\nTsButtonComponent\n\nTsButtonComponent\n\nTsButtonModule -->\n\nTsButtonComponent->TsButtonModule\n\n\n\n\n\nTsCSVEntryComponent\n\nTsCSVEntryComponent\n\nTsCSVEntryModule -->\n\nTsCSVEntryComponent->TsCSVEntryModule\n\n\n\n\n\nTsCardComponent\n\nTsCardComponent\n\nTsCardModule -->\n\nTsCardComponent->TsCardModule\n\n\n\n\n\nTsCardTitleDirective\n\nTsCardTitleDirective\n\nTsCardModule -->\n\nTsCardTitleDirective->TsCardModule\n\n\n\n\n\nTsChartComponent\n\nTsChartComponent\n\nTsChartModule -->\n\nTsChartComponent->TsChartModule\n\n\n\n\n\nTsAmChartsService\n\nTsAmChartsService\n\nTsChartModule -->\n\nTsAmChartsService->TsChartModule\n\n\n\n\n\nTsCheckboxComponent\n\nTsCheckboxComponent\n\nTsCheckboxModule -->\n\nTsCheckboxComponent->TsCheckboxModule\n\n\n\n\n\nCUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR\n\nTsCheckboxComponent -->\n\nCUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR->TsCheckboxComponent\n\n\n\n\n\nTsConfirmationDirective\n\nTsConfirmationDirective\n\nTsConfirmationModule -->\n\nTsConfirmationDirective->TsConfirmationModule\n\n\n\n\n\nTsConfirmationModalComponent\n\nTsConfirmationModalComponent\n\nTsConfirmationModule -->\n\nTsConfirmationModalComponent->TsConfirmationModule\n\n\n\n\n\nTsCopyComponent\n\nTsCopyComponent\n\nTsCopyModule -->\n\nTsCopyComponent->TsCopyModule\n\n\n\n\n\nTsDateRangeComponent\n\nTsDateRangeComponent\n\nTsDateRangeModule -->\n\nTsDateRangeComponent->TsDateRangeModule\n\n\n\n\n\nTsFileUploadComponent\n\nTsFileUploadComponent\n\nTsFileUploadModule -->\n\nTsFileUploadComponent->TsFileUploadModule\n\n\n\n\n\nCUSTOM_FILE_UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_FILE_UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR\n\nTsFileUploadComponent -->\n\nCUSTOM_FILE_UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR->TsFileUploadComponent\n\n\n\n\n\nTsDropProtectionService\n\nTsDropProtectionService\n\nTsFileUploadModule -->\n\nTsDropProtectionService->TsFileUploadModule\n\n\n\n\n\nTsIconButtonComponent\n\nTsIconButtonComponent\n\nTsIconButtonModule -->\n\nTsIconButtonComponent->TsIconButtonModule\n\n\n\n\n\nTsIconComponent\n\nTsIconComponent\n\nTsIconModule -->\n\nTsIconComponent->TsIconModule\n\n\n\n\n\nTsInputComponent\n\nTsInputComponent\n\nTsInputModule -->\n\nTsInputComponent->TsInputModule\n\n\n\n\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR\n\nTsInputComponent -->\n\nCUSTOM_INPUT_CONTROL_VALUE_ACCESSOR->TsInputComponent\n\n\n\n\n\n{\n    : , : ,\n}\n\n{\n    : , : ,\n}\n\nTsInputComponent -->\n\n{\n    : , : ,\n}->TsInputComponent\n\n\n\nTsInputComponent -->\n\n{\n    : , : ,\n}->TsInputComponent\n\n\n\n\n\nTsLinkComponent\n\nTsLinkComponent\n\nTsLinkModule -->\n\nTsLinkComponent->TsLinkModule\n\n\n\n\n\nTsLoadingOverlayComponent\n\nTsLoadingOverlayComponent\n\nTsLoadingOverlayModule -->\n\nTsLoadingOverlayComponent->TsLoadingOverlayModule\n\n\n\n\n\nTsLoadingOverlayDirective\n\nTsLoadingOverlayDirective\n\nTsLoadingOverlayModule -->\n\nTsLoadingOverlayDirective->TsLoadingOverlayModule\n\n\n\n\n\nTsLoginFormComponent\n\nTsLoginFormComponent\n\nTsLoginFormModule -->\n\nTsLoginFormComponent->TsLoginFormModule\n\n\n\n\n\nTsMenuComponent\n\nTsMenuComponent\n\nTsMenuModule -->\n\nTsMenuComponent->TsMenuModule\n\n\n\n\n\nTsNavigationComponent\n\nTsNavigationComponent\n\nTsNavigationModule -->\n\nTsNavigationComponent->TsNavigationModule\n\n\n\n\n\nTsPaginatorComponent\n\nTsPaginatorComponent\n\nTsPaginatorModule -->\n\nTsPaginatorComponent->TsPaginatorModule\n\n\n\n\n\nTsDatePipe\n\nTsDatePipe\n\n\n\nTsPipesModule\n\nTsPipesModule\n\nTsPipesModule -->\n\nTsDatePipe->TsPipesModule\n\n\n\n\n\nTsRoundNumberPipe\n\nTsRoundNumberPipe\n\nTsPipesModule -->\n\nTsRoundNumberPipe->TsPipesModule\n\n\n\n\n\nTsSentenceCasePipe\n\nTsSentenceCasePipe\n\nTsPipesModule -->\n\nTsSentenceCasePipe->TsPipesModule\n\n\n\n\n\nTsTimeAgoPipe\n\nTsTimeAgoPipe\n\nTsPipesModule -->\n\nTsTimeAgoPipe->TsPipesModule\n\n\n\n\n\nTsTitleCasePipe\n\nTsTitleCasePipe\n\nTsPipesModule -->\n\nTsTitleCasePipe->TsPipesModule\n\n\n\n\n\nTsDatePipe \n\nTsDatePipe \n\nTsDatePipe  -->\n\nTsPipesModule->TsDatePipe \n\n\n\n\n\nTsRoundNumberPipe \n\nTsRoundNumberPipe \n\nTsRoundNumberPipe  -->\n\nTsPipesModule->TsRoundNumberPipe \n\n\n\n\n\nTsSentenceCasePipe \n\nTsSentenceCasePipe \n\nTsSentenceCasePipe  -->\n\nTsPipesModule->TsSentenceCasePipe \n\n\n\n\n\nTsTimeAgoPipe \n\nTsTimeAgoPipe \n\nTsTimeAgoPipe  -->\n\nTsPipesModule->TsTimeAgoPipe \n\n\n\n\n\nTsTitleCasePipe \n\nTsTitleCasePipe \n\nTsTitleCasePipe  -->\n\nTsPipesModule->TsTitleCasePipe \n\n\n\n\n\nTsRadioGroupComponent\n\nTsRadioGroupComponent\n\nTsRadioGroupModule -->\n\nTsRadioGroupComponent->TsRadioGroupModule\n\n\n\n\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR\n\nTsRadioGroupComponent -->\n\nCUSTOM_RADIO_CONTROL_VALUE_ACCESSOR->TsRadioGroupComponent\n\n\n\n\n\nTsScrollbarsComponent\n\nTsScrollbarsComponent\n\nTsScrollbarsModule -->\n\nTsScrollbarsComponent->TsScrollbarsModule\n\n\n\n\n\nTsSearchComponent\n\nTsSearchComponent\n\nTsSearchModule -->\n\nTsSearchComponent->TsSearchModule\n\n\n\n\n\nTsSelectComponent\n\nTsSelectComponent\n\nTsSelectModule -->\n\nTsSelectComponent->TsSelectModule\n\n\n\n\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR\n\nTsSelectComponent -->\n\nCUSTOM_SELECT_CONTROL_VALUE_ACCESSOR->TsSelectComponent\n\n\n\n\n\nTsSortDirective\n\nTsSortDirective\n\nTsSortModule -->\n\nTsSortDirective->TsSortModule\n\n\n\n\n\nTsSortHeaderComponent\n\nTsSortHeaderComponent\n\nTsSortModule -->\n\nTsSortHeaderComponent->TsSortModule\n\n\n\n\n\nTsVerticalSpacingDirective\n\nTsVerticalSpacingDirective\n\nTsSpacingModule -->\n\nTsVerticalSpacingDirective->TsSpacingModule\n\n\n\n\n\nTsCellDefDirective\n\nTsCellDefDirective\n\nTsTableModule -->\n\nTsCellDefDirective->TsTableModule\n\n\n\n\n\nTsCellDirective\n\nTsCellDirective\n\nTsTableModule -->\n\nTsCellDirective->TsTableModule\n\n\n\n\n\nTsColumnDefDirective\n\nTsColumnDefDirective\n\nTsTableModule -->\n\nTsColumnDefDirective->TsTableModule\n\n\n\n\n\nTsHeaderCellDefDirective\n\nTsHeaderCellDefDirective\n\nTsTableModule -->\n\nTsHeaderCellDefDirective->TsTableModule\n\n\n\n\n\nTsHeaderCellDirective\n\nTsHeaderCellDirective\n\nTsTableModule -->\n\nTsHeaderCellDirective->TsTableModule\n\n\n\n\n\nTsHeaderRowComponent\n\nTsHeaderRowComponent\n\nTsTableModule -->\n\nTsHeaderRowComponent->TsTableModule\n\n\n\n\n\nTsHeaderRowDefDirective\n\nTsHeaderRowDefDirective\n\nTsTableModule -->\n\nTsHeaderRowDefDirective->TsTableModule\n\n\n\n\n\nTsRowComponent\n\nTsRowComponent\n\nTsTableModule -->\n\nTsRowComponent->TsTableModule\n\n\n\n\n\nTsRowDefDirective\n\nTsRowDefDirective\n\nTsTableModule -->\n\nTsRowDefDirective->TsTableModule\n\n\n\n\n\nTsTableComponent\n\nTsTableComponent\n\nTsTableModule -->\n\nTsTableComponent->TsTableModule\n\n\n\n\n\n{ : , :  }\n\n{ : , :  }\n\nTsCellDefDirective -->\n\n{ : , :  }->TsCellDefDirective\n\n\n\nTsColumnDefDirective -->\n\n{ : , :  }->TsColumnDefDirective\n\n\n\nTsHeaderCellDefDirective -->\n\n{ : , :  }->TsHeaderCellDefDirective\n\n\n\nTsHeaderRowDefDirective -->\n\n{ : , :  }->TsHeaderRowDefDirective\n\n\n\nTsRowDefDirective -->\n\n{ : , :  }->TsRowDefDirective\n\n\n\n\n\nTsToggleComponent\n\nTsToggleComponent\n\nTsToggleModule -->\n\nTsToggleComponent->TsToggleModule\n\n\n\n\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR\n\nTsToggleComponent -->\n\nCUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR->TsToggleComponent\n\n\n\n\n\nTsTooltipComponent\n\nTsTooltipComponent\n\nTsTooltipModule -->\n\nTsTooltipComponent->TsTooltipModule\n\n\n\n\n\nTsValidationMessagesComponent\n\nTsValidationMessagesComponent\n\nTsValidationMessagesModule -->\n\nTsValidationMessagesComponent->TsValidationMessagesModule\n\n\n\n\n\nTsValidationMessageService\n\nTsValidationMessageService\n\nTsValidationMessagesModule -->\n\nTsValidationMessageService->TsValidationMessagesModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            32 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        31 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        13 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        13 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        22 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TS_CUSTOM_ICON   (terminus-ui/.../icon.component.ts)\n                        \n                        \n                            TsAspectRatioTypes   (terminus-ui/.../card.component.ts)\n                        \n                        \n                            TsAutocompleteComparatorFn   (terminus-ui/.../autocomplete.component.ts)\n                        \n                        \n                            TsAutocompleteFormatterFn   (terminus-ui/.../autocomplete.component.ts)\n                        \n                        \n                            TsButtonActionTypes   (terminus-ui/.../button.component.ts)\n                        \n                        \n                            TsButtonFormatTypes   (terminus-ui/.../button.component.ts)\n                        \n                        \n                            TsButtonFunctionTypes   (terminus-ui/.../button.component.ts)\n                        \n                        \n                            TsCardBorderOptions   (terminus-ui/.../card.component.ts)\n                        \n                        \n                            TsChartVisualizationOptions   (terminus-ui/.../chart.component.ts)\n                        \n                        \n                            TsDateFilterFunction   (terminus-ui/.../input.component.ts)\n                        \n                        \n                            TsDateTypes   (terminus-ui/.../date.pipe.ts)\n                        \n                        \n                            TsFileAcceptedMimeTypes   (terminus-ui/.../mime-types.ts)\n                        \n                        \n                            TsFileImageDimensionConstraints   (terminus-ui/.../image-dimension-constraints.ts)\n                        \n                        \n                            TsInputAutocompleteTypes   (terminus-ui/.../input.component.ts)\n                        \n                        \n                            TsInputTypes   (terminus-ui/.../input.component.ts)\n                        \n                        \n                            TsMaskFunction   (terminus-ui/.../input.component.ts)\n                        \n                        \n                            TsMaskShortcutOptions   (terminus-ui/.../input.component.ts)\n                        \n                        \n                            TsMenuPositionTypesX   (terminus-ui/.../menu.component.ts)\n                        \n                        \n                            TsMenuPositionTypesY   (terminus-ui/.../menu.component.ts)\n                        \n                        \n                            TsMenuTriggerTypes   (terminus-ui/.../menu.component.ts)\n                        \n                        \n                            TsNavigationItem   (terminus-ui/.../navigation.component.ts)\n                        \n                        \n                            TsRadioFormatFn   (terminus-ui/.../radio-group.component.ts)\n                        \n                        \n                            TsScrollbarsScrollDirections   (terminus-ui/.../scrollbars.component.ts)\n                        \n                        \n                            TsSelectFormatFn   (terminus-ui/.../select.component.ts)\n                        \n                        \n                            TsSortDirection   (terminus-ui/.../sort.directive.ts)\n                        \n                        \n                            TsStyleThemeTypes   (terminus-ui/.../style-theme.types.ts)\n                        \n                        \n                            TsTooltipPositionTypes   (terminus-ui/.../tooltip.component.ts)\n                        \n                        \n                            TsVerticalSpacingTypes   (terminus-ui/.../vertical-spacing.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    terminus-ui/src/icon/icon.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TS_CUSTOM_ICON\n                    \n                \n                    \n                        \n                            Currently supported custom icons\n\n                        \n                    \n                \n                    \n                        TS_CUSTOM_ICON:     \n\n                    \n                \n            \n        \n\n    terminus-ui/src/card/card.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsAspectRatioTypes\n                    \n                \n                    \n                        \n                            Define the allowed aspect ratios. Used in TsCardComponent\n\n                        \n                    \n                \n                    \n                        TsAspectRatioTypes:     \"16:9\" | \"4:3\" | \"3:2\" | \"5:4\" | \"1:1\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsCardBorderOptions\n                    \n                \n                    \n                        \n                            Define allowed border sides. Used in TsCardComponent. Border color determined by the theme.\n\n                        \n                    \n                \n                    \n                        TsCardBorderOptions:     \"none\" | \"left\" | \"right\" | \"top\" | \"bottom\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/autocomplete/autocomplete.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsAutocompleteComparatorFn\n                    \n                \n                    \n                        \n                            Define a type for allowed TsAutocompleteComponent comparator function\n\n                        \n                    \n                \n                    \n                        TsAutocompleteComparatorFn:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsAutocompleteFormatterFn\n                    \n                \n                    \n                        \n                            Define a type for allowed TsAutocompleteComponent formatter function\n\n                        \n                    \n                \n                    \n                        TsAutocompleteFormatterFn:     function\n\n                    \n                \n            \n        \n\n    terminus-ui/src/button/button.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsButtonActionTypes\n                    \n                \n                    \n                        \n                            Define the allowed TsButtonComponent action types\n\n                        \n                    \n                \n                    \n                        TsButtonActionTypes:     \"Button\" | \"Submit\" | \"Menu\" | \"Reset\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsButtonFormatTypes\n                    \n                \n                    \n                        \n                            Define the allowed TsButtonComponent format types\n\n                        \n                    \n                \n                    \n                        TsButtonFormatTypes:     \"filled\" | \"hollow\" | \"collapsable\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsButtonFunctionTypes\n                    \n                \n                    \n                        \n                            Define the allowed TsButtonComponent action types\n\n                        \n                    \n                \n                    \n                        TsButtonFunctionTypes:     \"button\" | \"search\" | \"submit\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/chart/chart.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsChartVisualizationOptions\n                    \n                \n                    \n                        \n                            Define the supported chart visualizations\n\n                        \n                    \n                \n                    \n                        TsChartVisualizationOptions:     \"pie\" | \"xy\" | \"map\" | \"radar\" | \"treemap\" | \"sankey\" | \"chord\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/input/input.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsDateFilterFunction\n                    \n                \n                    \n                        \n                            Define the function type for date filters. Used by TsInputComponent\n\n                        \n                    \n                \n                    \n                        TsDateFilterFunction:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsInputAutocompleteTypes\n                    \n                \n                    \n                        \n                            Define the allowed autocomplete variations for TsInputComponent\nNOTE: This is not all valid types; only the ones this library supports.\n\n                        \n                    \n                \n                    \n                        TsInputAutocompleteTypes:     \"off\" | \"on\" | \"name\" | \"email\" | \"username\" | \"new-password\" | \"current-password\" | \"tel\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsInputTypes\n                    \n                \n                    \n                        \n                            Define the allowed TsInputComponent input types\n\n                        \n                    \n                \n                    \n                        TsInputTypes:     \"text\" | \"password\" | \"email\" | \"hidden\" | \"number\" | \"search\" | \"tel\" | \"url\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsMaskFunction\n                    \n                \n                    \n                        \n                            A function that returns an array of RegExp (used to determine postal code RegExp in TsInputComponent)\n\n                        \n                    \n                \n                    \n                        TsMaskFunction:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsMaskShortcutOptions\n                    \n                \n                    \n                        \n                            Define the allowed mask shortcut option. Used by TsInputComponent\n\n                        \n                    \n                \n                    \n                        TsMaskShortcutOptions:     \"currency\" | \"date\" | \"number\" | \"percentage\" | \"phone\" | \"postal\" | \"default\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/pipes/date/date.pipe.ts\n    \n        \n            \n                \n                    \n                        \n                        TsDateTypes\n                    \n                \n                    \n                        \n                            Define the allowed date formats for the TsDatePipe.\n\n                        \n                    \n                \n                    \n                        TsDateTypes:     \"short\" | \"medium\" | \"extended\" | \"timestamp\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/file-upload/mime-types.ts\n    \n        \n            \n                \n                    \n                        \n                        TsFileAcceptedMimeTypes\n                    \n                \n                    \n                        \n                            Define the allowed mime types for TsFileUploadComponent\n\n                        \n                    \n                \n                    \n                        TsFileAcceptedMimeTypes:     \"text/csv\" | \"image/jpeg\" | \"image/jpg\" | \"image/png\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/file-upload/image-dimension-constraints.ts\n    \n        \n            \n                \n                    \n                        \n                        TsFileImageDimensionConstraints\n                    \n                \n                    \n                        \n                            An array of file size constraints\n\n                        \n                    \n                \n                    \n                        TsFileImageDimensionConstraints:     TsFileImageDimensionContraint[]\n\n                    \n                \n            \n        \n\n    terminus-ui/src/menu/menu.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsMenuPositionTypesX\n                    \n                \n                    \n                        \n                            Define the allowed X positions for a menu\n\n                        \n                    \n                \n                    \n                        TsMenuPositionTypesX:     \"before\" | \"after\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsMenuPositionTypesY\n                    \n                \n                    \n                        \n                            Define the allowed Y positions for a menu\n\n                        \n                    \n                \n                    \n                        TsMenuPositionTypesY:     \"above\" | \"below\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        TsMenuTriggerTypes\n                    \n                \n                    \n                        \n                            Define the allowed trigger types for a menu\n\n                        \n                    \n                \n                    \n                        TsMenuTriggerTypes:     \"default\" | \"utility\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/navigation/navigation.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsNavigationItem\n                    \n                \n                    \n                        \n                            Define the allowed keys and types for an item passed to the TsNavigationComponent\n\n                        \n                    \n                \n                    \n                        TsNavigationItem:     TsNavigationLinkItem | TsNavigationActionItem\n\n                    \n                \n            \n        \n\n    terminus-ui/src/radio-group/radio-group.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsRadioFormatFn\n                    \n                \n                    \n                        \n                            Expose the formatter function type used by TsRadioGroupComponent\n\n                        \n                    \n                \n                    \n                        TsRadioFormatFn:     function\n\n                    \n                \n            \n        \n\n    terminus-ui/src/scrollbars/scrollbars.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsScrollbarsScrollDirections\n                    \n                \n                    \n                        \n                            Define possible scroll directions for TsScrollbarsScrollDirections.\n\n                        \n                    \n                \n                    \n                        TsScrollbarsScrollDirections:     \"any\" | \"both\" | \"x\" | \"y\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/select/select.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsSelectFormatFn\n                    \n                \n                    \n                        \n                            Expose the formatter function type\n\n                        \n                    \n                \n                    \n                        TsSelectFormatFn:     function\n\n                    \n                \n            \n        \n\n    terminus-ui/src/sort/sort.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        TsSortDirection\n                    \n                \n                    \n                        \n                            Define the allowed sort directions for {@link TsSort}\n\n                        \n                    \n                \n                    \n                        TsSortDirection:     \"asc\" | \"desc\" | \"\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/utilities/types/style-theme.types.ts\n    \n        \n            \n                \n                    \n                        \n                        TsStyleThemeTypes\n                    \n                \n                    \n                        \n                            Define the allowed theme types\n\n                        \n                    \n                \n                    \n                        TsStyleThemeTypes:     \"primary\" | \"accent\" | \"warn\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/tooltip/tooltip.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TsTooltipPositionTypes\n                    \n                \n                    \n                        \n                            Define the accepted string values for the TsTooltipComponent position\n\n                        \n                    \n                \n                    \n                        TsTooltipPositionTypes:     \"left\" | \"right\" | \"above\" | \"below\" | \"before\" | \"after\"\n\n                    \n                \n            \n        \n\n    terminus-ui/src/spacing/vertical-spacing.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        TsVerticalSpacingTypes\n                    \n                \n                    \n                        \n                            Define the accepted string values for TsVerticalSpacingDirective\n\n                        \n                    \n                \n                    \n                        TsVerticalSpacingTypes:     \"small--2\" | \"small--1\" | \"small--0\" | \"none\" | \"default--0\" | \"large--0\" | \"large--1\" | \"large--2\" | \"large--3\" | \"large--4\" | \"large--5\" | \"large--6\"\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _TsSortHeaderMixinBase   (terminus-ui/.../sort-header.component.ts)\n                        \n                        \n                            _TsSortMixinBase   (terminus-ui/.../sort.directive.ts)\n                        \n                        \n                            allowedMaskShorcuts   (terminus-ui/.../input.component.ts)\n                        \n                        \n                            autocompleteDefault   (terminus-ui/.../input.component.ts)\n                        \n                        \n                            base   (terminus-ui/.../spacing.constant.ts)\n                        \n                        \n                            BYTES_PER_KB   (terminus-ui/.../selected-file.ts)\n                        \n                        \n                            creditCardMessage   (terminus-ui/.../validation-message.service.ts)\n                        \n                        \n                            CSV_ICON   (terminus-ui/.../csv.ts)\n                        \n                        \n                            CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR   (terminus-ui/.../checkbox.component.ts)\n                        \n                        \n                            CUSTOM_FILE_UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR   (terminus-ui/.../file-upload.component.ts)\n                        \n                        \n                            CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR   (terminus-ui/.../input.component.ts)\n                        \n                        \n                            CUSTOM_RADIO_CONTROL_VALUE_ACCESSOR   (terminus-ui/.../radio-group.component.ts)\n                        \n                        \n                            CUSTOM_SELECT_CONTROL_VALUE_ACCESSOR   (terminus-ui/.../select.component.ts)\n                        \n                        \n                            CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR   (terminus-ui/.../toggle.component.ts)\n                        \n                        \n                            emailMessage   (terminus-ui/.../validation-message.service.ts)\n                        \n                        \n                            floatingLabelScale   (terminus-ui/.../input.component.ts)\n                        \n                        \n                            MAXIMUM_KILOBYTES_PER_FILE   (terminus-ui/.../file-upload.component.ts)\n                        \n                        \n                            nextUniqueId   (terminus-ui/.../csv-entry.component.ts)\n                        \n                        \n                            nextUniqueId   (terminus-ui/.../input.component.ts)\n                        \n                        \n                            nextUniqueId   (terminus-ui/.../card.component.ts)\n                        \n                        \n                            nextUniqueId   (terminus-ui/.../radio-group.component.ts)\n                        \n                        \n                            nextUniqueId   (terminus-ui/.../checkbox.component.ts)\n                        \n                        \n                            nextUniqueId   (terminus-ui/.../scrollbars.component.ts)\n                        \n                        \n                            nextUniqueId   (terminus-ui/.../file-upload.component.ts)\n                        \n                        \n                            nextUniqueId   (terminus-ui/.../validation-messages.component.ts)\n                        \n                        \n                            NUMBER_ONLY_REGEX   (terminus-ui/.../input.component.ts)\n                        \n                        \n                            NUMBER_WITH_DECIMAL_REGEX   (terminus-ui/.../input.component.ts)\n                        \n                        \n                            outlineGapPadding   (terminus-ui/.../input.component.ts)\n                        \n                        \n                            passwordMessage   (terminus-ui/.../validation-message.service.ts)\n                        \n                        \n                            SORT_ANIMATION_TRANSITION   (terminus-ui/.../sort-animations.ts)\n                        \n                        \n                            TS_ACCEPTED_MIME_TYPES   (terminus-ui/.../mime-types.ts)\n                        \n                        \n                            TS_AMCHARTS_TOKEN   (terminus-ui/.../amcharts.service.ts)\n                        \n                        \n                            TS_CUSTOM_ICONS   (terminus-ui/.../icon.component.ts)\n                        \n                        \n                            TS_DATE_FORMATS   (terminus-ui/.../date-adapter.ts)\n                        \n                        \n                            TS_SORT_HEADER_INTL_PROVIDER   (terminus-ui/.../sort-header-intl.ts)\n                        \n                        \n                            TS_SPACING   (terminus-ui/.../spacing.constant.ts)\n                        \n                        \n                            tsButtonFormatTypesArray   (terminus-ui/.../button.component.ts)\n                        \n                        \n                            tsSortAnimations   (terminus-ui/.../sort-animations.ts)\n                        \n                        \n                            tsStyleThemeTypesArray   (terminus-ui/.../style-theme.types.ts)\n                        \n                        \n                            VERSION   (terminus-ui/.../version.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    terminus-ui/src/sort/sort-header.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _TsSortHeaderMixinBase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _TsSortHeaderMixinBase:     \n\n                    \n                \n                    \n                        \n                            Default value : mixinDisabled(TsSortHeaderBase)\n                        \n                    \n\n\n            \n        \n\n    terminus-ui/src/sort/sort.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _TsSortMixinBase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _TsSortMixinBase:     \n\n                    \n                \n                    \n                        \n                            Default value : mixinDisabled(TsSortBase)\n                        \n                    \n\n\n            \n        \n\n    terminus-ui/src/input/input.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            allowedMaskShorcuts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        allowedMaskShorcuts:     TsMaskShortcutOptions[]\n\n                    \n                \n                    \n                        \n                            Type :     TsMaskShortcutOptions[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'currency',\n  'date',\n  'number',\n  'percentage',\n  'phone',\n  'postal',\n  'default',\n]\n                        \n                    \n\n                \n                    \n                        Create an array used to verify the passed in shortcut is valid. Used by TsInputComponent\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autocompleteDefault\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autocompleteDefault:     TsInputAutocompleteTypes\n\n                    \n                \n                    \n                        \n                            Type :     TsInputAutocompleteTypes\n\n                        \n                    \n                    \n                        \n                            Default value : 'on'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsInputComponent),\n  multi: true,\n}\n                        \n                    \n\n                \n                    \n                        Custom control value accessor for our component.\nThis allows our custom components to access the underlying form validation via our base class\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            floatingLabelScale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        floatingLabelScale:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0.75\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextUniqueId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nextUniqueId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NUMBER_ONLY_REGEX\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NUMBER_ONLY_REGEX:     RegExp\n\n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /[^0-9]/g\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NUMBER_WITH_DECIMAL_REGEX\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NUMBER_WITH_DECIMAL_REGEX:     RegExp\n\n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /[^0-9.]/g\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            outlineGapPadding\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        outlineGapPadding:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n\n\n            \n        \n\n    terminus-ui/src/spacing/spacing.constant.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            base\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        base:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 16\n                        \n                    \n\n                \n                    \n                        NOTE: The base value and the mathmatics behind these spacings must exactly reflect the spacings\ndefined in lib/src/scss/helpers/_spacing.scss\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TS_SPACING\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TS_SPACING:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  none: [\n    '0',\n  ],\n  small: [\n    Math.floor(base - 4) + 'px',\n    Math.floor(base / 2) + 'px',\n    Math.floor(base / 4) + 'px',\n  ],\n  default: [\n    base + 'px',\n  ],\n  large : [\n    Math.floor(base / 2 * 3)  + 'px',\n    Math.floor(base / 2 * 4)  + 'px',\n    Math.floor(base / 2 * 5)  + 'px',\n    Math.floor(base / 2 * 6)  + 'px',\n    Math.floor(base / 2 * 7)  + 'px',\n    Math.floor(base / 2 * 9)  + 'px',\n    Math.floor(base / 2 * 12) + 'px',\n  ],\n}\n                        \n                    \n\n                \n                    \n                        JS representation of the values in _spacing.scss\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/file-upload/selected-file.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BYTES_PER_KB\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        BYTES_PER_KB:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1024\n                        \n                    \n\n                \n                    \n                        The number of bytes per kilobyte (for calculations)\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/validation-messages/validation-message.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            creditCardMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        creditCardMessage:     \n\n                    \n                \n                    \n                        \n                            Default value : `Invalid credit card number.`\n                        \n                    \n\n                \n                    \n                        Define the error message for an invalid credit card\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailMessage:     \n\n                    \n                \n                    \n                        \n                            Default value : `Invalid email address.`\n                        \n                    \n\n                \n                    \n                        Define the error message for an invalid email\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordMessage:     \n\n                    \n                \n                    \n                        \n                            Default value : `Password must be between 6 and 100 characters, and contain a number.`\n                        \n                    \n\n                \n                    \n                        Define the error message for an invalid password\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/icon/custom-icons/csv.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CSV_ICON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CSV_ICON:     \n\n                    \n                \n                    \n                        \n                            Default value : `\n  \n    \n      \n      \n    \n  \n`\n                        \n                    \n\n\n            \n        \n\n    terminus-ui/src/checkbox/checkbox.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsCheckboxComponent),\n  multi: true,\n}\n                        \n                    \n\n                \n                    \n                        Custom control value accessor for our component\nThis allows our custom components to access the underlying form validation via the base class\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextUniqueId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nextUniqueId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n                \n                    \n                        Unique ID for each instance\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/file-upload/file-upload.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CUSTOM_FILE_UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CUSTOM_FILE_UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsFileUploadComponent),\n  multi: true,\n}\n                        \n                    \n\n                \n                    \n                        Custom control value accessor for our component.\nThis allows our custom components to access the underlying form validation via our base class\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAXIMUM_KILOBYTES_PER_FILE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MAXIMUM_KILOBYTES_PER_FILE:     \n\n                    \n                \n                    \n                        \n                            Default value : 10 * 1024\n                        \n                    \n\n                \n                    \n                        The maximum file size in bytes\nNOTE: Currently nginx has a hard limit of 10mb\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextUniqueId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nextUniqueId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n                \n                    \n                        Unique ID for each instance\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/radio-group/radio-group.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CUSTOM_RADIO_CONTROL_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CUSTOM_RADIO_CONTROL_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsRadioGroupComponent),\n  multi: true,\n}\n                        \n                    \n\n                \n                    \n                        Custom control value accessor for our component\nThis allows our custom components to access the underlying form validation via the base class\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextUniqueId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nextUniqueId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n                \n                    \n                        Unique ID for each instance\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/select/select.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CUSTOM_SELECT_CONTROL_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CUSTOM_SELECT_CONTROL_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsSelectComponent),\n  multi: true,\n}\n                        \n                    \n\n                \n                    \n                        Custom control value accessor for our component\nThis allows our custom components to access the underlying form validation via our base class\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/toggle/toggle.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CUSTOM_TOGGLE_CONTROL_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TsToggleComponent),\n  multi: true,\n}\n                        \n                    \n\n                \n                    \n                        Custom control value accessor for our component\nThis allows our custom components to access the underlying form validation via our base class\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/csv-entry/csv-entry.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            nextUniqueId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nextUniqueId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n                \n                    \n                        Unique ID for each instance\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/card/card.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            nextUniqueId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nextUniqueId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n                \n                    \n                        Unique ID for each instance\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/scrollbars/scrollbars.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            nextUniqueId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nextUniqueId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n                \n                    \n                        Unique ID for each instance\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/validation-messages/validation-messages.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            nextUniqueId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nextUniqueId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n\n    terminus-ui/src/sort/sort-animations.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SORT_ANIMATION_TRANSITION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        SORT_ANIMATION_TRANSITION:     \n\n                    \n                \n                    \n                        \n                            Default value : AnimationDurations.ENTERING + ' ' +\n                                  AnimationCurves.STANDARD_CURVE\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tsSortAnimations\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tsSortAnimations:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\n  /**\n   * Animation that moves the sort indicator\n   */\n  indicator: trigger('indicator', [\n    state('asc', style({transform: 'translateY(0px)'})),\n    // 10px is the height of the sort indicator, minus the width of the pointers\n    state('desc', style({transform: 'translateY(10px)'})),\n    transition('asc  desc', animate(SORT_ANIMATION_TRANSITION)),\n  ]),\n\n\n  /**\n   * Animation that rotates the left pointer of the indicator based on the sorting direction\n   */\n  leftPointer: trigger('leftPointer', [\n    state('asc', style({transform: 'rotate(-45deg)'})),\n    state('desc', style({transform: 'rotate(45deg)'})),\n    transition('asc  desc', animate(SORT_ANIMATION_TRANSITION)),\n  ]),\n\n\n  /**\n   * Animation that rotates the right pointer of the indicator based on the sorting direction\n   */\n  rightPointer: trigger('rightPointer', [\n    state('asc', style({transform: 'rotate(45deg)'})),\n    state('desc', style({transform: 'rotate(-45deg)'})),\n    transition('asc  desc', animate(SORT_ANIMATION_TRANSITION)),\n  ]),\n\n\n  /**\n   * Animation that moves the indicator in and out of view when sorting is enabled/disabled\n   */\n  indicatorToggle: trigger('indicatorToggle', [\n    transition('void => asc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n      style({transform: 'translateY(25%)', opacity: 0}),\n      style({transform: 'none', opacity: 1}),\n    ]))),\n    transition('asc => void', animate(SORT_ANIMATION_TRANSITION, keyframes([\n      style({transform: 'none', opacity: 1}),\n      style({transform: 'translateY(-25%)', opacity: 0}),\n    ]))),\n    transition('void => desc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n      style({transform: 'translateY(-25%)', opacity: 0}),\n      style({transform: 'none', opacity: 1}),\n    ]))),\n    transition('desc => void', animate(SORT_ANIMATION_TRANSITION, keyframes([\n      style({transform: 'none', opacity: 1}),\n      style({transform: 'translateY(25%)', opacity: 0}),\n    ]))),\n  ]),\n\n}\n                        \n                    \n\n                \n                    \n                        Animations used by TsSort. \n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/file-upload/mime-types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TS_ACCEPTED_MIME_TYPES\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TS_ACCEPTED_MIME_TYPES:     TsFileAcceptedMimeTypes[]\n\n                    \n                \n                    \n                        \n                            Type :     TsFileAcceptedMimeTypes[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'text/csv',\n  'image/jpeg',\n  'image/jpg',\n  'image/png',\n]\n                        \n                    \n\n                \n                    \n                        Define an array of all allowed mime types for TsFileUploadComponent\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/chart/amcharts.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TS_AMCHARTS_TOKEN\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TS_AMCHARTS_TOKEN:     InjectionToken\n\n                    \n                \n                    \n                        \n                            Type :     InjectionToken\n\n                        \n                    \n                    \n                        \n                            Default value : new InjectionToken('amCharts')\n                        \n                    \n\n                \n                    \n                        Create an injection token that the consumer can override with their version of Highcharts\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/icon/icon.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TS_CUSTOM_ICONS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TS_CUSTOM_ICONS:     TS_CUSTOM_ICON[]\n\n                    \n                \n                    \n                        \n                            Type :     TS_CUSTOM_ICON[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'csv',\n]\n                        \n                    \n\n                \n                    \n                        An array of supported custom icons.\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/input/date-adapter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TS_DATE_FORMATS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TS_DATE_FORMATS:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  parse: {\n    dateInput: {\n      month: 'short',\n      year: 'numeric',\n      day: 'numeric',\n    },\n  },\n  display: {\n    dateInput: 'input',\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'short',\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n    },\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    terminus-ui/src/sort/sort-header-intl.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TS_SORT_HEADER_INTL_PROVIDER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TS_SORT_HEADER_INTL_PROVIDER:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  // If there is already an TsSortHeaderIntl available, use that. Otherwise, provide a new one.\n  provide: TsSortHeaderIntl,\n  deps: [[new Optional(), new SkipSelf(), TsSortHeaderIntl]],\n  useFactory: TS_SORT_HEADER_INTL_PROVIDER_FACTORY,\n}\n                        \n                    \n\n                \n                    \n                        TsSortHeaderIntl provider declaration\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/button/button.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            tsButtonFormatTypesArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tsButtonFormatTypesArray:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['filled', 'hollow', 'collapsable']\n                        \n                    \n\n\n            \n        \n\n    terminus-ui/src/utilities/types/style-theme.types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            tsStyleThemeTypesArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tsStyleThemeTypesArray:     TsStyleThemeTypes[]\n\n                    \n                \n                    \n                        \n                            Type :     TsStyleThemeTypes[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['primary', 'accent', 'warn']\n                        \n                    \n\n                \n                    \n                        An array of the allowed TsStyleThemeTypes for checking values\n\n                    \n                \n\n            \n        \n\n    terminus-ui/src/utilities/version/version.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            VERSION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        VERSION:     \n\n                    \n                \n                    \n                        \n                            Default value : new Version('0.0.0-PLACEHOLDER')\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
