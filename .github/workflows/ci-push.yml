name: CI Push
on:
  push:
    # Ignore all release branches as that is handled in another workflow
    branches-ignore:
      - 'release'
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  #
  # Cancel any workflows that would be duplicated by this run
  #
  cleanup-runs:
    name: Cancel Duplicates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set SHOULD_RUN flag
        run: |
          if [[ "${{github.event.head_commit.message}}" =~ (skip\ ci|ci\ skip) ]]; then
            echo "::set-env name=SHOULD_RUN::false"
          else
            echo "::set-env name=SHOULD_RUN::true"
          fi
      - uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: "${{ secrets.GH_TOKEN }}"
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/release'"

  #
  # Build the library
  #
  library_build:
    name: Compile Library
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set SHOULD_RUN flag
        run: |
          if [[ "${{github.event.head_commit.message}}" =~ (skip\ ci|ci\ skip) ]]; then
            echo "::set-env name=SHOULD_RUN::false"
          else
            echo "::set-env name=SHOULD_RUN::true"
          fi
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
        if: env.SHOULD_RUN == 'true'
      - name: Cache node_modules
        id: cache_node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
        if: env.SHOULD_RUN == 'true'
      - if: env.SHOULD_RUN == 'true' && steps.cache_node_modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --non-interactive
      - name: Manual build
        run: yarn library:build:prod
        if: env.SHOULD_RUN == 'true'
      - name: Upload built files
        uses: actions/upload-artifact@v1
        with:
          name: built-library
          path: dist/library
        if: env.SHOULD_RUN == 'true'

  #
  # Test the library
  #
  library_test:
    name: Test Library
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set SHOULD_RUN flag
        run: |
          if [[ "${{github.event.head_commit.message}}" =~ (skip\ ci|ci\ skip) ]]; then
            echo "::set-env name=SHOULD_RUN::false"
          else
            echo "::set-env name=SHOULD_RUN::true"
          fi
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
        if: env.SHOULD_RUN == 'true'
      - name: Cache node_modules
        id: cache_node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
        if: env.SHOULD_RUN == 'true'
      - if: env.SHOULD_RUN == 'true' && steps.cache_node_modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --non-interactive
      - name: Run all tests
        run: tooling/ci/test-unit.sh
        if: env.SHOULD_RUN == 'true'
      - name: Archive code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: coverage/lcov-report
        if: env.SHOULD_RUN == 'true'

  #
  # Lint all files
  #
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set SHOULD_RUN flag
        run: |
          if [[ "${{github.event.head_commit.message}}" =~ (skip\ ci|ci\ skip) ]]; then
            echo "::set-env name=SHOULD_RUN::false"
          else
            echo "::set-env name=SHOULD_RUN::true"
          fi
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
        if: env.SHOULD_RUN == 'true'
      - name: Cache node_modules
        id: cache_node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
        if: env.SHOULD_RUN == 'true'
      - if: env.SHOULD_RUN == 'true' && steps.cache_node_modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --non-interactive
      - name: Lint all library files
        run: yarn run library:lint & yarn run demo:lint & yarn run vr:lint
        if: env.SHOULD_RUN == 'true'

  #
  # Build the demos
  #
  demos_build:
    name: Compile Demos
    needs: library_build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set SHOULD_RUN flag
        run: |
          if [[ "${{github.event.head_commit.message}}" =~ (skip\ ci|ci\ skip) ]]; then
            echo "::set-env name=SHOULD_RUN::false"
          else
            echo "::set-env name=SHOULD_RUN::true"
          fi
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
        if: env.SHOULD_RUN == 'true'
      - name: Cache node_modules
        id: cache_node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
        if: env.SHOULD_RUN == 'true'
      - if: env.SHOULD_RUN == 'true' && steps.cache_node_modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --non-interactive
      - name: Download built library
        uses: actions/download-artifact@v1
        with:
          name: built-library
          path: dist/library
        if: env.SHOULD_RUN == 'true'
      - name: Build demos with AoT
        run: tooling/ci/build-demos-aot.sh
        if: env.SHOULD_RUN == 'true'
      - name: Inject new library version
        run: tooling/ci/inject-library-version-number.sh
        if: env.SHOULD_RUN == 'true'
      - name: Upload built files
        uses: actions/upload-artifact@v1
        with:
          name: built-demos
          path: dist/demo
        if: env.SHOULD_RUN == 'true'

  #
  # Run integration test
  #
  integration_test:
    name: Run integration test
    needs: demos_build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set SHOULD_RUN flag
        run: |
          if [[ "${{github.event.head_commit.message}}" =~ (skip\ ci|ci\ skip) ]]; then
            echo "::set-env name=SHOULD_RUN::false"
          else
            echo "::set-env name=SHOULD_RUN::true"
          fi
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
        if: env.SHOULD_RUN == 'true'
      - name: Cache node_modules
        id: cache_node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
        if: env.SHOULD_RUN == 'true'
      - if: env.SHOULD_RUN == 'true' && steps.cache_node_modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --non-interactive
      - if: env.SHOULD_RUN == 'true'
        run: yarn add start-server-and-test
      - name: Download built library
        uses: actions/download-artifact@v1
        with:
          name: built-library
          path: dist/library
        if: env.SHOULD_RUN == 'true'
      - name: Download built demo
        uses: actions/download-artifact@v1
        with:
          name: builtDemo
          path: dist/demo
        if: env.SHOULD_RUN == 'true'
      - name: Run integration test
        run: yarn library:test:integration
        if: env.SHOULD_RUN == 'true'

