@import './../../scss/helpers/cursors';
@import './../../scss/helpers/color';
@import './../../scss/helpers/reset';
@import './../../scss/helpers/input-placeholder';
@import './../../scss/helpers/animation';



//
// @component
//  Text input
// @description
//  A text input component.
//
.ts-input {
  @include reset;
  display: block;

  /**
   * The Input element proper.
   *
   * Requirements:
   * - The input should match whatever background it is above.
   * - By default, <input> has a padding, border, outline and a default width.
   * - If background matches current background then so should the color for proper contrast.
   * - Font needs to be inherited, because by default <input> has a system font.
   * - Remove the default <input> padding, border, outline and width.
   * - Prevent textareas from being resized outside the form field.
   */

  .c-input__text {
    // The amount of space between the top of the line and the top of the actual text
    // (as a fraction of the font-size).
    $custom-line-spacing: (1.125 - 1) / 2;
    @include input-placeholder {
      // Delay the transition until the label has animated about a third of the way through, in
      // order to prevent the placeholder from overlapping for a split second.
      transition: color $swift-ease-out-duration $swift-ease-out-duration / 3 $swift-ease-out-timing-function;
    }
    background: transparent;
    border: none;
    color: currentColor;
    font: inherit;
    margin: 0;
    // <input> elements seem to have their height set slightly too large on Safari causing the text to
    // be misaligned w.r.t. the placeholder. Adding this margin corrects it.
    margin-top: -$custom-line-spacing * 1em;
    max-width: 100%;
    outline: none;
    padding: 0;
    // User agent stylesheets set the text-align of inputs explicitly to "start". Those can be
    // easily overwritten by targeting the input element using a simple CSS selector, but since
    // the text-align will be applied most of the time on the `ts-form-field` to also align the
    // placeholder, the alignment should be inherited here.
    text-align: inherit;
    // Needed to make last line of the textarea line up with the baseline.
    vertical-align: bottom;
    width: 100%;

    // Undo the red box-shadow glow added by Firefox on invalid inputs.
    // See https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-ui-invalid
    &:-moz-ui-invalid {
      box-shadow: none;
    }

    // Remove IE's default clear and reveal icons.
    &::-ms-clear,
    &::-ms-reveal {
      display: none;
    }

    // Clear Safari's decorations for search fields.
    &,
    &::-webkit-search-cancel-button,
    &::-webkit-search-decoration,
    &::-webkit-search-results-button,
    &::-webkit-search-results-decoration {
      -webkit-appearance: none;
    }

    // Also clear Safari's autofill icons. Note that this can't be in the
    // same selector as the IE ones, otherwise Safari will ignore it.
    &::-webkit-contacts-auto-fill-button,
    &::-webkit-caps-lock-indicator,
    &::-webkit-credentials-auto-fill-button {
      visibility: hidden;
    }

    // Fixes an issue on iOS where the following input types will collapse to 1px,
    // if they're empty, because we've overridden their background color.
    // See: https://stackoverflow.com/questions/18381594/input-type-date-appearance-in-safari-on-ios
    &[type='date'],
    &[type='datetime'],
    &[type='datetime-local'],
    &[type='month'],
    &[type='week'],
    &[type='time'] {
      &::after {
        content: ' ';
        white-space: pre;
        width: 1px;
      }
    }
  }

  // Prevents IE from always adding a scrollbar by default.
  .c-input__text {
    &textarea {
      // Negative margin to negate the effect of the padding on the layout.
      margin: -2px 0;
      // Only allow resizing along the Y axis.
      overflow: auto;
      // The 2px padding prevents scrollbars from appearing on Chrome even when they aren't needed.
      padding: 2px 0;
      resize: vertical;

      &.cdk-textarea-autosize {
        resize: none;
      }
    }
  }

  // Button to clear the value of the input
  .c-input__clear {
    @include cursor(pointer);
    opacity: 0;
    transition: opacity 200ms ease, color 200ms ease;
    will-change: opacity;

    &--visible {
      opacity: 1;
    }

    &:focus,
    &:hover {
      color: color(warn);
    }
  }

  // Update the datepicker toggle positioning when inside the input
  .mat-datepicker-toggle {
    display: inline-block;

    .mat-datepicker-toggle-default-icon {
      vertical-align: baseline;
    }

    // This is the button used to trigger the datepicker
    .mat-button-wrapper {
      align-items: center;
      display: flex;
      justify-content: center;
    }
  }
}
