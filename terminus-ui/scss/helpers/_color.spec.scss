@import 'true';
@import './color';

@include describe ('color') {
  @include test('should return the correct color based on palette and tone') {
    $test: color(warn, dark);
    $expect: #b55949;

    @include assert-equal($test, $expect);
  }

  @include test('should return the correct theme and color for background-color') {
    @include assert {
      @include output {
        @include theme-color(background-color);
      }
      @include expect {
        @each $key, $value in $theme-and-color {
          ::ng-deep .u-theme--#{$key} & {
            background-color: $value;

            &[disabled] {
              background-color: color(utility, light);
              color: color(utility);
            }

            @if (not(($key == 'pure')) and not(($key == 'highlight'))) {
              color: $color__pure--light;
            }

            @if ($key == 'highlight') {
              color: $color__pure--dark;
            }
          }
        }
      }
    }
  }

  @include test('should return the correct theme and color for color') {
    @include assert {
      @include output {
        @include theme-color(color);
      }
      @include expect {
        @each $key, $value in $theme-and-color {
          ::ng-deep .u-theme--#{$key} & {
            color: $value;

            &[disabled] {
              background-color: color(utility, light);
              color: color(utility);
            }
          }
        }
      }
    }
  }

  // this functionality currently doesn't exist

  /* @include test('should fail with invalid property') {
    @include assert-false(
      theme-color(width),
    );
    {
      @include output {
        @include theme-color(width)
      }
    }
  } */
}
