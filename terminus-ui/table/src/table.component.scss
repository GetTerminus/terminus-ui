@import './../../scss/helpers/color';
@import './../../scss/helpers/layout';
@import './../../scss/helpers/reset';
@import './../../scss/helpers/spacing';
@import './../../scss/helpers/typography';

$ts-header-row-height: 56px;
$ts-row-height: 48px;
$ts-row-horizontal-padding: 24px;
$ts-row-hover: rgba(color(utility, xlight), .5);



//
// @component
//  Table
// @description
//  A table component
//
.ts-table {
  @include reset;
  @include typography;
  display: inline-block;
  max-height: 100%;

  //
  // Rows
  //

  // Header row
  .ts-header-row {
    @include typography(caption);
    color: color(utility);
    min-height: $ts-header-row-height;
    transition: background-color 200ms ease-out;
    will-change: background-color;
  }

  // Body row
  .ts-row {
    min-height: $ts-row-height;
    transition: background-color 200ms ease-out;
    will-change: background-color;

    &:hover {
      background-color: $ts-row-hover;
    }

    // Workaround for https://goo.gl/pFmjJD in IE 11. Adds a pseudo
    // element that will stretch the row the correct height. See:
    // https://connect.microsoft.com/IE/feedback/details/802625
    &::after {
      content: '';
      display: inline-block;
      min-height: inherit;
    }
  }

  // Any row
  .ts-row,
  .ts-header-row {
    align-items: stretch;
    border-bottom: 1px solid color(utility, xlight);
    box-sizing: border-box;
    display: flex;
  }

  //
  // Cells
  //

  // Body cell
  .ts-cell {
    background-color: color(pure);
    padding: spacing(default);
    vertical-align: middle;

    &.ts-table--sticky {
      border-right: 1px solid color(utility, xlight);
    }
  }

  // Header cell
  .ts-header-cell {
    background-color: color(pure);
    // If the column isn't sortable, add padding here that would normally be added by
    // `ts-sort-header-container`
    &:not(.ts-sortable) {
      padding: spacing(default);
    }

    &.ts-sortable {
      border-bottom: 3px solid color(utility, light);
      transition: border-bottom 200ms ease-out;
      will-change: border-bottom-color;
    }

    // Class added when the column is sorted
    &.ts-sort-header-sorted {
      border-bottom-color: color(accent);
      color: color(accent);
    }

    // <div> inner container wrapping the sort control
    .ts-sort-header-container {
      padding: spacing(default);
    }
  }

  // Any cell
  .ts-cell,
  .ts-header-cell {
    align-items: stretch;
    background-color: color(pure);
    display: flex;
    flex: 1;
    flex-basis: 6em;
    min-height: inherit;
    overflow: hidden;
    word-wrap: break-word;

    // Class added if a column should not wrap
    &.ts-column-no-wrap {
      white-space: nowrap;
    }
  }
}
