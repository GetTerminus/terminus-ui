@import './../../scss/helpers/buttons';
@import './../../scss/helpers/color';
@import './../../scss/helpers/cursors';
@import './../../scss/helpers/reset';
@import './../../scss/helpers/shadows';
@import './../../scss/helpers/spacing';
@import './../../scss/helpers/typography';


//
// @component
//  Navigation
// @description
//  A fully responsive navigation bar. Items that cannot fit inside the navigation bar will be
//  pulled out into the dropdown menu.
//
.ts-navigation {
  @include reset;
  display: inline-block;
  flex: 1 1 auto;
  max-width: 100%;
  overflow: hidden;

  // Top level styles should be nested here
  .c-navigation {
    @include typography(body, 2);
    background-color: color(primary);
    color: color(pure);
  }
}

.c-navigation {
  // <div> wrapper for list of navigation items
  .c-navigation__items {
    overflow: hidden;
    padding-right: spacing();
  }

  // <button> individual nav item
  .c-navigation__item {
    $horizontal-padding: spacing();

    color: inherit;
    // NOTE: If a link has an action rather than a destination, the default cursor will be used.
    // Force the pointer cursor type.
    cursor: cursor(pointer);
    font-family: inherit;
    font-size: inherit;
    letter-spacing: .04em;
    padding: 0 $horizontal-padding;
    // Set up for bottom pseudo element
    position: relative;
    text-decoration: none;

    &:focus,
    &:hover,
    &--active {
      outline: 0;

      .c-navigation__item-inner {
        &::after {
          opacity: 1;
          transition-duration: 200ms;
        }
      }
    }

    // <span> inner wrapper
    &-inner {
      display: block;
      white-space: nowrap;
      width: 100%;

      &::after {
        background-color: color(pure);
        bottom: 0;
        content: '';
        height: 4px;
        left: 50%;
        opacity: 0;
        position: absolute;
        transform: translateX(-50%);
        transition: opacity 100ms ease-in-out;
        width: calc(100% - #{$horizontal-padding * 2});
        will-change: opacity;
      }
    }
  }

  // <button> trigger to show hidden nav items (Welcome, user)
  .c-navigation__trigger {
    $separator-height: 70%;
    $separator-vertical-spacing: #{(100% - $separator-height) / 2};
    $separator-color: rgba(color(pure), .5);

    @include button-base;
    display: block;
    letter-spacing: .04em;
    line-height: spacing(large);

    // Create vertical separator between top-level nav items and dropdown
    &::after {
      background-color: $separator-color;
      bottom: $separator-vertical-spacing;
      content: '';
      height: $separator-height;
      left: 0;
      position: absolute;
      top: $separator-vertical-spacing;
      width: 1px;
    }

    // override material styles on the inner wrapper
    .mat-button-wrapper {
      display: inline-block;
      padding: spacing(small, 1) spacing(large) spacing(small, 1) spacing();
      position: relative;
      text-align: right;
    }

    // <span> wrapper for welcome message
    &-welcome {
      font-weight: $type__weight--base;
    }

    // <ts-icon>
    &-icon {
      position: absolute;
      right: 0;
      // HACK: vertical alignment just doesn't seem right without this
      transform: translateY(1px);
    }
  }
}


//
// These must live outside `c-navigation` since the menu panel is not nested
//

// <div> container for hidden nav items
.c-navigation__hidden-items {
  $material-spacing: 8px;

  @include typography;
  // set up for spacer div
  position: relative;

  // The top border radius leaves a 1px gap between the primary nav bar and the menu
  &.mat-menu-panel {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }

  .mat-menu-content {
    background-color: color(primary);
    // override material styles
    padding: 0;

    // needed for specificity since we are no longer nested below primary class
    .mat-menu-item {
      color: color(pure);
    }
  }

  // <button> individual nav item
  .c-navigation__hidden-item {
    &--admin {
      background-color: color(primary, dark);

      // needed for specificity since we are no longer nested below primary class
      &.mat-menu-item {
        color: color(utility, light);
      }
    }

    // target the first item with the admin class
    &:not(.c-navigation__hidden-item--admin) + .c-navigation__hidden-item--admin {
      // create the line separator
      &::before {
        background-color: color(primary, light);
        content: '';
        display: block;
        height: 1px;
        left: 0;
        opacity: .6;
        position: absolute;
        right: 0;
        top: 0;
      }
    }
  }
}
