@import './../../scss/helpers/color';
@import './../../scss/helpers/cursors';
@import './../../scss/helpers/reset';
@import './../../scss/helpers/typography';
@import './../../scss/helpers/scrollbars';


$margin__vertical: .2em;
$margin__horizontal: $margin__vertical * 2;
$radius: 3px;
/*
 * TODO: We are manually adjusting the ripple in multiple places now. We should abstract this out.
 * https://github.com/GetTerminus/terminus-ui/issues/1653
*/
$ripple-opacity: .4;
$black: color(pure, dark);
$primary: darken(color(primary), 10%);
$accent: darken(color(accent), 10%);
$warn: darken(color(warn), 10%);
$ripple-black: rgba($black, $ripple-opacity);
$ripple-primary: rgba($primary, $ripple-opacity);
$ripple-accent: rgba($accent, $ripple-opacity);
$ripple-warn: rgba($warn, $ripple-opacity);
$icon-padding: .25em .3em .25em .4em;

//
// @component
//  Copy component allows for a string of text to be quickly copied to the clipboard
// @description
//
.ts-copy {
  @include reset;
  display: block;
  max-width: 100%;

  // Top level styles should be nested here
  .c-copy {
    @include typography;
    color: color(utility, dark);
    position: relative;
  }

  //
  // Theme support
  //
  &--primary {
    // These are the default styles

    .mat-ripple-element {
      // NOTE: Important needed to override inline Material styles
      // stylelint-disable-next-line declaration-no-important
      background-color: $ripple-primary !important;
    }
  }

  &--accent {
    .c-copy {
      .c-copy__icon {
        background-color: color(accent);
      }
    }

    .mat-ripple-element {
      // NOTE: Important needed to override inline Material styles
      // stylelint-disable-next-line declaration-no-important
      background-color: $ripple-accent !important;
    }
  }

  &--warn {
    .c-copy {
      .c-copy__icon {
        background-color: color(warn);
      }
    }

    .mat-ripple-element {
      // NOTE: Important needed to override inline Material styles
      // stylelint-disable-next-line declaration-no-important
      background-color: $ripple-warn !important;
    }
  }

  //
  // Format support
  //
  &--standard {
    background-color: color(utility, xlight);
    border: 1px solid color(utility, light);
    border-radius: $radius;
    transition: border-color 200ms ease-in-out 50ms;

    // Adding tabindex to the element allows focus, but we don't need the visual indicator
    &:focus {
      border: 1px solid color(utility);
      outline: 0;
      transition-delay: 0;
    }
  }

  &--minimal {
    .c-copy__content {
      line-height: 24px;
      padding: $icon-padding;
    }

    .c-copy {
      .c-copy__tooltip {
        $offset-for-border-minimal: 3px;
        bottom: $offset-for-border-minimal;
        top: $offset-for-border-minimal;
      }
    }
  }

  &--icon {
    display: inline-block;

    .c-copy__content {
      // Match the width of the icon
      width: 35px;
    }

    .c-copy {
      .c-copy__tooltip {
        opacity: 1;
        pointer-events: auto;
      }
    }
  }

  &:focus,
  &:hover {
    .c-copy__tooltip {
      opacity: 1;
      pointer-events: auto;
      transition-delay: 70ms;
    }
  }
}

.c-copy {
  // <div> Container for text content
  .c-copy__content {
    $icon-width: 35px;
    @include hidden-scrollbars;
    align-items: center;
    justify-content: center;
    line-height: 32px;
    min-width: $icon-width;
    overflow: hidden;
    white-space: nowrap;

    .ts-tooltip {
      display: block;
      max-width: 100%;
    }

    .c-tooltip {
      display: block;
      overflow: hidden;
      padding: $margin__vertical 0 $margin__vertical $margin__horizontal;
      text-overflow: ellipsis;
    }
  }

  .c-copy__tooltip {
    $offset-for-border-standard: -1px;
    bottom: $offset-for-border-standard;
    opacity: 0;
    pointer-events: none;
    position: absolute;
    right: $offset-for-border-standard;
    top: $offset-for-border-standard;
    transition: opacity 200ms ease-out;

    .ts-tooltip {
      height: 100%;
    }

    .ts-icon {
      align-items: center;
      display: flex;
    }
  }

  // <div> The container for the icon
  .c-copy__icon {
    $vertical-margin: calc(#{-$margin__vertical} - 1px);
    $horizontal-margin: calc(#{-$margin__horizontal} - 1px);

    @include cursor(pointer);
    background-color: color(primary);
    border-radius: $radius;
    bottom: 0;
    color: color(pure);
    height: 100%;
    padding: $icon-padding;
    transition: background-color 200ms ease-in;
  }

  // Adjust icon alignment
  .mat-icon {
    vertical-align: bottom;
  }

  .ts-copy--standard & {
    .c-copy__icon {
      border-radius: 0 $radius $radius 0;
    }
  }
}
